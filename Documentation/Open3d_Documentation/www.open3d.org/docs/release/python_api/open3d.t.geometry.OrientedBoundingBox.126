

<!DOCTYPE html>
<!--[if IE 8]><html class="no-js lt-ie9" lang="en" > <![endif]-->
<!--[if gt IE 8]><!--> <html class="no-js" lang="en" > <!--<![endif]-->

<!-- Mirrored from www.open3d.org/docs/release/python_api/open3d.t.geometry.OrientedBoundingBox.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 10:52:05 GMT -->
<head>
  <meta charset="utf-8">
  
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  
  <title>open3d.t.geometry.OrientedBoundingBox &mdash; Open3D 0.17.0 documentation</title>
  

  
  
    <link rel="shortcut icon" href="../_static/open3d_logo.ico"/>
  
  
  

  
  <script type="text/javascript" src="../_static/js/modernizr.min.js"></script>
  
    
      <script type="text/javascript" id="documentation_options" data-url_root="../" src="../_static/documentation_options.js"></script>
        <script src="../_static/jquery.js"></script>
        <script src="../_static/underscore.js"></script>
        <script src="../_static/doctools.js"></script>
        <script src="../_static/language_data.js"></script>
        <script async="async" src="https://www.googletagmanager.com/gtag/js?id=G-3TQPKGV6Z3"></script>
        <script >
        window.dataLayer = window.dataLayer || [];
        function gtag(){dataLayer.push(arguments);}
        gtag('js', new Date());
        gtag('config', 'G-3TQPKGV6Z3');</script>
        <script crossorigin="anonymous" integrity="sha256-Ae2Vz/4ePdIu6ZyI/5ZGsYnb+m0JlOmKPjt6XZ9JJkA=" src="../../../../cdnjs.cloudflare.com/ajax/libs/require.js/2.3.4/require.min.js"></script>
        <script async="async" src="../../../../cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.7/latestdda6.js?config=TeX-AMS-MML_HTMLorMML"></script>
        <script type="text/x-mathjax-config">MathJax.Hub.Config({"tex2jax": {"inlineMath": [["$", "$"], ["\\(", "\\)"]], "processEscapes": true, "ignoreClass": "document", "processClass": "math|output_area"}})</script>
    
    <script type="text/javascript" src="../_static/js/theme.js"></script>

    

  
  <link rel="stylesheet" href="../_static/css/theme.css" type="text/css" />
  <link rel="stylesheet" href="../_static/pygments.css" type="text/css" />
  <link rel="stylesheet" href="../_static/theme_overrides.css" type="text/css" />
    <link rel="index" title="Index" href="../genindex.html" />
    <link rel="search" title="Search" href="../search.html" />
    <link rel="next" title="open3d.t.geometry.PointCloud" href="open3d.t.geometry.PointCloud.html" />
    <link rel="prev" title="open3d.t.geometry.LineSet" href="open3d.t.geometry.LineSet.html" /> 
</head>

<body class="wy-body-for-nav">

   
  <div class="wy-grid-for-nav">
    
    <nav data-toggle="wy-nav-shift" class="wy-nav-side">
      <div class="wy-side-scroll">
        <div class="wy-side-nav-search" >
          

          
            <a href="../index-2.html" class="icon icon-home"> Open3D
          

          
          </a>

          
            
            
              <div class="version">
                0.17.0
              </div>
            
          

          
<div role="search">
  <form id="rtd-search-form" class="wy-form" action="http://www.open3d.org/docs/release/search.html" method="get">
    <input type="text" name="q" placeholder="Search docs" />
    <input type="hidden" name="check_keywords" value="yes" />
    <input type="hidden" name="area" value="default" />
  </form>
</div>

          
        </div>

        <div class="wy-menu wy-menu-vertical" data-spy="affix" role="navigation" aria-label="main navigation">
          
            
            
              
            
            
              <p class="caption"><span class="caption-text">Getting Started</span></p>
<ul>
<li class="toctree-l1"><a class="reference internal" href="../introduction.html">Introduction</a></li>
<li class="toctree-l1"><a class="reference internal" href="../getting_started.html">Getting started</a></li>
<li class="toctree-l1"><a class="reference internal" href="../compilation.html">Build from source</a></li>
<li class="toctree-l1"><a class="reference internal" href="../cpp_project.html">Link Open3D in C++ projects</a></li>
<li class="toctree-l1"><a class="reference internal" href="../builddocs.html">Build documentation</a></li>
<li class="toctree-l1"><a class="reference internal" href="../open3d_ml.html">Open3D-ML</a></li>
<li class="toctree-l1"><a class="reference internal" href="../arm.html">ARM support</a></li>
<li class="toctree-l1"><a class="reference internal" href="../docker.html">Docker</a></li>
</ul>
<p class="caption"><span class="caption-text">Tutorial</span></p>
<ul>
<li class="toctree-l1"><a class="reference internal" href="../tutorial/geometry/index.html">Geometry</a></li>
<li class="toctree-l1"><a class="reference internal" href="../tutorial/t_geometry/index.html">Geometry (Tensor)</a></li>
<li class="toctree-l1"><a class="reference internal" href="../tutorial/pipelines/index.html">Pipelines</a></li>
<li class="toctree-l1"><a class="reference internal" href="../tutorial/t_pipelines/index.html">Pipelines (Tensor)</a></li>
<li class="toctree-l1"><a class="reference internal" href="../tutorial/visualization/index.html">Visualization</a></li>
<li class="toctree-l1"><a class="reference internal" href="../tutorial/core/index.html">Core</a></li>
<li class="toctree-l1"><a class="reference internal" href="../tutorial/data/index.html">Dataset</a></li>
<li class="toctree-l1"><a class="reference internal" href="../tutorial/reconstruction_system/index.html">Reconstruction system</a></li>
<li class="toctree-l1"><a class="reference internal" href="../tutorial/t_reconstruction_system/index.html">Reconstruction system (Tensor)</a></li>
<li class="toctree-l1"><a class="reference internal" href="../tutorial/sensor/index.html">Sensor</a></li>
<li class="toctree-l1"><a class="reference internal" href="../tutorial/reference.html">Reference</a></li>
</ul>
<p class="caption"><span class="caption-text">Contribute</span></p>
<ul>
<li class="toctree-l1"><a class="reference internal" href="../contribute/contribute.html">Contributing to Open3D</a></li>
<li class="toctree-l1"><a class="reference internal" href="../contribute/contribution_recipes.html">Contribution methods</a></li>
<li class="toctree-l1"><a class="reference internal" href="../contribute/styleguide.html">Open3D style guide</a></li>
</ul>
<p class="caption"><span class="caption-text">C++ API</span></p>
<ul>
<li class="toctree-l1"><a class="reference internal" href="../cpp_api.html">C++ documentation</a></li>
</ul>
<p class="caption"><span class="caption-text">Python API</span></p>
<ul class="current">
<li class="toctree-l1"><a class="reference internal" href="open3d.camera.html">open3d.camera</a></li>
<li class="toctree-l1"><a class="reference internal" href="open3d.core.html">open3d.core</a></li>
<li class="toctree-l1"><a class="reference internal" href="open3d.data.html">open3d.data</a></li>
<li class="toctree-l1"><a class="reference internal" href="open3d.geometry.html">open3d.geometry</a></li>
<li class="toctree-l1"><a class="reference internal" href="open3d.io.html">open3d.io</a></li>
<li class="toctree-l1 current"><a class="reference internal" href="open3d.t.html">open3d.t</a><ul class="current">
<li class="toctree-l2 current"><a class="reference internal" href="open3d.t.geometry.html">geometry</a><ul class="current">
<li class="toctree-l3"><a class="reference internal" href="open3d.t.geometry.AxisAlignedBoundingBox">AxisAlignedBoundingBox</a></li>
<li class="toctree-l3"><a class="reference internal" href="open3d.t.geometry.DrawableGeometry.122.de">DrawableGeometry</a></li>
<li class="toctree-l3"><a class="reference internal" href="open3d.t.geometry.Geometry.html">Geometry</a></li>
<li class="toctree-l3"><a class="reference internal" href="open3d.t.geometry.Image.html">Image</a></li>
<li class="toctree-l3"><a class="reference internal" href="open3d.t.geometry.InterpType.html">InterpType</a></li>
<li class="toctree-l3"><a class="reference internal" href="open3d.t.geometry.LineSet.html">LineSet</a></li>
<li class="toctree-l3 current"><a class="current reference internal" href="#">OrientedBoundingBox</a></li>
<li class="toctree-l3"><a class="reference internal" href="open3d.t.geometry.PointCloud.html">PointCloud</a></li>
<li class="toctree-l3"><a class="reference internal" href="open3d.t.geometry.RGBDImage.html">RGBDImage</a></li>
<li class="toctree-l3"><a class="reference internal" href="open3d.t.geometry.RaycastingScene.128.del">RaycastingScene</a></li>
<li class="toctree-l3"><a class="reference internal" href="open3d.t.geometry.TensorMap.html">TensorMap</a></li>
<li class="toctree-l3"><a class="reference internal" href="open3d.t.geometry.TriangleMesh.12b.delaye">TriangleMesh</a></li>
<li class="toctree-l3"><a class="reference internal" href="open3d.t.geometry.VoxelBlockGrid.12c.dela">VoxelBlockGrid</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="open3d.t.io.html">io</a></li>
<li class="toctree-l2"><a class="reference internal" href="open3d.t.pipelines.html">pipelines</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="open3d.ml.html">open3d.ml</a></li>
<li class="toctree-l1"><a class="reference internal" href="open3d.pipelines.html">open3d.pipelines</a></li>
<li class="toctree-l1"><a class="reference internal" href="open3d.utility.html">open3d.utility</a></li>
<li class="toctree-l1"><a class="reference internal" href="open3d.visualization.html">open3d.visualization</a></li>
</ul>
<p class="caption"><span class="caption-text">Python Examples</span></p>
<ul>
<li class="toctree-l1"><a class="reference internal" href="../python_example/camera/index.html">Camera</a></li>
<li class="toctree-l1"><a class="reference internal" href="../python_example/geometry/index.html">Geometry</a></li>
<li class="toctree-l1"><a class="reference internal" href="../python_example/io/index.html">IO</a></li>
<li class="toctree-l1"><a class="reference internal" href="../python_example/pipelines/index.html">Pipelines</a></li>
<li class="toctree-l1"><a class="reference internal" href="../python_example/utility/index.html">Utility</a></li>
<li class="toctree-l1"><a class="reference internal" href="../python_example/visualization/index.html">Visualization</a></li>
</ul>

            
          
        </div>
      </div>
    </nav>

    <section data-toggle="wy-nav-shift" class="wy-nav-content-wrap">

      
      <nav class="wy-nav-top" aria-label="top navigation">
        
          <i data-toggle="wy-nav-top" class="fa fa-bars"></i>
          <a href="../index-2.html">Open3D</a>
        
      </nav>


      <div class="wy-nav-content">
        
        <div class="rst-content">
        
          















<div role="navigation" aria-label="breadcrumbs navigation">

  <ul class="wy-breadcrumbs">
    
      <li><a href="../index-2.html">Docs</a> &raquo;</li>
        
          <li><a href="open3d.t.html">open3d.t</a> &raquo;</li>
        
          <li><a href="open3d.t.geometry.html">open3d.t.geometry</a> &raquo;</li>
        
      <li>open3d.t.geometry.OrientedBoundingBox</li>
    
    
      <li class="wy-breadcrumbs-aside">
        
            
        
      </li>
    
  </ul>

  
  <hr/>
</div>
          <div role="main" class="document" itemscope="itemscope" itemtype="http://schema.org/Article">
           <div itemprop="articleBody">
            
  
<style>
/* CSS overrides for sphinx_rtd_theme */

/* 24px margin */
.nbinput.nblast.container,
.nboutput.nblast.container {
    margin-bottom: 19px;  /* padding has already 5px */
}

/* ... except between code cells! */
.nblast.container + .nbinput.container {
    margin-top: -19px;
}

.admonition > p:before {
    margin-right: 4px;  /* make room for the exclamation icon */
}

/* Fix math alignment, see https://github.com/rtfd/sphinx_rtd_theme/pull/686 */
.math {
    text-align: unset;
}
</style>
<div class="section" id="open3d-t-geometry-orientedboundingbox">
<h1>open3d.t.geometry.OrientedBoundingBox<a class="headerlink" href="#open3d-t-geometry-orientedboundingbox" title="Permalink to this headline">¶</a></h1>
<dl class="py class">
<dt id="open3d.t.geometry.OrientedBoundingBox">
<em class="property">class </em><code class="sig-prename descclassname">open3d.t.geometry.</code><code class="sig-name descname">OrientedBoundingBox</code><a class="headerlink" href="#open3d.t.geometry.OrientedBoundingBox" title="Permalink to this definition">¶</a></dt>
<dd><p>A bounding box oriented along an arbitrary frame of reference.
- (center, rotation, extent): The oriented bounding box is defined by its
center position, rotation maxtrix and extent.</p>
<blockquote>
<div><ul class="simple">
<li><dl class="simple">
<dt>Usage</dt><dd><ul>
<li><p>OrientedBoundingBox::GetCenter()</p></li>
<li><p>OrientedBoundingBox::SetCenter(const core::Tensor &amp;center)</p></li>
<li><p>OrientedBoundingBox::GetRotation()</p></li>
<li><p>OrientedBoundingBox::SetRotation(const core::Tensor &amp;rotation)</p></li>
</ul>
</dd>
</dl>
</li>
<li><p>Value tensor of center and extent must have shape {3,}.</p></li>
<li><p>Value tensor of rotation must have shape {3, 3}.</p></li>
<li><p>Value tensor must have the same data type and device.</p></li>
<li><p>Value tensor can only be float32 (default) or float64.</p></li>
<li><p>The device of the tensor determines the device of the box.</p></li>
</ul>
</div></blockquote>
<ul class="simple">
<li><dl class="simple">
<dt>color: Color of the bounding box.</dt><dd><ul>
<li><dl class="simple">
<dt>Usage</dt><dd><ul>
<li><p>OrientedBoundingBox::GetColor()</p></li>
<li><p>OrientedBoundingBox::SetColor(const core::Tensor &amp;color)</p></li>
</ul>
</dd>
</dl>
</li>
<li><p>Value tensor must have shape {3,}.</p></li>
<li><p>Value tensor can only be float32 (default) or float64.</p></li>
<li><p>Value tensor can only be range [0.0, 1.0].</p></li>
</ul>
</dd>
</dl>
</li>
</ul>
<dl class="py method">
<dt id="open3d.t.geometry.OrientedBoundingBox.__init__">
<code class="sig-name descname">__init__</code><span class="sig-paren">(</span><em class="sig-param"><span class="o">*</span><span class="n">args</span></em>, <em class="sig-param"><span class="o">**</span><span class="n">kwargs</span></em><span class="sig-paren">)</span><a class="headerlink" href="#open3d.t.geometry.OrientedBoundingBox.__init__" title="Permalink to this definition">¶</a></dt>
<dd><p>Overloaded function.</p>
<ol class="arabic simple">
<li><p>__init__(self: open3d.cpu.pybind.t.geometry.OrientedBoundingBox, device: open3d.cpu.pybind.core.Device = CPU:0) -&gt; None</p></li>
</ol>
<p>Construct an empty OrientedBoundingBox on the provided device.</p>
<ol class="arabic simple" start="2">
<li><p>__init__(self: open3d.cpu.pybind.t.geometry.OrientedBoundingBox, center: open3d.cpu.pybind.core.Tensor, rotation: open3d.cpu.pybind.core.Tensor, extent: open3d.cpu.pybind.core.Tensor) -&gt; None</p></li>
</ol>
<p>Construct an OrientedBoundingBox from center, rotation and extent.
The OrientedBoundingBox will be created on the device of the given tensors, which
must be on the same device and have the same data type.</p>
<ol class="arabic simple" start="3">
<li><p>__init__(self: open3d.cpu.pybind.t.geometry.OrientedBoundingBox, arg0: open3d.cpu.pybind.t.geometry.OrientedBoundingBox) -&gt; None</p></li>
</ol>
<p>Copy constructor</p>
</dd></dl>

<dl class="py method">
<dt id="open3d.t.geometry.OrientedBoundingBox.clear">
<code class="sig-name descname">clear</code><span class="sig-paren">(</span><em class="sig-param"><span class="n">self</span></em><span class="sig-paren">)</span><a class="headerlink" href="#open3d.t.geometry.OrientedBoundingBox.clear" title="Permalink to this definition">¶</a></dt>
<dd><p>Clear all elements in the geometry.</p>
<dl class="field-list simple">
<dt class="field-odd">Returns</dt>
<dd class="field-odd"><p>open3d.t.geometry.Geometry</p>
</dd>
</dl>
</dd></dl>

<dl class="py method">
<dt id="open3d.t.geometry.OrientedBoundingBox.clone">
<code class="sig-name descname">clone</code><span class="sig-paren">(</span><em class="sig-param"><span class="n">self</span><span class="p">:</span> <span class="n">open3d.cpu.pybind.t.geometry.OrientedBoundingBox</span></em><span class="sig-paren">)</span> &#x2192; open3d.cpu.pybind.t.geometry.OrientedBoundingBox<a class="headerlink" href="#open3d.t.geometry.OrientedBoundingBox.clone" title="Permalink to this definition">¶</a></dt>
<dd><p>Returns copy of the oriented box on the same device.</p>
</dd></dl>

<dl class="py method">
<dt id="open3d.t.geometry.OrientedBoundingBox.cpu">
<code class="sig-name descname">cpu</code><span class="sig-paren">(</span><em class="sig-param"><span class="n">self</span><span class="p">:</span> <span class="n">open3d.cpu.pybind.t.geometry.OrientedBoundingBox</span></em><span class="sig-paren">)</span> &#x2192; open3d.cpu.pybind.t.geometry.OrientedBoundingBox<a class="headerlink" href="#open3d.t.geometry.OrientedBoundingBox.cpu" title="Permalink to this definition">¶</a></dt>
<dd><p>Transfer the oriented box to CPU. If the oriented box is already on CPU, no copy will be performed.</p>
</dd></dl>

<dl class="py method">
<dt id="open3d.t.geometry.OrientedBoundingBox.create_from_axis_aligned_bounding_box">
<em class="property">static </em><code class="sig-name descname">create_from_axis_aligned_bounding_box</code><span class="sig-paren">(</span><em class="sig-param"><span class="n">aabb</span></em><span class="sig-paren">)</span><a class="headerlink" href="#open3d.t.geometry.OrientedBoundingBox.create_from_axis_aligned_bounding_box" title="Permalink to this definition">¶</a></dt>
<dd><p>Create an OrientedBoundingBox from a legacy Open3D oriented box.</p>
<dl class="field-list simple">
<dt class="field-odd">Parameters</dt>
<dd class="field-odd"><p><strong>aabb</strong> (<a class="reference internal" href="open3d.t.geometry.AxisAlignedBoundingBox#open3d.t.geometry.AxisAlignedBoundingBox" title="open3d.t.geometry.AxisAlignedBoundingBox"><em>open3d.t.geometry.AxisAlignedBoundingBox</em></a>) – AxisAlignedBoundingBox object from which OrientedBoundingBox is created.</p>
</dd>
<dt class="field-even">Returns</dt>
<dd class="field-even"><p>open3d.t.geometry.OrientedBoundingBox</p>
</dd>
</dl>
</dd></dl>

<dl class="py method">
<dt id="open3d.t.geometry.OrientedBoundingBox.create_from_points">
<em class="property">static </em><code class="sig-name descname">create_from_points</code><span class="sig-paren">(</span><em class="sig-param">points</em>, <em class="sig-param">robust=(with default value)</em><span class="sig-paren">)</span><a class="headerlink" href="#open3d.t.geometry.OrientedBoundingBox.create_from_points" title="Permalink to this definition">¶</a></dt>
<dd><p>Creates an oriented bounding box using a PCA.
Note that this is only an approximation to the minimum oriented bounding box
that could be computed for example with O’Rourke’s algorithm
(cf. <a class="reference external" href="http://cs.smith.edu/~jorourke/Papers/MinVolBox.pdf">http://cs.smith.edu/~jorourke/Papers/MinVolBox.pdf</a>, <a class="reference external" href="https://www.geometrictools.com/Documentation/MinimumVolumeBox.pdf">https://www.geometrictools.com/Documentation/MinimumVolumeBox.pdf</a>)
This is a wrapper for a CPU implementation.</p>
<dl class="field-list simple">
<dt class="field-odd">Parameters</dt>
<dd class="field-odd"><ul class="simple">
<li><p><strong>points</strong> (<a class="reference internal" href="open3d.core.Tensor.html#open3d.core.Tensor" title="open3d.core.Tensor"><em>open3d.core.Tensor</em></a>) – A list of points with data type of float32 or float64 (N x 3 tensor, where N must be larger than 3).</p></li>
<li><p><strong>robust</strong> (<em>bool</em><em>, </em><em>optional</em>) – <p>If set to true uses a more robust method which works in degenerate cases but introduces noise to the points coordinates. Default value:</p>
<blockquote>
<div><p>False) -&gt; open3d.t.geometry.OrientedBoundingBox
Creates an oriented bounding box using a PCA.
Note that this is only an approximation to the minimum oriented bounding box
that could be computed for example with O’Rourke’s algorithm
(cf. <a class="reference external" href="http://cs.smith.edu/~jorourke/Papers/MinVolBox.pdf">http://cs.smith.edu/~jorourke/Papers/MinVolBox.pdf</a></p>
</div></blockquote>
<p>()</p>
</p></li>
</ul>
</dd>
<dt class="field-even">Returns</dt>
<dd class="field-even"><p>open3d.t.geometry.OrientedBoundingBox</p>
</dd>
</dl>
</dd></dl>

<dl class="py method">
<dt id="open3d.t.geometry.OrientedBoundingBox.cuda">
<code class="sig-name descname">cuda</code><span class="sig-paren">(</span><em class="sig-param"><span class="n">self</span><span class="p">:</span> <span class="n">open3d.cpu.pybind.t.geometry.OrientedBoundingBox</span></em>, <em class="sig-param"><span class="n">device_id</span><span class="p">:</span> <span class="n">int</span> <span class="o">=</span> <span class="default_value">0</span></em><span class="sig-paren">)</span> &#x2192; open3d.cpu.pybind.t.geometry.OrientedBoundingBox<a class="headerlink" href="#open3d.t.geometry.OrientedBoundingBox.cuda" title="Permalink to this definition">¶</a></dt>
<dd><p>Transfer the oriented box to a CUDA device. If the oriented box is already on the specified CUDA device, no copy will be performed.</p>
</dd></dl>

<dl class="py method">
<dt id="open3d.t.geometry.OrientedBoundingBox.from_legacy">
<em class="property">static </em><code class="sig-name descname">from_legacy</code><span class="sig-paren">(</span><em class="sig-param">box: open3d.cpu.pybind.geometry.OrientedBoundingBox</em>, <em class="sig-param">dtype: open3d.cpu.pybind.core.Dtype = Float32</em>, <em class="sig-param">device: open3d.cpu.pybind.core.Device = CPU:0</em><span class="sig-paren">)</span> &#x2192; open3d.cpu.pybind.t.geometry.OrientedBoundingBox<a class="headerlink" href="#open3d.t.geometry.OrientedBoundingBox.from_legacy" title="Permalink to this definition">¶</a></dt>
<dd><p>Create an oriented bounding box from the AxisAlignedBoundingBox.</p>
</dd></dl>

<dl class="py method">
<dt id="open3d.t.geometry.OrientedBoundingBox.get_axis_aligned_bounding_box">
<code class="sig-name descname">get_axis_aligned_bounding_box</code><span class="sig-paren">(</span><em class="sig-param"><span class="n">self</span><span class="p">:</span> <span class="n">open3d.cpu.pybind.t.geometry.OrientedBoundingBox</span></em><span class="sig-paren">)</span> &#x2192; open3d.cpu.pybind.t.geometry.AxisAlignedBoundingBox<a class="headerlink" href="#open3d.t.geometry.OrientedBoundingBox.get_axis_aligned_bounding_box" title="Permalink to this definition">¶</a></dt>
<dd><p>Returns an oriented bounding box from the AxisAlignedBoundingBox.</p>
</dd></dl>

<dl class="py method">
<dt id="open3d.t.geometry.OrientedBoundingBox.get_box_points">
<code class="sig-name descname">get_box_points</code><span class="sig-paren">(</span><em class="sig-param"><span class="n">self</span><span class="p">:</span> <span class="n">open3d.cpu.pybind.t.geometry.OrientedBoundingBox</span></em><span class="sig-paren">)</span> &#x2192; open3d.cpu.pybind.core.Tensor<a class="headerlink" href="#open3d.t.geometry.OrientedBoundingBox.get_box_points" title="Permalink to this definition">¶</a></dt>
<dd><p>Returns the eight points that define the bounding box. The Return tensor has shape {8, 3} and data type same as the box.</p>
</dd></dl>

<dl class="py method">
<dt id="open3d.t.geometry.OrientedBoundingBox.get_max_bound">
<code class="sig-name descname">get_max_bound</code><span class="sig-paren">(</span><em class="sig-param"><span class="n">self</span><span class="p">:</span> <span class="n">open3d.cpu.pybind.t.geometry.OrientedBoundingBox</span></em><span class="sig-paren">)</span> &#x2192; open3d.cpu.pybind.core.Tensor<a class="headerlink" href="#open3d.t.geometry.OrientedBoundingBox.get_max_bound" title="Permalink to this definition">¶</a></dt>
<dd><p>Returns the max bound for box.</p>
</dd></dl>

<dl class="py method">
<dt id="open3d.t.geometry.OrientedBoundingBox.get_min_bound">
<code class="sig-name descname">get_min_bound</code><span class="sig-paren">(</span><em class="sig-param"><span class="n">self</span><span class="p">:</span> <span class="n">open3d.cpu.pybind.t.geometry.OrientedBoundingBox</span></em><span class="sig-paren">)</span> &#x2192; open3d.cpu.pybind.core.Tensor<a class="headerlink" href="#open3d.t.geometry.OrientedBoundingBox.get_min_bound" title="Permalink to this definition">¶</a></dt>
<dd><p>Returns the min bound for box.</p>
</dd></dl>

<dl class="py method">
<dt id="open3d.t.geometry.OrientedBoundingBox.get_point_indices_within_bounding_box">
<code class="sig-name descname">get_point_indices_within_bounding_box</code><span class="sig-paren">(</span><em class="sig-param"><span class="n">self</span></em>, <em class="sig-param"><span class="n">points</span></em><span class="sig-paren">)</span><a class="headerlink" href="#open3d.t.geometry.OrientedBoundingBox.get_point_indices_within_bounding_box" title="Permalink to this definition">¶</a></dt>
<dd><p>Indices to points that are within the bounding box.</p>
<dl class="field-list simple">
<dt class="field-odd">Parameters</dt>
<dd class="field-odd"><p><strong>points</strong> (<a class="reference internal" href="open3d.core.Tensor.html#open3d.core.Tensor" title="open3d.core.Tensor"><em>open3d.core.Tensor</em></a>) – Tensor with {N, 3} shape, and type float32 or float64.</p>
</dd>
<dt class="field-even">Returns</dt>
<dd class="field-even"><p>open3d.core.Tensor</p>
</dd>
</dl>
</dd></dl>

<dl class="py method">
<dt id="open3d.t.geometry.OrientedBoundingBox.has_valid_material">
<code class="sig-name descname">has_valid_material</code><span class="sig-paren">(</span><em class="sig-param"><span class="n">self</span><span class="p">:</span> <span class="n">open3d.cpu.pybind.t.geometry.DrawableGeometry</span></em><span class="sig-paren">)</span> &#x2192; bool<a class="headerlink" href="#open3d.t.geometry.OrientedBoundingBox.has_valid_material" title="Permalink to this definition">¶</a></dt>
<dd><p>Returns true if the geometry’s material is valid.</p>
</dd></dl>

<dl class="py method">
<dt id="open3d.t.geometry.OrientedBoundingBox.is_empty">
<code class="sig-name descname">is_empty</code><span class="sig-paren">(</span><em class="sig-param"><span class="n">self</span></em><span class="sig-paren">)</span><a class="headerlink" href="#open3d.t.geometry.OrientedBoundingBox.is_empty" title="Permalink to this definition">¶</a></dt>
<dd><p>Returns <code class="docutils literal notranslate"><span class="pre">True</span></code> iff the geometry is empty.</p>
<dl class="field-list simple">
<dt class="field-odd">Returns</dt>
<dd class="field-odd"><p>bool</p>
</dd>
</dl>
</dd></dl>

<dl class="py method">
<dt id="open3d.t.geometry.OrientedBoundingBox.rotate">
<code class="sig-name descname">rotate</code><span class="sig-paren">(</span><em class="sig-param"><span class="n">self</span></em>, <em class="sig-param"><span class="n">rotation</span></em>, <em class="sig-param"><span class="n">center</span><span class="o">=</span><span class="default_value">None</span></em><span class="sig-paren">)</span><a class="headerlink" href="#open3d.t.geometry.OrientedBoundingBox.rotate" title="Permalink to this definition">¶</a></dt>
<dd><p>Rotate the oriented box by the given rotation matrix. If the
rotation matrix is not orthogonal, the rotation will no be applied.
The rotation center will be the box center if it is not specified.</p>
<dl class="field-list simple">
<dt class="field-odd">Parameters</dt>
<dd class="field-odd"><ul class="simple">
<li><p><strong>rotation</strong> (<a class="reference internal" href="open3d.core.Tensor.html#open3d.core.Tensor" title="open3d.core.Tensor"><em>open3d.core.Tensor</em></a>) – Rotation matrix of shape {3, 3}, type float32 or float64, device same as the box.</p></li>
<li><p><strong>center</strong> (<em>Optional</em><em>[</em><a class="reference internal" href="open3d.core.Tensor.html#open3d.core.Tensor" title="open3d.core.Tensor"><em>open3d.core.Tensor</em></a><em>]</em><em>, </em><em>optional</em><em>, </em><em>default=None</em>) – Center of the rotation, default is null, which means use center of the box as rotation center.</p></li>
</ul>
</dd>
<dt class="field-even">Returns</dt>
<dd class="field-even"><p>open3d.t.geometry.OrientedBoundingBox</p>
</dd>
</dl>
</dd></dl>

<dl class="py method">
<dt id="open3d.t.geometry.OrientedBoundingBox.scale">
<code class="sig-name descname">scale</code><span class="sig-paren">(</span><em class="sig-param"><span class="n">self</span></em>, <em class="sig-param"><span class="n">scale</span></em>, <em class="sig-param"><span class="n">center</span><span class="o">=</span><span class="default_value">None</span></em><span class="sig-paren">)</span><a class="headerlink" href="#open3d.t.geometry.OrientedBoundingBox.scale" title="Permalink to this definition">¶</a></dt>
<dd><p>Scale the axis-aligned
box.
If f$mif$ is the min_bound and f$maf$ is the max_bound of the axis aligned
bounding box, and f$sf$ and f$cf$ are the provided scaling factor and
center respectively, then the new min_bound and max_bound are given by
f$mi = c + s (mi - c)f$ and f$ma = c + s (ma - c)f$.
The scaling center will be the box center if it is not specified.</p>
<dl class="field-list simple">
<dt class="field-odd">Parameters</dt>
<dd class="field-odd"><ul class="simple">
<li><p><strong>scale</strong> (<em>float</em>) – The scale parameter.</p></li>
<li><p><strong>center</strong> (<em>Optional</em><em>[</em><a class="reference internal" href="open3d.core.Tensor.html#open3d.core.Tensor" title="open3d.core.Tensor"><em>open3d.core.Tensor</em></a><em>]</em><em>, </em><em>optional</em><em>, </em><em>default=None</em>) – Center used for the scaling operation. Tensor with {3,} shape, and type float32 or float64</p></li>
</ul>
</dd>
<dt class="field-even">Returns</dt>
<dd class="field-even"><p>open3d.t.geometry.OrientedBoundingBox</p>
</dd>
</dl>
</dd></dl>

<dl class="py method">
<dt id="open3d.t.geometry.OrientedBoundingBox.set_center">
<code class="sig-name descname">set_center</code><span class="sig-paren">(</span><em class="sig-param"><span class="n">self</span></em>, <em class="sig-param"><span class="n">center</span></em><span class="sig-paren">)</span><a class="headerlink" href="#open3d.t.geometry.OrientedBoundingBox.set_center" title="Permalink to this definition">¶</a></dt>
<dd><p>Set the center of the box.</p>
<dl class="field-list simple">
<dt class="field-odd">Parameters</dt>
<dd class="field-odd"><p><strong>center</strong> (<a class="reference internal" href="open3d.core.Tensor.html#open3d.core.Tensor" title="open3d.core.Tensor"><em>open3d.core.Tensor</em></a>) – Tensor with {3,} shape, and type float32 or float64.</p>
</dd>
<dt class="field-even">Returns</dt>
<dd class="field-even"><p>None</p>
</dd>
</dl>
</dd></dl>

<dl class="py method">
<dt id="open3d.t.geometry.OrientedBoundingBox.set_color">
<code class="sig-name descname">set_color</code><span class="sig-paren">(</span><em class="sig-param"><span class="n">self</span></em>, <em class="sig-param"><span class="n">color</span></em><span class="sig-paren">)</span><a class="headerlink" href="#open3d.t.geometry.OrientedBoundingBox.set_color" title="Permalink to this definition">¶</a></dt>
<dd><p>Set the color of the oriented box.</p>
<dl class="field-list simple">
<dt class="field-odd">Parameters</dt>
<dd class="field-odd"><p><strong>color</strong> (<a class="reference internal" href="open3d.core.Tensor.html#open3d.core.Tensor" title="open3d.core.Tensor"><em>open3d.core.Tensor</em></a>) – Tensor with {3,} shape, and type float32 or float64, with values in range [0.0, 1.0].</p>
</dd>
<dt class="field-even">Returns</dt>
<dd class="field-even"><p>None</p>
</dd>
</dl>
</dd></dl>

<dl class="py method">
<dt id="open3d.t.geometry.OrientedBoundingBox.set_extent">
<code class="sig-name descname">set_extent</code><span class="sig-paren">(</span><em class="sig-param"><span class="n">self</span></em>, <em class="sig-param"><span class="n">extent</span></em><span class="sig-paren">)</span><a class="headerlink" href="#open3d.t.geometry.OrientedBoundingBox.set_extent" title="Permalink to this definition">¶</a></dt>
<dd><p>Set the extent of the box.</p>
<dl class="field-list simple">
<dt class="field-odd">Parameters</dt>
<dd class="field-odd"><p><strong>extent</strong> (<a class="reference internal" href="open3d.core.Tensor.html#open3d.core.Tensor" title="open3d.core.Tensor"><em>open3d.core.Tensor</em></a>) – Tensor with {3,} shape, and type float32 or float64.</p>
</dd>
<dt class="field-even">Returns</dt>
<dd class="field-even"><p>None</p>
</dd>
</dl>
</dd></dl>

<dl class="py method">
<dt id="open3d.t.geometry.OrientedBoundingBox.set_rotation">
<code class="sig-name descname">set_rotation</code><span class="sig-paren">(</span><em class="sig-param"><span class="n">self</span></em>, <em class="sig-param"><span class="n">rotation</span></em><span class="sig-paren">)</span><a class="headerlink" href="#open3d.t.geometry.OrientedBoundingBox.set_rotation" title="Permalink to this definition">¶</a></dt>
<dd><p>Set the rotation matrix of the box.</p>
<dl class="field-list simple">
<dt class="field-odd">Parameters</dt>
<dd class="field-odd"><p><strong>rotation</strong> (<a class="reference internal" href="open3d.core.Tensor.html#open3d.core.Tensor" title="open3d.core.Tensor"><em>open3d.core.Tensor</em></a>) – Tensor with {3, 3} shape, and type float32 or float64.</p>
</dd>
<dt class="field-even">Returns</dt>
<dd class="field-even"><p>None</p>
</dd>
</dl>
</dd></dl>

<dl class="py method">
<dt id="open3d.t.geometry.OrientedBoundingBox.to">
<code class="sig-name descname">to</code><span class="sig-paren">(</span><em class="sig-param"><span class="n">self</span><span class="p">:</span> <span class="n">open3d.cpu.pybind.t.geometry.OrientedBoundingBox</span></em>, <em class="sig-param"><span class="n">device</span><span class="p">:</span> <span class="n">open3d.cpu.pybind.core.Device</span></em>, <em class="sig-param"><span class="n">copy</span><span class="p">:</span> <span class="n">bool</span> <span class="o">=</span> <span class="default_value">False</span></em><span class="sig-paren">)</span> &#x2192; open3d.cpu.pybind.t.geometry.OrientedBoundingBox<a class="headerlink" href="#open3d.t.geometry.OrientedBoundingBox.to" title="Permalink to this definition">¶</a></dt>
<dd><p>Transfer the oriented box to a specified device.</p>
</dd></dl>

<dl class="py method">
<dt id="open3d.t.geometry.OrientedBoundingBox.to_legacy">
<code class="sig-name descname">to_legacy</code><span class="sig-paren">(</span><em class="sig-param"><span class="n">self</span><span class="p">:</span> <span class="n">open3d.cpu.pybind.t.geometry.OrientedBoundingBox</span></em><span class="sig-paren">)</span> &#x2192; open3d.cpu.pybind.geometry.OrientedBoundingBox<a class="headerlink" href="#open3d.t.geometry.OrientedBoundingBox.to_legacy" title="Permalink to this definition">¶</a></dt>
<dd><p>Convert to a legacy Open3D oriented box.</p>
</dd></dl>

<dl class="py method">
<dt id="open3d.t.geometry.OrientedBoundingBox.transform">
<code class="sig-name descname">transform</code><span class="sig-paren">(</span><em class="sig-param"><span class="n">self</span><span class="p">:</span> <span class="n">open3d.cpu.pybind.t.geometry.OrientedBoundingBox</span></em>, <em class="sig-param"><span class="n">transformation</span><span class="p">:</span> <span class="n">open3d.cpu.pybind.core.Tensor</span></em><span class="sig-paren">)</span> &#x2192; open3d.cpu.pybind.t.geometry.OrientedBoundingBox<a class="headerlink" href="#open3d.t.geometry.OrientedBoundingBox.transform" title="Permalink to this definition">¶</a></dt>
<dd><p>Transform the oriented box by the given transformation matrix.</p>
</dd></dl>

<dl class="py method">
<dt id="open3d.t.geometry.OrientedBoundingBox.translate">
<code class="sig-name descname">translate</code><span class="sig-paren">(</span><em class="sig-param"><span class="n">self</span></em>, <em class="sig-param"><span class="n">translation</span></em>, <em class="sig-param"><span class="n">relative</span><span class="o">=</span><span class="default_value">True</span></em><span class="sig-paren">)</span><a class="headerlink" href="#open3d.t.geometry.OrientedBoundingBox.translate" title="Permalink to this definition">¶</a></dt>
<dd><p>Translate the
oriented box by the given translation. If relative is true, the translation is
added to the center of the box. If false, the center will be assigned to the
translation.</p>
<dl class="field-list simple">
<dt class="field-odd">Parameters</dt>
<dd class="field-odd"><ul class="simple">
<li><p><strong>translation</strong> (<a class="reference internal" href="open3d.core.Tensor.html#open3d.core.Tensor" title="open3d.core.Tensor"><em>open3d.core.Tensor</em></a>) – Translation tensor of shape {3,}, type float32 or float64, device same as the box.</p></li>
<li><p><strong>relative</strong> (<em>bool</em><em>, </em><em>optional</em><em>, </em><em>default=True</em>) – Whether to perform relative translation.</p></li>
</ul>
</dd>
<dt class="field-even">Returns</dt>
<dd class="field-even"><p>open3d.t.geometry.OrientedBoundingBox</p>
</dd>
</dl>
</dd></dl>

<dl class="py method">
<dt id="open3d.t.geometry.OrientedBoundingBox.volume">
<code class="sig-name descname">volume</code><span class="sig-paren">(</span><em class="sig-param"><span class="n">self</span><span class="p">:</span> <span class="n">open3d.cpu.pybind.t.geometry.OrientedBoundingBox</span></em><span class="sig-paren">)</span> &#x2192; float<a class="headerlink" href="#open3d.t.geometry.OrientedBoundingBox.volume" title="Permalink to this definition">¶</a></dt>
<dd><p>Returns the volume of the bounding box.</p>
</dd></dl>

<dl class="py method">
<dt id="open3d.t.geometry.OrientedBoundingBox.center">
<em class="property">property </em><code class="sig-name descname">center</code><a class="headerlink" href="#open3d.t.geometry.OrientedBoundingBox.center" title="Permalink to this definition">¶</a></dt>
<dd><p>Returns the center for box.</p>
</dd></dl>

<dl class="py method">
<dt id="open3d.t.geometry.OrientedBoundingBox.color">
<em class="property">property </em><code class="sig-name descname">color</code><a class="headerlink" href="#open3d.t.geometry.OrientedBoundingBox.color" title="Permalink to this definition">¶</a></dt>
<dd><p>Returns the color for box.</p>
</dd></dl>

<dl class="py method">
<dt id="open3d.t.geometry.OrientedBoundingBox.device">
<em class="property">property </em><code class="sig-name descname">device</code><a class="headerlink" href="#open3d.t.geometry.OrientedBoundingBox.device" title="Permalink to this definition">¶</a></dt>
<dd><p>Returns the device of the geometry.</p>
</dd></dl>

<dl class="py method">
<dt id="open3d.t.geometry.OrientedBoundingBox.dtype">
<em class="property">property </em><code class="sig-name descname">dtype</code><a class="headerlink" href="#open3d.t.geometry.OrientedBoundingBox.dtype" title="Permalink to this definition">¶</a></dt>
<dd><p>Returns the data type attribute of this OrientedBoundingBox.</p>
</dd></dl>

<dl class="py method">
<dt id="open3d.t.geometry.OrientedBoundingBox.extent">
<em class="property">property </em><code class="sig-name descname">extent</code><a class="headerlink" href="#open3d.t.geometry.OrientedBoundingBox.extent" title="Permalink to this definition">¶</a></dt>
<dd><p>Returns the extent for box coordinates.</p>
</dd></dl>

<dl class="py method">
<dt id="open3d.t.geometry.OrientedBoundingBox.is_cpu">
<em class="property">property </em><code class="sig-name descname">is_cpu</code><a class="headerlink" href="#open3d.t.geometry.OrientedBoundingBox.is_cpu" title="Permalink to this definition">¶</a></dt>
<dd><p>Returns true if the geometry is on CPU.</p>
</dd></dl>

<dl class="py method">
<dt id="open3d.t.geometry.OrientedBoundingBox.is_cuda">
<em class="property">property </em><code class="sig-name descname">is_cuda</code><a class="headerlink" href="#open3d.t.geometry.OrientedBoundingBox.is_cuda" title="Permalink to this definition">¶</a></dt>
<dd><p>Returns true if the geometry is on CUDA.</p>
</dd></dl>

<dl class="py method">
<dt id="open3d.t.geometry.OrientedBoundingBox.material">
<em class="property">property </em><code class="sig-name descname">material</code><a class="headerlink" href="#open3d.t.geometry.OrientedBoundingBox.material" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="py method">
<dt id="open3d.t.geometry.OrientedBoundingBox.rotation">
<em class="property">property </em><code class="sig-name descname">rotation</code><a class="headerlink" href="#open3d.t.geometry.OrientedBoundingBox.rotation" title="Permalink to this definition">¶</a></dt>
<dd><p>Returns the rotation for box.</p>
</dd></dl>

</dd></dl>

</div>


           </div>
           
          </div>
          <footer>
  
    <div class="rst-footer-buttons" role="navigation" aria-label="footer navigation">
      
        <a href="open3d.t.geometry.PointCloud.html" class="btn btn-neutral float-right" title="open3d.t.geometry.PointCloud" accesskey="n" rel="next">Next <span class="fa fa-arrow-circle-right"></span></a>
      
      
        <a href="open3d.t.geometry.LineSet.html" class="btn btn-neutral float-left" title="open3d.t.geometry.LineSet" accesskey="p" rel="prev"><span class="fa fa-arrow-circle-left"></span> Previous</a>
      
    </div>
  

  <hr/>

  <div role="contentinfo">
    <p>
        &copy; Copyright 2018 - 2021, www.open3d.org

    </p>
  </div>
  Built with <a href="http://sphinx-doc.org/">Sphinx</a> using a <a href="https://github.com/rtfd/sphinx_rtd_theme">theme</a> provided by <a href="https://readthedocs.org/">Read the Docs</a>. 

</footer>

        </div>
      </div>

    </section>

  </div>
  
<div class="rst-versions" data-toggle="rst-versions" role="note" aria-label="versions">
<span class="rst-current-version" data-toggle="rst-current-version">
    <span class="fa fa-book"> Docs version</span>
    0.17.0
    <span class="fa fa-caret-down"></span>
</span>

<!-- A hack to include an external page to get around CORS policy -->
<!-- https://stackoverflow.com/a/15250208/1255535 -->
<div class="rst-other-versions">
    <dl>
    <dt>Versions</dt>
        <dd><ul>
            <script src="../../versions.js"></script>
        </ul></dd>
    </dl>
</div>

  <script type="text/javascript">
      jQuery(function () {
          SphinxRtdTheme.Navigation.enable(true);
      });
  </script>

  
  
    
   

</body>

<!-- Mirrored from www.open3d.org/docs/release/python_api/open3d.t.geometry.OrientedBoundingBox.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 10:52:05 GMT -->
</html>