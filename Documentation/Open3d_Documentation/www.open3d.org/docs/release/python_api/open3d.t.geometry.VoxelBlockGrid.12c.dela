

<!DOCTYPE html>
<!--[if IE 8]><html class="no-js lt-ie9" lang="en" > <![endif]-->
<!--[if gt IE 8]><!--> <html class="no-js" lang="en" > <!--<![endif]-->

<!-- Mirrored from www.open3d.org/docs/release/python_api/open3d.t.geometry.VoxelBlockGrid.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 10:52:05 GMT -->
<head>
  <meta charset="utf-8">
  
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  
  <title>open3d.t.geometry.VoxelBlockGrid &mdash; Open3D 0.17.0 documentation</title>
  

  
  
    <link rel="shortcut icon" href="../_static/open3d_logo.ico"/>
  
  
  

  
  <script type="text/javascript" src="../_static/js/modernizr.min.js"></script>
  
    
      <script type="text/javascript" id="documentation_options" data-url_root="../" src="../_static/documentation_options.js"></script>
        <script src="../_static/jquery.js"></script>
        <script src="../_static/underscore.js"></script>
        <script src="../_static/doctools.js"></script>
        <script src="../_static/language_data.js"></script>
        <script async="async" src="https://www.googletagmanager.com/gtag/js?id=G-3TQPKGV6Z3"></script>
        <script >
        window.dataLayer = window.dataLayer || [];
        function gtag(){dataLayer.push(arguments);}
        gtag('js', new Date());
        gtag('config', 'G-3TQPKGV6Z3');</script>
        <script crossorigin="anonymous" integrity="sha256-Ae2Vz/4ePdIu6ZyI/5ZGsYnb+m0JlOmKPjt6XZ9JJkA=" src="../../../../cdnjs.cloudflare.com/ajax/libs/require.js/2.3.4/require.min.js"></script>
        <script async="async" src="../../../../cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.7/latestdda6.js?config=TeX-AMS-MML_HTMLorMML"></script>
        <script type="text/x-mathjax-config">MathJax.Hub.Config({"tex2jax": {"inlineMath": [["$", "$"], ["\\(", "\\)"]], "processEscapes": true, "ignoreClass": "document", "processClass": "math|output_area"}})</script>
    
    <script type="text/javascript" src="../_static/js/theme.js"></script>

    

  
  <link rel="stylesheet" href="../_static/css/theme.css" type="text/css" />
  <link rel="stylesheet" href="../_static/pygments.css" type="text/css" />
  <link rel="stylesheet" href="../_static/theme_overrides.css" type="text/css" />
    <link rel="index" title="Index" href="../genindex.html" />
    <link rel="search" title="Search" href="../search.html" />
    <link rel="next" title="open3d.t.io" href="open3d.t.io.html" />
    <link rel="prev" title="open3d.t.geometry.TriangleMesh" href="open3d.t.geometry.TriangleMesh.12b.delaye" /> 
</head>

<body class="wy-body-for-nav">

   
  <div class="wy-grid-for-nav">
    
    <nav data-toggle="wy-nav-shift" class="wy-nav-side">
      <div class="wy-side-scroll">
        <div class="wy-side-nav-search" >
          

          
            <a href="../index-2.html" class="icon icon-home"> Open3D
          

          
          </a>

          
            
            
              <div class="version">
                0.17.0
              </div>
            
          

          
<div role="search">
  <form id="rtd-search-form" class="wy-form" action="http://www.open3d.org/docs/release/search.html" method="get">
    <input type="text" name="q" placeholder="Search docs" />
    <input type="hidden" name="check_keywords" value="yes" />
    <input type="hidden" name="area" value="default" />
  </form>
</div>

          
        </div>

        <div class="wy-menu wy-menu-vertical" data-spy="affix" role="navigation" aria-label="main navigation">
          
            
            
              
            
            
              <p class="caption"><span class="caption-text">Getting Started</span></p>
<ul>
<li class="toctree-l1"><a class="reference internal" href="../introduction.html">Introduction</a></li>
<li class="toctree-l1"><a class="reference internal" href="../getting_started.html">Getting started</a></li>
<li class="toctree-l1"><a class="reference internal" href="../compilation.html">Build from source</a></li>
<li class="toctree-l1"><a class="reference internal" href="../cpp_project.html">Link Open3D in C++ projects</a></li>
<li class="toctree-l1"><a class="reference internal" href="../builddocs.html">Build documentation</a></li>
<li class="toctree-l1"><a class="reference internal" href="../open3d_ml.html">Open3D-ML</a></li>
<li class="toctree-l1"><a class="reference internal" href="../arm.html">ARM support</a></li>
<li class="toctree-l1"><a class="reference internal" href="../docker.html">Docker</a></li>
</ul>
<p class="caption"><span class="caption-text">Tutorial</span></p>
<ul>
<li class="toctree-l1"><a class="reference internal" href="../tutorial/geometry/index.html">Geometry</a></li>
<li class="toctree-l1"><a class="reference internal" href="../tutorial/t_geometry/index.html">Geometry (Tensor)</a></li>
<li class="toctree-l1"><a class="reference internal" href="../tutorial/pipelines/index.html">Pipelines</a></li>
<li class="toctree-l1"><a class="reference internal" href="../tutorial/t_pipelines/index.html">Pipelines (Tensor)</a></li>
<li class="toctree-l1"><a class="reference internal" href="../tutorial/visualization/index.html">Visualization</a></li>
<li class="toctree-l1"><a class="reference internal" href="../tutorial/core/index.html">Core</a></li>
<li class="toctree-l1"><a class="reference internal" href="../tutorial/data/index.html">Dataset</a></li>
<li class="toctree-l1"><a class="reference internal" href="../tutorial/reconstruction_system/index.html">Reconstruction system</a></li>
<li class="toctree-l1"><a class="reference internal" href="../tutorial/t_reconstruction_system/index.html">Reconstruction system (Tensor)</a></li>
<li class="toctree-l1"><a class="reference internal" href="../tutorial/sensor/index.html">Sensor</a></li>
<li class="toctree-l1"><a class="reference internal" href="../tutorial/reference.html">Reference</a></li>
</ul>
<p class="caption"><span class="caption-text">Contribute</span></p>
<ul>
<li class="toctree-l1"><a class="reference internal" href="../contribute/contribute.html">Contributing to Open3D</a></li>
<li class="toctree-l1"><a class="reference internal" href="../contribute/contribution_recipes.html">Contribution methods</a></li>
<li class="toctree-l1"><a class="reference internal" href="../contribute/styleguide.html">Open3D style guide</a></li>
</ul>
<p class="caption"><span class="caption-text">C++ API</span></p>
<ul>
<li class="toctree-l1"><a class="reference internal" href="../cpp_api.html">C++ documentation</a></li>
</ul>
<p class="caption"><span class="caption-text">Python API</span></p>
<ul class="current">
<li class="toctree-l1"><a class="reference internal" href="open3d.camera.html">open3d.camera</a></li>
<li class="toctree-l1"><a class="reference internal" href="open3d.core.html">open3d.core</a></li>
<li class="toctree-l1"><a class="reference internal" href="open3d.data.html">open3d.data</a></li>
<li class="toctree-l1"><a class="reference internal" href="open3d.geometry.html">open3d.geometry</a></li>
<li class="toctree-l1"><a class="reference internal" href="open3d.io.html">open3d.io</a></li>
<li class="toctree-l1 current"><a class="reference internal" href="open3d.t.html">open3d.t</a><ul class="current">
<li class="toctree-l2 current"><a class="reference internal" href="open3d.t.geometry.html">geometry</a><ul class="current">
<li class="toctree-l3"><a class="reference internal" href="open3d.t.geometry.AxisAlignedBoundingBox">AxisAlignedBoundingBox</a></li>
<li class="toctree-l3"><a class="reference internal" href="open3d.t.geometry.DrawableGeometry.122.de">DrawableGeometry</a></li>
<li class="toctree-l3"><a class="reference internal" href="open3d.t.geometry.Geometry.html">Geometry</a></li>
<li class="toctree-l3"><a class="reference internal" href="open3d.t.geometry.Image.html">Image</a></li>
<li class="toctree-l3"><a class="reference internal" href="open3d.t.geometry.InterpType.html">InterpType</a></li>
<li class="toctree-l3"><a class="reference internal" href="open3d.t.geometry.LineSet.html">LineSet</a></li>
<li class="toctree-l3"><a class="reference internal" href="open3d.t.geometry.OrientedBoundingBox.126">OrientedBoundingBox</a></li>
<li class="toctree-l3"><a class="reference internal" href="open3d.t.geometry.PointCloud.html">PointCloud</a></li>
<li class="toctree-l3"><a class="reference internal" href="open3d.t.geometry.RGBDImage.html">RGBDImage</a></li>
<li class="toctree-l3"><a class="reference internal" href="open3d.t.geometry.RaycastingScene.128.del">RaycastingScene</a></li>
<li class="toctree-l3"><a class="reference internal" href="open3d.t.geometry.TensorMap.html">TensorMap</a></li>
<li class="toctree-l3"><a class="reference internal" href="open3d.t.geometry.TriangleMesh.12b.delaye">TriangleMesh</a></li>
<li class="toctree-l3 current"><a class="current reference internal" href="#">VoxelBlockGrid</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="open3d.t.io.html">io</a></li>
<li class="toctree-l2"><a class="reference internal" href="open3d.t.pipelines.html">pipelines</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="open3d.ml.html">open3d.ml</a></li>
<li class="toctree-l1"><a class="reference internal" href="open3d.pipelines.html">open3d.pipelines</a></li>
<li class="toctree-l1"><a class="reference internal" href="open3d.utility.html">open3d.utility</a></li>
<li class="toctree-l1"><a class="reference internal" href="open3d.visualization.html">open3d.visualization</a></li>
</ul>
<p class="caption"><span class="caption-text">Python Examples</span></p>
<ul>
<li class="toctree-l1"><a class="reference internal" href="../python_example/camera/index.html">Camera</a></li>
<li class="toctree-l1"><a class="reference internal" href="../python_example/geometry/index.html">Geometry</a></li>
<li class="toctree-l1"><a class="reference internal" href="../python_example/io/index.html">IO</a></li>
<li class="toctree-l1"><a class="reference internal" href="../python_example/pipelines/index.html">Pipelines</a></li>
<li class="toctree-l1"><a class="reference internal" href="../python_example/utility/index.html">Utility</a></li>
<li class="toctree-l1"><a class="reference internal" href="../python_example/visualization/index.html">Visualization</a></li>
</ul>

            
          
        </div>
      </div>
    </nav>

    <section data-toggle="wy-nav-shift" class="wy-nav-content-wrap">

      
      <nav class="wy-nav-top" aria-label="top navigation">
        
          <i data-toggle="wy-nav-top" class="fa fa-bars"></i>
          <a href="../index-2.html">Open3D</a>
        
      </nav>


      <div class="wy-nav-content">
        
        <div class="rst-content">
        
          















<div role="navigation" aria-label="breadcrumbs navigation">

  <ul class="wy-breadcrumbs">
    
      <li><a href="../index-2.html">Docs</a> &raquo;</li>
        
          <li><a href="open3d.t.html">open3d.t</a> &raquo;</li>
        
          <li><a href="open3d.t.geometry.html">open3d.t.geometry</a> &raquo;</li>
        
      <li>open3d.t.geometry.VoxelBlockGrid</li>
    
    
      <li class="wy-breadcrumbs-aside">
        
            
        
      </li>
    
  </ul>

  
  <hr/>
</div>
          <div role="main" class="document" itemscope="itemscope" itemtype="http://schema.org/Article">
           <div itemprop="articleBody">
            
  
<style>
/* CSS overrides for sphinx_rtd_theme */

/* 24px margin */
.nbinput.nblast.container,
.nboutput.nblast.container {
    margin-bottom: 19px;  /* padding has already 5px */
}

/* ... except between code cells! */
.nblast.container + .nbinput.container {
    margin-top: -19px;
}

.admonition > p:before {
    margin-right: 4px;  /* make room for the exclamation icon */
}

/* Fix math alignment, see https://github.com/rtfd/sphinx_rtd_theme/pull/686 */
.math {
    text-align: unset;
}
</style>
<div class="section" id="open3d-t-geometry-voxelblockgrid">
<h1>open3d.t.geometry.VoxelBlockGrid<a class="headerlink" href="#open3d-t-geometry-voxelblockgrid" title="Permalink to this headline">¶</a></h1>
<dl class="py class">
<dt id="open3d.t.geometry.VoxelBlockGrid">
<em class="property">class </em><code class="sig-prename descclassname">open3d.t.geometry.</code><code class="sig-name descname">VoxelBlockGrid</code><a class="headerlink" href="#open3d.t.geometry.VoxelBlockGrid" title="Permalink to this definition">¶</a></dt>
<dd><p>A voxel block grid is a sparse grid of voxel blocks. Each voxel block is a dense 3D array, preserving local data distribution. If the block_resolution is set to 1, then the VoxelBlockGrid degenerates to a sparse voxel grid.</p>
<dl class="py method">
<dt id="open3d.t.geometry.VoxelBlockGrid.__init__">
<code class="sig-name descname">__init__</code><span class="sig-paren">(</span><em class="sig-param">self: open3d.cpu.pybind.t.geometry.VoxelBlockGrid, attr_names: List[str], attr_dtypes: List[open3d.cpu.pybind.core.Dtype], attr_channels: List[open3d.cpu.pybind.core.SizeVector], voxel_size: float = 0.0058, block_resolution: int = 16, block_count: int = 10000, device: open3d.cpu.pybind.core.Device = CPU:0</em><span class="sig-paren">)</span> &#x2192; None<a class="headerlink" href="#open3d.t.geometry.VoxelBlockGrid.__init__" title="Permalink to this definition">¶</a></dt>
<dd></dd></dl>

<dl class="py method">
<dt id="open3d.t.geometry.VoxelBlockGrid.attribute">
<code class="sig-name descname">attribute</code><span class="sig-paren">(</span><em class="sig-param"><span class="n">self</span><span class="p">:</span> <span class="n">open3d.cpu.pybind.t.geometry.VoxelBlockGrid</span></em>, <em class="sig-param"><span class="n">attribute_name</span><span class="p">:</span> <span class="n">str</span></em><span class="sig-paren">)</span> &#x2192; open3d.cpu.pybind.core.Tensor<a class="headerlink" href="#open3d.t.geometry.VoxelBlockGrid.attribute" title="Permalink to this definition">¶</a></dt>
<dd><p>Get the attribute tensor to be indexed with voxel_indices.</p>
</dd></dl>

<dl class="py method">
<dt id="open3d.t.geometry.VoxelBlockGrid.compute_unique_block_coordinates">
<code class="sig-name descname">compute_unique_block_coordinates</code><span class="sig-paren">(</span><em class="sig-param"><span class="o">*</span><span class="n">args</span></em>, <em class="sig-param"><span class="o">**</span><span class="n">kwargs</span></em><span class="sig-paren">)</span><a class="headerlink" href="#open3d.t.geometry.VoxelBlockGrid.compute_unique_block_coordinates" title="Permalink to this definition">¶</a></dt>
<dd><p>Overloaded function.</p>
<ol class="arabic simple">
<li><p>compute_unique_block_coordinates(self: open3d.cpu.pybind.t.geometry.VoxelBlockGrid, depth: open3d.cpu.pybind.t.geometry.Image, intrinsic: open3d.cpu.pybind.core.Tensor, extrinsic: open3d.cpu.pybind.core.Tensor, depth_scale: float = 1000.0, depth_max: float = 3.0, trunc_voxel_multiplier: float = 8.0) -&gt; open3d.cpu.pybind.core.Tensor</p></li>
</ol>
<p>Get a (3, M) active block coordinates from a depth image, with potential duplicates removed.Note: these coordinates are not activated in the internal sparse voxel block. They need to be inserted in the hash map.</p>
<ol class="arabic simple" start="2">
<li><p>compute_unique_block_coordinates(self: open3d.cpu.pybind.t.geometry.VoxelBlockGrid, pcd: open3d.cpu.pybind.t.geometry.PointCloud, trunc_voxel_multiplier: float = 8.0) -&gt; open3d.cpu.pybind.core.Tensor</p></li>
</ol>
<p>Obtain active block coordinates from a point cloud.</p>
</dd></dl>

<dl class="py method">
<dt id="open3d.t.geometry.VoxelBlockGrid.cpu">
<code class="sig-name descname">cpu</code><span class="sig-paren">(</span><em class="sig-param"><span class="n">self</span><span class="p">:</span> <span class="n">open3d.cpu.pybind.t.geometry.VoxelBlockGrid</span></em><span class="sig-paren">)</span> &#x2192; open3d.cpu.pybind.t.geometry.VoxelBlockGrid<a class="headerlink" href="#open3d.t.geometry.VoxelBlockGrid.cpu" title="Permalink to this definition">¶</a></dt>
<dd><p>Transfer the voxel block grid to CPU. If the voxel block grid is already on CPU, no copy will be performed.</p>
</dd></dl>

<dl class="py method">
<dt id="open3d.t.geometry.VoxelBlockGrid.cuda">
<code class="sig-name descname">cuda</code><span class="sig-paren">(</span><em class="sig-param"><span class="n">self</span><span class="p">:</span> <span class="n">open3d.cpu.pybind.t.geometry.VoxelBlockGrid</span></em>, <em class="sig-param"><span class="n">device_id</span><span class="p">:</span> <span class="n">int</span> <span class="o">=</span> <span class="default_value">0</span></em><span class="sig-paren">)</span> &#x2192; open3d.cpu.pybind.t.geometry.VoxelBlockGrid<a class="headerlink" href="#open3d.t.geometry.VoxelBlockGrid.cuda" title="Permalink to this definition">¶</a></dt>
<dd><p>Transfer the voxel block grid to a CUDA device. If the voxel block grid is already on the specified CUDA device, no copy will be performed.</p>
</dd></dl>

<dl class="py method">
<dt id="open3d.t.geometry.VoxelBlockGrid.extract_point_cloud">
<code class="sig-name descname">extract_point_cloud</code><span class="sig-paren">(</span><em class="sig-param"><span class="n">self</span><span class="p">:</span> <span class="n">open3d.cpu.pybind.t.geometry.VoxelBlockGrid</span></em>, <em class="sig-param"><span class="n">weight_threshold</span><span class="p">:</span> <span class="n">float</span> <span class="o">=</span> <span class="default_value">3.0</span></em>, <em class="sig-param"><span class="n">estimated_point_number</span><span class="p">:</span> <span class="n">int</span> <span class="o">=</span> <span class="default_value">- 1</span></em><span class="sig-paren">)</span> &#x2192; open3d.cpu.pybind.t.geometry.PointCloud<a class="headerlink" href="#open3d.t.geometry.VoxelBlockGrid.extract_point_cloud" title="Permalink to this definition">¶</a></dt>
<dd><p>Specific operation for TSDF volumes.Extract point cloud at isosurface points.</p>
</dd></dl>

<dl class="py method">
<dt id="open3d.t.geometry.VoxelBlockGrid.extract_triangle_mesh">
<code class="sig-name descname">extract_triangle_mesh</code><span class="sig-paren">(</span><em class="sig-param"><span class="n">self</span><span class="p">:</span> <span class="n">open3d.cpu.pybind.t.geometry.VoxelBlockGrid</span></em>, <em class="sig-param"><span class="n">weight_threshold</span><span class="p">:</span> <span class="n">float</span> <span class="o">=</span> <span class="default_value">3.0</span></em>, <em class="sig-param"><span class="n">estimated_vertex_number</span><span class="p">:</span> <span class="n">int</span> <span class="o">=</span> <span class="default_value">- 1</span></em><span class="sig-paren">)</span> &#x2192; open3d.cpu.pybind.t.geometry.TriangleMesh<a class="headerlink" href="#open3d.t.geometry.VoxelBlockGrid.extract_triangle_mesh" title="Permalink to this definition">¶</a></dt>
<dd><p>Specific operation for TSDF volumes.Extract triangle mesh at isosurface points.</p>
</dd></dl>

<dl class="py method">
<dt id="open3d.t.geometry.VoxelBlockGrid.hashmap">
<code class="sig-name descname">hashmap</code><span class="sig-paren">(</span><em class="sig-param"><span class="n">self</span><span class="p">:</span> <span class="n">open3d.cpu.pybind.t.geometry.VoxelBlockGrid</span></em><span class="sig-paren">)</span> &#x2192; open3d.cpu.pybind.core.HashMap<a class="headerlink" href="#open3d.t.geometry.VoxelBlockGrid.hashmap" title="Permalink to this definition">¶</a></dt>
<dd><p>Get the underlying hash map from 3d block coordinates to block voxel grids.</p>
</dd></dl>

<dl class="py method">
<dt id="open3d.t.geometry.VoxelBlockGrid.integrate">
<code class="sig-name descname">integrate</code><span class="sig-paren">(</span><em class="sig-param"><span class="o">*</span><span class="n">args</span></em>, <em class="sig-param"><span class="o">**</span><span class="n">kwargs</span></em><span class="sig-paren">)</span><a class="headerlink" href="#open3d.t.geometry.VoxelBlockGrid.integrate" title="Permalink to this definition">¶</a></dt>
<dd><p>Overloaded function.</p>
<ol class="arabic simple">
<li><p>integrate(self: open3d.cpu.pybind.t.geometry.VoxelBlockGrid, block_coords: open3d.cpu.pybind.core.Tensor, depth: open3d.cpu.pybind.t.geometry.Image, color: open3d.cpu.pybind.t.geometry.Image, depth_intrinsic: open3d.cpu.pybind.core.Tensor, color_intrinsic: open3d.cpu.pybind.core.Tensor, extrinsic: open3d.cpu.pybind.core.Tensor, depth_scale: float = 1000.0, depth_max: float = 3.0, trunc_voxel_multiplier: float = 8.0) -&gt; None</p></li>
</ol>
<p>Specific operation for TSDF volumes.Integrate an RGB-D frame in the selected block coordinates using pinhole camera model.</p>
<ol class="arabic simple" start="2">
<li><p>integrate(self: open3d.cpu.pybind.t.geometry.VoxelBlockGrid, block_coords: open3d.cpu.pybind.core.Tensor, depth: open3d.cpu.pybind.t.geometry.Image, color: open3d.cpu.pybind.t.geometry.Image, intrinsic: open3d.cpu.pybind.core.Tensor, extrinsic: open3d.cpu.pybind.core.Tensor, depth_scale: float = 1000.0, depth_max: float = 3.0, trunc_voxel_multiplier: float = 8.0) -&gt; None</p></li>
</ol>
<p>Specific operation for TSDF volumes.Integrate an RGB-D frame in the selected block coordinates using pinhole camera model.</p>
<ol class="arabic simple" start="3">
<li><p>integrate(self: open3d.cpu.pybind.t.geometry.VoxelBlockGrid, block_coords: open3d.cpu.pybind.core.Tensor, depth: open3d.cpu.pybind.t.geometry.Image, intrinsic: open3d.cpu.pybind.core.Tensor, extrinsic: open3d.cpu.pybind.core.Tensor, depth_scale: float = 1000.0, depth_max: float = 3.0, trunc_voxel_multiplier: float = 8.0) -&gt; None</p></li>
</ol>
<p>Specific operation for TSDF volumes.Similar to RGB-D integration, but only applied to depth images.</p>
</dd></dl>

<dl class="py method">
<dt id="open3d.t.geometry.VoxelBlockGrid.load">
<em class="property">static </em><code class="sig-name descname">load</code><span class="sig-paren">(</span><em class="sig-param"><span class="n">file_name</span><span class="p">:</span> <span class="n">str</span></em><span class="sig-paren">)</span> &#x2192; open3d.cpu.pybind.t.geometry.VoxelBlockGrid<a class="headerlink" href="#open3d.t.geometry.VoxelBlockGrid.load" title="Permalink to this definition">¶</a></dt>
<dd><p>Load a voxel block grid from a npz file.</p>
</dd></dl>

<dl class="py method">
<dt id="open3d.t.geometry.VoxelBlockGrid.ray_cast">
<code class="sig-name descname">ray_cast</code><span class="sig-paren">(</span><em class="sig-param"><span class="n">self</span><span class="p">:</span> <span class="n">open3d.cpu.pybind.t.geometry.VoxelBlockGrid</span></em>, <em class="sig-param"><span class="n">block_coords</span><span class="p">:</span> <span class="n">open3d.cpu.pybind.core.Tensor</span></em>, <em class="sig-param"><span class="n">intrinsic</span><span class="p">:</span> <span class="n">open3d.cpu.pybind.core.Tensor</span></em>, <em class="sig-param"><span class="n">extrinsic</span><span class="p">:</span> <span class="n">open3d.cpu.pybind.core.Tensor</span></em>, <em class="sig-param"><span class="n">width</span><span class="p">:</span> <span class="n">int</span></em>, <em class="sig-param"><span class="n">height</span><span class="p">:</span> <span class="n">int</span></em>, <em class="sig-param"><span class="n">render_attributes</span><span class="p">:</span> <span class="n">List<span class="p">[</span>str<span class="p">]</span></span> <span class="o">=</span> <span class="default_value">['depth', 'color']</span></em>, <em class="sig-param"><span class="n">depth_scale</span><span class="p">:</span> <span class="n">float</span> <span class="o">=</span> <span class="default_value">1000.0</span></em>, <em class="sig-param"><span class="n">depth_min</span><span class="p">:</span> <span class="n">float</span> <span class="o">=</span> <span class="default_value">0.10000000149011612</span></em>, <em class="sig-param"><span class="n">depth_max</span><span class="p">:</span> <span class="n">float</span> <span class="o">=</span> <span class="default_value">3.0</span></em>, <em class="sig-param"><span class="n">weight_threshold</span><span class="p">:</span> <span class="n">float</span> <span class="o">=</span> <span class="default_value">3.0</span></em>, <em class="sig-param"><span class="n">trunc_voxel_multiplier</span><span class="p">:</span> <span class="n">float</span> <span class="o">=</span> <span class="default_value">8.0</span></em>, <em class="sig-param"><span class="n">range_map_down_factor</span><span class="p">:</span> <span class="n">int</span> <span class="o">=</span> <span class="default_value">8</span></em><span class="sig-paren">)</span> &#x2192; open3d.cpu.pybind.t.geometry.TensorMap<a class="headerlink" href="#open3d.t.geometry.VoxelBlockGrid.ray_cast" title="Permalink to this definition">¶</a></dt>
<dd><p>Specific operation for TSDF volumes.Perform volumetric ray casting in the selected block coordinates.The block coordinates in the frustum can be taken fromcompute_unique_block_coordinatesAll the block coordinates can be taken from hashmap().key_tensor()</p>
</dd></dl>

<dl class="py method">
<dt id="open3d.t.geometry.VoxelBlockGrid.save">
<code class="sig-name descname">save</code><span class="sig-paren">(</span><em class="sig-param"><span class="n">self</span><span class="p">:</span> <span class="n">open3d.cpu.pybind.t.geometry.VoxelBlockGrid</span></em>, <em class="sig-param"><span class="n">file_name</span><span class="p">:</span> <span class="n">str</span></em><span class="sig-paren">)</span> &#x2192; None<a class="headerlink" href="#open3d.t.geometry.VoxelBlockGrid.save" title="Permalink to this definition">¶</a></dt>
<dd><p>Save the voxel block grid to a npz file.</p>
</dd></dl>

<dl class="py method">
<dt id="open3d.t.geometry.VoxelBlockGrid.to">
<code class="sig-name descname">to</code><span class="sig-paren">(</span><em class="sig-param"><span class="n">self</span><span class="p">:</span> <span class="n">open3d.cpu.pybind.t.geometry.VoxelBlockGrid</span></em>, <em class="sig-param"><span class="n">device</span><span class="p">:</span> <span class="n">open3d.cpu.pybind.core.Device</span></em>, <em class="sig-param"><span class="n">copy</span><span class="p">:</span> <span class="n">bool</span> <span class="o">=</span> <span class="default_value">False</span></em><span class="sig-paren">)</span> &#x2192; open3d.cpu.pybind.t.geometry.VoxelBlockGrid<a class="headerlink" href="#open3d.t.geometry.VoxelBlockGrid.to" title="Permalink to this definition">¶</a></dt>
<dd><p>Transfer the voxel block grid to a specified device.</p>
</dd></dl>

<dl class="py method">
<dt id="open3d.t.geometry.VoxelBlockGrid.voxel_coordinates">
<code class="sig-name descname">voxel_coordinates</code><span class="sig-paren">(</span><em class="sig-param"><span class="n">self</span><span class="p">:</span> <span class="n">open3d.cpu.pybind.t.geometry.VoxelBlockGrid</span></em>, <em class="sig-param"><span class="n">voxel_indices</span><span class="p">:</span> <span class="n">open3d.cpu.pybind.core.Tensor</span></em><span class="sig-paren">)</span> &#x2192; open3d.cpu.pybind.core.Tensor<a class="headerlink" href="#open3d.t.geometry.VoxelBlockGrid.voxel_coordinates" title="Permalink to this definition">¶</a></dt>
<dd><p>Get a (3, hashmap.Size() * resolution^3) coordinate tensor of activevoxels per block, used for geometry transformation jointly with   indices from voxel_indices.                                       Example:                                                          For a voxel block grid with (2, 2, 2) block resolution,           if the active block coordinates are {(-1, 3, 2), (0, 2, 4)},      the returned result will be a (3, 2 x 8) tensor given by:         {                                                                 key_tensor[voxel_indices[0]] * <a href="#id1"><span class="problematic" id="id2">block_resolution_</span></a> + voxel_indices[1] key_tensor[voxel_indices[0]] * <a href="#id3"><span class="problematic" id="id4">block_resolution_</span></a> + voxel_indices[2] key_tensor[voxel_indices[0]] * <a href="#id5"><span class="problematic" id="id6">block_resolution_</span></a> + voxel_indices[3] }                                                                 Note: the coordinates are VOXEL COORDINATES in Int64. To access metriccoordinates, multiply by voxel size.</p>
</dd></dl>

<dl class="py method">
<dt id="open3d.t.geometry.VoxelBlockGrid.voxel_coordinates_and_flattened_indices">
<code class="sig-name descname">voxel_coordinates_and_flattened_indices</code><span class="sig-paren">(</span><em class="sig-param"><span class="o">*</span><span class="n">args</span></em>, <em class="sig-param"><span class="o">**</span><span class="n">kwargs</span></em><span class="sig-paren">)</span><a class="headerlink" href="#open3d.t.geometry.VoxelBlockGrid.voxel_coordinates_and_flattened_indices" title="Permalink to this definition">¶</a></dt>
<dd><p>Overloaded function.</p>
<ol class="arabic simple">
<li><p>voxel_coordinates_and_flattened_indices(self: open3d.cpu.pybind.t.geometry.VoxelBlockGrid, buf_indices: open3d.cpu.pybind.core.Tensor) -&gt; Tuple[open3d.cpu.pybind.core.Tensor, open3d.cpu.pybind.core.Tensor]</p></li>
</ol>
<p>Get a (buf_indices.shape[0] * resolution^3, 3), Float32 voxel coordinate tensor,and a (buf_indices.shape[0] * resolution^3, 1), Int64 voxel index tensor.</p>
<ol class="arabic simple" start="2">
<li><p>voxel_coordinates_and_flattened_indices(self: open3d.cpu.pybind.t.geometry.VoxelBlockGrid) -&gt; Tuple[open3d.cpu.pybind.core.Tensor, open3d.cpu.pybind.core.Tensor]</p></li>
</ol>
<p>Get a (hashmap.size() * resolution^3, 3), Float32 voxel coordinate tensor,and a (hashmap.size() * resolution^3, 1), Int64 voxel index tensor.</p>
</dd></dl>

<dl class="py method">
<dt id="open3d.t.geometry.VoxelBlockGrid.voxel_indices">
<code class="sig-name descname">voxel_indices</code><span class="sig-paren">(</span><em class="sig-param"><span class="o">*</span><span class="n">args</span></em>, <em class="sig-param"><span class="o">**</span><span class="n">kwargs</span></em><span class="sig-paren">)</span><a class="headerlink" href="#open3d.t.geometry.VoxelBlockGrid.voxel_indices" title="Permalink to this definition">¶</a></dt>
<dd><p>Overloaded function.</p>
<ol class="arabic simple">
<li><p>voxel_indices(self: open3d.cpu.pybind.t.geometry.VoxelBlockGrid, arg0: open3d.cpu.pybind.core.Tensor) -&gt; open3d.cpu.pybind.core.Tensor</p></li>
</ol>
<p>Get a (4, N), Int64 index tensor for input buffer indices, used for advanced indexing.   Returned index tensor can access selected value bufferin the order of  (buf_index, index_voxel_x, index_voxel_y, index_voxel_z).       Example:                                                        For a voxel block grid with (2, 2, 2) block resolution,         if the active block coordinates are at buffer index {(2, 4)} given by active_indices() from the underlying hash map,         the returned result will be a (4, 2 x 8) tensor:                {                                                               (2, 0, 0, 0), (2, 1, 0, 0), (2, 0, 1, 0), (2, 1, 1, 0),         (2, 0, 0, 1), (2, 1, 0, 1), (2, 0, 1, 1), (2, 1, 1, 1),         (4, 0, 0, 0), (4, 1, 0, 0), (4, 0, 1, 0), (4, 1, 1, 0),         (4, 0, 0, 1), (4, 1, 0, 1), (4, 0, 1, 1), (4, 1, 1, 1),         }Note: the slicing order is z-y-x.</p>
<ol class="arabic simple" start="2">
<li><p>voxel_indices(self: open3d.cpu.pybind.t.geometry.VoxelBlockGrid) -&gt; open3d.cpu.pybind.core.Tensor</p></li>
</ol>
<p>Get a (4, N) Int64 idnex tensor for all the active voxels stored in the hash map, used for advanced indexing.</p>
</dd></dl>

</dd></dl>

</div>


           </div>
           
          </div>
          <footer>
  
    <div class="rst-footer-buttons" role="navigation" aria-label="footer navigation">
      
        <a href="open3d.t.io.html" class="btn btn-neutral float-right" title="open3d.t.io" accesskey="n" rel="next">Next <span class="fa fa-arrow-circle-right"></span></a>
      
      
        <a href="open3d.t.geometry.TriangleMesh.12b.delaye" class="btn btn-neutral float-left" title="open3d.t.geometry.TriangleMesh" accesskey="p" rel="prev"><span class="fa fa-arrow-circle-left"></span> Previous</a>
      
    </div>
  

  <hr/>

  <div role="contentinfo">
    <p>
        &copy; Copyright 2018 - 2021, www.open3d.org

    </p>
  </div>
  Built with <a href="http://sphinx-doc.org/">Sphinx</a> using a <a href="https://github.com/rtfd/sphinx_rtd_theme">theme</a> provided by <a href="https://readthedocs.org/">Read the Docs</a>. 

</footer>

        </div>
      </div>

    </section>

  </div>
  
<div class="rst-versions" data-toggle="rst-versions" role="note" aria-label="versions">
<span class="rst-current-version" data-toggle="rst-current-version">
    <span class="fa fa-book"> Docs version</span>
    0.17.0
    <span class="fa fa-caret-down"></span>
</span>

<!-- A hack to include an external page to get around CORS policy -->
<!-- https://stackoverflow.com/a/15250208/1255535 -->
<div class="rst-other-versions">
    <dl>
    <dt>Versions</dt>
        <dd><ul>
            <script src="../../versions.js"></script>
        </ul></dd>
    </dl>
</div>

  <script type="text/javascript">
      jQuery(function () {
          SphinxRtdTheme.Navigation.enable(true);
      });
  </script>

  
  
    
   

</body>

<!-- Mirrored from www.open3d.org/docs/release/python_api/open3d.t.geometry.VoxelBlockGrid.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 10:52:05 GMT -->
</html>