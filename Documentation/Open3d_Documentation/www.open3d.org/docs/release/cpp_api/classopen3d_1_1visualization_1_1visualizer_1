<!-- HTML header for doxygen 1.8.20-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/classopen3d_1_1visualization_1_1visualizer_1_1_o3_d_visualizer.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 11:01:47 GMT -->
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Open3D (C++ API): open3d::visualization::visualizer::O3DVisualizer Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js", "TeX/AMSmath.html", "TeX/AMSsymbols.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="../../../../cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-3TQPKGV6Z3"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());
  gtag('config', 'G-3TQPKGV6Z3');
</script>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="open3d_logo.ico"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Open3D (C++ API)
   &#160;<span id="projectnumber">0.17.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.html');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.html','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceopen3d.html">open3d</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1visualization.html">visualization</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1visualization_1_1visualiz">visualizer</a></li><li class="navelem"><a class="el" href="classopen3d_1_1visualization_1_1visualizer_1">O3DVisualizer</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">open3d::visualization::visualizer::O3DVisualizer Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_o3_d_visualizer_8h_source.html">O3DVisualizer.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for open3d::visualization::visualizer::O3DVisualizer:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classopen3d_1_1visualization_1_1visualizer_1-3" usemap="#open3d::visualization::visualizer::O3DVisualizer_map" alt=""/>
  <map id="open3d::visualization::visualizer::O3DVisualizer_map" name="open3d::visualization::visualizer::O3DVisualizer_map">
<area href="classopen3d_1_1visualization_1_1gui_1_1_wind" alt="open3d::visualization::gui::Window" shape="rect" coords="0,0,277,24"/>
  </map>
</div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structopen3d_1_1visualization_1_1visualizer_-2">DrawObject</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structopen3d_1_1visualization_1_1visualizer_">Impl</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structopen3d_1_1visualization_1_1visualizer_-3">UIState</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a7756fcbe2bed111d7b30ac90ca240f07"><td class="memItemLeft" align="right" valign="top">enum class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1visualizer_1#a7756fcbe2bed111d7b30ac90ca240f07">Shader</a> { <a class="el" href="classopen3d_1_1visualization_1_1visualizer_1#a7756fcbe2bed111d7b30ac90ca240f07a94e94133f4bdc1794c6b647b8ea134d0">STANDARD</a>
, <a class="el" href="classopen3d_1_1visualization_1_1visualizer_1#a7756fcbe2bed111d7b30ac90ca240f07a73d294a17e5077669f3fe55f2fcb4c87">UNLIT</a>
, <a class="el" href="classopen3d_1_1visualization_1_1visualizer_1#a7756fcbe2bed111d7b30ac90ca240f07aa50eb8a5845601666a9dd4504ebef51a">NORMALS</a>
, <a class="el" href="classopen3d_1_1visualization_1_1visualizer_1#a7756fcbe2bed111d7b30ac90ca240f07aaa1780b4fcce2d5d9af13dc25386d111">DEPTH</a>
 }</td></tr>
<tr class="separator:a7756fcbe2bed111d7b30ac90ca240f07"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a38b40394122141e961cf2e39ce302b1a"><td class="memItemLeft" align="right" valign="top">enum class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1visualizer_1#a38b40394122141e961cf2e39ce302b1a">TickResult</a> { <a class="el" href="classopen3d_1_1visualization_1_1visualizer_1#a38b40394122141e961cf2e39ce302b1aa1b7e0a590f9d0878bcc4b725e2998cb1">NO_CHANGE</a>
, <a class="el" href="classopen3d_1_1visualization_1_1visualizer_1#a38b40394122141e961cf2e39ce302b1aa8493617dd77e400daa81294925a52201">REDRAW</a>
 }</td></tr>
<tr class="separator:a38b40394122141e961cf2e39ce302b1a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a3a313b189a3cd807af21d471d8b5c585"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1visualizer_1#a3a313b189a3cd807af21d471d8b5c585">O3DVisualizer</a> (const std::string &amp;title, int <a class="el" href="io_2file__format_2_file_p_c_d_8cpp.375.delay#a2474a5474cbff19523a51eb1de01cda4">width</a>, int <a class="el" href="io_2file__format_2_file_p_c_d_8cpp.375.delay#ad12fc34ce789bce6c8a05d8a17138534">height</a>)</td></tr>
<tr class="separator:a3a313b189a3cd807af21d471d8b5c585"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a987e7bb8904a506d18e9aa6daeb2c2a9"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1visualizer_1#a987e7bb8904a506d18e9aa6daeb2c2a9">~O3DVisualizer</a> ()</td></tr>
<tr class="separator:a987e7bb8904a506d18e9aa6daeb2c2a9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abed7c08cba2a5eb1de6d05ee4d376b77"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1visualizer_1#abed7c08cba2a5eb1de6d05ee4d376b77">AddAction</a> (const std::string &amp;<a class="el" href="_o3_d_visualizer_8cpp.html#a9b45b3e13bd9167aab02e17e08916231">name</a>, std::function&lt; void(<a class="el" href="classopen3d_1_1visualization_1_1visualizer_1">O3DVisualizer</a> &amp;)&gt; <a class="el" href="_filament_renderer_8cpp.html#a7a0a25a91d8a936306270fd09f1a64a9">callback</a>)</td></tr>
<tr class="separator:abed7c08cba2a5eb1de6d05ee4d376b77"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a638604bd92bdea9dc403fec3936a094f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1visualizer_1#a638604bd92bdea9dc403fec3936a094f">SetBackground</a> (const Eigen::Vector4f &amp;bg_color, std::shared_ptr&lt; <a class="el" href="classopen3d_1_1geometry_1_1_image.406.delaye">geometry::Image</a> &gt; bg_image=nullptr)</td></tr>
<tr class="separator:a638604bd92bdea9dc403fec3936a094f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a29e83e83764f1ff8e21cd76ba6e12d3f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1visualizer_1#a29e83e83764f1ff8e21cd76ba6e12d3f">SetShader</a> (<a class="el" href="classopen3d_1_1visualization_1_1visualizer_1#a7756fcbe2bed111d7b30ac90ca240f07">Shader</a> shader)</td></tr>
<tr class="separator:a29e83e83764f1ff8e21cd76ba6e12d3f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa778359486d33e045d44d178cf4e77bb"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1visualizer_1#aa778359486d33e045d44d178cf4e77bb">AddGeometry</a> (const std::string &amp;<a class="el" href="_o3_d_visualizer_8cpp.html#a9b45b3e13bd9167aab02e17e08916231">name</a>, std::shared_ptr&lt; <a class="el" href="classopen3d_1_1geometry_1_1_geometry3_d.402">geometry::Geometry3D</a> &gt; geom, const <a class="el" href="structopen3d_1_1visualization_1_1rendering_1-3">rendering::MaterialRecord</a> *material=nullptr, const std::string &amp;group=&quot;&quot;, double time=0.0, bool is_visible=true)</td></tr>
<tr class="memdesc:aa778359486d33e045d44d178cf4e77bb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a legacy geometry to the <a class="el" href="classopen3d_1_1visualization_1_1_visualizer" title="The main Visualizer class.">Visualizer</a>.  <a href="classopen3d_1_1visualization_1_1visualizer_1#aa778359486d33e045d44d178cf4e77bb">More...</a><br /></td></tr>
<tr class="separator:aa778359486d33e045d44d178cf4e77bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab205698ffe3e80928abbffa9dfb366f0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1visualizer_1#ab205698ffe3e80928abbffa9dfb366f0">AddGeometry</a> (const std::string &amp;<a class="el" href="_o3_d_visualizer_8cpp.html#a9b45b3e13bd9167aab02e17e08916231">name</a>, std::shared_ptr&lt; <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36">t::geometry::Geometry</a> &gt; tgeom, const <a class="el" href="structopen3d_1_1visualization_1_1rendering_1-3">rendering::MaterialRecord</a> *material=nullptr, const std::string &amp;group=&quot;&quot;, double time=0.0, bool is_visible=true)</td></tr>
<tr class="separator:ab205698ffe3e80928abbffa9dfb366f0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad3956122e5575fa0e8585d0807699706"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1visualizer_1#ad3956122e5575fa0e8585d0807699706">AddGeometry</a> (const std::string &amp;<a class="el" href="_o3_d_visualizer_8cpp.html#a9b45b3e13bd9167aab02e17e08916231">name</a>, std::shared_ptr&lt; <a class="el" href="structopen3d_1_1visualization_1_1rendering_1">rendering::TriangleMeshModel</a> &gt; tgeom, const <a class="el" href="structopen3d_1_1visualization_1_1rendering_1-3">rendering::MaterialRecord</a> *material=nullptr, const std::string &amp;group=&quot;&quot;, double time=0.0, bool is_visible=true)</td></tr>
<tr class="memdesc:ad3956122e5575fa0e8585d0807699706"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a triangle mesh model to the <a class="el" href="classopen3d_1_1visualization_1_1_visualizer" title="The main Visualizer class.">Visualizer</a>.  <a href="classopen3d_1_1visualization_1_1visualizer_1#ad3956122e5575fa0e8585d0807699706">More...</a><br /></td></tr>
<tr class="separator:ad3956122e5575fa0e8585d0807699706"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afb24e62af01e9f6d56a6f113b8dd4a17"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1visualizer_1#afb24e62af01e9f6d56a6f113b8dd4a17">RemoveGeometry</a> (const std::string &amp;<a class="el" href="_o3_d_visualizer_8cpp.html#a9b45b3e13bd9167aab02e17e08916231">name</a>)</td></tr>
<tr class="memdesc:afb24e62af01e9f6d56a6f113b8dd4a17"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes the named geometry from the <a class="el" href="classopen3d_1_1visualization_1_1_visualizer" title="The main Visualizer class.">Visualizer</a>.  <a href="classopen3d_1_1visualization_1_1visualizer_1#afb24e62af01e9f6d56a6f113b8dd4a17">More...</a><br /></td></tr>
<tr class="separator:afb24e62af01e9f6d56a6f113b8dd4a17"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:add0cbcbdb29666e1d81d9e9257afab5c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1visualizer_1#add0cbcbdb29666e1d81d9e9257afab5c">UpdateGeometry</a> (const std::string &amp;<a class="el" href="_o3_d_visualizer_8cpp.html#a9b45b3e13bd9167aab02e17e08916231">name</a>, std::shared_ptr&lt; <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36">t::geometry::Geometry</a> &gt; tgeom, uint32_t update_flags)</td></tr>
<tr class="separator:add0cbcbdb29666e1d81d9e9257afab5c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1a2dfe6d41d0d5a2ff36813c73cc89a5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1visualizer_1#a1a2dfe6d41d0d5a2ff36813c73cc89a5">ShowGeometry</a> (const std::string &amp;<a class="el" href="_o3_d_visualizer_8cpp.html#a9b45b3e13bd9167aab02e17e08916231">name</a>, bool show)</td></tr>
<tr class="memdesc:a1a2dfe6d41d0d5a2ff36813c73cc89a5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Show/hide the named geometry.  <a href="classopen3d_1_1visualization_1_1visualizer_1#a1a2dfe6d41d0d5a2ff36813c73cc89a5">More...</a><br /></td></tr>
<tr class="separator:a1a2dfe6d41d0d5a2ff36813c73cc89a5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8bb61fddc51dbc68a6b71b2bb87ff0fd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structopen3d_1_1visualization_1_1visualizer_-2">DrawObject</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1visualizer_1#a8bb61fddc51dbc68a6b71b2bb87ff0fd">GetGeometry</a> (const std::string &amp;<a class="el" href="_o3_d_visualizer_8cpp.html#a9b45b3e13bd9167aab02e17e08916231">name</a>) const</td></tr>
<tr class="memdesc:a8bb61fddc51dbc68a6b71b2bb87ff0fd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns <a class="el" href="classopen3d_1_1visualization_1_1_visualizer" title="The main Visualizer class.">Visualizer</a>'s internal <a class="el" href="structopen3d_1_1visualization_1_1visualizer_-2">DrawObject</a> for the named geometry.  <a href="classopen3d_1_1visualization_1_1visualizer_1#a8bb61fddc51dbc68a6b71b2bb87ff0fd">More...</a><br /></td></tr>
<tr class="separator:a8bb61fddc51dbc68a6b71b2bb87ff0fd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac96408065fd9cf09c52f0cf7de257652"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structopen3d_1_1visualization_1_1rendering_1-3">rendering::MaterialRecord</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1visualizer_1#ac96408065fd9cf09c52f0cf7de257652">GetGeometryMaterial</a> (const std::string &amp;<a class="el" href="_o3_d_visualizer_8cpp.html#a9b45b3e13bd9167aab02e17e08916231">name</a>) const</td></tr>
<tr class="separator:ac96408065fd9cf09c52f0cf7de257652"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1ad872c22b9d6d89192e8d15d352b8f4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1visualizer_1#a1ad872c22b9d6d89192e8d15d352b8f4">ModifyGeometryMaterial</a> (const std::string &amp;<a class="el" href="_o3_d_visualizer_8cpp.html#a9b45b3e13bd9167aab02e17e08916231">name</a>, const <a class="el" href="structopen3d_1_1visualization_1_1rendering_1-3">rendering::MaterialRecord</a> *material)</td></tr>
<tr class="separator:a1ad872c22b9d6d89192e8d15d352b8f4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4277e07d3232fd552fa6838ab42642aa"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1visualizer_1#a4277e07d3232fd552fa6838ab42642aa">Add3DLabel</a> (const Eigen::Vector3f &amp;pos, const char *text)</td></tr>
<tr class="memdesc:a4277e07d3232fd552fa6838ab42642aa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a label with text <code>text</code> at the 3D position <code>pos</code>.  <a href="classopen3d_1_1visualization_1_1visualizer_1#a4277e07d3232fd552fa6838ab42642aa">More...</a><br /></td></tr>
<tr class="separator:a4277e07d3232fd552fa6838ab42642aa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeacf1e153dba17d1af5690a5323d5122"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1visualizer_1#aeacf1e153dba17d1af5690a5323d5122">Clear3DLabels</a> ()</td></tr>
<tr class="memdesc:aeacf1e153dba17d1af5690a5323d5122"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clears all 3D labels created with <code>Add3DLabel</code>  <a href="classopen3d_1_1visualization_1_1visualizer_1#aeacf1e153dba17d1af5690a5323d5122">More...</a><br /></td></tr>
<tr class="separator:aeacf1e153dba17d1af5690a5323d5122"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a33212fd6eae8f116359db72ce3d1ec24"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1visualizer_1#a33212fd6eae8f116359db72ce3d1ec24">SetupCamera</a> (float fov, const Eigen::Vector3f &amp;center, const Eigen::Vector3f &amp;eye, const Eigen::Vector3f &amp;up)</td></tr>
<tr class="separator:a33212fd6eae8f116359db72ce3d1ec24"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7f649ceaad1e867bd08024af364b7e44"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1visualizer_1#a7f649ceaad1e867bd08024af364b7e44">SetupCamera</a> (const <a class="el" href="classopen3d_1_1camera_1_1_pinhole_camera_int">camera::PinholeCameraIntrinsic</a> &amp;intrinsic, const Eigen::Matrix4d &amp;extrinsic)</td></tr>
<tr class="separator:a7f649ceaad1e867bd08024af364b7e44"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa4e5a8d95ead189876ae52b97ba0e053"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1visualizer_1#aa4e5a8d95ead189876ae52b97ba0e053">SetupCamera</a> (const Eigen::Matrix3d &amp;intrinsic, const Eigen::Matrix4d &amp;extrinsic, int intrinsic_width_px, int intrinsic_height_px)</td></tr>
<tr class="separator:aa4e5a8d95ead189876ae52b97ba0e053"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af798873ca13b2b97ecd535338f9d2d95"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1visualizer_1#af798873ca13b2b97ecd535338f9d2d95">ResetCameraToDefault</a> ()</td></tr>
<tr class="separator:af798873ca13b2b97ecd535338f9d2d95"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae1dd2c9f3870fd473d7973b2a59b2c33"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1visualizer_1#ae1dd2c9f3870fd473d7973b2a59b2c33">ShowSettings</a> (bool show)</td></tr>
<tr class="separator:ae1dd2c9f3870fd473d7973b2a59b2c33"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6c42a4ef57ff8cac4b5ae52959df01b8"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1visualizer_1#a6c42a4ef57ff8cac4b5ae52959df01b8">ShowSkybox</a> (bool show)</td></tr>
<tr class="separator:a6c42a4ef57ff8cac4b5ae52959df01b8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7248914241752629034b8856df05c424"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1visualizer_1#a7248914241752629034b8856df05c424">SetIBL</a> (const std::string &amp;path)</td></tr>
<tr class="separator:a7248914241752629034b8856df05c424"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a59d691758ca571500d426d5f49165669"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1visualizer_1#a59d691758ca571500d426d5f49165669">SetIBLIntensity</a> (float intensity)</td></tr>
<tr class="separator:a59d691758ca571500d426d5f49165669"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8f054e2af86163c8568387575d930cb3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1visualizer_1#a8f054e2af86163c8568387575d930cb3">ShowAxes</a> (bool show)</td></tr>
<tr class="separator:a8f054e2af86163c8568387575d930cb3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a858944fe4822e001a5e015fc0a3dbeba"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1visualizer_1#a858944fe4822e001a5e015fc0a3dbeba">ShowGround</a> (bool show)</td></tr>
<tr class="separator:a858944fe4822e001a5e015fc0a3dbeba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0bbb2c49c46186acfc587a627dfce300"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1visualizer_1#a0bbb2c49c46186acfc587a627dfce300">SetGroundPlane</a> (<a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34#a387adee0ccffd4754260c6809d03f137">rendering::Scene::GroundPlane</a> plane)</td></tr>
<tr class="separator:a0bbb2c49c46186acfc587a627dfce300"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab425d7cbce7fa831568ee47f4d47ae6f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1visualizer_1#ab425d7cbce7fa831568ee47f4d47ae6f">EnableSunFollowsCamera</a> (bool enable)</td></tr>
<tr class="separator:ab425d7cbce7fa831568ee47f4d47ae6f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a43fe3c8bfcf2bbf016dae155cb0584d3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1visualizer_1#a43fe3c8bfcf2bbf016dae155cb0584d3">EnableBasicMode</a> (bool enable)</td></tr>
<tr class="separator:a43fe3c8bfcf2bbf016dae155cb0584d3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa150d73332e1a029d5be12f9312f1f99"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1visualizer_1#aa150d73332e1a029d5be12f9312f1f99">EnableWireframeMode</a> (bool enable)</td></tr>
<tr class="separator:aa150d73332e1a029d5be12f9312f1f99"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:addae7f63b4f353b2e64e78e3fa9fe05a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1visualizer_1#addae7f63b4f353b2e64e78e3fa9fe05a">SetPointSize</a> (int point_size)</td></tr>
<tr class="separator:addae7f63b4f353b2e64e78e3fa9fe05a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab63bda768ed8d7e67292168a1fdc81a2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1visualizer_1#ab63bda768ed8d7e67292168a1fdc81a2">SetLineWidth</a> (int line_width)</td></tr>
<tr class="separator:ab63bda768ed8d7e67292168a1fdc81a2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a669363d0dd972d06d3f2bdabd4b59cf0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1visualizer_1#a669363d0dd972d06d3f2bdabd4b59cf0">EnableGroup</a> (const std::string &amp;group, bool enable)</td></tr>
<tr class="separator:a669363d0dd972d06d3f2bdabd4b59cf0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2f9968434f79988fd5f725829e54dfd6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1visualizer_1#a2f9968434f79988fd5f725829e54dfd6">SetMouseMode</a> (<a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_scen#ad63a3fcb2e32de1c0ad0eb5104e1d5cb">gui::SceneWidget::Controls</a> mode)</td></tr>
<tr class="separator:a2f9968434f79988fd5f725829e54dfd6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2bd6a0b4a5cd95853ca800638f87845a"><td class="memItemLeft" align="right" valign="top">std::vector&lt; <a class="el" href="classopen3d_1_1visualization_1_1visualizer_1-2#a44e9db20f36b22521d9e75d6c4863e80">O3DVisualizerSelections::SelectionSet</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1visualizer_1#a2bd6a0b4a5cd95853ca800638f87845a">GetSelectionSets</a> () const</td></tr>
<tr class="separator:a2bd6a0b4a5cd95853ca800638f87845a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae5cb6d988e6a501905e59923d45a54a5"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1visualizer_1#ae5cb6d988e6a501905e59923d45a54a5">GetAnimationFrameDelay</a> () const</td></tr>
<tr class="separator:ae5cb6d988e6a501905e59923d45a54a5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a665e45befb3fc0590f453f073a07d887"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1visualizer_1#a665e45befb3fc0590f453f073a07d887">SetAnimationFrameDelay</a> (double secs)</td></tr>
<tr class="separator:a665e45befb3fc0590f453f073a07d887"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af535521f531276ead56e4023bca32944"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1visualizer_1#af535521f531276ead56e4023bca32944">GetAnimationTimeStep</a> () const</td></tr>
<tr class="separator:af535521f531276ead56e4023bca32944"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a380d7a7829663ecd70b5b7cf4844612c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1visualizer_1#a380d7a7829663ecd70b5b7cf4844612c">SetAnimationTimeStep</a> (double time_step)</td></tr>
<tr class="separator:a380d7a7829663ecd70b5b7cf4844612c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a69ba0370946decd2888349b0f5a83641"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1visualizer_1#a69ba0370946decd2888349b0f5a83641">GetAnimationDuration</a> () const</td></tr>
<tr class="separator:a69ba0370946decd2888349b0f5a83641"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa1a525fa4da8402949992793ba3267eb"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1visualizer_1#aa1a525fa4da8402949992793ba3267eb">SetAnimationDuration</a> (double sec)</td></tr>
<tr class="separator:aa1a525fa4da8402949992793ba3267eb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5389ff4d267ea782038e742315308e0c"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1visualizer_1#a5389ff4d267ea782038e742315308e0c">GetCurrentTime</a> () const</td></tr>
<tr class="separator:a5389ff4d267ea782038e742315308e0c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5125b5fabf2dda63e945066acfc4ca9f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1visualizer_1#a5125b5fabf2dda63e945066acfc4ca9f">SetCurrentTime</a> (double t)</td></tr>
<tr class="separator:a5125b5fabf2dda63e945066acfc4ca9f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0597f1d078e6da91d029ab2907a7f088"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1visualizer_1#a0597f1d078e6da91d029ab2907a7f088">GetIsAnimating</a> () const</td></tr>
<tr class="separator:a0597f1d078e6da91d029ab2907a7f088"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae6498c14ea52050705ad5e91d2aece62"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1visualizer_1#ae6498c14ea52050705ad5e91d2aece62">SetAnimating</a> (bool is_animating)</td></tr>
<tr class="separator:ae6498c14ea52050705ad5e91d2aece62"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aea4a3a6d936f9ac00136a9d76357f832"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1visualizer_1#aea4a3a6d936f9ac00136a9d76357f832">SetOnAnimationFrame</a> (std::function&lt; void(<a class="el" href="classopen3d_1_1visualization_1_1visualizer_1">O3DVisualizer</a> &amp;, double)&gt; cb)</td></tr>
<tr class="separator:aea4a3a6d936f9ac00136a9d76357f832"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a813aef559e4badd59c065d556fb5fab9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1visualizer_1#a813aef559e4badd59c065d556fb5fab9">SetOnAnimationTick</a> (std::function&lt; <a class="el" href="classopen3d_1_1visualization_1_1visualizer_1#a38b40394122141e961cf2e39ce302b1a">TickResult</a>(<a class="el" href="classopen3d_1_1visualization_1_1visualizer_1">O3DVisualizer</a> &amp;, double, double)&gt; cb)</td></tr>
<tr class="separator:a813aef559e4badd59c065d556fb5fab9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3c123a7fea340d6208a4ef218bddd1c3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1visualizer_1#a3c123a7fea340d6208a4ef218bddd1c3">ExportCurrentImage</a> (const std::string &amp;path)</td></tr>
<tr class="separator:a3c123a7fea340d6208a4ef218bddd1c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac2d2130eb0820ab8c1013c9ef43ec51f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structopen3d_1_1visualization_1_1visualizer_-3">UIState</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1visualizer_1#ac2d2130eb0820ab8c1013c9ef43ec51f">GetUIState</a> () const</td></tr>
<tr class="separator:ac2d2130eb0820ab8c1013c9ef43ec51f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7ca5eff515cca24cfbd84cd7cf3f9b8a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-2">rendering::Open3DScene</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1visualizer_1#a7ca5eff515cca24cfbd84cd7cf3f9b8a">GetScene</a> () const</td></tr>
<tr class="separator:a7ca5eff515cca24cfbd84cd7cf3f9b8a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab4e7207465f3c83c1ff1225df077e0ae"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1visualizer_1#ab4e7207465f3c83c1ff1225df077e0ae">StartRPCInterface</a> (const std::string &amp;address, int timeout)</td></tr>
<tr class="memdesc:ab4e7207465f3c83c1ff1225df077e0ae"><td class="mdescLeft">&#160;</td><td class="mdescRight">Starts the RPC interface. See io/rpc/ZMQReceiver for the parameters.  <a href="classopen3d_1_1visualization_1_1visualizer_1#ab4e7207465f3c83c1ff1225df077e0ae">More...</a><br /></td></tr>
<tr class="separator:ab4e7207465f3c83c1ff1225df077e0ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7900503c76e5ab18c84f0af82fcdac83"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1visualizer_1#a7900503c76e5ab18c84f0af82fcdac83">StopRPCInterface</a> ()</td></tr>
<tr class="separator:a7900503c76e5ab18c84f0af82fcdac83"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind">open3d::visualization::gui::Window</a></td></tr>
<tr class="memitem:aee56b416a7ce0ed88326840eb66164bc inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind#aee56b416a7ce0ed88326840eb66164bc">Window</a> (const std::string &amp;title, int flags=0)</td></tr>
<tr class="separator:aee56b416a7ce0ed88326840eb66164bc inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab28cfd74a651f90c7e8d6e06eccd882b inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind#ab28cfd74a651f90c7e8d6e06eccd882b">Window</a> (const std::string &amp;title, int <a class="el" href="io_2file__format_2_file_p_c_d_8cpp.375.delay#a2474a5474cbff19523a51eb1de01cda4">width</a>, int <a class="el" href="io_2file__format_2_file_p_c_d_8cpp.375.delay#ad12fc34ce789bce6c8a05d8a17138534">height</a>, int flags=0)</td></tr>
<tr class="separator:ab28cfd74a651f90c7e8d6e06eccd882b inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af850774eb821c4f1c4e99b6d822a018f inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind#af850774eb821c4f1c4e99b6d822a018f">Window</a> (const std::string &amp;title, int x, int y, int <a class="el" href="io_2file__format_2_file_p_c_d_8cpp.375.delay#a2474a5474cbff19523a51eb1de01cda4">width</a>, int <a class="el" href="io_2file__format_2_file_p_c_d_8cpp.375.delay#ad12fc34ce789bce6c8a05d8a17138534">height</a>, int flags=0)</td></tr>
<tr class="separator:af850774eb821c4f1c4e99b6d822a018f inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afb53c927ddc3d6b0b8e783e044c22620 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind#afb53c927ddc3d6b0b8e783e044c22620">~Window</a> ()</td></tr>
<tr class="separator:afb53c927ddc3d6b0b8e783e044c22620 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a23ee69da890f8edd058bcfae46d25b57 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="structopen3d_1_1visualization_1_1gui_1_1_the">Theme</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind#a23ee69da890f8edd058bcfae46d25b57">GetTheme</a> () const</td></tr>
<tr class="separator:a23ee69da890f8edd058bcfae46d25b57 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a971287e0a8951d98a92e3d28c0232805 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-31">visualization::rendering::Renderer</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind#a971287e0a8951d98a92e3d28c0232805">GetRenderer</a> () const</td></tr>
<tr class="separator:a971287e0a8951d98a92e3d28c0232805 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9eb5909175ba0920d2e9cf728eaf12b4 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structopen3d_1_1visualization_1_1gui_1_1_rec">Rect</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind#a9eb5909175ba0920d2e9cf728eaf12b4">GetOSFrame</a> () const</td></tr>
<tr class="separator:a9eb5909175ba0920d2e9cf728eaf12b4 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a607e0c0fc144784221052266b95d06b5 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind#a607e0c0fc144784221052266b95d06b5">SetOSFrame</a> (const <a class="el" href="structopen3d_1_1visualization_1_1gui_1_1_rec">Rect</a> &amp;r)</td></tr>
<tr class="separator:a607e0c0fc144784221052266b95d06b5 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f3d65fc8ed65608c78b25a1027d4a53 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind#a5f3d65fc8ed65608c78b25a1027d4a53">GetTitle</a> () const</td></tr>
<tr class="separator:a5f3d65fc8ed65608c78b25a1027d4a53 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2cb5bb83f9b9e1863f7ea4a0f8435bfb inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind#a2cb5bb83f9b9e1863f7ea4a0f8435bfb">SetTitle</a> (const char *title)</td></tr>
<tr class="separator:a2cb5bb83f9b9e1863f7ea4a0f8435bfb inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afc018b26cd55048873b8339ca43c290b inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind#afc018b26cd55048873b8339ca43c290b">SizeToFit</a> ()</td></tr>
<tr class="separator:afc018b26cd55048873b8339ca43c290b inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a85d68174772abe76d6612f11eb62b449 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind#a85d68174772abe76d6612f11eb62b449">SetSize</a> (const <a class="el" href="structopen3d_1_1visualization_1_1gui_1_1_siz">Size</a> &amp;<a class="el" href="io_2file__format_2_file_p_c_d_8cpp.375.delay#a439227feff9d7f55384e8780cfc2eb82">size</a>)</td></tr>
<tr class="memdesc:a85d68174772abe76d6612f11eb62b449 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the size of the window in pixels. Includes menubar on Linux.  <a href="classopen3d_1_1visualization_1_1gui_1_1_wind#a85d68174772abe76d6612f11eb62b449">More...</a><br /></td></tr>
<tr class="separator:a85d68174772abe76d6612f11eb62b449 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7fabfc12d1ee446885071a0c1a34de69 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structopen3d_1_1visualization_1_1gui_1_1_siz">Size</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind#a7fabfc12d1ee446885071a0c1a34de69">GetSize</a> () const</td></tr>
<tr class="separator:a7fabfc12d1ee446885071a0c1a34de69 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae87e9d12a77192bc304049b8a2098545 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structopen3d_1_1visualization_1_1gui_1_1_rec">Rect</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind#ae87e9d12a77192bc304049b8a2098545">GetContentRect</a> () const</td></tr>
<tr class="separator:ae87e9d12a77192bc304049b8a2098545 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae5c667fa3ab491307af73921a9bbe002 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind#ae5c667fa3ab491307af73921a9bbe002">GetScaling</a> () const</td></tr>
<tr class="memdesc:ae5c667fa3ab491307af73921a9bbe002 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the scaling factor from OS pixels to device pixels.  <a href="classopen3d_1_1visualization_1_1gui_1_1_wind#ae5c667fa3ab491307af73921a9bbe002">More...</a><br /></td></tr>
<tr class="separator:ae5c667fa3ab491307af73921a9bbe002 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa006c67d7ddeecd0ea2512b6a4eec422 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structopen3d_1_1visualization_1_1gui_1_1_poi">Point</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind#aa006c67d7ddeecd0ea2512b6a4eec422">GlobalToWindowCoord</a> (int global_x, int global_y)</td></tr>
<tr class="memdesc:aa006c67d7ddeecd0ea2512b6a4eec422 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the global point (in OS pixels) in window local coordinates.  <a href="classopen3d_1_1visualization_1_1gui_1_1_wind#aa006c67d7ddeecd0ea2512b6a4eec422">More...</a><br /></td></tr>
<tr class="separator:aa006c67d7ddeecd0ea2512b6a4eec422 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad3796f6e0bbb3f960541d289ff170f57 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind#ad3796f6e0bbb3f960541d289ff170f57">IsVisible</a> () const</td></tr>
<tr class="separator:ad3796f6e0bbb3f960541d289ff170f57 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8d5aed2d96812bcf207edbdabafa921f inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind#a8d5aed2d96812bcf207edbdabafa921f">Show</a> (bool vis=true)</td></tr>
<tr class="separator:a8d5aed2d96812bcf207edbdabafa921f inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa002b1e159e09c3f28aa9bc97a895db3 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind#aa002b1e159e09c3f28aa9bc97a895db3">Close</a> ()</td></tr>
<tr class="separator:aa002b1e159e09c3f28aa9bc97a895db3 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab85dbcf9e24062ae9f926b9bb401294f inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind#ab85dbcf9e24062ae9f926b9bb401294f">SetNeedsLayout</a> ()</td></tr>
<tr class="memdesc:ab85dbcf9e24062ae9f926b9bb401294f inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="mdescLeft">&#160;</td><td class="mdescRight">Instructs the window to relayout before the next draw.  <a href="classopen3d_1_1visualization_1_1gui_1_1_wind#ab85dbcf9e24062ae9f926b9bb401294f">More...</a><br /></td></tr>
<tr class="separator:ab85dbcf9e24062ae9f926b9bb401294f inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3b72118913badee39ce2b0da70bf1800 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind#a3b72118913badee39ce2b0da70bf1800">PostRedraw</a> ()</td></tr>
<tr class="separator:a3b72118913badee39ce2b0da70bf1800 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d26fb26d83fbf5083e86a4b724ee665 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind#a3d26fb26d83fbf5083e86a4b724ee665">SetTopmost</a> (bool topmost)</td></tr>
<tr class="separator:a3d26fb26d83fbf5083e86a4b724ee665 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa67a72f39b32dbfff74b7f18b253d904 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind#aa67a72f39b32dbfff74b7f18b253d904">RaiseToTop</a> () const</td></tr>
<tr class="separator:aa67a72f39b32dbfff74b7f18b253d904 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adaee5a52e6fce38c0afb50fb3a222413 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind#adaee5a52e6fce38c0afb50fb3a222413">IsActiveWindow</a> () const</td></tr>
<tr class="separator:adaee5a52e6fce38c0afb50fb3a222413 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae9c7adec324f2585c2b68c196aca4ed2 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind#ae9c7adec324f2585c2b68c196aca4ed2">SetFocusWidget</a> (<a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg">Widget</a> *w)</td></tr>
<tr class="memdesc:ae9c7adec324f2585c2b68c196aca4ed2 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets.  <a href="classopen3d_1_1visualization_1_1gui_1_1_wind#ae9c7adec324f2585c2b68c196aca4ed2">More...</a><br /></td></tr>
<tr class="separator:ae9c7adec324f2585c2b68c196aca4ed2 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5ddfa823d47672be602b6933740f9b26 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind#a5ddfa823d47672be602b6933740f9b26">AddChild</a> (std::shared_ptr&lt; <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg">Widget</a> &gt; w)</td></tr>
<tr class="separator:a5ddfa823d47672be602b6933740f9b26 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a19823529212ab514d905a4f5bf6b0df3 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind#a19823529212ab514d905a4f5bf6b0df3">SetOnMenuItemActivated</a> (<a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_menu-2#a752daf3b64834af5720b97cae883387c">Menu::ItemId</a> item_id, std::function&lt; void()&gt; <a class="el" href="_filament_renderer_8cpp.html#a7a0a25a91d8a936306270fd09f1a64a9">callback</a>)</td></tr>
<tr class="separator:a19823529212ab514d905a4f5bf6b0df3 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ade02b0c0678bcd95d76d9bec0e0b35c2 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind#ade02b0c0678bcd95d76d9bec0e0b35c2">SetOnTickEvent</a> (std::function&lt; bool()&gt; <a class="el" href="_filament_renderer_8cpp.html#a7a0a25a91d8a936306270fd09f1a64a9">callback</a>)</td></tr>
<tr class="separator:ade02b0c0678bcd95d76d9bec0e0b35c2 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5c267927c8980ccf293118aa04378ed4 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind#a5c267927c8980ccf293118aa04378ed4">SetOnClose</a> (std::function&lt; bool()&gt; <a class="el" href="_filament_renderer_8cpp.html#a7a0a25a91d8a936306270fd09f1a64a9">callback</a>)</td></tr>
<tr class="separator:a5c267927c8980ccf293118aa04378ed4 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a32eb155d7653dd14a985d0426d68b9a8 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind#a32eb155d7653dd14a985d0426d68b9a8">SetOnKeyEvent</a> (std::function&lt; bool(const <a class="el" href="structopen3d_1_1visualization_1_1gui_1_1_key">KeyEvent</a> &amp;)&gt; <a class="el" href="_filament_renderer_8cpp.html#a7a0a25a91d8a936306270fd09f1a64a9">callback</a>)</td></tr>
<tr class="separator:a32eb155d7653dd14a985d0426d68b9a8 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a772872f7a9533126f15c7ce347481db6 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind#a772872f7a9533126f15c7ce347481db6">ShowDialog</a> (std::shared_ptr&lt; <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_dial">Dialog</a> &gt; dlg)</td></tr>
<tr class="separator:a772872f7a9533126f15c7ce347481db6 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a27acf2f083e1fa3009861b282cda8158 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind#a27acf2f083e1fa3009861b282cda8158">CloseDialog</a> ()</td></tr>
<tr class="memdesc:a27acf2f083e1fa3009861b282cda8158 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="mdescLeft">&#160;</td><td class="mdescRight">Closes the dialog.  <a href="classopen3d_1_1visualization_1_1gui_1_1_wind#a27acf2f083e1fa3009861b282cda8158">More...</a><br /></td></tr>
<tr class="separator:a27acf2f083e1fa3009861b282cda8158 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a73896ee552da53936cfbea4c2280184c inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind#a73896ee552da53936cfbea4c2280184c">ShowMessageBox</a> (const char *title, const char *message)</td></tr>
<tr class="separator:a73896ee552da53936cfbea4c2280184c inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab86c7d24788f25b18ac563b4a40dd943 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind#ab86c7d24788f25b18ac563b4a40dd943">DestroyWindow</a> ()</td></tr>
<tr class="separator:ab86c7d24788f25b18ac563b4a40dd943 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae7da4baa08fd915a239e48dd377ce7f3 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind#ae7da4baa08fd915a239e48dd377ce7f3">OnMenuItemSelected</a> (<a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_menu-2#a752daf3b64834af5720b97cae883387c">Menu::ItemId</a> item_id)</td></tr>
<tr class="separator:ae7da4baa08fd915a239e48dd377ce7f3 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7baee2bf0eb47b00cc2ba5df2ea9e8c7 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind#a7baee2bf0eb47b00cc2ba5df2ea9e8c7">OnDragDropped</a> (const char *path)</td></tr>
<tr class="separator:a7baee2bf0eb47b00cc2ba5df2ea9e8c7 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af432f7908f5a39e6b88b5f8d0aa45415 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind#af432f7908f5a39e6b88b5f8d0aa45415">ShowMenu</a> (bool show)</td></tr>
<tr class="separator:af432f7908f5a39e6b88b5f8d0aa45415 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a83915fa1f6a45b9c90c3e3ed200a4363 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind#a83915fa1f6a45b9c90c3e3ed200a4363">GetMouseMods</a> () const</td></tr>
<tr class="separator:a83915fa1f6a45b9c90c3e3ed200a4363 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6be58dc728a7ba981a6194efdcce545d inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind#a6be58dc728a7ba981a6194efdcce545d">GetWebRTCUID</a> () const</td></tr>
<tr class="separator:a6be58dc728a7ba981a6194efdcce545d inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa09f4d00b60b42261e5a778a70b3102 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind#aaa09f4d00b60b42261e5a778a70b3102">OnDraw</a> ()</td></tr>
<tr class="separator:aaa09f4d00b60b42261e5a778a70b3102 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9a2779adccce9ad506a4527d74591840 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind#a9a2779adccce9ad506a4527d74591840">OnResize</a> ()</td></tr>
<tr class="separator:a9a2779adccce9ad506a4527d74591840 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a266f9ea2fcd434f9e17311f0777d38fb inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind#a266f9ea2fcd434f9e17311f0777d38fb">OnMouseEvent</a> (const <a class="el" href="structopen3d_1_1visualization_1_1gui_1_1_mou">MouseEvent</a> &amp;e)</td></tr>
<tr class="separator:a266f9ea2fcd434f9e17311f0777d38fb inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afd36546e37e14508cb9977977c404ab8 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind#afd36546e37e14508cb9977977c404ab8">OnKeyEvent</a> (const <a class="el" href="structopen3d_1_1visualization_1_1gui_1_1_key">KeyEvent</a> &amp;e)</td></tr>
<tr class="separator:afd36546e37e14508cb9977977c404ab8 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af53a050957b414d74aa50d8b5bbe87b3 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind#af53a050957b414d74aa50d8b5bbe87b3">OnTextInput</a> (const <a class="el" href="structopen3d_1_1visualization_1_1gui_1_1_tex">TextInputEvent</a> &amp;e)</td></tr>
<tr class="separator:af53a050957b414d74aa50d8b5bbe87b3 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad85785de0186f32b7aba2cb800acacab inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind#ad85785de0186f32b7aba2cb800acacab">OnTickEvent</a> (const <a class="el" href="structopen3d_1_1visualization_1_1gui_1_1_tic">TickEvent</a> &amp;e)</td></tr>
<tr class="separator:ad85785de0186f32b7aba2cb800acacab inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0ef9811d5a0545c2d9fe42ae57c8d27e inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">WindowSystem::OSWindow</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind#a0ef9811d5a0545c2d9fe42ae57c8d27e">GetOSWindow</a> () const</td></tr>
<tr class="separator:a0ef9811d5a0545c2d9fe42ae57c8d27e inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a71f47c923275e8d6b5f9d0ac5b39e9b4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1visualizer_1#a71f47c923275e8d6b5f9d0ac5b39e9b4">Layout</a> (const <a class="el" href="structopen3d_1_1visualization_1_1gui_1_1_lay">gui::LayoutContext</a> &amp;<a class="el" href="_window_8cpp.html#a0fc46c2cc73ed5bf25b870a781a2d18e">context</a>)</td></tr>
<tr class="separator:a71f47c923275e8d6b5f9d0ac5b39e9b4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_classopen3d_1_1visualization_1_1gui_1_1_window')"><img src="closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind">open3d::visualization::gui::Window</a></td></tr>
<tr class="memitem:a83588f114294155e981977869dc035a8 inherit pro_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="structopen3d_1_1visualization_1_1gui_1_1_siz">Size</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind#a83588f114294155e981977869dc035a8">CalcPreferredSize</a> ()</td></tr>
<tr class="separator:a83588f114294155e981977869dc035a8 inherit pro_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3fc0d916937105d77306a2219688ea87 inherit pro_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structopen3d_1_1visualization_1_1gui_1_1_lay">LayoutContext</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind#a3fc0d916937105d77306a2219688ea87">GetLayoutContext</a> ()</td></tr>
<tr class="separator:a3fc0d916937105d77306a2219688ea87 inherit pro_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa82798310ad57033b4ef50de0451609b inherit pro_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memItemLeft" align="right" valign="top">const std::vector&lt; std::shared_ptr&lt; <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg">Widget</a> &gt; &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind#aa82798310ad57033b4ef50de0451609b">GetChildren</a> () const</td></tr>
<tr class="separator:aa82798310ad57033b4ef50de0451609b inherit pro_methods_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_static_attribs_classopen3d_1_1visualization_1_1gui_1_1_window"><td colspan="2" onclick="javascript:toggleInherit('pub_static_attribs_classopen3d_1_1visualization_1_1gui_1_1_window')"><img src="closed.png" alt="-"/>&#160;Static Public Attributes inherited from <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind">open3d::visualization::gui::Window</a></td></tr>
<tr class="memitem:a8a03c6335e90b7d247a88bdbbf37daa0 inherit pub_static_attribs_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memItemLeft" align="right" valign="top">static const int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind#a8a03c6335e90b7d247a88bdbbf37daa0">FLAG_HIDDEN</a> = (1 &lt;&lt; 0)</td></tr>
<tr class="separator:a8a03c6335e90b7d247a88bdbbf37daa0 inherit pub_static_attribs_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae388830fe80ef73ef510712d9c6de8d0 inherit pub_static_attribs_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memItemLeft" align="right" valign="top">static const int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind#ae388830fe80ef73ef510712d9c6de8d0">FLAG_TOPMOST</a> = (1 &lt;&lt; 1)</td></tr>
<tr class="separator:ae388830fe80ef73ef510712d9c6de8d0 inherit pub_static_attribs_classopen3d_1_1visualization_1_1gui_1_1_window"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Member Enumeration Documentation</h2>
<a id="a7756fcbe2bed111d7b30ac90ca240f07"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7756fcbe2bed111d7b30ac90ca240f07">&#9670;&nbsp;</a></span>Shader</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="classopen3d_1_1visualization_1_1visualizer_1#a7756fcbe2bed111d7b30ac90ca240f07">open3d::visualization::visualizer::O3DVisualizer::Shader</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a7756fcbe2bed111d7b30ac90ca240f07a94e94133f4bdc1794c6b647b8ea134d0"></a>STANDARD&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a7756fcbe2bed111d7b30ac90ca240f07a73d294a17e5077669f3fe55f2fcb4c87"></a>UNLIT&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a7756fcbe2bed111d7b30ac90ca240f07aa50eb8a5845601666a9dd4504ebef51a"></a>NORMALS&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a7756fcbe2bed111d7b30ac90ca240f07aaa1780b4fcce2d5d9af13dc25386d111"></a>DEPTH&#160;</td><td class="fielddoc"></td></tr>
</table>

</div>
</div>
<a id="a38b40394122141e961cf2e39ce302b1a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a38b40394122141e961cf2e39ce302b1a">&#9670;&nbsp;</a></span>TickResult</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="classopen3d_1_1visualization_1_1visualizer_1#a38b40394122141e961cf2e39ce302b1a">open3d::visualization::visualizer::O3DVisualizer::TickResult</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a38b40394122141e961cf2e39ce302b1aa1b7e0a590f9d0878bcc4b725e2998cb1"></a>NO_CHANGE&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a38b40394122141e961cf2e39ce302b1aa8493617dd77e400daa81294925a52201"></a>REDRAW&#160;</td><td class="fielddoc"></td></tr>
</table>

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a3a313b189a3cd807af21d471d8b5c585"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3a313b189a3cd807af21d471d8b5c585">&#9670;&nbsp;</a></span>O3DVisualizer()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">open3d::visualization::visualizer::O3DVisualizer::O3DVisualizer </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>title</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>width</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>height</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a987e7bb8904a506d18e9aa6daeb2c2a9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a987e7bb8904a506d18e9aa6daeb2c2a9">&#9670;&nbsp;</a></span>~O3DVisualizer()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">open3d::visualization::visualizer::O3DVisualizer::~O3DVisualizer </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a4277e07d3232fd552fa6838ab42642aa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4277e07d3232fd552fa6838ab42642aa">&#9670;&nbsp;</a></span>Add3DLabel()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::visualizer::O3DVisualizer::Add3DLabel </td>
          <td>(</td>
          <td class="paramtype">const Eigen::Vector3f &amp;&#160;</td>
          <td class="paramname"><em>pos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>text</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Adds a label with text <code>text</code> at the 3D position <code>pos</code>. </p>

</div>
</div>
<a id="abed7c08cba2a5eb1de6d05ee4d376b77"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abed7c08cba2a5eb1de6d05ee4d376b77">&#9670;&nbsp;</a></span>AddAction()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::visualizer::O3DVisualizer::AddAction </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::function&lt; void(<a class="el" href="classopen3d_1_1visualization_1_1visualizer_1">O3DVisualizer</a> &amp;)&gt;&#160;</td>
          <td class="paramname"><em>callback</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="aa778359486d33e045d44d178cf4e77bb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa778359486d33e045d44d178cf4e77bb">&#9670;&nbsp;</a></span>AddGeometry() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::visualizer::O3DVisualizer::AddGeometry </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::shared_ptr&lt; <a class="el" href="classopen3d_1_1geometry_1_1_geometry3_d.402">geometry::Geometry3D</a> &gt;&#160;</td>
          <td class="paramname"><em>geom</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structopen3d_1_1visualization_1_1rendering_1-3">rendering::MaterialRecord</a> *&#160;</td>
          <td class="paramname"><em>material</em> = <code>nullptr</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>group</em> = <code>&quot;&quot;</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>time</em> = <code>0.0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>is_visible</em> = <code>true</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Adds a legacy geometry to the <a class="el" href="classopen3d_1_1visualization_1_1_visualizer" title="The main Visualizer class.">Visualizer</a>. </p>

</div>
</div>
<a id="ad3956122e5575fa0e8585d0807699706"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad3956122e5575fa0e8585d0807699706">&#9670;&nbsp;</a></span>AddGeometry() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::visualizer::O3DVisualizer::AddGeometry </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::shared_ptr&lt; <a class="el" href="structopen3d_1_1visualization_1_1rendering_1">rendering::TriangleMeshModel</a> &gt;&#160;</td>
          <td class="paramname"><em>tgeom</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structopen3d_1_1visualization_1_1rendering_1-3">rendering::MaterialRecord</a> *&#160;</td>
          <td class="paramname"><em>material</em> = <code>nullptr</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>group</em> = <code>&quot;&quot;</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>time</em> = <code>0.0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>is_visible</em> = <code>true</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Adds a triangle mesh model to the <a class="el" href="classopen3d_1_1visualization_1_1_visualizer" title="The main Visualizer class.">Visualizer</a>. </p>

</div>
</div>
<a id="ab205698ffe3e80928abbffa9dfb366f0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab205698ffe3e80928abbffa9dfb366f0">&#9670;&nbsp;</a></span>AddGeometry() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::visualizer::O3DVisualizer::AddGeometry </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::shared_ptr&lt; <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36">t::geometry::Geometry</a> &gt;&#160;</td>
          <td class="paramname"><em>tgeom</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structopen3d_1_1visualization_1_1rendering_1-3">rendering::MaterialRecord</a> *&#160;</td>
          <td class="paramname"><em>material</em> = <code>nullptr</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>group</em> = <code>&quot;&quot;</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>time</em> = <code>0.0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>is_visible</em> = <code>true</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Adds a t-geometry to the <a class="el" href="classopen3d_1_1visualization_1_1_visualizer" title="The main Visualizer class.">Visualizer</a>, only DrawableGeometries are supported. </p>

</div>
</div>
<a id="aeacf1e153dba17d1af5690a5323d5122"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeacf1e153dba17d1af5690a5323d5122">&#9670;&nbsp;</a></span>Clear3DLabels()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::visualizer::O3DVisualizer::Clear3DLabels </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Clears all 3D labels created with <code>Add3DLabel</code> </p>

</div>
</div>
<a id="a43fe3c8bfcf2bbf016dae155cb0584d3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a43fe3c8bfcf2bbf016dae155cb0584d3">&#9670;&nbsp;</a></span>EnableBasicMode()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::visualizer::O3DVisualizer::EnableBasicMode </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>enable</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a669363d0dd972d06d3f2bdabd4b59cf0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a669363d0dd972d06d3f2bdabd4b59cf0">&#9670;&nbsp;</a></span>EnableGroup()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::visualizer::O3DVisualizer::EnableGroup </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>group</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>enable</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ab425d7cbce7fa831568ee47f4d47ae6f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab425d7cbce7fa831568ee47f4d47ae6f">&#9670;&nbsp;</a></span>EnableSunFollowsCamera()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::visualizer::O3DVisualizer::EnableSunFollowsCamera </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>enable</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="aa150d73332e1a029d5be12f9312f1f99"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa150d73332e1a029d5be12f9312f1f99">&#9670;&nbsp;</a></span>EnableWireframeMode()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::visualizer::O3DVisualizer::EnableWireframeMode </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>enable</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a3c123a7fea340d6208a4ef218bddd1c3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3c123a7fea340d6208a4ef218bddd1c3">&#9670;&nbsp;</a></span>ExportCurrentImage()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::visualizer::O3DVisualizer::ExportCurrentImage </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>path</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a69ba0370946decd2888349b0f5a83641"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a69ba0370946decd2888349b0f5a83641">&#9670;&nbsp;</a></span>GetAnimationDuration()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double open3d::visualization::visualizer::O3DVisualizer::GetAnimationDuration </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ae5cb6d988e6a501905e59923d45a54a5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae5cb6d988e6a501905e59923d45a54a5">&#9670;&nbsp;</a></span>GetAnimationFrameDelay()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double open3d::visualization::visualizer::O3DVisualizer::GetAnimationFrameDelay </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="af535521f531276ead56e4023bca32944"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af535521f531276ead56e4023bca32944">&#9670;&nbsp;</a></span>GetAnimationTimeStep()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double open3d::visualization::visualizer::O3DVisualizer::GetAnimationTimeStep </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a5389ff4d267ea782038e742315308e0c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5389ff4d267ea782038e742315308e0c">&#9670;&nbsp;</a></span>GetCurrentTime()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double open3d::visualization::visualizer::O3DVisualizer::GetCurrentTime </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a8bb61fddc51dbc68a6b71b2bb87ff0fd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8bb61fddc51dbc68a6b71b2bb87ff0fd">&#9670;&nbsp;</a></span>GetGeometry()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structopen3d_1_1visualization_1_1visualizer_-2">O3DVisualizer::DrawObject</a> open3d::visualization::visualizer::O3DVisualizer::GetGeometry </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>name</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns <a class="el" href="classopen3d_1_1visualization_1_1_visualizer" title="The main Visualizer class.">Visualizer</a>'s internal <a class="el" href="structopen3d_1_1visualization_1_1visualizer_-2">DrawObject</a> for the named geometry. </p>

</div>
</div>
<a id="ac96408065fd9cf09c52f0cf7de257652"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac96408065fd9cf09c52f0cf7de257652">&#9670;&nbsp;</a></span>GetGeometryMaterial()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structopen3d_1_1visualization_1_1rendering_1-3">MaterialRecord</a> open3d::visualization::visualizer::O3DVisualizer::GetGeometryMaterial </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>name</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a0597f1d078e6da91d029ab2907a7f088"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0597f1d078e6da91d029ab2907a7f088">&#9670;&nbsp;</a></span>GetIsAnimating()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool open3d::visualization::visualizer::O3DVisualizer::GetIsAnimating </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a7ca5eff515cca24cfbd84cd7cf3f9b8a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7ca5eff515cca24cfbd84cd7cf3f9b8a">&#9670;&nbsp;</a></span>GetScene()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-2">Open3DScene</a> * open3d::visualization::visualizer::O3DVisualizer::GetScene </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a2bd6a0b4a5cd95853ca800638f87845a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2bd6a0b4a5cd95853ca800638f87845a">&#9670;&nbsp;</a></span>GetSelectionSets()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt; <a class="el" href="classopen3d_1_1visualization_1_1visualizer_1-2#a44e9db20f36b22521d9e75d6c4863e80">O3DVisualizerSelections::SelectionSet</a> &gt; open3d::visualization::visualizer::O3DVisualizer::GetSelectionSets </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ac2d2130eb0820ab8c1013c9ef43ec51f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac2d2130eb0820ab8c1013c9ef43ec51f">&#9670;&nbsp;</a></span>GetUIState()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structopen3d_1_1visualization_1_1visualizer_-3">O3DVisualizer::UIState</a> open3d::visualization::visualizer::O3DVisualizer::GetUIState </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a71f47c923275e8d6b5f9d0ac5b39e9b4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a71f47c923275e8d6b5f9d0ac5b39e9b4">&#9670;&nbsp;</a></span>Layout()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::visualizer::O3DVisualizer::Layout </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structopen3d_1_1visualization_1_1gui_1_1_lay">gui::LayoutContext</a> &amp;&#160;</td>
          <td class="paramname"><em>context</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Lays out all the widgets in the window. If all children of the window are layouts, this function does not need to be overridden. </p>

<p>Reimplemented from <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind#a77610f617a9a81a80c8a4cae24448baf">open3d::visualization::gui::Window</a>.</p>

</div>
</div>
<a id="a1ad872c22b9d6d89192e8d15d352b8f4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1ad872c22b9d6d89192e8d15d352b8f4">&#9670;&nbsp;</a></span>ModifyGeometryMaterial()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::visualizer::O3DVisualizer::ModifyGeometryMaterial </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structopen3d_1_1visualization_1_1rendering_1-3">rendering::MaterialRecord</a> *&#160;</td>
          <td class="paramname"><em>material</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="afb24e62af01e9f6d56a6f113b8dd4a17"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afb24e62af01e9f6d56a6f113b8dd4a17">&#9670;&nbsp;</a></span>RemoveGeometry()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::visualizer::O3DVisualizer::RemoveGeometry </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>name</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Removes the named geometry from the <a class="el" href="classopen3d_1_1visualization_1_1_visualizer" title="The main Visualizer class.">Visualizer</a>. </p>

</div>
</div>
<a id="af798873ca13b2b97ecd535338f9d2d95"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af798873ca13b2b97ecd535338f9d2d95">&#9670;&nbsp;</a></span>ResetCameraToDefault()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::visualizer::O3DVisualizer::ResetCameraToDefault </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ae6498c14ea52050705ad5e91d2aece62"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae6498c14ea52050705ad5e91d2aece62">&#9670;&nbsp;</a></span>SetAnimating()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::visualizer::O3DVisualizer::SetAnimating </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>is_animating</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="aa1a525fa4da8402949992793ba3267eb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa1a525fa4da8402949992793ba3267eb">&#9670;&nbsp;</a></span>SetAnimationDuration()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::visualizer::O3DVisualizer::SetAnimationDuration </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>sec</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a665e45befb3fc0590f453f073a07d887"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a665e45befb3fc0590f453f073a07d887">&#9670;&nbsp;</a></span>SetAnimationFrameDelay()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::visualizer::O3DVisualizer::SetAnimationFrameDelay </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>secs</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a380d7a7829663ecd70b5b7cf4844612c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a380d7a7829663ecd70b5b7cf4844612c">&#9670;&nbsp;</a></span>SetAnimationTimeStep()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::visualizer::O3DVisualizer::SetAnimationTimeStep </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>time_step</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a638604bd92bdea9dc403fec3936a094f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a638604bd92bdea9dc403fec3936a094f">&#9670;&nbsp;</a></span>SetBackground()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::visualizer::O3DVisualizer::SetBackground </td>
          <td>(</td>
          <td class="paramtype">const Eigen::Vector4f &amp;&#160;</td>
          <td class="paramname"><em>bg_color</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::shared_ptr&lt; <a class="el" href="classopen3d_1_1geometry_1_1_image.406.delaye">geometry::Image</a> &gt;&#160;</td>
          <td class="paramname"><em>bg_image</em> = <code>nullptr</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a5125b5fabf2dda63e945066acfc4ca9f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5125b5fabf2dda63e945066acfc4ca9f">&#9670;&nbsp;</a></span>SetCurrentTime()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::visualizer::O3DVisualizer::SetCurrentTime </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>t</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a0bbb2c49c46186acfc587a627dfce300"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0bbb2c49c46186acfc587a627dfce300">&#9670;&nbsp;</a></span>SetGroundPlane()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::visualizer::O3DVisualizer::SetGroundPlane </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34#a387adee0ccffd4754260c6809d03f137">rendering::Scene::GroundPlane</a>&#160;</td>
          <td class="paramname"><em>plane</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a7248914241752629034b8856df05c424"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7248914241752629034b8856df05c424">&#9670;&nbsp;</a></span>SetIBL()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::visualizer::O3DVisualizer::SetIBL </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>path</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a59d691758ca571500d426d5f49165669"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a59d691758ca571500d426d5f49165669">&#9670;&nbsp;</a></span>SetIBLIntensity()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::visualizer::O3DVisualizer::SetIBLIntensity </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>intensity</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ab63bda768ed8d7e67292168a1fdc81a2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab63bda768ed8d7e67292168a1fdc81a2">&#9670;&nbsp;</a></span>SetLineWidth()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::visualizer::O3DVisualizer::SetLineWidth </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>line_width</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a2f9968434f79988fd5f725829e54dfd6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2f9968434f79988fd5f725829e54dfd6">&#9670;&nbsp;</a></span>SetMouseMode()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::visualizer::O3DVisualizer::SetMouseMode </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_scen#ad63a3fcb2e32de1c0ad0eb5104e1d5cb">gui::SceneWidget::Controls</a>&#160;</td>
          <td class="paramname"><em>mode</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="aea4a3a6d936f9ac00136a9d76357f832"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aea4a3a6d936f9ac00136a9d76357f832">&#9670;&nbsp;</a></span>SetOnAnimationFrame()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::visualizer::O3DVisualizer::SetOnAnimationFrame </td>
          <td>(</td>
          <td class="paramtype">std::function&lt; void(<a class="el" href="classopen3d_1_1visualization_1_1visualizer_1">O3DVisualizer</a> &amp;, double)&gt;&#160;</td>
          <td class="paramname"><em>cb</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a813aef559e4badd59c065d556fb5fab9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a813aef559e4badd59c065d556fb5fab9">&#9670;&nbsp;</a></span>SetOnAnimationTick()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::visualizer::O3DVisualizer::SetOnAnimationTick </td>
          <td>(</td>
          <td class="paramtype">std::function&lt; <a class="el" href="classopen3d_1_1visualization_1_1visualizer_1#a38b40394122141e961cf2e39ce302b1a">TickResult</a>(<a class="el" href="classopen3d_1_1visualization_1_1visualizer_1">O3DVisualizer</a> &amp;, double, double)&gt;&#160;</td>
          <td class="paramname"><em>cb</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="addae7f63b4f353b2e64e78e3fa9fe05a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#addae7f63b4f353b2e64e78e3fa9fe05a">&#9670;&nbsp;</a></span>SetPointSize()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::visualizer::O3DVisualizer::SetPointSize </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>point_size</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a29e83e83764f1ff8e21cd76ba6e12d3f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a29e83e83764f1ff8e21cd76ba6e12d3f">&#9670;&nbsp;</a></span>SetShader()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::visualizer::O3DVisualizer::SetShader </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1visualization_1_1visualizer_1#a7756fcbe2bed111d7b30ac90ca240f07">Shader</a>&#160;</td>
          <td class="paramname"><em>shader</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a7f649ceaad1e867bd08024af364b7e44"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7f649ceaad1e867bd08024af364b7e44">&#9670;&nbsp;</a></span>SetupCamera() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::visualizer::O3DVisualizer::SetupCamera </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1camera_1_1_pinhole_camera_int">camera::PinholeCameraIntrinsic</a> &amp;&#160;</td>
          <td class="paramname"><em>intrinsic</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const Eigen::Matrix4d &amp;&#160;</td>
          <td class="paramname"><em>extrinsic</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="aa4e5a8d95ead189876ae52b97ba0e053"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa4e5a8d95ead189876ae52b97ba0e053">&#9670;&nbsp;</a></span>SetupCamera() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::visualizer::O3DVisualizer::SetupCamera </td>
          <td>(</td>
          <td class="paramtype">const Eigen::Matrix3d &amp;&#160;</td>
          <td class="paramname"><em>intrinsic</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const Eigen::Matrix4d &amp;&#160;</td>
          <td class="paramname"><em>extrinsic</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>intrinsic_width_px</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>intrinsic_height_px</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a33212fd6eae8f116359db72ce3d1ec24"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a33212fd6eae8f116359db72ce3d1ec24">&#9670;&nbsp;</a></span>SetupCamera() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::visualizer::O3DVisualizer::SetupCamera </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fov</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const Eigen::Vector3f &amp;&#160;</td>
          <td class="paramname"><em>center</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const Eigen::Vector3f &amp;&#160;</td>
          <td class="paramname"><em>eye</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const Eigen::Vector3f &amp;&#160;</td>
          <td class="paramname"><em>up</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a8f054e2af86163c8568387575d930cb3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8f054e2af86163c8568387575d930cb3">&#9670;&nbsp;</a></span>ShowAxes()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::visualizer::O3DVisualizer::ShowAxes </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>show</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a1a2dfe6d41d0d5a2ff36813c73cc89a5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1a2dfe6d41d0d5a2ff36813c73cc89a5">&#9670;&nbsp;</a></span>ShowGeometry()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::visualizer::O3DVisualizer::ShowGeometry </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>show</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Show/hide the named geometry. </p>

</div>
</div>
<a id="a858944fe4822e001a5e015fc0a3dbeba"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a858944fe4822e001a5e015fc0a3dbeba">&#9670;&nbsp;</a></span>ShowGround()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::visualizer::O3DVisualizer::ShowGround </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>show</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ae1dd2c9f3870fd473d7973b2a59b2c33"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae1dd2c9f3870fd473d7973b2a59b2c33">&#9670;&nbsp;</a></span>ShowSettings()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::visualizer::O3DVisualizer::ShowSettings </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>show</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a6c42a4ef57ff8cac4b5ae52959df01b8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6c42a4ef57ff8cac4b5ae52959df01b8">&#9670;&nbsp;</a></span>ShowSkybox()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::visualizer::O3DVisualizer::ShowSkybox </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>show</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ab4e7207465f3c83c1ff1225df077e0ae"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab4e7207465f3c83c1ff1225df077e0ae">&#9670;&nbsp;</a></span>StartRPCInterface()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::visualizer::O3DVisualizer::StartRPCInterface </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>address</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>timeout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Starts the RPC interface. See io/rpc/ZMQReceiver for the parameters. </p>

</div>
</div>
<a id="a7900503c76e5ab18c84f0af82fcdac83"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7900503c76e5ab18c84f0af82fcdac83">&#9670;&nbsp;</a></span>StopRPCInterface()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::visualizer::O3DVisualizer::StopRPCInterface </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="add0cbcbdb29666e1d81d9e9257afab5c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#add0cbcbdb29666e1d81d9e9257afab5c">&#9670;&nbsp;</a></span>UpdateGeometry()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::visualizer::O3DVisualizer::UpdateGeometry </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::shared_ptr&lt; <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36">t::geometry::Geometry</a> &gt;&#160;</td>
          <td class="paramname"><em>tgeom</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>update_flags</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Updates <code>update_flags</code> attributes of named geometry with the matching attributes from <code>tgeom</code> </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/runner/work/Open3D/Open3D/cpp/open3d/visualization/visualizer/<a class="el" href="_o3_d_visualizer_8h_source.html">O3DVisualizer.h (9238339 (Tue Mar 14 18:49:09 2023 -0700))</a></li>
<li>/home/runner/work/Open3D/Open3D/cpp/open3d/visualization/visualizer/<a class="el" href="_o3_d_visualizer_8cpp.html">O3DVisualizer.cpp (9238339 (Tue Mar 14 18:49:09 2023 -0700))</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1
</small></address>
</body>

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/classopen3d_1_1visualization_1_1visualizer_1_1_o3_d_visualizer.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 11:01:47 GMT -->
</html>
