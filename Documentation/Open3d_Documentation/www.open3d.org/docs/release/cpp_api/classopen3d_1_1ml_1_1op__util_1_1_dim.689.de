<!-- HTML header for doxygen 1.8.20-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/classopen3d_1_1ml_1_1op__util_1_1_dim.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 11:00:38 GMT -->
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Open3D (C++ API): open3d::ml::op_util::Dim Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js", "TeX/AMSmath.html", "TeX/AMSsymbols.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="../../../../cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-3TQPKGV6Z3"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());
  gtag('config', 'G-3TQPKGV6Z3');
</script>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="open3d_logo.ico"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Open3D (C++ API)
   &#160;<span id="projectnumber">0.17.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.html');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.html','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceopen3d.html">open3d</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1ml.html">ml</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1ml_1_1op__util.43e.delaye">op_util</a></li><li class="navelem"><a class="el" href="classopen3d_1_1ml_1_1op__util_1_1_dim.689.de">Dim</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">open3d::ml::op_util::Dim Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Class for dimensions for which the value should be inferred.  
 <a href="classopen3d_1_1ml_1_1op__util_1_1_dim.689.de#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_shape_checking_8h_source.html">ShapeChecking.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a3035c327aa569c71d68ab71b674493d1"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1ml_1_1op__util_1_1_dim.689.de#a3035c327aa569c71d68ab71b674493d1">Dim</a> ()</td></tr>
<tr class="separator:a3035c327aa569c71d68ab71b674493d1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a40e78e854ae40067924fc74c34b3bc7b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1ml_1_1op__util_1_1_dim.689.de#a40e78e854ae40067924fc74c34b3bc7b">Dim</a> (const std::string &amp;<a class="el" href="_o3_d_visualizer_8cpp.html#a9b45b3e13bd9167aab02e17e08916231">name</a>)</td></tr>
<tr class="separator:a40e78e854ae40067924fc74c34b3bc7b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ace670c58ce65d58c9b6368bcaa2ee745"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1ml_1_1op__util_1_1_dim.689.de#ace670c58ce65d58c9b6368bcaa2ee745">Dim</a> (int64_t <a class="el" href="classopen3d_1_1ml_1_1op__util_1_1_dim.689.de#a865554087e39cf3f8ef5bc731a932024">value</a>, const std::string &amp;<a class="el" href="_o3_d_visualizer_8cpp.html#a9b45b3e13bd9167aab02e17e08916231">name</a>=&quot;&quot;)</td></tr>
<tr class="separator:ace670c58ce65d58c9b6368bcaa2ee745"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2feace313556e53660ae71bca25dc90d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1ml_1_1op__util_1_1_dim.689.de#a2feace313556e53660ae71bca25dc90d">Dim</a> (const <a class="el" href="classopen3d_1_1ml_1_1op__util_1_1_dim.689.de">Dim</a> &amp;other)</td></tr>
<tr class="separator:a2feace313556e53660ae71bca25dc90d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a45d67fdc92f8d2bb40286439f02d5cbf"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1ml_1_1op__util_1_1_dim.689.de#a45d67fdc92f8d2bb40286439f02d5cbf">~Dim</a> ()</td></tr>
<tr class="separator:a45d67fdc92f8d2bb40286439f02d5cbf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a96fd701b2e59aed16d73858fab201320"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1ml_1_1op__util_1_1_dim.689.de">Dim</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1ml_1_1op__util_1_1_dim.689.de#a96fd701b2e59aed16d73858fab201320">operator=</a> (const <a class="el" href="classopen3d_1_1ml_1_1op__util_1_1_dim.689.de">Dim</a> &amp;)=delete</td></tr>
<tr class="separator:a96fd701b2e59aed16d73858fab201320"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a865554087e39cf3f8ef5bc731a932024"><td class="memItemLeft" align="right" valign="top">int64_t &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1ml_1_1op__util_1_1_dim.689.de#a865554087e39cf3f8ef5bc731a932024">value</a> ()</td></tr>
<tr class="separator:a865554087e39cf3f8ef5bc731a932024"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4214d113facb7f9fa8d2b60446bbd550"><td class="memItemLeft" align="right" valign="top">bool &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1ml_1_1op__util_1_1_dim.689.de#a4214d113facb7f9fa8d2b60446bbd550">constant</a> ()</td></tr>
<tr class="separator:a4214d113facb7f9fa8d2b60446bbd550"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1226572c45d8804b699c6ccac3a737f5"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1ml_1_1op__util_1_1_dim.689.de#a1226572c45d8804b699c6ccac3a737f5">assign</a> (int64_t a)</td></tr>
<tr class="separator:a1226572c45d8804b699c6ccac3a737f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac936cd464adf6791ec8d0000bafc8f26"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1ml_1_1op__util_1_1_dim.689.de#ac936cd464adf6791ec8d0000bafc8f26">ToString</a> (bool show_value=true)</td></tr>
<tr class="separator:ac936cd464adf6791ec8d0000bafc8f26"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Class for dimensions for which the value should be inferred. </p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a3035c327aa569c71d68ab71b674493d1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3035c327aa569c71d68ab71b674493d1">&#9670;&nbsp;</a></span>Dim() <span class="overload">[1/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">open3d::ml::op_util::Dim::Dim </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">explicit</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a40e78e854ae40067924fc74c34b3bc7b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a40e78e854ae40067924fc74c34b3bc7b">&#9670;&nbsp;</a></span>Dim() <span class="overload">[2/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">open3d::ml::op_util::Dim::Dim </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>name</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">explicit</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ace670c58ce65d58c9b6368bcaa2ee745"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ace670c58ce65d58c9b6368bcaa2ee745">&#9670;&nbsp;</a></span>Dim() <span class="overload">[3/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">open3d::ml::op_util::Dim::Dim </td>
          <td>(</td>
          <td class="paramtype">int64_t&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>name</em> = <code>&quot;&quot;</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a2feace313556e53660ae71bca25dc90d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2feace313556e53660ae71bca25dc90d">&#9670;&nbsp;</a></span>Dim() <span class="overload">[4/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">open3d::ml::op_util::Dim::Dim </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1ml_1_1op__util_1_1_dim.689.de">Dim</a> &amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a45d67fdc92f8d2bb40286439f02d5cbf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a45d67fdc92f8d2bb40286439f02d5cbf">&#9670;&nbsp;</a></span>~Dim()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">open3d::ml::op_util::Dim::~Dim </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a1226572c45d8804b699c6ccac3a737f5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1226572c45d8804b699c6ccac3a737f5">&#9670;&nbsp;</a></span>assign()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool open3d::ml::op_util::Dim::assign </td>
          <td>(</td>
          <td class="paramtype">int64_t&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>tries to assign a value to the <a class="el" href="classopen3d_1_1ml_1_1op__util_1_1_dim.689.de" title="Class for dimensions for which the value should be inferred.">Dim</a> if not marked as constant and compares the <a class="el" href="classopen3d_1_1ml_1_1op__util_1_1_dim.689.de" title="Class for dimensions for which the value should be inferred.">Dim</a> value with the value to be assigned. </p>

</div>
</div>
<a id="a4214d113facb7f9fa8d2b60446bbd550"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4214d113facb7f9fa8d2b60446bbd550">&#9670;&nbsp;</a></span>constant()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool&amp; open3d::ml::op_util::Dim::constant </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a96fd701b2e59aed16d73858fab201320"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a96fd701b2e59aed16d73858fab201320">&#9670;&nbsp;</a></span>operator=()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1ml_1_1op__util_1_1_dim.689.de">Dim</a>&amp; open3d::ml::op_util::Dim::operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1ml_1_1op__util_1_1_dim.689.de">Dim</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ac936cd464adf6791ec8d0000bafc8f26"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac936cd464adf6791ec8d0000bafc8f26">&#9670;&nbsp;</a></span>ToString()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::string open3d::ml::op_util::Dim::ToString </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>show_value</em> = <code>true</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a865554087e39cf3f8ef5bc731a932024"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a865554087e39cf3f8ef5bc731a932024">&#9670;&nbsp;</a></span>value()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int64_t&amp; open3d::ml::op_util::Dim::value </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>/home/runner/work/Open3D/Open3D/cpp/open3d/ml/<a class="el" href="_shape_checking_8h_source.html">ShapeChecking.h (9238339 (Tue Mar 14 18:49:09 2023 -0700))</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1
</small></address>
</body>

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/classopen3d_1_1ml_1_1op__util_1_1_dim.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 11:00:38 GMT -->
</html>
