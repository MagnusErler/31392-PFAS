<!-- HTML header for doxygen 1.8.20-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/classopen3d_1_1core_1_1_small_vector.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 10:55:23 GMT -->
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Open3D (C++ API): open3d::core::SmallVector&lt; T, N &gt; Class Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js", "TeX/AMSmath.html", "TeX/AMSsymbols.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="../../../../cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-3TQPKGV6Z3"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());
  gtag('config', 'G-3TQPKGV6Z3');
</script>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="open3d_logo.ico"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Open3D (C++ API)
   &#160;<span id="projectnumber">0.17.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.html');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.html','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceopen3d.html">open3d</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1core.html">core</a></li><li class="navelem"><a class="el" href="classopen3d_1_1core_1_1_small_vector.3be.del">SmallVector</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">open3d::core::SmallVector&lt; T, N &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_small_vector_8h_source.html">SmallVector.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for open3d::core::SmallVector&lt; T, N &gt;:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classopen3d_1_1core_1_1_small_vector.58e.del" usemap="#open3d::core::SmallVector_3C_20T_2C_20N_20_3E_map" alt=""/>
  <map id="open3d::core::SmallVector_3C_20T_2C_20N_20_3E_map" name="open3d::core::SmallVector_3C_20T_2C_20N_20_3E_map">
<area href="classopen3d_1_1core_1_1_small_vector_impl.3b" alt="open3d::core::SmallVectorImpl&lt; T &gt;" shape="rect" coords="0,168,560,192"/>
<area href="structopen3d_1_1core_1_1_small_vector_storag" alt="open3d::core::SmallVectorStorage&lt; T, CalculateSmallVectorDefaultInlinedElements&lt; T &gt;::value &gt;" shape="rect" coords="570,168,1130,192"/>
<area href="classopen3d_1_1core_1_1_small_vector_templat-2" alt="open3d::core::SmallVectorTemplateBase&lt; T, bool &gt;" shape="rect" coords="0,112,560,136"/>
<area href="classopen3d_1_1core_1_1_small_vector_templat" alt="open3d::core::SmallVectorTemplateCommon&lt; T, typename &gt;" shape="rect" coords="0,56,560,80"/>
<area href="classopen3d_1_1core_1_1_small_vector_base.3b" alt="open3d::core::SmallVectorBase&lt; SmallVectorSizeType&lt; T &gt; &gt;" shape="rect" coords="0,0,560,24"/>
  </map>
</div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a58c83620c18fa1ec8adcc2c1cf3d79dd"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector.3be.del#a58c83620c18fa1ec8adcc2c1cf3d79dd">SmallVector</a> ()</td></tr>
<tr class="separator:a58c83620c18fa1ec8adcc2c1cf3d79dd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6bb7c023eee76b73f78e6245ef1eddfb"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector.3be.del#a6bb7c023eee76b73f78e6245ef1eddfb">~SmallVector</a> ()</td></tr>
<tr class="separator:a6bb7c023eee76b73f78e6245ef1eddfb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1637c37c39d1c04da634ccc2ee4d0f65"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector.3be.del#a1637c37c39d1c04da634ccc2ee4d0f65">SmallVector</a> (size_t <a class="el" href="classopen3d_1_1core_1_1_small_vector_base.3b#ab57b4e9b18f93d30eb0502fe4949e38e">Size</a>, const T &amp;Value=T())</td></tr>
<tr class="separator:a1637c37c39d1c04da634ccc2ee4d0f65"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af589850f8fbde8ff76a9f6c6c3537058"><td class="memTemplParams" colspan="2">template&lt;typename ItTy , typename  = std::enable_if_t&lt;std::is_convertible&lt;                      typename std::iterator_traits&lt;ItTy&gt;::iterator_category,                      std::input_iterator_tag&gt;::value&gt;&gt; </td></tr>
<tr class="memitem:af589850f8fbde8ff76a9f6c6c3537058"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector.3be.del#af589850f8fbde8ff76a9f6c6c3537058">SmallVector</a> (ItTy S, ItTy E)</td></tr>
<tr class="separator:af589850f8fbde8ff76a9f6c6c3537058"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7aedf80cb9e74bdaad1c4060f4b138ed"><td class="memTemplParams" colspan="2">template&lt;typename RangeTy &gt; </td></tr>
<tr class="memitem:a7aedf80cb9e74bdaad1c4060f4b138ed"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector.3be.del#a7aedf80cb9e74bdaad1c4060f4b138ed">SmallVector</a> (const <a class="el" href="classopen3d_1_1core_1_1iterator__range.3b4.d">iterator_range</a>&lt; RangeTy &gt; &amp;R)</td></tr>
<tr class="separator:a7aedf80cb9e74bdaad1c4060f4b138ed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a88558b7edcc9d03ea43feb9057c809ac"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector.3be.del#a88558b7edcc9d03ea43feb9057c809ac">SmallVector</a> (std::initializer_list&lt; T &gt; IL)</td></tr>
<tr class="separator:a88558b7edcc9d03ea43feb9057c809ac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2d40675be38b7389ec6ef3d51cce041d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector.3be.del#a2d40675be38b7389ec6ef3d51cce041d">SmallVector</a> (const <a class="el" href="classopen3d_1_1core_1_1_small_vector.3be.del">SmallVector</a> &amp;RHS)</td></tr>
<tr class="separator:a2d40675be38b7389ec6ef3d51cce041d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a941a92780f88480afaf61a816c311d93"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1core_1_1_small_vector.3be.del">SmallVector</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector.3be.del#a941a92780f88480afaf61a816c311d93">operator=</a> (const <a class="el" href="classopen3d_1_1core_1_1_small_vector.3be.del">SmallVector</a> &amp;RHS)</td></tr>
<tr class="separator:a941a92780f88480afaf61a816c311d93"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac0adc97ce72a5d8d27590a848a1d6604"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector.3be.del#ac0adc97ce72a5d8d27590a848a1d6604">SmallVector</a> (<a class="el" href="classopen3d_1_1core_1_1_small_vector.3be.del">SmallVector</a> &amp;&amp;RHS)</td></tr>
<tr class="separator:ac0adc97ce72a5d8d27590a848a1d6604"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4b1d76104d789a818814e3041b3b3860"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector.3be.del#a4b1d76104d789a818814e3041b3b3860">SmallVector</a> (<a class="el" href="classopen3d_1_1core_1_1_small_vector_impl.3b">SmallVectorImpl</a>&lt; T &gt; &amp;&amp;RHS)</td></tr>
<tr class="separator:a4b1d76104d789a818814e3041b3b3860"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a19f5ab596c7bedffc76d74c778e58517"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1core_1_1_small_vector.3be.del">SmallVector</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector.3be.del#a19f5ab596c7bedffc76d74c778e58517">operator=</a> (<a class="el" href="classopen3d_1_1core_1_1_small_vector.3be.del">SmallVector</a> &amp;&amp;RHS)</td></tr>
<tr class="separator:a19f5ab596c7bedffc76d74c778e58517"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2a77fd916e9af40897c814906bdc23f4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1core_1_1_small_vector.3be.del">SmallVector</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector.3be.del#a2a77fd916e9af40897c814906bdc23f4">operator=</a> (<a class="el" href="classopen3d_1_1core_1_1_small_vector_impl.3b">SmallVectorImpl</a>&lt; T &gt; &amp;&amp;RHS)</td></tr>
<tr class="separator:a2a77fd916e9af40897c814906bdc23f4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa842ef981f4abceffd0f3c90b249e760"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1core_1_1_small_vector.3be.del">SmallVector</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector.3be.del#aa842ef981f4abceffd0f3c90b249e760">operator=</a> (std::initializer_list&lt; T &gt; IL)</td></tr>
<tr class="separator:aa842ef981f4abceffd0f3c90b249e760"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classopen3d_1_1core_1_1_small_vector_impl"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classopen3d_1_1core_1_1_small_vector_impl')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classopen3d_1_1core_1_1_small_vector_impl.3b">open3d::core::SmallVectorImpl&lt; T &gt;</a></td></tr>
<tr class="memitem:a4a5c7b2c2f5307328803972a0fd130c1 inherit pub_methods_classopen3d_1_1core_1_1_small_vector_impl"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_impl.3b#a4a5c7b2c2f5307328803972a0fd130c1">SmallVectorImpl</a> (const <a class="el" href="classopen3d_1_1core_1_1_small_vector_impl.3b">SmallVectorImpl</a> &amp;)=delete</td></tr>
<tr class="separator:a4a5c7b2c2f5307328803972a0fd130c1 inherit pub_methods_classopen3d_1_1core_1_1_small_vector_impl"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab7d943124756b556723b0ff8a1506936 inherit pub_methods_classopen3d_1_1core_1_1_small_vector_impl"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_impl.3b#ab7d943124756b556723b0ff8a1506936">~SmallVectorImpl</a> ()</td></tr>
<tr class="separator:ab7d943124756b556723b0ff8a1506936 inherit pub_methods_classopen3d_1_1core_1_1_small_vector_impl"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ade8cac28f2a1b980d1ae66d9ae686675 inherit pub_methods_classopen3d_1_1core_1_1_small_vector_impl"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_impl.3b#ade8cac28f2a1b980d1ae66d9ae686675">clear</a> ()</td></tr>
<tr class="separator:ade8cac28f2a1b980d1ae66d9ae686675 inherit pub_methods_classopen3d_1_1core_1_1_small_vector_impl"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2bb6e257df99cd6c91a4442a68ed0dcf inherit pub_methods_classopen3d_1_1core_1_1_small_vector_impl"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_impl.3b#a2bb6e257df99cd6c91a4442a68ed0dcf">resize</a> (<a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#a39583ddacc074f6e633b204aaa714647">size_type</a> N)</td></tr>
<tr class="separator:a2bb6e257df99cd6c91a4442a68ed0dcf inherit pub_methods_classopen3d_1_1core_1_1_small_vector_impl"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1e4811d5f6dd1eb2b02164d69c5e4260 inherit pub_methods_classopen3d_1_1core_1_1_small_vector_impl"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_impl.3b#a1e4811d5f6dd1eb2b02164d69c5e4260">resize_for_overwrite</a> (<a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#a39583ddacc074f6e633b204aaa714647">size_type</a> N)</td></tr>
<tr class="memdesc:a1e4811d5f6dd1eb2b02164d69c5e4260 inherit pub_methods_classopen3d_1_1core_1_1_small_vector_impl"><td class="mdescLeft">&#160;</td><td class="mdescRight">Like resize, but T is POD, the new values won't be initialized.  <a href="classopen3d_1_1core_1_1_small_vector_impl.3b#a1e4811d5f6dd1eb2b02164d69c5e4260">More...</a><br /></td></tr>
<tr class="separator:a1e4811d5f6dd1eb2b02164d69c5e4260 inherit pub_methods_classopen3d_1_1core_1_1_small_vector_impl"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6fcf972b393857db1b7334830ce6a894 inherit pub_methods_classopen3d_1_1core_1_1_small_vector_impl"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_impl.3b#a6fcf972b393857db1b7334830ce6a894">truncate</a> (<a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#a39583ddacc074f6e633b204aaa714647">size_type</a> N)</td></tr>
<tr class="memdesc:a6fcf972b393857db1b7334830ce6a894 inherit pub_methods_classopen3d_1_1core_1_1_small_vector_impl"><td class="mdescLeft">&#160;</td><td class="mdescRight">Like resize, but requires that <code>N</code> is less than <em><a class="el" href="classopen3d_1_1core_1_1_small_vector_base.3b#a2dc834f4d9a8e79f9ed046ea4fc1a140">size()</a></em>.  <a href="classopen3d_1_1core_1_1_small_vector_impl.3b#a6fcf972b393857db1b7334830ce6a894">More...</a><br /></td></tr>
<tr class="separator:a6fcf972b393857db1b7334830ce6a894 inherit pub_methods_classopen3d_1_1core_1_1_small_vector_impl"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adf06ff5ad99bee0e306275e31baa3947 inherit pub_methods_classopen3d_1_1core_1_1_small_vector_impl"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_impl.3b#adf06ff5ad99bee0e306275e31baa3947">resize</a> (<a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#a39583ddacc074f6e633b204aaa714647">size_type</a> N, <a class="el" href="classopen3d_1_1core_1_1_small_vector_templat-2#a79e24db58d4fd1d11a8315ad5a7c97cf">ValueParamT</a> NV)</td></tr>
<tr class="separator:adf06ff5ad99bee0e306275e31baa3947 inherit pub_methods_classopen3d_1_1core_1_1_small_vector_impl"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a727f94550741f1453b17cd8d3bc1aa1f inherit pub_methods_classopen3d_1_1core_1_1_small_vector_impl"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_impl.3b#a727f94550741f1453b17cd8d3bc1aa1f">reserve</a> (<a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#a39583ddacc074f6e633b204aaa714647">size_type</a> N)</td></tr>
<tr class="separator:a727f94550741f1453b17cd8d3bc1aa1f inherit pub_methods_classopen3d_1_1core_1_1_small_vector_impl"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae37cd1f2c0ad3f1cf053ea6c3f8787d2 inherit pub_methods_classopen3d_1_1core_1_1_small_vector_impl"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_impl.3b#ae37cd1f2c0ad3f1cf053ea6c3f8787d2">pop_back_n</a> (<a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#a39583ddacc074f6e633b204aaa714647">size_type</a> NumItems)</td></tr>
<tr class="separator:ae37cd1f2c0ad3f1cf053ea6c3f8787d2 inherit pub_methods_classopen3d_1_1core_1_1_small_vector_impl"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a101e7df06b9548811f2808b9254052ca inherit pub_methods_classopen3d_1_1core_1_1_small_vector_impl"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_small_vector_8h.html#a8ce3b3743bf423cf00a9eb18a3f0f139">LLVM_NODISCARD</a> T&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_impl.3b#a101e7df06b9548811f2808b9254052ca">pop_back_val</a> ()</td></tr>
<tr class="separator:a101e7df06b9548811f2808b9254052ca inherit pub_methods_classopen3d_1_1core_1_1_small_vector_impl"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a247bec9820ca6c4808e90f8a9e55b22d inherit pub_methods_classopen3d_1_1core_1_1_small_vector_impl"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_impl.3b#a247bec9820ca6c4808e90f8a9e55b22d">swap</a> (<a class="el" href="classopen3d_1_1core_1_1_small_vector_impl.3b">SmallVectorImpl</a> &amp;RHS)</td></tr>
<tr class="separator:a247bec9820ca6c4808e90f8a9e55b22d inherit pub_methods_classopen3d_1_1core_1_1_small_vector_impl"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeb2457dadbbd19e130d1e0114730b0ec inherit pub_methods_classopen3d_1_1core_1_1_small_vector_impl"><td class="memTemplParams" colspan="2">template&lt;typename in_iter , typename  = std::enable_if_t&lt;std::is_convertible&lt;                      typename std::iterator_traits&lt;in_iter&gt;::iterator_category,                      std::input_iterator_tag&gt;::value&gt;&gt; </td></tr>
<tr class="memitem:aeb2457dadbbd19e130d1e0114730b0ec inherit pub_methods_classopen3d_1_1core_1_1_small_vector_impl"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_impl.3b#aeb2457dadbbd19e130d1e0114730b0ec">append</a> (in_iter in_start, in_iter in_end)</td></tr>
<tr class="memdesc:aeb2457dadbbd19e130d1e0114730b0ec inherit pub_methods_classopen3d_1_1core_1_1_small_vector_impl"><td class="mdescLeft">&#160;</td><td class="mdescRight">Add the specified range to the end of the <a class="el" href="classopen3d_1_1core_1_1_small_vector.3be.del">SmallVector</a>.  <a href="classopen3d_1_1core_1_1_small_vector_impl.3b#aeb2457dadbbd19e130d1e0114730b0ec">More...</a><br /></td></tr>
<tr class="separator:aeb2457dadbbd19e130d1e0114730b0ec inherit pub_methods_classopen3d_1_1core_1_1_small_vector_impl"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6d8de5478d9aa3c86943b1923c090209 inherit pub_methods_classopen3d_1_1core_1_1_small_vector_impl"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_impl.3b#a6d8de5478d9aa3c86943b1923c090209">append</a> (<a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#a39583ddacc074f6e633b204aaa714647">size_type</a> NumInputs, <a class="el" href="classopen3d_1_1core_1_1_small_vector_templat-2#a79e24db58d4fd1d11a8315ad5a7c97cf">ValueParamT</a> Elt)</td></tr>
<tr class="memdesc:a6d8de5478d9aa3c86943b1923c090209 inherit pub_methods_classopen3d_1_1core_1_1_small_vector_impl"><td class="mdescLeft">&#160;</td><td class="mdescRight">Append <code>NumInputs</code> copies of <code>Elt</code> to the end.  <a href="classopen3d_1_1core_1_1_small_vector_impl.3b#a6d8de5478d9aa3c86943b1923c090209">More...</a><br /></td></tr>
<tr class="separator:a6d8de5478d9aa3c86943b1923c090209 inherit pub_methods_classopen3d_1_1core_1_1_small_vector_impl"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5112f6fee90c62e542a95e6a9a7d415d inherit pub_methods_classopen3d_1_1core_1_1_small_vector_impl"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_impl.3b#a5112f6fee90c62e542a95e6a9a7d415d">append</a> (std::initializer_list&lt; T &gt; IL)</td></tr>
<tr class="separator:a5112f6fee90c62e542a95e6a9a7d415d inherit pub_methods_classopen3d_1_1core_1_1_small_vector_impl"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a989c01e519d5e5dc2e90ffbaa9771d0d inherit pub_methods_classopen3d_1_1core_1_1_small_vector_impl"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_impl.3b#a989c01e519d5e5dc2e90ffbaa9771d0d">append</a> (const <a class="el" href="classopen3d_1_1core_1_1_small_vector_impl.3b">SmallVectorImpl</a> &amp;RHS)</td></tr>
<tr class="separator:a989c01e519d5e5dc2e90ffbaa9771d0d inherit pub_methods_classopen3d_1_1core_1_1_small_vector_impl"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a941e83ba3309419bb1ebf769f2eba18b inherit pub_methods_classopen3d_1_1core_1_1_small_vector_impl"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_impl.3b#a941e83ba3309419bb1ebf769f2eba18b">assign</a> (<a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#a39583ddacc074f6e633b204aaa714647">size_type</a> NumElts, <a class="el" href="classopen3d_1_1core_1_1_small_vector_templat-2#a79e24db58d4fd1d11a8315ad5a7c97cf">ValueParamT</a> Elt)</td></tr>
<tr class="separator:a941e83ba3309419bb1ebf769f2eba18b inherit pub_methods_classopen3d_1_1core_1_1_small_vector_impl"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4d350adc2d626fe5552e122ede9e950c inherit pub_methods_classopen3d_1_1core_1_1_small_vector_impl"><td class="memTemplParams" colspan="2">template&lt;typename in_iter , typename  = std::enable_if_t&lt;std::is_convertible&lt;                      typename std::iterator_traits&lt;in_iter&gt;::iterator_category,                      std::input_iterator_tag&gt;::value&gt;&gt; </td></tr>
<tr class="memitem:a4d350adc2d626fe5552e122ede9e950c inherit pub_methods_classopen3d_1_1core_1_1_small_vector_impl"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_impl.3b#a4d350adc2d626fe5552e122ede9e950c">assign</a> (in_iter in_start, in_iter in_end)</td></tr>
<tr class="separator:a4d350adc2d626fe5552e122ede9e950c inherit pub_methods_classopen3d_1_1core_1_1_small_vector_impl"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aadf2916eb36ebdc7ad02838ec6873cbd inherit pub_methods_classopen3d_1_1core_1_1_small_vector_impl"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_impl.3b#aadf2916eb36ebdc7ad02838ec6873cbd">assign</a> (std::initializer_list&lt; T &gt; IL)</td></tr>
<tr class="separator:aadf2916eb36ebdc7ad02838ec6873cbd inherit pub_methods_classopen3d_1_1core_1_1_small_vector_impl"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2973ef8c0ab46e4f4b39d4801246c8e7 inherit pub_methods_classopen3d_1_1core_1_1_small_vector_impl"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_impl.3b#a2973ef8c0ab46e4f4b39d4801246c8e7">assign</a> (const <a class="el" href="classopen3d_1_1core_1_1_small_vector_impl.3b">SmallVectorImpl</a> &amp;RHS)</td></tr>
<tr class="separator:a2973ef8c0ab46e4f4b39d4801246c8e7 inherit pub_methods_classopen3d_1_1core_1_1_small_vector_impl"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad9af3d19cd09f0995825dc63f5adcd49 inherit pub_methods_classopen3d_1_1core_1_1_small_vector_impl"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#ade32037f59f14f4f5bb1840bdb9da33e">iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_impl.3b#ad9af3d19cd09f0995825dc63f5adcd49">erase</a> (<a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#a317ab7d6fb7a4731bf22a226822a73d4">const_iterator</a> CI)</td></tr>
<tr class="separator:ad9af3d19cd09f0995825dc63f5adcd49 inherit pub_methods_classopen3d_1_1core_1_1_small_vector_impl"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab52bbb5481a31c34ecb392de7fd7de68 inherit pub_methods_classopen3d_1_1core_1_1_small_vector_impl"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#ade32037f59f14f4f5bb1840bdb9da33e">iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_impl.3b#ab52bbb5481a31c34ecb392de7fd7de68">erase</a> (<a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#a317ab7d6fb7a4731bf22a226822a73d4">const_iterator</a> CS, <a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#a317ab7d6fb7a4731bf22a226822a73d4">const_iterator</a> CE)</td></tr>
<tr class="separator:ab52bbb5481a31c34ecb392de7fd7de68 inherit pub_methods_classopen3d_1_1core_1_1_small_vector_impl"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abe7ea143575975f3974518459be34c58 inherit pub_methods_classopen3d_1_1core_1_1_small_vector_impl"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#ade32037f59f14f4f5bb1840bdb9da33e">iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_impl.3b#abe7ea143575975f3974518459be34c58">insert</a> (<a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#ade32037f59f14f4f5bb1840bdb9da33e">iterator</a> I, T &amp;&amp;Elt)</td></tr>
<tr class="separator:abe7ea143575975f3974518459be34c58 inherit pub_methods_classopen3d_1_1core_1_1_small_vector_impl"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8719ddb8d65d759e9e1029f3fd3548fc inherit pub_methods_classopen3d_1_1core_1_1_small_vector_impl"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#ade32037f59f14f4f5bb1840bdb9da33e">iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_impl.3b#a8719ddb8d65d759e9e1029f3fd3548fc">insert</a> (<a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#ade32037f59f14f4f5bb1840bdb9da33e">iterator</a> I, const T &amp;Elt)</td></tr>
<tr class="separator:a8719ddb8d65d759e9e1029f3fd3548fc inherit pub_methods_classopen3d_1_1core_1_1_small_vector_impl"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4224c1b67328f2ebab245beae7fa0fb4 inherit pub_methods_classopen3d_1_1core_1_1_small_vector_impl"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#ade32037f59f14f4f5bb1840bdb9da33e">iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_impl.3b#a4224c1b67328f2ebab245beae7fa0fb4">insert</a> (<a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#ade32037f59f14f4f5bb1840bdb9da33e">iterator</a> I, <a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#a39583ddacc074f6e633b204aaa714647">size_type</a> NumToInsert, <a class="el" href="classopen3d_1_1core_1_1_small_vector_templat-2#a79e24db58d4fd1d11a8315ad5a7c97cf">ValueParamT</a> Elt)</td></tr>
<tr class="separator:a4224c1b67328f2ebab245beae7fa0fb4 inherit pub_methods_classopen3d_1_1core_1_1_small_vector_impl"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4f29c89f7e90f943a31c3d4c6749efce inherit pub_methods_classopen3d_1_1core_1_1_small_vector_impl"><td class="memTemplParams" colspan="2">template&lt;typename ItTy , typename  = std::enable_if_t&lt;std::is_convertible&lt;                      typename std::iterator_traits&lt;ItTy&gt;::iterator_category,                      std::input_iterator_tag&gt;::value&gt;&gt; </td></tr>
<tr class="memitem:a4f29c89f7e90f943a31c3d4c6749efce inherit pub_methods_classopen3d_1_1core_1_1_small_vector_impl"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#ade32037f59f14f4f5bb1840bdb9da33e">iterator</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_impl.3b#a4f29c89f7e90f943a31c3d4c6749efce">insert</a> (<a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#ade32037f59f14f4f5bb1840bdb9da33e">iterator</a> I, ItTy From, ItTy To)</td></tr>
<tr class="separator:a4f29c89f7e90f943a31c3d4c6749efce inherit pub_methods_classopen3d_1_1core_1_1_small_vector_impl"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6767c5f6142223c02f24a9e4c712afe0 inherit pub_methods_classopen3d_1_1core_1_1_small_vector_impl"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_impl.3b#a6767c5f6142223c02f24a9e4c712afe0">insert</a> (<a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#ade32037f59f14f4f5bb1840bdb9da33e">iterator</a> I, std::initializer_list&lt; T &gt; IL)</td></tr>
<tr class="separator:a6767c5f6142223c02f24a9e4c712afe0 inherit pub_methods_classopen3d_1_1core_1_1_small_vector_impl"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abac25fce2ae19e888ebfb3ae911e9f8e inherit pub_methods_classopen3d_1_1core_1_1_small_vector_impl"><td class="memTemplParams" colspan="2">template&lt;typename... ArgTypes&gt; </td></tr>
<tr class="memitem:abac25fce2ae19e888ebfb3ae911e9f8e inherit pub_methods_classopen3d_1_1core_1_1_small_vector_impl"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#a7f6a71049b85bf871e55e8bd1199db60">reference</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_impl.3b#abac25fce2ae19e888ebfb3ae911e9f8e">emplace_back</a> (ArgTypes &amp;&amp;... Args)</td></tr>
<tr class="separator:abac25fce2ae19e888ebfb3ae911e9f8e inherit pub_methods_classopen3d_1_1core_1_1_small_vector_impl"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6d6ab07b32a205e0112d5e4b3e3f5e53 inherit pub_methods_classopen3d_1_1core_1_1_small_vector_impl"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1core_1_1_small_vector_impl.3b">SmallVectorImpl</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_impl.3b#a6d6ab07b32a205e0112d5e4b3e3f5e53">operator=</a> (const <a class="el" href="classopen3d_1_1core_1_1_small_vector_impl.3b">SmallVectorImpl</a> &amp;RHS)</td></tr>
<tr class="separator:a6d6ab07b32a205e0112d5e4b3e3f5e53 inherit pub_methods_classopen3d_1_1core_1_1_small_vector_impl"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0c85bcf77bdce275bdf96897d7d504db inherit pub_methods_classopen3d_1_1core_1_1_small_vector_impl"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1core_1_1_small_vector_impl.3b">SmallVectorImpl</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_impl.3b#a0c85bcf77bdce275bdf96897d7d504db">operator=</a> (<a class="el" href="classopen3d_1_1core_1_1_small_vector_impl.3b">SmallVectorImpl</a> &amp;&amp;RHS)</td></tr>
<tr class="separator:a0c85bcf77bdce275bdf96897d7d504db inherit pub_methods_classopen3d_1_1core_1_1_small_vector_impl"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afbd2638e63e6ab8a681363ff615656ae inherit pub_methods_classopen3d_1_1core_1_1_small_vector_impl"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_impl.3b#afbd2638e63e6ab8a681363ff615656ae">operator==</a> (const <a class="el" href="classopen3d_1_1core_1_1_small_vector_impl.3b">SmallVectorImpl</a> &amp;RHS) const</td></tr>
<tr class="separator:afbd2638e63e6ab8a681363ff615656ae inherit pub_methods_classopen3d_1_1core_1_1_small_vector_impl"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7bf5d1f4d550e3d6d4c99f5e756a82a3 inherit pub_methods_classopen3d_1_1core_1_1_small_vector_impl"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_impl.3b#a7bf5d1f4d550e3d6d4c99f5e756a82a3">operator!=</a> (const <a class="el" href="classopen3d_1_1core_1_1_small_vector_impl.3b">SmallVectorImpl</a> &amp;RHS) const</td></tr>
<tr class="separator:a7bf5d1f4d550e3d6d4c99f5e756a82a3 inherit pub_methods_classopen3d_1_1core_1_1_small_vector_impl"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a195febe0f3a62c0ee1590b2a0d891b9f inherit pub_methods_classopen3d_1_1core_1_1_small_vector_impl"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_impl.3b#a195febe0f3a62c0ee1590b2a0d891b9f">operator&lt;</a> (const <a class="el" href="classopen3d_1_1core_1_1_small_vector_impl.3b">SmallVectorImpl</a> &amp;RHS) const</td></tr>
<tr class="separator:a195febe0f3a62c0ee1590b2a0d891b9f inherit pub_methods_classopen3d_1_1core_1_1_small_vector_impl"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8fffd57514bdd2b9dd2c89eb6340b51c inherit pub_methods_classopen3d_1_1core_1_1_small_vector_impl"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_impl.3b#a8fffd57514bdd2b9dd2c89eb6340b51c">operator&gt;</a> (const <a class="el" href="classopen3d_1_1core_1_1_small_vector_impl.3b">SmallVectorImpl</a> &amp;RHS) const</td></tr>
<tr class="separator:a8fffd57514bdd2b9dd2c89eb6340b51c inherit pub_methods_classopen3d_1_1core_1_1_small_vector_impl"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab335525adba6d51e3a03080ccb7ef15f inherit pub_methods_classopen3d_1_1core_1_1_small_vector_impl"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_impl.3b#ab335525adba6d51e3a03080ccb7ef15f">operator&lt;=</a> (const <a class="el" href="classopen3d_1_1core_1_1_small_vector_impl.3b">SmallVectorImpl</a> &amp;RHS) const</td></tr>
<tr class="separator:ab335525adba6d51e3a03080ccb7ef15f inherit pub_methods_classopen3d_1_1core_1_1_small_vector_impl"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa6c6a0d9eae518cf59cc9fff3c8c51fd inherit pub_methods_classopen3d_1_1core_1_1_small_vector_impl"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_impl.3b#aa6c6a0d9eae518cf59cc9fff3c8c51fd">operator&gt;=</a> (const <a class="el" href="classopen3d_1_1core_1_1_small_vector_impl.3b">SmallVectorImpl</a> &amp;RHS) const</td></tr>
<tr class="separator:aa6c6a0d9eae518cf59cc9fff3c8c51fd inherit pub_methods_classopen3d_1_1core_1_1_small_vector_impl"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classopen3d_1_1core_1_1_small_vector_template_base"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classopen3d_1_1core_1_1_small_vector_template_base')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classopen3d_1_1core_1_1_small_vector_templat-2">open3d::core::SmallVectorTemplateBase&lt; T, bool &gt;</a></td></tr>
<tr class="memitem:ad95612b34d7fcbbafc2f32c50c8aa4f1 inherit pub_methods_classopen3d_1_1core_1_1_small_vector_template_base"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat-2#ad95612b34d7fcbbafc2f32c50c8aa4f1">push_back</a> (const T &amp;Elt)</td></tr>
<tr class="separator:ad95612b34d7fcbbafc2f32c50c8aa4f1 inherit pub_methods_classopen3d_1_1core_1_1_small_vector_template_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f4873c61406248eacd60c6791c1b10b inherit pub_methods_classopen3d_1_1core_1_1_small_vector_template_base"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat-2#a5f4873c61406248eacd60c6791c1b10b">push_back</a> (T &amp;&amp;Elt)</td></tr>
<tr class="separator:a5f4873c61406248eacd60c6791c1b10b inherit pub_methods_classopen3d_1_1core_1_1_small_vector_template_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7f53e751e43a19fe225ddb3b7c7123ef inherit pub_methods_classopen3d_1_1core_1_1_small_vector_template_base"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat-2#a7f53e751e43a19fe225ddb3b7c7123ef">pop_back</a> ()</td></tr>
<tr class="separator:a7f53e751e43a19fe225ddb3b7c7123ef inherit pub_methods_classopen3d_1_1core_1_1_small_vector_template_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classopen3d_1_1core_1_1_small_vector_template_common"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classopen3d_1_1core_1_1_small_vector_template_common')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classopen3d_1_1core_1_1_small_vector_templat">open3d::core::SmallVectorTemplateCommon&lt; T, typename &gt;</a></td></tr>
<tr class="memitem:a746fa92e15020e4b506f5b7b92faa0f0 inherit pub_methods_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#ade32037f59f14f4f5bb1840bdb9da33e">iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#a746fa92e15020e4b506f5b7b92faa0f0">begin</a> ()</td></tr>
<tr class="separator:a746fa92e15020e4b506f5b7b92faa0f0 inherit pub_methods_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2457bbb5ee36735a915e009cf200e046 inherit pub_methods_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#a317ab7d6fb7a4731bf22a226822a73d4">const_iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#a2457bbb5ee36735a915e009cf200e046">begin</a> () const</td></tr>
<tr class="separator:a2457bbb5ee36735a915e009cf200e046 inherit pub_methods_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac4fc9a54f3955f6a3cc5eea76408531b inherit pub_methods_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#ade32037f59f14f4f5bb1840bdb9da33e">iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#ac4fc9a54f3955f6a3cc5eea76408531b">end</a> ()</td></tr>
<tr class="separator:ac4fc9a54f3955f6a3cc5eea76408531b inherit pub_methods_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a734957305d193da395fb39366f55fe19 inherit pub_methods_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#a317ab7d6fb7a4731bf22a226822a73d4">const_iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#a734957305d193da395fb39366f55fe19">end</a> () const</td></tr>
<tr class="separator:a734957305d193da395fb39366f55fe19 inherit pub_methods_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5c303fd31b8195c5ee443badfdc7668f inherit pub_methods_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#addb50f654eef5e67ebb3bad4fb3a12c1">reverse_iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#a5c303fd31b8195c5ee443badfdc7668f">rbegin</a> ()</td></tr>
<tr class="separator:a5c303fd31b8195c5ee443badfdc7668f inherit pub_methods_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0978b7154a55628dab2d98ff4b83eb00 inherit pub_methods_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#a8aad601dd5f723e257c79f12dda3851e">const_reverse_iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#a0978b7154a55628dab2d98ff4b83eb00">rbegin</a> () const</td></tr>
<tr class="separator:a0978b7154a55628dab2d98ff4b83eb00 inherit pub_methods_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae70a39bcb1d41c2d9ac475e291035a82 inherit pub_methods_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#addb50f654eef5e67ebb3bad4fb3a12c1">reverse_iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#ae70a39bcb1d41c2d9ac475e291035a82">rend</a> ()</td></tr>
<tr class="separator:ae70a39bcb1d41c2d9ac475e291035a82 inherit pub_methods_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:addafb88742940cff4f73c04ed583ebcd inherit pub_methods_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#a8aad601dd5f723e257c79f12dda3851e">const_reverse_iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#addafb88742940cff4f73c04ed583ebcd">rend</a> () const</td></tr>
<tr class="separator:addafb88742940cff4f73c04ed583ebcd inherit pub_methods_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ec4799f4fba7f65ae07c0135c98f11b inherit pub_methods_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#a39583ddacc074f6e633b204aaa714647">size_type</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#a9ec4799f4fba7f65ae07c0135c98f11b">size_in_bytes</a> () const</td></tr>
<tr class="separator:a9ec4799f4fba7f65ae07c0135c98f11b inherit pub_methods_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a36917a16c2dfabcbca35ab7b6ed5228c inherit pub_methods_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#a39583ddacc074f6e633b204aaa714647">size_type</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#a36917a16c2dfabcbca35ab7b6ed5228c">max_size</a> () const</td></tr>
<tr class="separator:a36917a16c2dfabcbca35ab7b6ed5228c inherit pub_methods_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1dbf48037d8ea2b9146d74e4ab4d0f0d inherit pub_methods_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#a1dbf48037d8ea2b9146d74e4ab4d0f0d">capacity_in_bytes</a> () const</td></tr>
<tr class="separator:a1dbf48037d8ea2b9146d74e4ab4d0f0d inherit pub_methods_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8f79fd520608dbd608e1e432a379cdff inherit pub_methods_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#adab7b7e9c146404688f0d0e288bb4e15">pointer</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#a8f79fd520608dbd608e1e432a379cdff">data</a> ()</td></tr>
<tr class="memdesc:a8f79fd520608dbd608e1e432a379cdff inherit pub_methods_classopen3d_1_1core_1_1_small_vector_template_common"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return a pointer to the vector's buffer, even if <a class="el" href="classopen3d_1_1core_1_1_small_vector_base.3b#a062fb4380e455ece79f56fd39b18a88f">empty()</a>.  <a href="classopen3d_1_1core_1_1_small_vector_templat#a8f79fd520608dbd608e1e432a379cdff">More...</a><br /></td></tr>
<tr class="separator:a8f79fd520608dbd608e1e432a379cdff inherit pub_methods_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a43e5db7f26c9ea66f900189f5bc87ccb inherit pub_methods_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#a9eda6737b26c62fc21c6387cfa76138f">const_pointer</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#a43e5db7f26c9ea66f900189f5bc87ccb">data</a> () const</td></tr>
<tr class="memdesc:a43e5db7f26c9ea66f900189f5bc87ccb inherit pub_methods_classopen3d_1_1core_1_1_small_vector_template_common"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return a pointer to the vector's buffer, even if <a class="el" href="classopen3d_1_1core_1_1_small_vector_base.3b#a062fb4380e455ece79f56fd39b18a88f">empty()</a>.  <a href="classopen3d_1_1core_1_1_small_vector_templat#a43e5db7f26c9ea66f900189f5bc87ccb">More...</a><br /></td></tr>
<tr class="separator:a43e5db7f26c9ea66f900189f5bc87ccb inherit pub_methods_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a41da7d7159d15bcdd56984ad3cb97113 inherit pub_methods_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#a7f6a71049b85bf871e55e8bd1199db60">reference</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#a41da7d7159d15bcdd56984ad3cb97113">operator[]</a> (<a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#a39583ddacc074f6e633b204aaa714647">size_type</a> idx)</td></tr>
<tr class="separator:a41da7d7159d15bcdd56984ad3cb97113 inherit pub_methods_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6e3930b9ebd380507402fb5e9f56706a inherit pub_methods_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#a180eb1ccb6ea02b98e8b1b3b77fcd883">const_reference</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#a6e3930b9ebd380507402fb5e9f56706a">operator[]</a> (<a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#a39583ddacc074f6e633b204aaa714647">size_type</a> idx) const</td></tr>
<tr class="separator:a6e3930b9ebd380507402fb5e9f56706a inherit pub_methods_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a76eb7efe5f92ddd39ad1b5d1b0c50f9f inherit pub_methods_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#a7f6a71049b85bf871e55e8bd1199db60">reference</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#a76eb7efe5f92ddd39ad1b5d1b0c50f9f">front</a> ()</td></tr>
<tr class="separator:a76eb7efe5f92ddd39ad1b5d1b0c50f9f inherit pub_methods_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aab2d2285f97f55059ae9a8e9e02bc8c6 inherit pub_methods_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#a180eb1ccb6ea02b98e8b1b3b77fcd883">const_reference</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#aab2d2285f97f55059ae9a8e9e02bc8c6">front</a> () const</td></tr>
<tr class="separator:aab2d2285f97f55059ae9a8e9e02bc8c6 inherit pub_methods_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7f5944ecefab3cbfba47333a46ebbf27 inherit pub_methods_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#a7f6a71049b85bf871e55e8bd1199db60">reference</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#a7f5944ecefab3cbfba47333a46ebbf27">back</a> ()</td></tr>
<tr class="separator:a7f5944ecefab3cbfba47333a46ebbf27 inherit pub_methods_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af50c8999c50a3212d3801962776ce6fa inherit pub_methods_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#a180eb1ccb6ea02b98e8b1b3b77fcd883">const_reference</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#af50c8999c50a3212d3801962776ce6fa">back</a> () const</td></tr>
<tr class="separator:af50c8999c50a3212d3801962776ce6fa inherit pub_methods_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classopen3d_1_1core_1_1_small_vector_base"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classopen3d_1_1core_1_1_small_vector_base')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classopen3d_1_1core_1_1_small_vector_base.3b">open3d::core::SmallVectorBase&lt; SmallVectorSizeType&lt; T &gt; &gt;</a></td></tr>
<tr class="memitem:a2dc834f4d9a8e79f9ed046ea4fc1a140 inherit pub_methods_classopen3d_1_1core_1_1_small_vector_base"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_base.3b#a2dc834f4d9a8e79f9ed046ea4fc1a140">size</a> () const</td></tr>
<tr class="separator:a2dc834f4d9a8e79f9ed046ea4fc1a140 inherit pub_methods_classopen3d_1_1core_1_1_small_vector_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a23a6aa33770f005bb71c41ac55d1d94e inherit pub_methods_classopen3d_1_1core_1_1_small_vector_base"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_base.3b#a23a6aa33770f005bb71c41ac55d1d94e">capacity</a> () const</td></tr>
<tr class="separator:a23a6aa33770f005bb71c41ac55d1d94e inherit pub_methods_classopen3d_1_1core_1_1_small_vector_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a062fb4380e455ece79f56fd39b18a88f inherit pub_methods_classopen3d_1_1core_1_1_small_vector_base"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_small_vector_8h.html#a8ce3b3743bf423cf00a9eb18a3f0f139">LLVM_NODISCARD</a> bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_base.3b#a062fb4380e455ece79f56fd39b18a88f">empty</a> () const</td></tr>
<tr class="separator:a062fb4380e455ece79f56fd39b18a88f inherit pub_methods_classopen3d_1_1core_1_1_small_vector_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_types_classopen3d_1_1core_1_1_small_vector_impl"><td colspan="2" onclick="javascript:toggleInherit('pub_types_classopen3d_1_1core_1_1_small_vector_impl')"><img src="closed.png" alt="-"/>&#160;Public Types inherited from <a class="el" href="classopen3d_1_1core_1_1_small_vector_impl.3b">open3d::core::SmallVectorImpl&lt; T &gt;</a></td></tr>
<tr class="memitem:a321acacda9f35223c95282e9365c8bf3 inherit pub_types_classopen3d_1_1core_1_1_small_vector_impl"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_impl.3b#a321acacda9f35223c95282e9365c8bf3">iterator</a> = typename <a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#ade32037f59f14f4f5bb1840bdb9da33e">SuperClass::iterator</a></td></tr>
<tr class="separator:a321acacda9f35223c95282e9365c8bf3 inherit pub_types_classopen3d_1_1core_1_1_small_vector_impl"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeade776ed36e00a86e78e53dc78208d4 inherit pub_types_classopen3d_1_1core_1_1_small_vector_impl"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_impl.3b#aeade776ed36e00a86e78e53dc78208d4">const_iterator</a> = typename <a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#a317ab7d6fb7a4731bf22a226822a73d4">SuperClass::const_iterator</a></td></tr>
<tr class="separator:aeade776ed36e00a86e78e53dc78208d4 inherit pub_types_classopen3d_1_1core_1_1_small_vector_impl"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a901e397ce04de8ab92c6a92e5a3bc99f inherit pub_types_classopen3d_1_1core_1_1_small_vector_impl"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_impl.3b#a901e397ce04de8ab92c6a92e5a3bc99f">reference</a> = typename <a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#a7f6a71049b85bf871e55e8bd1199db60">SuperClass::reference</a></td></tr>
<tr class="separator:a901e397ce04de8ab92c6a92e5a3bc99f inherit pub_types_classopen3d_1_1core_1_1_small_vector_impl"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa3d1493635de3e54ebc0b1fcfe162138 inherit pub_types_classopen3d_1_1core_1_1_small_vector_impl"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_impl.3b#aa3d1493635de3e54ebc0b1fcfe162138">size_type</a> = typename <a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#a39583ddacc074f6e633b204aaa714647">SuperClass::size_type</a></td></tr>
<tr class="separator:aa3d1493635de3e54ebc0b1fcfe162138 inherit pub_types_classopen3d_1_1core_1_1_small_vector_impl"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_types_classopen3d_1_1core_1_1_small_vector_template_common"><td colspan="2" onclick="javascript:toggleInherit('pub_types_classopen3d_1_1core_1_1_small_vector_template_common')"><img src="closed.png" alt="-"/>&#160;Public Types inherited from <a class="el" href="classopen3d_1_1core_1_1_small_vector_templat">open3d::core::SmallVectorTemplateCommon&lt; T, typename &gt;</a></td></tr>
<tr class="memitem:a39583ddacc074f6e633b204aaa714647 inherit pub_types_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#a39583ddacc074f6e633b204aaa714647">size_type</a> = size_t</td></tr>
<tr class="separator:a39583ddacc074f6e633b204aaa714647 inherit pub_types_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad10a4d170d2f9be02de0c5e2fd3412c3 inherit pub_types_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#ad10a4d170d2f9be02de0c5e2fd3412c3">difference_type</a> = ptrdiff_t</td></tr>
<tr class="separator:ad10a4d170d2f9be02de0c5e2fd3412c3 inherit pub_types_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab07cc779bd936e740cabecdf41c67534 inherit pub_types_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#ab07cc779bd936e740cabecdf41c67534">value_type</a> = T</td></tr>
<tr class="separator:ab07cc779bd936e740cabecdf41c67534 inherit pub_types_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ade32037f59f14f4f5bb1840bdb9da33e inherit pub_types_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#ade32037f59f14f4f5bb1840bdb9da33e">iterator</a> = T *</td></tr>
<tr class="separator:ade32037f59f14f4f5bb1840bdb9da33e inherit pub_types_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a317ab7d6fb7a4731bf22a226822a73d4 inherit pub_types_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#a317ab7d6fb7a4731bf22a226822a73d4">const_iterator</a> = const T *</td></tr>
<tr class="separator:a317ab7d6fb7a4731bf22a226822a73d4 inherit pub_types_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8aad601dd5f723e257c79f12dda3851e inherit pub_types_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#a8aad601dd5f723e257c79f12dda3851e">const_reverse_iterator</a> = std::reverse_iterator&lt; <a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#a317ab7d6fb7a4731bf22a226822a73d4">const_iterator</a> &gt;</td></tr>
<tr class="separator:a8aad601dd5f723e257c79f12dda3851e inherit pub_types_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:addb50f654eef5e67ebb3bad4fb3a12c1 inherit pub_types_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#addb50f654eef5e67ebb3bad4fb3a12c1">reverse_iterator</a> = std::reverse_iterator&lt; <a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#ade32037f59f14f4f5bb1840bdb9da33e">iterator</a> &gt;</td></tr>
<tr class="separator:addb50f654eef5e67ebb3bad4fb3a12c1 inherit pub_types_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7f6a71049b85bf871e55e8bd1199db60 inherit pub_types_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#a7f6a71049b85bf871e55e8bd1199db60">reference</a> = T &amp;</td></tr>
<tr class="separator:a7f6a71049b85bf871e55e8bd1199db60 inherit pub_types_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a180eb1ccb6ea02b98e8b1b3b77fcd883 inherit pub_types_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#a180eb1ccb6ea02b98e8b1b3b77fcd883">const_reference</a> = const T &amp;</td></tr>
<tr class="separator:a180eb1ccb6ea02b98e8b1b3b77fcd883 inherit pub_types_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adab7b7e9c146404688f0d0e288bb4e15 inherit pub_types_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#adab7b7e9c146404688f0d0e288bb4e15">pointer</a> = T *</td></tr>
<tr class="separator:adab7b7e9c146404688f0d0e288bb4e15 inherit pub_types_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9eda6737b26c62fc21c6387cfa76138f inherit pub_types_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#a9eda6737b26c62fc21c6387cfa76138f">const_pointer</a> = const T *</td></tr>
<tr class="separator:a9eda6737b26c62fc21c6387cfa76138f inherit pub_types_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_types_classopen3d_1_1core_1_1_small_vector_impl"><td colspan="2" onclick="javascript:toggleInherit('pro_types_classopen3d_1_1core_1_1_small_vector_impl')"><img src="closed.png" alt="-"/>&#160;Protected Types inherited from <a class="el" href="classopen3d_1_1core_1_1_small_vector_impl.3b">open3d::core::SmallVectorImpl&lt; T &gt;</a></td></tr>
<tr class="memitem:a363789fb0c8d7b04605f1624f8e1f598 inherit pro_types_classopen3d_1_1core_1_1_small_vector_impl"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_impl.3b#a363789fb0c8d7b04605f1624f8e1f598">ValueParamT</a> = typename <a class="el" href="classopen3d_1_1core_1_1_small_vector_templat-2#a79e24db58d4fd1d11a8315ad5a7c97cf">SuperClass::ValueParamT</a></td></tr>
<tr class="separator:a363789fb0c8d7b04605f1624f8e1f598 inherit pro_types_classopen3d_1_1core_1_1_small_vector_impl"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_types_classopen3d_1_1core_1_1_small_vector_template_base"><td colspan="2" onclick="javascript:toggleInherit('pro_types_classopen3d_1_1core_1_1_small_vector_template_base')"><img src="closed.png" alt="-"/>&#160;Protected Types inherited from <a class="el" href="classopen3d_1_1core_1_1_small_vector_templat-2">open3d::core::SmallVectorTemplateBase&lt; T, bool &gt;</a></td></tr>
<tr class="memitem:a79e24db58d4fd1d11a8315ad5a7c97cf inherit pro_types_classopen3d_1_1core_1_1_small_vector_template_base"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat-2#a79e24db58d4fd1d11a8315ad5a7c97cf">ValueParamT</a> = const T &amp;</td></tr>
<tr class="separator:a79e24db58d4fd1d11a8315ad5a7c97cf inherit pro_types_classopen3d_1_1core_1_1_small_vector_template_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_classopen3d_1_1core_1_1_small_vector_impl"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_classopen3d_1_1core_1_1_small_vector_impl')"><img src="closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="classopen3d_1_1core_1_1_small_vector_impl.3b">open3d::core::SmallVectorImpl&lt; T &gt;</a></td></tr>
<tr class="memitem:abeb2aec7d3678df1479d647015a0a679 inherit pro_methods_classopen3d_1_1core_1_1_small_vector_impl"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_impl.3b#abeb2aec7d3678df1479d647015a0a679">SmallVectorImpl</a> (unsigned N)</td></tr>
<tr class="separator:abeb2aec7d3678df1479d647015a0a679 inherit pro_methods_classopen3d_1_1core_1_1_small_vector_impl"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab9f3baaf3de31739b410c4ee4fab6e89 inherit pro_methods_classopen3d_1_1core_1_1_small_vector_impl"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_impl.3b#ab9f3baaf3de31739b410c4ee4fab6e89">assignRemote</a> (<a class="el" href="classopen3d_1_1core_1_1_small_vector_impl.3b">SmallVectorImpl</a> &amp;&amp;RHS)</td></tr>
<tr class="separator:ab9f3baaf3de31739b410c4ee4fab6e89 inherit pro_methods_classopen3d_1_1core_1_1_small_vector_impl"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_classopen3d_1_1core_1_1_small_vector_template_base"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_classopen3d_1_1core_1_1_small_vector_template_base')"><img src="closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="classopen3d_1_1core_1_1_small_vector_templat-2">open3d::core::SmallVectorTemplateBase&lt; T, bool &gt;</a></td></tr>
<tr class="memitem:a0d37d3aab5a14c71bb1afcaecb24a3ae inherit pro_methods_classopen3d_1_1core_1_1_small_vector_template_base"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat-2#a0d37d3aab5a14c71bb1afcaecb24a3ae">SmallVectorTemplateBase</a> (size_t <a class="el" href="classopen3d_1_1core_1_1_small_vector_base.3b#ab57b4e9b18f93d30eb0502fe4949e38e">Size</a>)</td></tr>
<tr class="separator:a0d37d3aab5a14c71bb1afcaecb24a3ae inherit pro_methods_classopen3d_1_1core_1_1_small_vector_template_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aff774c138c30be24a3e9b491d2d030ff inherit pro_methods_classopen3d_1_1core_1_1_small_vector_template_base"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat-2#aff774c138c30be24a3e9b491d2d030ff">grow</a> (size_t MinSize=0)</td></tr>
<tr class="separator:aff774c138c30be24a3e9b491d2d030ff inherit pro_methods_classopen3d_1_1core_1_1_small_vector_template_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a63c04ab23b6d4b6a1a44cbd8113a9986 inherit pro_methods_classopen3d_1_1core_1_1_small_vector_template_base"><td class="memItemLeft" align="right" valign="top">T *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat-2#a63c04ab23b6d4b6a1a44cbd8113a9986">mallocForGrow</a> (size_t MinSize, size_t &amp;NewCapacity)</td></tr>
<tr class="separator:a63c04ab23b6d4b6a1a44cbd8113a9986 inherit pro_methods_classopen3d_1_1core_1_1_small_vector_template_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a898ef740207c9251480d63d9e681cc7a inherit pro_methods_classopen3d_1_1core_1_1_small_vector_template_base"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat-2#a898ef740207c9251480d63d9e681cc7a">moveElementsForGrow</a> (T *NewElts)</td></tr>
<tr class="separator:a898ef740207c9251480d63d9e681cc7a inherit pro_methods_classopen3d_1_1core_1_1_small_vector_template_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3fea729d5eef756c1bf98fc9e377beba inherit pro_methods_classopen3d_1_1core_1_1_small_vector_template_base"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat-2#a3fea729d5eef756c1bf98fc9e377beba">takeAllocationForGrow</a> (T *NewElts, size_t NewCapacity)</td></tr>
<tr class="memdesc:a3fea729d5eef756c1bf98fc9e377beba inherit pro_methods_classopen3d_1_1core_1_1_small_vector_template_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Transfer ownership of the allocation, finishing up <em><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat-2#aff774c138c30be24a3e9b491d2d030ff">grow()</a></em>.  <a href="classopen3d_1_1core_1_1_small_vector_templat-2#a3fea729d5eef756c1bf98fc9e377beba">More...</a><br /></td></tr>
<tr class="separator:a3fea729d5eef756c1bf98fc9e377beba inherit pro_methods_classopen3d_1_1core_1_1_small_vector_template_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acb2c22c162cc45f343e57268de084a6f inherit pro_methods_classopen3d_1_1core_1_1_small_vector_template_base"><td class="memItemLeft" align="right" valign="top">const T *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat-2#acb2c22c162cc45f343e57268de084a6f">reserveForParamAndGetAddress</a> (const T &amp;Elt, size_t N=1)</td></tr>
<tr class="separator:acb2c22c162cc45f343e57268de084a6f inherit pro_methods_classopen3d_1_1core_1_1_small_vector_template_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af40218ca20c5e0b70cb8bf225ed49c5a inherit pro_methods_classopen3d_1_1core_1_1_small_vector_template_base"><td class="memItemLeft" align="right" valign="top">T *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat-2#af40218ca20c5e0b70cb8bf225ed49c5a">reserveForParamAndGetAddress</a> (T &amp;Elt, size_t N=1)</td></tr>
<tr class="separator:af40218ca20c5e0b70cb8bf225ed49c5a inherit pro_methods_classopen3d_1_1core_1_1_small_vector_template_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab2534c3e5658beb174b56138548ca2fb inherit pro_methods_classopen3d_1_1core_1_1_small_vector_template_base"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat-2#ab2534c3e5658beb174b56138548ca2fb">growAndAssign</a> (size_t NumElts, const T &amp;Elt)</td></tr>
<tr class="separator:ab2534c3e5658beb174b56138548ca2fb inherit pro_methods_classopen3d_1_1core_1_1_small_vector_template_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3529847210824b2a4830c63908c137ee inherit pro_methods_classopen3d_1_1core_1_1_small_vector_template_base"><td class="memTemplParams" colspan="2">template&lt;typename... ArgTypes&gt; </td></tr>
<tr class="memitem:a3529847210824b2a4830c63908c137ee inherit pro_methods_classopen3d_1_1core_1_1_small_vector_template_base"><td class="memTemplItemLeft" align="right" valign="top">T &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat-2#a3529847210824b2a4830c63908c137ee">growAndEmplaceBack</a> (ArgTypes &amp;&amp;... Args)</td></tr>
<tr class="separator:a3529847210824b2a4830c63908c137ee inherit pro_methods_classopen3d_1_1core_1_1_small_vector_template_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_classopen3d_1_1core_1_1_small_vector_template_common"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_classopen3d_1_1core_1_1_small_vector_template_common')"><img src="closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="classopen3d_1_1core_1_1_small_vector_templat">open3d::core::SmallVectorTemplateCommon&lt; T, typename &gt;</a></td></tr>
<tr class="memitem:a15ed82f05df5ad80d949a52e7c03fadd inherit pro_methods_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#a15ed82f05df5ad80d949a52e7c03fadd">SmallVectorTemplateCommon</a> (size_t <a class="el" href="classopen3d_1_1core_1_1_small_vector_base.3b#ab57b4e9b18f93d30eb0502fe4949e38e">Size</a>)</td></tr>
<tr class="separator:a15ed82f05df5ad80d949a52e7c03fadd inherit pro_methods_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a944ee637bf9269aa7ed25e03bea66e1f inherit pro_methods_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#a944ee637bf9269aa7ed25e03bea66e1f">grow_pod</a> (size_t MinSize, size_t TSize)</td></tr>
<tr class="separator:a944ee637bf9269aa7ed25e03bea66e1f inherit pro_methods_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8fd00ce49a881719a21ab852ee7f35b7 inherit pro_methods_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#a8fd00ce49a881719a21ab852ee7f35b7">isSmall</a> () const</td></tr>
<tr class="separator:a8fd00ce49a881719a21ab852ee7f35b7 inherit pro_methods_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4cf9097c99f52885a22fd44c396687c0 inherit pro_methods_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#a4cf9097c99f52885a22fd44c396687c0">resetToSmall</a> ()</td></tr>
<tr class="memdesc:a4cf9097c99f52885a22fd44c396687c0 inherit pro_methods_classopen3d_1_1core_1_1_small_vector_template_common"><td class="mdescLeft">&#160;</td><td class="mdescRight">Put this vector in a state of being small.  <a href="classopen3d_1_1core_1_1_small_vector_templat#a4cf9097c99f52885a22fd44c396687c0">More...</a><br /></td></tr>
<tr class="separator:a4cf9097c99f52885a22fd44c396687c0 inherit pro_methods_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad320729adbd8050955f7bcd2938ffac2 inherit pro_methods_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#ad320729adbd8050955f7bcd2938ffac2">isReferenceToRange</a> (const void *V, const void *First, const void *Last) const</td></tr>
<tr class="memdesc:ad320729adbd8050955f7bcd2938ffac2 inherit pro_methods_classopen3d_1_1core_1_1_small_vector_template_common"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return true if V is an internal reference to the given range.  <a href="classopen3d_1_1core_1_1_small_vector_templat#ad320729adbd8050955f7bcd2938ffac2">More...</a><br /></td></tr>
<tr class="separator:ad320729adbd8050955f7bcd2938ffac2 inherit pro_methods_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8e46ba03cbbd403fb81bf2e4805baf5e inherit pro_methods_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#a8e46ba03cbbd403fb81bf2e4805baf5e">isReferenceToStorage</a> (const void *V) const</td></tr>
<tr class="memdesc:a8e46ba03cbbd403fb81bf2e4805baf5e inherit pro_methods_classopen3d_1_1core_1_1_small_vector_template_common"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return true if V is an internal reference to this vector.  <a href="classopen3d_1_1core_1_1_small_vector_templat#a8e46ba03cbbd403fb81bf2e4805baf5e">More...</a><br /></td></tr>
<tr class="separator:a8e46ba03cbbd403fb81bf2e4805baf5e inherit pro_methods_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2cee227a15db90cd59e5863845255b1a inherit pro_methods_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#a2cee227a15db90cd59e5863845255b1a">isRangeInStorage</a> (const void *First, const void *Last) const</td></tr>
<tr class="separator:a2cee227a15db90cd59e5863845255b1a inherit pro_methods_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a25483a5d85e4d53a2ff2a5ad3ac2e41a inherit pro_methods_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#a25483a5d85e4d53a2ff2a5ad3ac2e41a">isSafeToReferenceAfterResize</a> (const void *Elt, size_t NewSize)</td></tr>
<tr class="separator:a25483a5d85e4d53a2ff2a5ad3ac2e41a inherit pro_methods_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2c66a83e33f100c300dcd5a9b677e9c1 inherit pro_methods_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#a2c66a83e33f100c300dcd5a9b677e9c1">assertSafeToReferenceAfterResize</a> (const void *Elt, size_t NewSize)</td></tr>
<tr class="memdesc:a2c66a83e33f100c300dcd5a9b677e9c1 inherit pro_methods_classopen3d_1_1core_1_1_small_vector_template_common"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check whether Elt will be invalidated by resizing the vector to NewSize.  <a href="classopen3d_1_1core_1_1_small_vector_templat#a2c66a83e33f100c300dcd5a9b677e9c1">More...</a><br /></td></tr>
<tr class="separator:a2c66a83e33f100c300dcd5a9b677e9c1 inherit pro_methods_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab7c44743bfec713c9c3e9d33005aef57 inherit pro_methods_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#ab7c44743bfec713c9c3e9d33005aef57">assertSafeToAdd</a> (const void *Elt, size_t N=1)</td></tr>
<tr class="separator:ab7c44743bfec713c9c3e9d33005aef57 inherit pro_methods_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6be5fa00a678e5e8d3ce5c2eb94c6591 inherit pro_methods_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#a6be5fa00a678e5e8d3ce5c2eb94c6591">assertSafeToReferenceAfterClear</a> (const T *From, const T *To)</td></tr>
<tr class="memdesc:a6be5fa00a678e5e8d3ce5c2eb94c6591 inherit pro_methods_classopen3d_1_1core_1_1_small_vector_template_common"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check whether any part of the range will be invalidated by clearing.  <a href="classopen3d_1_1core_1_1_small_vector_templat#a6be5fa00a678e5e8d3ce5c2eb94c6591">More...</a><br /></td></tr>
<tr class="separator:a6be5fa00a678e5e8d3ce5c2eb94c6591 inherit pro_methods_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a03dbf49acd80b737a08f9c414837287e inherit pro_methods_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memTemplParams" colspan="2">template&lt;class ItTy , std::enable_if_t&lt; !std::is_same&lt; std::remove_const_t&lt; ItTy &gt;, T * &gt;::value, bool &gt;  = false&gt; </td></tr>
<tr class="memitem:a03dbf49acd80b737a08f9c414837287e inherit pro_methods_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#a03dbf49acd80b737a08f9c414837287e">assertSafeToReferenceAfterClear</a> (ItTy, ItTy)</td></tr>
<tr class="separator:a03dbf49acd80b737a08f9c414837287e inherit pro_methods_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa11ea4a88a0b0b58a668d4840b11bf65 inherit pro_methods_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#aa11ea4a88a0b0b58a668d4840b11bf65">assertSafeToAddRange</a> (const T *From, const T *To)</td></tr>
<tr class="memdesc:aa11ea4a88a0b0b58a668d4840b11bf65 inherit pro_methods_classopen3d_1_1core_1_1_small_vector_template_common"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check whether any part of the range will be invalidated by growing.  <a href="classopen3d_1_1core_1_1_small_vector_templat#aa11ea4a88a0b0b58a668d4840b11bf65">More...</a><br /></td></tr>
<tr class="separator:aa11ea4a88a0b0b58a668d4840b11bf65 inherit pro_methods_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afd2a4d18f26786ad43bfc1e02ee53825 inherit pro_methods_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memTemplParams" colspan="2">template&lt;class ItTy , std::enable_if_t&lt; !std::is_same&lt; std::remove_const_t&lt; ItTy &gt;, T * &gt;::value, bool &gt;  = false&gt; </td></tr>
<tr class="memitem:afd2a4d18f26786ad43bfc1e02ee53825 inherit pro_methods_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#afd2a4d18f26786ad43bfc1e02ee53825">assertSafeToAddRange</a> (ItTy, ItTy)</td></tr>
<tr class="separator:afd2a4d18f26786ad43bfc1e02ee53825 inherit pro_methods_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_classopen3d_1_1core_1_1_small_vector_base"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_classopen3d_1_1core_1_1_small_vector_base')"><img src="closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="classopen3d_1_1core_1_1_small_vector_base.3b">open3d::core::SmallVectorBase&lt; SmallVectorSizeType&lt; T &gt; &gt;</a></td></tr>
<tr class="memitem:afec93e8ebbddcbcdecaa4da339220b4c inherit pro_methods_classopen3d_1_1core_1_1_small_vector_base"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_base.3b#afec93e8ebbddcbcdecaa4da339220b4c">SmallVectorBase</a> ()=delete</td></tr>
<tr class="separator:afec93e8ebbddcbcdecaa4da339220b4c inherit pro_methods_classopen3d_1_1core_1_1_small_vector_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a05056c620f2ae6dc530c2ee866d146 inherit pro_methods_classopen3d_1_1core_1_1_small_vector_base"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_base.3b#a6a05056c620f2ae6dc530c2ee866d146">SmallVectorBase</a> (void *FirstEl, size_t TotalCapacity)</td></tr>
<tr class="separator:a6a05056c620f2ae6dc530c2ee866d146 inherit pro_methods_classopen3d_1_1core_1_1_small_vector_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9d46bce460681c68c718a01a03dd8d49 inherit pro_methods_classopen3d_1_1core_1_1_small_vector_base"><td class="memItemLeft" align="right" valign="top">void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_base.3b#a9d46bce460681c68c718a01a03dd8d49">mallocForGrow</a> (size_t MinSize, size_t TSize, size_t &amp;NewCapacity)</td></tr>
<tr class="separator:a9d46bce460681c68c718a01a03dd8d49 inherit pro_methods_classopen3d_1_1core_1_1_small_vector_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab782be6ee0e22fe43435dab72e942a15 inherit pro_methods_classopen3d_1_1core_1_1_small_vector_base"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_base.3b#ab782be6ee0e22fe43435dab72e942a15">grow_pod</a> (void *FirstEl, size_t MinSize, size_t TSize)</td></tr>
<tr class="separator:ab782be6ee0e22fe43435dab72e942a15 inherit pro_methods_classopen3d_1_1core_1_1_small_vector_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa0c23e716aa544269250f092896629e9 inherit pro_methods_classopen3d_1_1core_1_1_small_vector_base"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_base.3b#aa0c23e716aa544269250f092896629e9">set_size</a> (size_t N)</td></tr>
<tr class="separator:aa0c23e716aa544269250f092896629e9 inherit pro_methods_classopen3d_1_1core_1_1_small_vector_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_static_methods_classopen3d_1_1core_1_1_small_vector_template_base"><td colspan="2" onclick="javascript:toggleInherit('pro_static_methods_classopen3d_1_1core_1_1_small_vector_template_base')"><img src="closed.png" alt="-"/>&#160;Static Protected Member Functions inherited from <a class="el" href="classopen3d_1_1core_1_1_small_vector_templat-2">open3d::core::SmallVectorTemplateBase&lt; T, bool &gt;</a></td></tr>
<tr class="memitem:a195afae2eee58e4395f4aad7ec2e8b1e inherit pro_static_methods_classopen3d_1_1core_1_1_small_vector_template_base"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat-2#a195afae2eee58e4395f4aad7ec2e8b1e">destroy_range</a> (T *S, T *E)</td></tr>
<tr class="separator:a195afae2eee58e4395f4aad7ec2e8b1e inherit pro_static_methods_classopen3d_1_1core_1_1_small_vector_template_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a068c469577125a80f6e78486f86c5a06 inherit pro_static_methods_classopen3d_1_1core_1_1_small_vector_template_base"><td class="memTemplParams" colspan="2">template&lt;typename It1 , typename It2 &gt; </td></tr>
<tr class="memitem:a068c469577125a80f6e78486f86c5a06 inherit pro_static_methods_classopen3d_1_1core_1_1_small_vector_template_base"><td class="memTemplItemLeft" align="right" valign="top">static void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat-2#a068c469577125a80f6e78486f86c5a06">uninitialized_move</a> (It1 I, It1 E, It2 Dest)</td></tr>
<tr class="separator:a068c469577125a80f6e78486f86c5a06 inherit pro_static_methods_classopen3d_1_1core_1_1_small_vector_template_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a31ec6ef790023425bdd734fcdc9af441 inherit pro_static_methods_classopen3d_1_1core_1_1_small_vector_template_base"><td class="memTemplParams" colspan="2">template&lt;typename It1 , typename It2 &gt; </td></tr>
<tr class="memitem:a31ec6ef790023425bdd734fcdc9af441 inherit pro_static_methods_classopen3d_1_1core_1_1_small_vector_template_base"><td class="memTemplItemLeft" align="right" valign="top">static void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat-2#a31ec6ef790023425bdd734fcdc9af441">uninitialized_copy</a> (It1 I, It1 E, It2 Dest)</td></tr>
<tr class="separator:a31ec6ef790023425bdd734fcdc9af441 inherit pro_static_methods_classopen3d_1_1core_1_1_small_vector_template_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad7707e5362e7b63b5986c16c360ea1e3 inherit pro_static_methods_classopen3d_1_1core_1_1_small_vector_template_base"><td class="memItemLeft" align="right" valign="top">static T &amp;&amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat-2#ad7707e5362e7b63b5986c16c360ea1e3">forward_value_param</a> (T &amp;&amp;V)</td></tr>
<tr class="separator:ad7707e5362e7b63b5986c16c360ea1e3 inherit pro_static_methods_classopen3d_1_1core_1_1_small_vector_template_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab9ccccd6bb9e2563e88f56a8eea58a57 inherit pro_static_methods_classopen3d_1_1core_1_1_small_vector_template_base"><td class="memItemLeft" align="right" valign="top">static const T &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat-2#ab9ccccd6bb9e2563e88f56a8eea58a57">forward_value_param</a> (const T &amp;V)</td></tr>
<tr class="separator:ab9ccccd6bb9e2563e88f56a8eea58a57 inherit pro_static_methods_classopen3d_1_1core_1_1_small_vector_template_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_static_methods_classopen3d_1_1core_1_1_small_vector_template_common"><td colspan="2" onclick="javascript:toggleInherit('pro_static_methods_classopen3d_1_1core_1_1_small_vector_template_common')"><img src="closed.png" alt="-"/>&#160;Static Protected Member Functions inherited from <a class="el" href="classopen3d_1_1core_1_1_small_vector_templat">open3d::core::SmallVectorTemplateCommon&lt; T, typename &gt;</a></td></tr>
<tr class="memitem:a6a7566edb1026c9e66d92086d72cf144 inherit pro_static_methods_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memTemplParams" colspan="2">template&lt;class U &gt; </td></tr>
<tr class="memitem:a6a7566edb1026c9e66d92086d72cf144 inherit pro_static_methods_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memTemplItemLeft" align="right" valign="top">static const T *&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat#a6a7566edb1026c9e66d92086d72cf144">reserveForParamAndGetAddressImpl</a> (U *This, const T &amp;Elt, size_t N)</td></tr>
<tr class="separator:a6a7566edb1026c9e66d92086d72cf144 inherit pro_static_methods_classopen3d_1_1core_1_1_small_vector_template_common"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_static_methods_classopen3d_1_1core_1_1_small_vector_base"><td colspan="2" onclick="javascript:toggleInherit('pro_static_methods_classopen3d_1_1core_1_1_small_vector_base')"><img src="closed.png" alt="-"/>&#160;Static Protected Member Functions inherited from <a class="el" href="classopen3d_1_1core_1_1_small_vector_base.3b">open3d::core::SmallVectorBase&lt; SmallVectorSizeType&lt; T &gt; &gt;</a></td></tr>
<tr class="memitem:a307ee1b3d2c722012d0af9e96ecae4d1 inherit pro_static_methods_classopen3d_1_1core_1_1_small_vector_base"><td class="memItemLeft" align="right" valign="top">static constexpr size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_base.3b#a307ee1b3d2c722012d0af9e96ecae4d1">SizeTypeMax</a> ()</td></tr>
<tr class="memdesc:a307ee1b3d2c722012d0af9e96ecae4d1 inherit pro_static_methods_classopen3d_1_1core_1_1_small_vector_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">The maximum value of the Size_T used.  <a href="classopen3d_1_1core_1_1_small_vector_base.3b#a307ee1b3d2c722012d0af9e96ecae4d1">More...</a><br /></td></tr>
<tr class="separator:a307ee1b3d2c722012d0af9e96ecae4d1 inherit pro_static_methods_classopen3d_1_1core_1_1_small_vector_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_classopen3d_1_1core_1_1_small_vector_base"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_classopen3d_1_1core_1_1_small_vector_base')"><img src="closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="classopen3d_1_1core_1_1_small_vector_base.3b">open3d::core::SmallVectorBase&lt; SmallVectorSizeType&lt; T &gt; &gt;</a></td></tr>
<tr class="memitem:a75dee5104ab5e669437ccd857baf33fb inherit pro_attribs_classopen3d_1_1core_1_1_small_vector_base"><td class="memItemLeft" align="right" valign="top">void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_base.3b#a75dee5104ab5e669437ccd857baf33fb">BeginX</a></td></tr>
<tr class="separator:a75dee5104ab5e669437ccd857baf33fb inherit pro_attribs_classopen3d_1_1core_1_1_small_vector_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab57b4e9b18f93d30eb0502fe4949e38e inherit pro_attribs_classopen3d_1_1core_1_1_small_vector_base"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceopen3d_1_1core.html#a6c1322b87f8cc03be33a7bd7676d10a7">SmallVectorSizeType</a>&lt; T &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_base.3b#ab57b4e9b18f93d30eb0502fe4949e38e">Size</a></td></tr>
<tr class="separator:ab57b4e9b18f93d30eb0502fe4949e38e inherit pro_attribs_classopen3d_1_1core_1_1_small_vector_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a85ba1be19c88c57733cef02c3989205a inherit pro_attribs_classopen3d_1_1core_1_1_small_vector_base"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceopen3d_1_1core.html#a6c1322b87f8cc03be33a7bd7676d10a7">SmallVectorSizeType</a>&lt; T &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_base.3b#a85ba1be19c88c57733cef02c3989205a">Capacity</a></td></tr>
<tr class="separator:a85ba1be19c88c57733cef02c3989205a inherit pro_attribs_classopen3d_1_1core_1_1_small_vector_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_static_attribs_classopen3d_1_1core_1_1_small_vector_template_base"><td colspan="2" onclick="javascript:toggleInherit('pro_static_attribs_classopen3d_1_1core_1_1_small_vector_template_base')"><img src="closed.png" alt="-"/>&#160;Static Protected Attributes inherited from <a class="el" href="classopen3d_1_1core_1_1_small_vector_templat-2">open3d::core::SmallVectorTemplateBase&lt; T, bool &gt;</a></td></tr>
<tr class="memitem:a9d745d627f0f24eadcd014b3bccaf759 inherit pro_static_attribs_classopen3d_1_1core_1_1_small_vector_template_base"><td class="memItemLeft" align="right" valign="top">static constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_small_vector_templat-2#a9d745d627f0f24eadcd014b3bccaf759">TakesParamByValue</a> = false</td></tr>
<tr class="separator:a9d745d627f0f24eadcd014b3bccaf759 inherit pro_static_attribs_classopen3d_1_1core_1_1_small_vector_template_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;typename T, unsigned N = CalculateSmallVectorDefaultInlinedElements&lt;T&gt;::value&gt;<br />
class open3d::core::SmallVector&lt; T, N &gt;</h3>

<p>This is a 'vector' (really, a variable-sized array), optimized for the case when the array is small. It contains some number of elements in-place, which allows it to avoid heap allocation when the actual number of elements is below that threshold. This allows normal "small" cases to be fast without losing generality for large inputs.</p>
<dl class="section note"><dt>Note</dt><dd>In the absence of a well-motivated choice for the number of inlined elements <code>N</code>, it is recommended to use <code>SmallVector&lt;T&gt;</code> (that is, omitting the <code>N</code>). This will choose a default number of inlined elements reasonable for allocation on the stack (for example, trying to keep <code>sizeof(SmallVector&lt;T&gt;)</code> around 64 bytes).</dd></dl>
<dl class="section warning"><dt>Warning</dt><dd>This does not attempt to be exception safe.</dd></dl>
<dl class="section see"><dt>See also</dt><dd><a href="https://llvm.org/docs/ProgrammersManual.html#llvm-adt-smallvector-h">https://llvm.org/docs/ProgrammersManual.html#llvm-adt-smallvector-h</a> </dd></dl>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a58c83620c18fa1ec8adcc2c1cf3d79dd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a58c83620c18fa1ec8adcc2c1cf3d79dd">&#9670;&nbsp;</a></span>SmallVector() <span class="overload">[1/8]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T , unsigned N = CalculateSmallVectorDefaultInlinedElements&lt;T&gt;::value&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1core_1_1_small_vector.3be.del">open3d::core::SmallVector</a>&lt; T, N &gt;::<a class="el" href="classopen3d_1_1core_1_1_small_vector.3be.del">SmallVector</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a6bb7c023eee76b73f78e6245ef1eddfb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6bb7c023eee76b73f78e6245ef1eddfb">&#9670;&nbsp;</a></span>~SmallVector()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T , unsigned N = CalculateSmallVectorDefaultInlinedElements&lt;T&gt;::value&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1core_1_1_small_vector.3be.del">open3d::core::SmallVector</a>&lt; T, N &gt;::~<a class="el" href="classopen3d_1_1core_1_1_small_vector.3be.del">SmallVector</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a1637c37c39d1c04da634ccc2ee4d0f65"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1637c37c39d1c04da634ccc2ee4d0f65">&#9670;&nbsp;</a></span>SmallVector() <span class="overload">[2/8]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T , unsigned N = CalculateSmallVectorDefaultInlinedElements&lt;T&gt;::value&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1core_1_1_small_vector.3be.del">open3d::core::SmallVector</a>&lt; T, N &gt;::<a class="el" href="classopen3d_1_1core_1_1_small_vector.3be.del">SmallVector</a> </td>
          <td>(</td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>Size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const T &amp;&#160;</td>
          <td class="paramname"><em>Value</em> = <code>T()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">explicit</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="af589850f8fbde8ff76a9f6c6c3537058"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af589850f8fbde8ff76a9f6c6c3537058">&#9670;&nbsp;</a></span>SmallVector() <span class="overload">[3/8]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T , unsigned N = CalculateSmallVectorDefaultInlinedElements&lt;T&gt;::value&gt; </div>
<div class="memtemplate">
template&lt;typename ItTy , typename  = std::enable_if_t&lt;std::is_convertible&lt;                      typename std::iterator_traits&lt;ItTy&gt;::iterator_category,                      std::input_iterator_tag&gt;::value&gt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1core_1_1_small_vector.3be.del">open3d::core::SmallVector</a>&lt; T, N &gt;::<a class="el" href="classopen3d_1_1core_1_1_small_vector.3be.del">SmallVector</a> </td>
          <td>(</td>
          <td class="paramtype">ItTy&#160;</td>
          <td class="paramname"><em>S</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ItTy&#160;</td>
          <td class="paramname"><em>E</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a7aedf80cb9e74bdaad1c4060f4b138ed"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7aedf80cb9e74bdaad1c4060f4b138ed">&#9670;&nbsp;</a></span>SmallVector() <span class="overload">[4/8]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T , unsigned N = CalculateSmallVectorDefaultInlinedElements&lt;T&gt;::value&gt; </div>
<div class="memtemplate">
template&lt;typename RangeTy &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1core_1_1_small_vector.3be.del">open3d::core::SmallVector</a>&lt; T, N &gt;::<a class="el" href="classopen3d_1_1core_1_1_small_vector.3be.del">SmallVector</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1iterator__range.3b4.d">iterator_range</a>&lt; RangeTy &gt; &amp;&#160;</td>
          <td class="paramname"><em>R</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">explicit</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a88558b7edcc9d03ea43feb9057c809ac"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a88558b7edcc9d03ea43feb9057c809ac">&#9670;&nbsp;</a></span>SmallVector() <span class="overload">[5/8]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T , unsigned N = CalculateSmallVectorDefaultInlinedElements&lt;T&gt;::value&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1core_1_1_small_vector.3be.del">open3d::core::SmallVector</a>&lt; T, N &gt;::<a class="el" href="classopen3d_1_1core_1_1_small_vector.3be.del">SmallVector</a> </td>
          <td>(</td>
          <td class="paramtype">std::initializer_list&lt; T &gt;&#160;</td>
          <td class="paramname"><em>IL</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a2d40675be38b7389ec6ef3d51cce041d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2d40675be38b7389ec6ef3d51cce041d">&#9670;&nbsp;</a></span>SmallVector() <span class="overload">[6/8]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T , unsigned N = CalculateSmallVectorDefaultInlinedElements&lt;T&gt;::value&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1core_1_1_small_vector.3be.del">open3d::core::SmallVector</a>&lt; T, N &gt;::<a class="el" href="classopen3d_1_1core_1_1_small_vector.3be.del">SmallVector</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_small_vector.3be.del">SmallVector</a>&lt; T, N &gt; &amp;&#160;</td>
          <td class="paramname"><em>RHS</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ac0adc97ce72a5d8d27590a848a1d6604"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac0adc97ce72a5d8d27590a848a1d6604">&#9670;&nbsp;</a></span>SmallVector() <span class="overload">[7/8]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T , unsigned N = CalculateSmallVectorDefaultInlinedElements&lt;T&gt;::value&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1core_1_1_small_vector.3be.del">open3d::core::SmallVector</a>&lt; T, N &gt;::<a class="el" href="classopen3d_1_1core_1_1_small_vector.3be.del">SmallVector</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1core_1_1_small_vector.3be.del">SmallVector</a>&lt; T, N &gt; &amp;&amp;&#160;</td>
          <td class="paramname"><em>RHS</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a4b1d76104d789a818814e3041b3b3860"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4b1d76104d789a818814e3041b3b3860">&#9670;&nbsp;</a></span>SmallVector() <span class="overload">[8/8]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T , unsigned N = CalculateSmallVectorDefaultInlinedElements&lt;T&gt;::value&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1core_1_1_small_vector.3be.del">open3d::core::SmallVector</a>&lt; T, N &gt;::<a class="el" href="classopen3d_1_1core_1_1_small_vector.3be.del">SmallVector</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1core_1_1_small_vector_impl.3b">SmallVectorImpl</a>&lt; T &gt; &amp;&amp;&#160;</td>
          <td class="paramname"><em>RHS</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a941a92780f88480afaf61a816c311d93"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a941a92780f88480afaf61a816c311d93">&#9670;&nbsp;</a></span>operator=() <span class="overload">[1/4]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T , unsigned N = CalculateSmallVectorDefaultInlinedElements&lt;T&gt;::value&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1core_1_1_small_vector.3be.del">SmallVector</a>&amp; <a class="el" href="classopen3d_1_1core_1_1_small_vector.3be.del">open3d::core::SmallVector</a>&lt; T, N &gt;::operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_small_vector.3be.del">SmallVector</a>&lt; T, N &gt; &amp;&#160;</td>
          <td class="paramname"><em>RHS</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a19f5ab596c7bedffc76d74c778e58517"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a19f5ab596c7bedffc76d74c778e58517">&#9670;&nbsp;</a></span>operator=() <span class="overload">[2/4]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T , unsigned N = CalculateSmallVectorDefaultInlinedElements&lt;T&gt;::value&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1core_1_1_small_vector.3be.del">SmallVector</a>&amp; <a class="el" href="classopen3d_1_1core_1_1_small_vector.3be.del">open3d::core::SmallVector</a>&lt; T, N &gt;::operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1core_1_1_small_vector.3be.del">SmallVector</a>&lt; T, N &gt; &amp;&amp;&#160;</td>
          <td class="paramname"><em>RHS</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a2a77fd916e9af40897c814906bdc23f4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2a77fd916e9af40897c814906bdc23f4">&#9670;&nbsp;</a></span>operator=() <span class="overload">[3/4]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T , unsigned N = CalculateSmallVectorDefaultInlinedElements&lt;T&gt;::value&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1core_1_1_small_vector.3be.del">SmallVector</a>&amp; <a class="el" href="classopen3d_1_1core_1_1_small_vector.3be.del">open3d::core::SmallVector</a>&lt; T, N &gt;::operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1core_1_1_small_vector_impl.3b">SmallVectorImpl</a>&lt; T &gt; &amp;&amp;&#160;</td>
          <td class="paramname"><em>RHS</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aa842ef981f4abceffd0f3c90b249e760"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa842ef981f4abceffd0f3c90b249e760">&#9670;&nbsp;</a></span>operator=() <span class="overload">[4/4]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T , unsigned N = CalculateSmallVectorDefaultInlinedElements&lt;T&gt;::value&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1core_1_1_small_vector.3be.del">SmallVector</a>&amp; <a class="el" href="classopen3d_1_1core_1_1_small_vector.3be.del">open3d::core::SmallVector</a>&lt; T, N &gt;::operator= </td>
          <td>(</td>
          <td class="paramtype">std::initializer_list&lt; T &gt;&#160;</td>
          <td class="paramname"><em>IL</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>/home/runner/work/Open3D/Open3D/cpp/open3d/core/<a class="el" href="_small_vector_8h_source.html">SmallVector.h (9238339 (Tue Mar 14 18:49:09 2023 -0700))</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1
</small></address>
</body>

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/classopen3d_1_1core_1_1_small_vector.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 10:55:23 GMT -->
</html>
