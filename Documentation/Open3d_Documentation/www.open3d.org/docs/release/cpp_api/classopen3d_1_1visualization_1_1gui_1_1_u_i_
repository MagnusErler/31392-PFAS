<!-- HTML header for doxygen 1.8.20-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/classopen3d_1_1visualization_1_1gui_1_1_u_i_image.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 11:01:33 GMT -->
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Open3D (C++ API): open3d::visualization::gui::UIImage Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js", "TeX/AMSmath.html", "TeX/AMSsymbols.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="../../../../cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-3TQPKGV6Z3"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());
  gtag('config', 'G-3TQPKGV6Z3');
</script>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="open3d_logo.ico"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Open3D (C++ API)
   &#160;<span id="projectnumber">0.17.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.html');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.html','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceopen3d.html">open3d</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1visualization.html">visualization</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1visualization_1_1gui.46a">gui</a></li><li class="navelem"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_u_i_">UIImage</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">open3d::visualization::gui::UIImage Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_u_i_image_8h_source.html">UIImage.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structopen3d_1_1visualization_1_1gui_1_1_u_i">DrawParams</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structopen3d_1_1visualization_1_1gui_1_1_u_i-2">Impl</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:abf11ccfe1b9486397f81a4dfa3a78898"><td class="memItemLeft" align="right" valign="top">enum class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_u_i_#abf11ccfe1b9486397f81a4dfa3a78898">Scaling</a> { <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_u_i_#abf11ccfe1b9486397f81a4dfa3a78898ab50339a10e1de285ac99d4c3990b8693">NONE</a>
, <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_u_i_#abf11ccfe1b9486397f81a4dfa3a78898a8e1bde3c3d303163521522cf1d62f21f">ANY</a>
, <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_u_i_#abf11ccfe1b9486397f81a4dfa3a78898a219a680d521171d782d747577e8d2c7c">ASPECT</a>
 }</td></tr>
<tr class="separator:abf11ccfe1b9486397f81a4dfa3a78898"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a0f5a2c06450426692c582454857b25e6"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_u_i_#a0f5a2c06450426692c582454857b25e6">UIImage</a> (const char *image_path)</td></tr>
<tr class="separator:a0f5a2c06450426692c582454857b25e6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a32c1718d3b015bb76022228b12871375"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_u_i_#a32c1718d3b015bb76022228b12871375">UIImage</a> (std::shared_ptr&lt; <a class="el" href="classopen3d_1_1geometry_1_1_image.406.delaye">geometry::Image</a> &gt; <a class="el" href="_filament_renderer_8cpp.html#a60b0c69b08810766e366c4b90031cd0d">image</a>)</td></tr>
<tr class="separator:a32c1718d3b015bb76022228b12871375"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeca03d65d23c7a3115be7cb5bfdc5d6b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_u_i_#aeca03d65d23c7a3115be7cb5bfdc5d6b">UIImage</a> (std::shared_ptr&lt; <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_image.34e.d">t::geometry::Image</a> &gt; <a class="el" href="_filament_renderer_8cpp.html#a60b0c69b08810766e366c4b90031cd0d">image</a>)</td></tr>
<tr class="separator:aeca03d65d23c7a3115be7cb5bfdc5d6b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aff3995d67a6edc8d43f489789ab69040"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_u_i_#aff3995d67a6edc8d43f489789ab69040">UIImage</a> (<a class="el" href="namespaceopen3d_1_1visualization_1_1renderin#abe77f5a7fbacbb64e93059aa27873e11">visualization::rendering::TextureHandle</a> texture_id, float u0=0.0f, float v0=0.0f, float u1=1.0f, float v1=1.0f)</td></tr>
<tr class="separator:aff3995d67a6edc8d43f489789ab69040"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6c63ee199fa50b2a63d514a19cb18631"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_u_i_#a6c63ee199fa50b2a63d514a19cb18631">~UIImage</a> ()</td></tr>
<tr class="separator:a6c63ee199fa50b2a63d514a19cb18631"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad7f430496cb992877df004c84d747fbb"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_u_i_#ad7f430496cb992877df004c84d747fbb">UpdateImage</a> (std::shared_ptr&lt; <a class="el" href="classopen3d_1_1geometry_1_1_image.406.delaye">geometry::Image</a> &gt; <a class="el" href="_filament_renderer_8cpp.html#a60b0c69b08810766e366c4b90031cd0d">image</a>)</td></tr>
<tr class="separator:ad7f430496cb992877df004c84d747fbb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af9400235d1a3bd822c861bb50fe2c8ee"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_u_i_#af9400235d1a3bd822c861bb50fe2c8ee">UpdateImage</a> (std::shared_ptr&lt; <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_image.34e.d">t::geometry::Image</a> &gt; <a class="el" href="_filament_renderer_8cpp.html#a60b0c69b08810766e366c4b90031cd0d">image</a>)</td></tr>
<tr class="separator:af9400235d1a3bd822c861bb50fe2c8ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab014d8d66023d0cc37372731cef21f89"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_u_i_#ab014d8d66023d0cc37372731cef21f89">SetScaling</a> (<a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_u_i_#abf11ccfe1b9486397f81a4dfa3a78898">Scaling</a> <a class="el" href="_window_8cpp.html#a0761091c4f988e7ded7420d6f5b41e1d">scaling</a>)</td></tr>
<tr class="separator:ab014d8d66023d0cc37372731cef21f89"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4939ac6899df2ea0944317d71a90a242"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_u_i_#abf11ccfe1b9486397f81a4dfa3a78898">Scaling</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_u_i_#a4939ac6899df2ea0944317d71a90a242">GetScaling</a> () const</td></tr>
<tr class="separator:a4939ac6899df2ea0944317d71a90a242"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a84fc095817a68eee125c8872fbde2dc7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structopen3d_1_1visualization_1_1gui_1_1_siz">Size</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_u_i_#a84fc095817a68eee125c8872fbde2dc7">CalcPreferredSize</a> (const <a class="el" href="structopen3d_1_1visualization_1_1gui_1_1_lay">LayoutContext</a> &amp;<a class="el" href="_window_8cpp.html#a0fc46c2cc73ed5bf25b870a781a2d18e">context</a>, const <a class="el" href="structopen3d_1_1visualization_1_1gui_1_1_wid">Widget::Constraints</a> &amp;constraints) const</td></tr>
<tr class="separator:a84fc095817a68eee125c8872fbde2dc7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae6b10819c1cc92e01737c2d8595e61ff"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structopen3d_1_1visualization_1_1gui_1_1_u_i">DrawParams</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_u_i_#ae6b10819c1cc92e01737c2d8595e61ff">CalcDrawParams</a> (<a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-31">visualization::rendering::Renderer</a> &amp;renderer, const <a class="el" href="structopen3d_1_1visualization_1_1gui_1_1_rec">Rect</a> &amp;<a class="el" href="_bitmap_window_system_8cpp.html#a1ce080cc240f0a51d1ccc913ba97e0db">frame</a>) const</td></tr>
<tr class="separator:ae6b10819c1cc92e01737c2d8595e61ff"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Member Enumeration Documentation</h2>
<a id="abf11ccfe1b9486397f81a4dfa3a78898"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abf11ccfe1b9486397f81a4dfa3a78898">&#9670;&nbsp;</a></span>Scaling</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_u_i_#abf11ccfe1b9486397f81a4dfa3a78898">open3d::visualization::gui::UIImage::Scaling</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="abf11ccfe1b9486397f81a4dfa3a78898ab50339a10e1de285ac99d4c3990b8693"></a>NONE&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="abf11ccfe1b9486397f81a4dfa3a78898a8e1bde3c3d303163521522cf1d62f21f"></a>ANY&#160;</td><td class="fielddoc"><p>No scaling, fixed size. </p>
</td></tr>
<tr><td class="fieldname"><a id="abf11ccfe1b9486397f81a4dfa3a78898a219a680d521171d782d747577e8d2c7c"></a>ASPECT&#160;</td><td class="fielddoc"><p>Scales to any size and aspect ratio. </p>
<p>Scales to any size, but fixed aspect ratio (default) </p>
</td></tr>
</table>

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a0f5a2c06450426692c582454857b25e6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0f5a2c06450426692c582454857b25e6">&#9670;&nbsp;</a></span>UIImage() <span class="overload">[1/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">open3d::visualization::gui::UIImage::UIImage </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>image_path</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">explicit</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a32c1718d3b015bb76022228b12871375"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a32c1718d3b015bb76022228b12871375">&#9670;&nbsp;</a></span>UIImage() <span class="overload">[2/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">open3d::visualization::gui::UIImage::UIImage </td>
          <td>(</td>
          <td class="paramtype">std::shared_ptr&lt; <a class="el" href="classopen3d_1_1geometry_1_1_image.406.delaye">geometry::Image</a> &gt;&#160;</td>
          <td class="paramname"><em>image</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">explicit</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aeca03d65d23c7a3115be7cb5bfdc5d6b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeca03d65d23c7a3115be7cb5bfdc5d6b">&#9670;&nbsp;</a></span>UIImage() <span class="overload">[3/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">open3d::visualization::gui::UIImage::UIImage </td>
          <td>(</td>
          <td class="paramtype">std::shared_ptr&lt; <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_image.34e.d">t::geometry::Image</a> &gt;&#160;</td>
          <td class="paramname"><em>image</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">explicit</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aff3995d67a6edc8d43f489789ab69040"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aff3995d67a6edc8d43f489789ab69040">&#9670;&nbsp;</a></span>UIImage() <span class="overload">[4/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">open3d::visualization::gui::UIImage::UIImage </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceopen3d_1_1visualization_1_1renderin#abe77f5a7fbacbb64e93059aa27873e11">visualization::rendering::TextureHandle</a>&#160;</td>
          <td class="paramname"><em>texture_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>u0</em> = <code>0.0f</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>v0</em> = <code>0.0f</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>u1</em> = <code>1.0f</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>v1</em> = <code>1.0f</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">explicit</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Uses an existing texture, using texture coordinates (u0, v0) to (u1, v1). Does not deallocate texture on destruction. This is useful for using an icon atlas to reduce draw calls. </p>

</div>
</div>
<a id="a6c63ee199fa50b2a63d514a19cb18631"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6c63ee199fa50b2a63d514a19cb18631">&#9670;&nbsp;</a></span>~UIImage()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">open3d::visualization::gui::UIImage::~UIImage </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="ae6b10819c1cc92e01737c2d8595e61ff"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae6b10819c1cc92e01737c2d8595e61ff">&#9670;&nbsp;</a></span>CalcDrawParams()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structopen3d_1_1visualization_1_1gui_1_1_u_i">UIImage::DrawParams</a> open3d::visualization::gui::UIImage::CalcDrawParams </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-31">visualization::rendering::Renderer</a> &amp;&#160;</td>
          <td class="paramname"><em>renderer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structopen3d_1_1visualization_1_1gui_1_1_rec">Rect</a> &amp;&#160;</td>
          <td class="paramname"><em>frame</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a84fc095817a68eee125c8872fbde2dc7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a84fc095817a68eee125c8872fbde2dc7">&#9670;&nbsp;</a></span>CalcPreferredSize()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structopen3d_1_1visualization_1_1gui_1_1_siz">Size</a> open3d::visualization::gui::UIImage::CalcPreferredSize </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structopen3d_1_1visualization_1_1gui_1_1_lay">LayoutContext</a> &amp;&#160;</td>
          <td class="paramname"><em>context</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structopen3d_1_1visualization_1_1gui_1_1_wid">Widget::Constraints</a> &amp;&#160;</td>
          <td class="paramname"><em>constraints</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a4939ac6899df2ea0944317d71a90a242"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4939ac6899df2ea0944317d71a90a242">&#9670;&nbsp;</a></span>GetScaling()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_u_i_#abf11ccfe1b9486397f81a4dfa3a78898">UIImage::Scaling</a> open3d::visualization::gui::UIImage::GetScaling </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ab014d8d66023d0cc37372731cef21f89"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab014d8d66023d0cc37372731cef21f89">&#9670;&nbsp;</a></span>SetScaling()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::gui::UIImage::SetScaling </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_u_i_#abf11ccfe1b9486397f81a4dfa3a78898">Scaling</a>&#160;</td>
          <td class="paramname"><em>scaling</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ad7f430496cb992877df004c84d747fbb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad7f430496cb992877df004c84d747fbb">&#9670;&nbsp;</a></span>UpdateImage() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::gui::UIImage::UpdateImage </td>
          <td>(</td>
          <td class="paramtype">std::shared_ptr&lt; <a class="el" href="classopen3d_1_1geometry_1_1_image.406.delaye">geometry::Image</a> &gt;&#160;</td>
          <td class="paramname"><em>image</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Updates the contents of the texture. If the image is a different size from the original, a new texture will be created. </p>

</div>
</div>
<a id="af9400235d1a3bd822c861bb50fe2c8ee"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af9400235d1a3bd822c861bb50fe2c8ee">&#9670;&nbsp;</a></span>UpdateImage() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::gui::UIImage::UpdateImage </td>
          <td>(</td>
          <td class="paramtype">std::shared_ptr&lt; <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_image.34e.d">t::geometry::Image</a> &gt;&#160;</td>
          <td class="paramname"><em>image</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Updates the contents of the texture. If the image is a different size from the original, a new texture will be created. </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/runner/work/Open3D/Open3D/cpp/open3d/visualization/gui/<a class="el" href="_u_i_image_8h_source.html">UIImage.h (9238339 (Tue Mar 14 18:49:09 2023 -0700))</a></li>
<li>/home/runner/work/Open3D/Open3D/cpp/open3d/visualization/gui/<a class="el" href="_u_i_image_8cpp.html">UIImage.cpp (9238339 (Tue Mar 14 18:49:09 2023 -0700))</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1
</small></address>
</body>

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/classopen3d_1_1visualization_1_1gui_1_1_u_i_image.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 11:01:34 GMT -->
</html>
