<!-- HTML header for doxygen 1.8.20-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/tensorflow_2continuous__conv_2_continuous_conv_op_kernel_8h_source.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 11:04:53 GMT -->
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Open3D (C++ API): /home/runner/work/Open3D/Open3D/cpp/open3d/ml/tensorflow/continuous_conv/ContinuousConvOpKernel.h (9238339 (Tue Mar 14 18:49:09 2023 -0700)) Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js", "TeX/AMSmath.html", "TeX/AMSsymbols.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="../../../../cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-3TQPKGV6Z3"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());
  gtag('config', 'G-3TQPKGV6Z3');
</script>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="open3d_logo.ico"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Open3D (C++ API)
   &#160;<span id="projectnumber">0.17.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.html');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.html','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_df511e5bd85cec96854b39d5e1c27aa8.357.del">cpp</a></li><li class="navelem"><a class="el" href="dir_f8cc15b2217ff526bd336cf17635da2a.358.del">open3d</a></li><li class="navelem"><a class="el" href="dir_b383250e6a9804e003b118f7109c729e.4d9.del">ml</a></li><li class="navelem"><a class="el" href="dir_f019fdef81c7c1754b4aa3df09a80766.8ea.del">tensorflow</a></li><li class="navelem"><a class="el" href="dir_48a311dfadafebb268fb53c8bc4e1478.ba3.del">continuous_conv</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">ContinuousConvOpKernel.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="tensorflow_2continuous__conv_2_continuous_co-7">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">// ----------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// -                        Open3D: www.open3d.org                            -</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// ----------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">// Copyright (c) 2018-2023 www.open3d.org</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">// SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">// ----------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160; </div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160; </div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_continuous_conv_types_8h.html">open3d/ml/impl/continuous_conv/ContinuousConvTypes.h</a>&quot;</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &quot;tensorflow/core/framework/op.h&quot;</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &quot;tensorflow/core/framework/op_kernel.h&quot;</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor">#include &quot;tensorflow/core/lib/core/errors.h&quot;</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160; </div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> TIndex&gt;</div>
<div class="line"><a name="l00016"></a><span class="lineno"><a class="line" href="class_continuous_conv_op_kernel.html">   16</a></span>&#160;<span class="keyword">class </span><a class="code" href="class_continuous_conv_op_kernel.html">ContinuousConvOpKernel</a> : <span class="keyword">public</span> tensorflow::OpKernel {</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00018"></a><span class="lineno"><a class="line" href="class_continuous_conv_op_kernel.html#a8e129d182952df4a596d04472e91490a">   18</a></span>&#160;    <span class="keyword">explicit</span> <a class="code" href="class_continuous_conv_op_kernel.html#a8e129d182952df4a596d04472e91490a">ContinuousConvOpKernel</a>(</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;            tensorflow::OpKernelConstruction* construction)</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;        : OpKernel(construction) {</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;        <span class="keyword">using namespace </span>tensorflow;</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;        <span class="keyword">using namespace </span><a class="code" href="namespaceopen3d_1_1ml_1_1impl.html">open3d::ml::impl</a>;</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;        OP_REQUIRES_OK(construction,</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;                       construction-&gt;GetAttr(<span class="stringliteral">&quot;align_corners&quot;</span>, &amp;<a class="code" href="class_continuous_conv_op_kernel.html#a80d62ccb921a1088071efab4b2a29025">align_corners</a>));</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;        OP_REQUIRES_OK(construction,</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;                       construction-&gt;GetAttr(<span class="stringliteral">&quot;normalize&quot;</span>, &amp;<a class="code" href="class_continuous_conv_op_kernel.html#a0a02ac731e469f13f53fd927cfb5f370">normalize</a>));</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160; </div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;        std::string interpolation_str;</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;        OP_REQUIRES_OK(construction, construction-&gt;GetAttr(<span class="stringliteral">&quot;interpolation&quot;</span>,</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;                                                           &amp;interpolation_str));</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160; </div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;        <span class="keywordflow">if</span> (interpolation_str == <span class="stringliteral">&quot;linear&quot;</span>)</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;            <a class="code" href="class_continuous_conv_op_kernel.html#a38121f11800c96c2afc09e98ca6530b3">interpolation</a> = InterpolationMode::LINEAR;</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span> (interpolation_str == <span class="stringliteral">&quot;linear_border&quot;</span>)</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;            <a class="code" href="class_continuous_conv_op_kernel.html#a38121f11800c96c2afc09e98ca6530b3">interpolation</a> = InterpolationMode::LINEAR_BORDER;</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;            <a class="code" href="class_continuous_conv_op_kernel.html#a38121f11800c96c2afc09e98ca6530b3">interpolation</a> = <a class="code" href="namespaceopen3d_1_1ml_1_1impl.html#a2902d456779f799905d50574750e1f62a4c3ea169e4887079fcee81e2d9c07a60">InterpolationMode::NEAREST_NEIGHBOR</a>;</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160; </div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;        std::string mapping_str;</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;        OP_REQUIRES_OK(construction, construction-&gt;GetAttr(<span class="stringliteral">&quot;coordinate_mapping&quot;</span>,</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;                                                           &amp;mapping_str));</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160; </div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;        <span class="keywordflow">if</span> (mapping_str == <span class="stringliteral">&quot;ball_to_cube_radial&quot;</span>)</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;            <a class="code" href="class_continuous_conv_op_kernel.html#acbf03fa1dc6204d95c6e72a74b396207">coordinate_mapping</a> = CoordinateMapping::BALL_TO_CUBE_RADIAL;</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span> (mapping_str == <span class="stringliteral">&quot;ball_to_cube_volume_preserving&quot;</span>)</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;            <a class="code" href="class_continuous_conv_op_kernel.html#acbf03fa1dc6204d95c6e72a74b396207">coordinate_mapping</a> =</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;                    CoordinateMapping::BALL_TO_CUBE_VOLUME_PRESERVING;</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;            <a class="code" href="class_continuous_conv_op_kernel.html#acbf03fa1dc6204d95c6e72a74b396207">coordinate_mapping</a> = CoordinateMapping::IDENTITY;</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160; </div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;        OP_REQUIRES_OK(construction, construction-&gt;GetAttr(<span class="stringliteral">&quot;max_temp_mem_MB&quot;</span>,</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;                                                           &amp;<a class="code" href="class_continuous_conv_op_kernel.html#ac58fc9834624cf5423bb7c793376d259">max_temp_mem_MB</a>));</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    }</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160; </div>
<div class="line"><a name="l00055"></a><span class="lineno"><a class="line" href="class_continuous_conv_op_kernel.html#a59c09ca9b652e5f1df0c1fe0599686ce">   55</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="class_continuous_conv_op_kernel.html#a59c09ca9b652e5f1df0c1fe0599686ce">Compute</a>(tensorflow::OpKernelContext* <a class="code" href="_window_8cpp.html#a0fc46c2cc73ed5bf25b870a781a2d18e">context</a>)<span class="keyword"> override </span>{</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        <span class="keyword">using namespace </span>tensorflow;</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        static_assert(<span class="keyword">sizeof</span>(int64) == <span class="keyword">sizeof</span>(int64_t),</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;                      <span class="stringliteral">&quot;int64 type is not compatible&quot;</span>);</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        <span class="keyword">const</span> Tensor&amp; filter = <a class="code" href="_window_8cpp.html#a0fc46c2cc73ed5bf25b870a781a2d18e">context</a>-&gt;input(0);</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160; </div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        <span class="keyword">const</span> Tensor&amp; out_positions = <a class="code" href="_window_8cpp.html#a0fc46c2cc73ed5bf25b870a781a2d18e">context</a>-&gt;input(1);</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        OP_REQUIRES(<a class="code" href="_window_8cpp.html#a0fc46c2cc73ed5bf25b870a781a2d18e">context</a>,</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;                    out_positions.shape().dim_size(0) &lt;=</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;                            std::numeric_limits&lt;TIndex&gt;::max(),</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;                    errors::InvalidArgument(<span class="stringliteral">&quot;Too many output points&quot;</span>));</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160; </div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;        <span class="keyword">const</span> Tensor&amp; extents = <a class="code" href="_window_8cpp.html#a0fc46c2cc73ed5bf25b870a781a2d18e">context</a>-&gt;input(2);</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        OP_REQUIRES(<a class="code" href="_window_8cpp.html#a0fc46c2cc73ed5bf25b870a781a2d18e">context</a>, extents.shape().dims() == 2,</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;                    errors::InvalidArgument(<span class="stringliteral">&quot;extents must be a rank 2 tensor&quot;</span>));</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        OP_REQUIRES(<a class="code" href="_window_8cpp.html#a0fc46c2cc73ed5bf25b870a781a2d18e">context</a>,</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;                    extents.shape().dim_size(0) ==</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;                                    out_positions.shape().dim_size(0) ||</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;                            extents.shape().dim_size(0) == 1,</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;                    errors::InvalidArgument(<span class="stringliteral">&quot;number of extents must match the &quot;</span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;                                            <span class="stringliteral">&quot;number of out_positions or must &quot;</span></div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;                                            <span class="stringliteral">&quot;be 1&quot;</span>));</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        OP_REQUIRES(<a class="code" href="_window_8cpp.html#a0fc46c2cc73ed5bf25b870a781a2d18e">context</a>,</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;                    extents.shape().dim_size(1) == 3 ||</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;                            extents.shape().dim_size(1) == 1,</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;                    errors::InvalidArgument(</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;                            <span class="stringliteral">&quot;number of components for extents must be 3 or 1&quot;</span>));</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160; </div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        <span class="keyword">const</span> Tensor&amp; <a class="code" href="io_2file__format_2_file_p_c_d_8cpp.375.delay#aed7ea92f45bd273dde380a45ddced592">offset</a> = <a class="code" href="_window_8cpp.html#a0fc46c2cc73ed5bf25b870a781a2d18e">context</a>-&gt;input(3);</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        OP_REQUIRES(<a class="code" href="_window_8cpp.html#a0fc46c2cc73ed5bf25b870a781a2d18e">context</a>, <a class="code" href="io_2file__format_2_file_p_c_d_8cpp.375.delay#aed7ea92f45bd273dde380a45ddced592">offset</a>.shape().dims() == 1,</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;                    errors::InvalidArgument(<span class="stringliteral">&quot;offset must be a rank 1 tensor&quot;</span>));</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        OP_REQUIRES(<a class="code" href="_window_8cpp.html#a0fc46c2cc73ed5bf25b870a781a2d18e">context</a>, <a class="code" href="io_2file__format_2_file_p_c_d_8cpp.375.delay#aed7ea92f45bd273dde380a45ddced592">offset</a>.shape().dim_size(0) == 3,</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;                    errors::InvalidArgument(<span class="stringliteral">&quot;offset length must be 3&quot;</span>));</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160; </div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;        <span class="keyword">const</span> Tensor&amp; inp_positions = <a class="code" href="_window_8cpp.html#a0fc46c2cc73ed5bf25b870a781a2d18e">context</a>-&gt;input(4);</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;        OP_REQUIRES(<a class="code" href="_window_8cpp.html#a0fc46c2cc73ed5bf25b870a781a2d18e">context</a>,</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;                    inp_positions.shape().dim_size(0) &lt;=</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;                            std::numeric_limits&lt;TIndex&gt;::max(),</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;                    errors::InvalidArgument(<span class="stringliteral">&quot;Too many input points&quot;</span>));</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160; </div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        <span class="keyword">const</span> Tensor&amp; inp_features = <a class="code" href="_window_8cpp.html#a0fc46c2cc73ed5bf25b870a781a2d18e">context</a>-&gt;input(5);</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160; </div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        <span class="keyword">const</span> Tensor&amp; inp_importance = <a class="code" href="_window_8cpp.html#a0fc46c2cc73ed5bf25b870a781a2d18e">context</a>-&gt;input(6);</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160; </div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        <span class="keyword">const</span> Tensor&amp; neighbors_index = <a class="code" href="_window_8cpp.html#a0fc46c2cc73ed5bf25b870a781a2d18e">context</a>-&gt;input(7);</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160; </div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;        <span class="keyword">const</span> Tensor&amp; neighbors_importance = <a class="code" href="_window_8cpp.html#a0fc46c2cc73ed5bf25b870a781a2d18e">context</a>-&gt;input(8);</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160; </div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        <span class="keyword">const</span> Tensor&amp; neighbors_row_splits = <a class="code" href="_window_8cpp.html#a0fc46c2cc73ed5bf25b870a781a2d18e">context</a>-&gt;input(9);</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160; </div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        OP_REQUIRES(</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;                <a class="code" href="_window_8cpp.html#a0fc46c2cc73ed5bf25b870a781a2d18e">context</a>,</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;                inp_positions.shape().dim_size(0) ==</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;                        inp_features.shape().dim_size(0),</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;                errors::InvalidArgument(<span class="stringliteral">&quot;first dim of inp_positions does not &quot;</span></div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;                                        <span class="stringliteral">&quot;match the first dim of inp_features&quot;</span>));</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160; </div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;        OP_REQUIRES(<a class="code" href="_window_8cpp.html#a0fc46c2cc73ed5bf25b870a781a2d18e">context</a>,</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;                    inp_positions.shape().dim_size(0) ==</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;                                    inp_importance.shape().dim_size(0) ||</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;                            inp_importance.shape().dim_size(0) == 0,</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;                    errors::InvalidArgument(<span class="stringliteral">&quot;first dim of inp_positions does &quot;</span></div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                                            <span class="stringliteral">&quot;not match the first dim of &quot;</span></div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;                                            <span class="stringliteral">&quot;inp_importance&quot;</span>));</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160; </div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        OP_REQUIRES(<a class="code" href="_window_8cpp.html#a0fc46c2cc73ed5bf25b870a781a2d18e">context</a>,</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;                    neighbors_importance.shape().dim_size(0) ==</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;                                    neighbors_index.shape().dim_size(0) ||</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;                            neighbors_importance.shape().dim_size(0) == 0,</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;                    errors::InvalidArgument(<span class="stringliteral">&quot;first dim of neighbors_importance &quot;</span></div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;                                            <span class="stringliteral">&quot;does not match the first dim of &quot;</span></div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;                                            <span class="stringliteral">&quot;neighbors_index&quot;</span>));</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160; </div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        OP_REQUIRES(</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;                <a class="code" href="_window_8cpp.html#a0fc46c2cc73ed5bf25b870a781a2d18e">context</a>,</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;                filter.shape().dim_size(3) == inp_features.shape().dim_size(1),</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;                errors::InvalidArgument(<span class="stringliteral">&quot;number of input channels in filter &quot;</span></div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;                                        <span class="stringliteral">&quot;and inp_features does not match&quot;</span>));</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160; </div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;        TensorShape out_features_shape({out_positions.shape().dim_size(0),</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;                                        filter.shape().dim_size(4)});</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        Tensor* out_features = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        OP_REQUIRES_OK(<a class="code" href="_window_8cpp.html#a0fc46c2cc73ed5bf25b870a781a2d18e">context</a>, <a class="code" href="_window_8cpp.html#a0fc46c2cc73ed5bf25b870a781a2d18e">context</a>-&gt;allocate_output(0, out_features_shape,</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;                                                         &amp;out_features));</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160; </div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        std::vector&lt;int&gt; filter_dims({</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;                <a class="code" href="namespaceopen3d_1_1io_1_1k4a__plugin.362.del#a56444bbf00a8b57cbf3aaef24f882123">int</a>(filter.shape().dim_size(0)),</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;                <a class="code" href="namespaceopen3d_1_1io_1_1k4a__plugin.362.del#a56444bbf00a8b57cbf3aaef24f882123">int</a>(filter.shape().dim_size(1)),</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;                <a class="code" href="namespaceopen3d_1_1io_1_1k4a__plugin.362.del#a56444bbf00a8b57cbf3aaef24f882123">int</a>(filter.shape().dim_size(2)),</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;                <a class="code" href="namespaceopen3d_1_1io_1_1k4a__plugin.362.del#a56444bbf00a8b57cbf3aaef24f882123">int</a>(filter.shape().dim_size(3)),</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;                <a class="code" href="namespaceopen3d_1_1io_1_1k4a__plugin.362.del#a56444bbf00a8b57cbf3aaef24f882123">int</a>(filter.shape().dim_size(4)),</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;        });</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160; </div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;        <span class="keywordtype">bool</span> individual_extents = extents.shape().dim_size(0) ==</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;                                          out_positions.shape().dim_size(0) &amp;&amp;</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;                                  extents.shape().dim_size(0) &gt; 1;</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160; </div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;        <span class="keywordtype">bool</span> isotropic_extents = extents.shape().dim_size(1) == 1;</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160; </div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;        <span class="keywordtype">bool</span> point_importances = inp_importance.shape().dim_size(0) != 0;</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160; </div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;        <span class="keywordtype">bool</span> has_neighbors_importances =</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;                neighbors_importance.shape().dim_size(0) != 0;</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160; </div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;        <a class="code" href="class_continuous_conv_op_kernel.html#a89323d80be650bddb66e3b0fbafdd8ac">Kernel</a>(<a class="code" href="_window_8cpp.html#a0fc46c2cc73ed5bf25b870a781a2d18e">context</a>, filter, out_positions, extents, <a class="code" href="io_2file__format_2_file_p_c_d_8cpp.375.delay#aed7ea92f45bd273dde380a45ddced592">offset</a>, inp_positions,</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;               inp_features, inp_importance, neighbors_index,</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;               neighbors_importance, neighbors_row_splits, filter_dims,</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;               individual_extents, isotropic_extents, point_importances,</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;               has_neighbors_importances, *out_features);</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    }</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160; </div>
<div class="line"><a name="l00166"></a><span class="lineno"><a class="line" href="class_continuous_conv_op_kernel.html#a89323d80be650bddb66e3b0fbafdd8ac">  166</a></span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="class_continuous_conv_op_kernel.html#a89323d80be650bddb66e3b0fbafdd8ac">Kernel</a>(tensorflow::OpKernelContext* <a class="code" href="_window_8cpp.html#a0fc46c2cc73ed5bf25b870a781a2d18e">context</a>,</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;                        <span class="keyword">const</span> tensorflow::Tensor&amp; filter,</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;                        <span class="keyword">const</span> tensorflow::Tensor&amp; out_positions,</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;                        <span class="keyword">const</span> tensorflow::Tensor&amp; extents,</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;                        <span class="keyword">const</span> tensorflow::Tensor&amp; <a class="code" href="io_2file__format_2_file_p_c_d_8cpp.375.delay#aed7ea92f45bd273dde380a45ddced592">offset</a>,</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;                        <span class="keyword">const</span> tensorflow::Tensor&amp; inp_positions,</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;                        <span class="keyword">const</span> tensorflow::Tensor&amp; inp_features,</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;                        <span class="keyword">const</span> tensorflow::Tensor&amp; inp_importance,</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;                        <span class="keyword">const</span> tensorflow::Tensor&amp; neighbors_index,</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;                        <span class="keyword">const</span> tensorflow::Tensor&amp; neighbors_importance,</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;                        <span class="keyword">const</span> tensorflow::Tensor&amp; neighbors_row_splits,</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;                        <span class="keyword">const</span> std::vector&lt;int&gt;&amp; filter_dims,</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;                        <span class="keyword">const</span> <span class="keywordtype">bool</span> individual_extents,</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;                        <span class="keyword">const</span> <span class="keywordtype">bool</span> isotropic_extents,</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;                        <span class="keyword">const</span> <span class="keywordtype">bool</span> point_importances,</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;                        <span class="keyword">const</span> <span class="keywordtype">bool</span> has_neighbors_importances,</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;                        tensorflow::Tensor&amp; out_features) = 0;</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160; </div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00185"></a><span class="lineno"><a class="line" href="class_continuous_conv_op_kernel.html#a80d62ccb921a1088071efab4b2a29025">  185</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="class_continuous_conv_op_kernel.html#a80d62ccb921a1088071efab4b2a29025">align_corners</a>;</div>
<div class="line"><a name="l00186"></a><span class="lineno"><a class="line" href="class_continuous_conv_op_kernel.html#a0a02ac731e469f13f53fd927cfb5f370">  186</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="class_continuous_conv_op_kernel.html#a0a02ac731e469f13f53fd927cfb5f370">normalize</a>;</div>
<div class="line"><a name="l00187"></a><span class="lineno"><a class="line" href="class_continuous_conv_op_kernel.html#a38121f11800c96c2afc09e98ca6530b3">  187</a></span>&#160;    <a class="code" href="namespaceopen3d_1_1ml_1_1impl.html#a1cdea72ec606986b7ada2e619ea41a8d">open3d::ml::impl::InterpolationMode</a> <a class="code" href="class_continuous_conv_op_kernel.html#a38121f11800c96c2afc09e98ca6530b3">interpolation</a>;</div>
<div class="line"><a name="l00188"></a><span class="lineno"><a class="line" href="class_continuous_conv_op_kernel.html#acbf03fa1dc6204d95c6e72a74b396207">  188</a></span>&#160;    <a class="code" href="namespaceopen3d_1_1ml_1_1impl.html#ad39d07a9288168e9ecab8f34e24d27fb">open3d::ml::impl::CoordinateMapping</a> <a class="code" href="class_continuous_conv_op_kernel.html#acbf03fa1dc6204d95c6e72a74b396207">coordinate_mapping</a>;</div>
<div class="line"><a name="l00189"></a><span class="lineno"><a class="line" href="class_continuous_conv_op_kernel.html#ac58fc9834624cf5423bb7c793376d259">  189</a></span>&#160;    <span class="keywordtype">int</span> <a class="code" href="class_continuous_conv_op_kernel.html#ac58fc9834624cf5423bb7c793376d259">max_temp_mem_MB</a>;</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;};</div>
<div class="ttc" id="a_continuous_conv_types_8h_html"><div class="ttname"><a href="_continuous_conv_types_8h.html">ContinuousConvTypes.h</a></div></div>
<div class="ttc" id="a_window_8cpp_html_a0fc46c2cc73ed5bf25b870a781a2d18e"><div class="ttname"><a href="_window_8cpp.html#a0fc46c2cc73ed5bf25b870a781a2d18e">context</a></div><div class="ttdeci">ImGuiContext * context</div><div class="ttdef"><b>Definition:</b> Window.cpp:76</div></div>
<div class="ttc" id="aclass_continuous_conv_op_kernel_html"><div class="ttname"><a href="class_continuous_conv_op_kernel.html">ContinuousConvOpKernel</a></div><div class="ttdef"><b>Definition:</b> ContinuousConvOpKernel.h:16</div></div>
<div class="ttc" id="aclass_continuous_conv_op_kernel_html_a0a02ac731e469f13f53fd927cfb5f370"><div class="ttname"><a href="class_continuous_conv_op_kernel.html#a0a02ac731e469f13f53fd927cfb5f370">ContinuousConvOpKernel::normalize</a></div><div class="ttdeci">bool normalize</div><div class="ttdef"><b>Definition:</b> ContinuousConvOpKernel.h:186</div></div>
<div class="ttc" id="aclass_continuous_conv_op_kernel_html_a38121f11800c96c2afc09e98ca6530b3"><div class="ttname"><a href="class_continuous_conv_op_kernel.html#a38121f11800c96c2afc09e98ca6530b3">ContinuousConvOpKernel::interpolation</a></div><div class="ttdeci">open3d::ml::impl::InterpolationMode interpolation</div><div class="ttdef"><b>Definition:</b> ContinuousConvOpKernel.h:187</div></div>
<div class="ttc" id="aclass_continuous_conv_op_kernel_html_a59c09ca9b652e5f1df0c1fe0599686ce"><div class="ttname"><a href="class_continuous_conv_op_kernel.html#a59c09ca9b652e5f1df0c1fe0599686ce">ContinuousConvOpKernel::Compute</a></div><div class="ttdeci">void Compute(tensorflow::OpKernelContext *context) override</div><div class="ttdef"><b>Definition:</b> ContinuousConvOpKernel.h:55</div></div>
<div class="ttc" id="aclass_continuous_conv_op_kernel_html_a80d62ccb921a1088071efab4b2a29025"><div class="ttname"><a href="class_continuous_conv_op_kernel.html#a80d62ccb921a1088071efab4b2a29025">ContinuousConvOpKernel::align_corners</a></div><div class="ttdeci">bool align_corners</div><div class="ttdef"><b>Definition:</b> ContinuousConvOpKernel.h:185</div></div>
<div class="ttc" id="aclass_continuous_conv_op_kernel_html_a89323d80be650bddb66e3b0fbafdd8ac"><div class="ttname"><a href="class_continuous_conv_op_kernel.html#a89323d80be650bddb66e3b0fbafdd8ac">ContinuousConvOpKernel::Kernel</a></div><div class="ttdeci">virtual void Kernel(tensorflow::OpKernelContext *context, const tensorflow::Tensor &amp;filter, const tensorflow::Tensor &amp;out_positions, const tensorflow::Tensor &amp;extents, const tensorflow::Tensor &amp;offset, const tensorflow::Tensor &amp;inp_positions, const tensorflow::Tensor &amp;inp_features, const tensorflow::Tensor &amp;inp_importance, const tensorflow::Tensor &amp;neighbors_index, const tensorflow::Tensor &amp;neighbors_importance, const tensorflow::Tensor &amp;neighbors_row_splits, const std::vector&lt; int &gt; &amp;filter_dims, const bool individual_extents, const bool isotropic_extents, const bool point_importances, const bool has_neighbors_importances, tensorflow::Tensor &amp;out_features)=0</div></div>
<div class="ttc" id="aclass_continuous_conv_op_kernel_html_a8e129d182952df4a596d04472e91490a"><div class="ttname"><a href="class_continuous_conv_op_kernel.html#a8e129d182952df4a596d04472e91490a">ContinuousConvOpKernel::ContinuousConvOpKernel</a></div><div class="ttdeci">ContinuousConvOpKernel(tensorflow::OpKernelConstruction *construction)</div><div class="ttdef"><b>Definition:</b> ContinuousConvOpKernel.h:18</div></div>
<div class="ttc" id="aclass_continuous_conv_op_kernel_html_ac58fc9834624cf5423bb7c793376d259"><div class="ttname"><a href="class_continuous_conv_op_kernel.html#ac58fc9834624cf5423bb7c793376d259">ContinuousConvOpKernel::max_temp_mem_MB</a></div><div class="ttdeci">int max_temp_mem_MB</div><div class="ttdef"><b>Definition:</b> ContinuousConvOpKernel.h:189</div></div>
<div class="ttc" id="aclass_continuous_conv_op_kernel_html_acbf03fa1dc6204d95c6e72a74b396207"><div class="ttname"><a href="class_continuous_conv_op_kernel.html#acbf03fa1dc6204d95c6e72a74b396207">ContinuousConvOpKernel::coordinate_mapping</a></div><div class="ttdeci">open3d::ml::impl::CoordinateMapping coordinate_mapping</div><div class="ttdef"><b>Definition:</b> ContinuousConvOpKernel.h:188</div></div>
<div class="ttc" id="aio_2file__format_2_file_p_c_d_8cpp_html_aed7ea92f45bd273dde380a45ddced592"><div class="ttname"><a href="io_2file__format_2_file_p_c_d_8cpp.375.delay#aed7ea92f45bd273dde380a45ddced592">offset</a></div><div class="ttdeci">int offset</div><div class="ttdef"><b>Definition:</b> FilePCD.cpp:45</div></div>
<div class="ttc" id="anamespaceopen3d_1_1io_1_1k4a__plugin_html_a56444bbf00a8b57cbf3aaef24f882123"><div class="ttname"><a href="namespaceopen3d_1_1io_1_1k4a__plugin.362.del#a56444bbf00a8b57cbf3aaef24f882123">open3d::io::k4a_plugin::int</a></div><div class="ttdeci">const char const char value recording_handle imu_sample recording_handle uint8_t size_t data_size k4a_record_configuration_t config target_format k4a_capture_t capture_handle k4a_imu_sample_t imu_sample playback_handle k4a_logging_message_cb_t void min_level device_handle k4a_imu_sample_t timeout_in_ms capture_handle capture_handle capture_handle image_handle temperature_c int</div><div class="ttdef"><b>Definition:</b> K4aPlugin.cpp:474</div></div>
<div class="ttc" id="anamespaceopen3d_1_1ml_1_1impl_html"><div class="ttname"><a href="namespaceopen3d_1_1ml_1_1impl.html">open3d::ml::impl</a></div><div class="ttdef"><b>Definition:</b> ContinuousConv.h:16</div></div>
<div class="ttc" id="anamespaceopen3d_1_1ml_1_1impl_html_a1cdea72ec606986b7ada2e619ea41a8d"><div class="ttname"><a href="namespaceopen3d_1_1ml_1_1impl.html#a1cdea72ec606986b7ada2e619ea41a8d">open3d::ml::impl::InterpolationMode</a></div><div class="ttdeci">InterpolationMode</div><div class="ttdef"><b>Definition:</b> ContinuousConvTypes.h:18</div></div>
<div class="ttc" id="anamespaceopen3d_1_1ml_1_1impl_html_a2902d456779f799905d50574750e1f62a4c3ea169e4887079fcee81e2d9c07a60"><div class="ttname"><a href="namespaceopen3d_1_1ml_1_1impl.html#a2902d456779f799905d50574750e1f62a4c3ea169e4887079fcee81e2d9c07a60">open3d::ml::impl::NEAREST_NEIGHBOR</a></div><div class="ttdeci">@ NEAREST_NEIGHBOR</div><div class="ttdef"><b>Definition:</b> VoxelPooling.h:21</div></div>
<div class="ttc" id="anamespaceopen3d_1_1ml_1_1impl_html_ad39d07a9288168e9ecab8f34e24d27fb"><div class="ttname"><a href="namespaceopen3d_1_1ml_1_1impl.html#ad39d07a9288168e9ecab8f34e24d27fb">open3d::ml::impl::CoordinateMapping</a></div><div class="ttdeci">CoordinateMapping</div><div class="ttdef"><b>Definition:</b> ContinuousConvTypes.h:26</div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1
</small></address>
</body>

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/tensorflow_2continuous__conv_2_continuous_conv_op_kernel_8h_source.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 11:04:53 GMT -->
</html>
