<!-- HTML header for doxygen 1.8.20-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/geometry_2_triangle_mesh_8h_source.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 10:59:35 GMT -->
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Open3D (C++ API): /home/runner/work/Open3D/Open3D/cpp/open3d/geometry/TriangleMesh.h (9238339 (Tue Mar 14 18:49:09 2023 -0700)) Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js", "TeX/AMSmath.html", "TeX/AMSsymbols.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="../../../../cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-3TQPKGV6Z3"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());
  gtag('config', 'G-3TQPKGV6Z3');
</script>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="open3d_logo.ico"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Open3D (C++ API)
   &#160;<span id="projectnumber">0.17.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.html');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.html','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_df511e5bd85cec96854b39d5e1c27aa8.357.del">cpp</a></li><li class="navelem"><a class="el" href="dir_f8cc15b2217ff526bd336cf17635da2a.358.del">open3d</a></li><li class="navelem"><a class="el" href="dir_994f1f35ad2aae0ba3c500b516f587eb.4d3.del">geometry</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">TriangleMesh.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="geometry_2_triangle_mesh_8h.html">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">// ----------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// -                        Open3D: www.open3d.org                            -</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// ----------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">// Copyright (c) 2018-2023 www.open3d.org</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">// SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">// ----------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160; </div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160; </div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &lt;Eigen/Core&gt;</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &lt;memory&gt;</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &lt;numeric&gt;</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor">#include &lt;tuple&gt;</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="preprocessor">#include &lt;unordered_map&gt;</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="preprocessor">#include &lt;unordered_set&gt;</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160; </div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="geometry_2_image_8h.html">open3d/geometry/Image.h</a>&quot;</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_mesh_base_8h.html">open3d/geometry/MeshBase.h</a>&quot;</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="utility_2_helper_8h.html">open3d/utility/Helper.h</a>&quot;</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160; </div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceopen3d.html">open3d</a> {</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="keyword">namespace </span>geometry {</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160; </div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="keyword">class </span>PointCloud;</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="keyword">class </span>TetraMesh;</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160; </div>
<div class="line"><a name="l00035"></a><span class="lineno"><a class="line" href="classopen3d_1_1geometry_1_1_triangle_mesh.40">   35</a></span>&#160;<span class="keyword">class </span><a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40">TriangleMesh</a> : <span class="keyword">public</span> <a class="code" href="classopen3d_1_1geometry_1_1_mesh_base.412.de">MeshBase</a> {</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00038"></a><span class="lineno"><a class="line" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#ae2d8c6f82481d56ba06e849991261924">   38</a></span>&#160;    <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#ae2d8c6f82481d56ba06e849991261924">TriangleMesh</a>() : <a class="code" href="classopen3d_1_1geometry_1_1_mesh_base.412.de">MeshBase</a>(<a class="code" href="classopen3d_1_1geometry_1_1_geometry.400.del">Geometry</a>::<a class="code" href="classopen3d_1_1geometry_1_1_geometry.400.del#a69975c2b054d4fd12cf36866a030ed8e">GeometryType</a>::<a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40">TriangleMesh</a>) {}</div>
<div class="line"><a name="l00043"></a><span class="lineno"><a class="line" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#ad1f5666200f972bed5b78dd3b0e1f9ec">   43</a></span>&#160;    <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#ad1f5666200f972bed5b78dd3b0e1f9ec">TriangleMesh</a>(<span class="keyword">const</span> std::vector&lt;Eigen::Vector3d&gt; &amp;vertices,</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;                 <span class="keyword">const</span> std::vector&lt;Eigen::Vector3i&gt; &amp;triangles)</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;        : <a class="code" href="classopen3d_1_1geometry_1_1_mesh_base.412.de">MeshBase</a>(<a class="code" href="classopen3d_1_1geometry_1_1_geometry.400.del">Geometry</a>::<a class="code" href="classopen3d_1_1geometry_1_1_geometry.400.del#a69975c2b054d4fd12cf36866a030ed8e">GeometryType</a>::<a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40">TriangleMesh</a>, vertices),</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;          <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a7dcddd5784eaa2efedfa5e274aa50e3e">triangles_</a>(triangles) {}</div>
<div class="line"><a name="l00047"></a><span class="lineno"><a class="line" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a7046aa1902fbc4e5688109930402ca5d">   47</a></span>&#160;    <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a7046aa1902fbc4e5688109930402ca5d">~TriangleMesh</a>()<span class="keyword"> override </span>{}</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160; </div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <span class="keyword">virtual</span> <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40">TriangleMesh</a> &amp;<a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a4ea92820de31c1fcbf62e5c6d9516540">Clear</a>() <span class="keyword">override</span>;</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="keyword">virtual</span> <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40">TriangleMesh</a> &amp;<a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a76a6954168e7b35c70cdcd0f98086783">Transform</a>(</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;            <span class="keyword">const</span> Eigen::Matrix4d &amp;transformation) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <span class="keyword">virtual</span> <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40">TriangleMesh</a> &amp;<a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a039c1d00b33423cb5371d6ba157557a1">Rotate</a>(<span class="keyword">const</span> Eigen::Matrix3d &amp;R,</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;                                 <span class="keyword">const</span> Eigen::Vector3d &amp;center) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160; </div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40">TriangleMesh</a> &amp;<a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a1eb4bc21a1a623c719892967d996e314">operator+=</a>(<span class="keyword">const</span> <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40">TriangleMesh</a> &amp;mesh);</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40">TriangleMesh</a> <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#ae24042df732dd8cd2b8272c7302a1154">operator+</a>(<span class="keyword">const</span> <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40">TriangleMesh</a> &amp;mesh) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160; </div>
<div class="line"><a name="l00061"></a><span class="lineno"><a class="line" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a46f81b23e6538ab3d984824e93fb6e8c">   61</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a46f81b23e6538ab3d984824e93fb6e8c">HasTriangles</a>()<span class="keyword"> const </span>{</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classopen3d_1_1geometry_1_1_mesh_base.412.de#a004aeef2268433b07feb4ee32e560292">vertices_</a>.size() &gt; 0 &amp;&amp; <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a7dcddd5784eaa2efedfa5e274aa50e3e">triangles_</a>.size() &gt; 0;</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    }</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160; </div>
<div class="line"><a name="l00066"></a><span class="lineno"><a class="line" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#ab6b745727a70875ba9bd3e8b706c131d">   66</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#ab6b745727a70875ba9bd3e8b706c131d">HasTriangleNormals</a>()<span class="keyword"> const </span>{</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a46f81b23e6538ab3d984824e93fb6e8c">HasTriangles</a>() &amp;&amp; <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a7dcddd5784eaa2efedfa5e274aa50e3e">triangles_</a>.size() == <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a90341a2a76590e3a9ce4d507d3a2285c">triangle_normals_</a>.size();</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    }</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160; </div>
<div class="line"><a name="l00071"></a><span class="lineno"><a class="line" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#ac5109ef64ef2e20467e1560935e8ccfb">   71</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#ac5109ef64ef2e20467e1560935e8ccfb">HasAdjacencyList</a>()<span class="keyword"> const </span>{</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classopen3d_1_1geometry_1_1_mesh_base.412.de#a004aeef2268433b07feb4ee32e560292">vertices_</a>.size() &gt; 0 &amp;&amp;</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;               <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a37984016ded7bbceb893c5dba0e8b6c8">adjacency_list_</a>.size() == <a class="code" href="classopen3d_1_1geometry_1_1_mesh_base.412.de#a004aeef2268433b07feb4ee32e560292">vertices_</a>.size();</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    }</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160; </div>
<div class="line"><a name="l00076"></a><span class="lineno"><a class="line" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a84d50d05a4904038823231aa8252c4d2">   76</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a84d50d05a4904038823231aa8252c4d2">HasTriangleUvs</a>()<span class="keyword"> const </span>{</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a46f81b23e6538ab3d984824e93fb6e8c">HasTriangles</a>() &amp;&amp; <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a6da74c05d87cfef5ca025b39d8e6efc3">triangle_uvs_</a>.size() == 3 * <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a7dcddd5784eaa2efedfa5e274aa50e3e">triangles_</a>.size();</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    }</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160; </div>
<div class="line"><a name="l00081"></a><span class="lineno"><a class="line" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a7ec00b3beae972048fa4a3e1f711b548">   81</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a7ec00b3beae972048fa4a3e1f711b548">HasTextures</a>()<span class="keyword"> const </span>{</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;        <span class="keywordtype">bool</span> is_all_texture_valid = std::accumulate(</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;                <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a0babf96deb5056e1b36b5ee3517d0a80">textures_</a>.begin(), <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a0babf96deb5056e1b36b5ee3517d0a80">textures_</a>.end(), <span class="keyword">true</span>,</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;                [](<span class="keywordtype">bool</span> a, <span class="keyword">const</span> <a class="code" href="classopen3d_1_1geometry_1_1_image.406.delaye">Image</a> &amp;b) { return a &amp;&amp; !b.IsEmpty(); });</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;        <span class="keywordflow">return</span> !<a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a0babf96deb5056e1b36b5ee3517d0a80">textures_</a>.empty() &amp;&amp; is_all_texture_valid;</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    }</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160; </div>
<div class="line"><a name="l00088"></a><span class="lineno"><a class="line" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#afc871b155b0282561652ab8db5ac5cc0">   88</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#afc871b155b0282561652ab8db5ac5cc0">HasMaterials</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> !<a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#aa415bc74025604428db8b7d2f97b5d8d">materials_</a>.empty(); }</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160; </div>
<div class="line"><a name="l00090"></a><span class="lineno"><a class="line" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a66abc01744c37d5eeefe0d7b6d3d8c8e">   90</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a66abc01744c37d5eeefe0d7b6d3d8c8e">HasTriangleMaterialIds</a>()<span class="keyword"> const </span>{</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a46f81b23e6538ab3d984824e93fb6e8c">HasTriangles</a>() &amp;&amp;</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;               <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#ade007ba5e10cb3c60c9d7f4d2e8f2611">triangle_material_ids_</a>.size() == <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a7dcddd5784eaa2efedfa5e274aa50e3e">triangles_</a>.size();</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    }</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160; </div>
<div class="line"><a name="l00096"></a><span class="lineno"><a class="line" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#ac701002ed8fbbf5ec30c261338794501">   96</a></span>&#160;    <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40">TriangleMesh</a> &amp;<a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#ac701002ed8fbbf5ec30c261338794501">NormalizeNormals</a>() {</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        <a class="code" href="classopen3d_1_1geometry_1_1_mesh_base.412.de#ab0f5f6dc5af988b69c7d9f7ac4294bea">MeshBase::NormalizeNormals</a>();</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> i = 0; i &lt; <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a90341a2a76590e3a9ce4d507d3a2285c">triangle_normals_</a>.size(); i++) {</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;            <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a90341a2a76590e3a9ce4d507d3a2285c">triangle_normals_</a>[i].normalize();</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;            <span class="keywordflow">if</span> (std::isnan(<a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a90341a2a76590e3a9ce4d507d3a2285c">triangle_normals_</a>[i](0))) {</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;                <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a90341a2a76590e3a9ce4d507d3a2285c">triangle_normals_</a>[i] = Eigen::Vector3d(0.0, 0.0, 1.0);</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;            }</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        }</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    }</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160; </div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40">TriangleMesh</a> &amp;<a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#af324cfbefa0bed22b0325a2a34bf6069">ComputeTriangleNormals</a>(<span class="keywordtype">bool</span> normalized = <span class="keyword">true</span>);</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160; </div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40">TriangleMesh</a> &amp;<a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a4b31309a8d8c1f94a7ff0434a884f0eb">ComputeVertexNormals</a>(<span class="keywordtype">bool</span> normalized = <span class="keyword">true</span>);</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160; </div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40">TriangleMesh</a> &amp;<a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#acf0f8d836ee1eea6ecc540c43bc1e9d1">ComputeAdjacencyList</a>();</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160; </div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40">TriangleMesh</a> &amp;<a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a34f090ed23456400c4192992d199bdad">RemoveDuplicatedVertices</a>();</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160; </div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40">TriangleMesh</a> &amp;<a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a9514b3c8075e0066fd041a853f23f0b7">RemoveDuplicatedTriangles</a>();</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160; </div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40">TriangleMesh</a> &amp;<a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#aab1782c3de14f8553de0a946b8900bce">RemoveUnreferencedVertices</a>();</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160; </div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40">TriangleMesh</a> &amp;<a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#aa49a80312d128fbfa70eeb8525cc24ec">RemoveDegenerateTriangles</a>();</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160; </div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40">TriangleMesh</a> &amp;<a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a0a667e04a73010d302eb60af0ea1cbf9">RemoveNonManifoldEdges</a>();</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160; </div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40">TriangleMesh</a> &amp;<a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a51a42d9e899de697300c602bc8ad9251">MergeCloseVertices</a>(<span class="keywordtype">double</span> eps);</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160; </div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    std::shared_ptr&lt;TriangleMesh&gt; <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#add35eb810d82fe03e39dfb3984ccdc96">FilterSharpen</a>(</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;            <span class="keywordtype">int</span> number_of_iterations,</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;            <span class="keywordtype">double</span> strength,</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;            <a class="code" href="classopen3d_1_1geometry_1_1_mesh_base.412.de#af63b2a09012544530c370e7a3828c89c">FilterScope</a> scope = <a class="code" href="classopen3d_1_1geometry_1_1_mesh_base.412.de#af63b2a09012544530c370e7a3828c89cab1c94ca2fbc3e78fc30069c8d0f01680">FilterScope::All</a>) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160; </div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    std::shared_ptr&lt;TriangleMesh&gt; <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#ae15d30fa98b93c2ebc365380e3b3ebe8">FilterSmoothSimple</a>(</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;            <span class="keywordtype">int</span> number_of_iterations,</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;            <a class="code" href="classopen3d_1_1geometry_1_1_mesh_base.412.de#af63b2a09012544530c370e7a3828c89c">FilterScope</a> scope = <a class="code" href="classopen3d_1_1geometry_1_1_mesh_base.412.de#af63b2a09012544530c370e7a3828c89cab1c94ca2fbc3e78fc30069c8d0f01680">FilterScope::All</a>) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160; </div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    std::shared_ptr&lt;TriangleMesh&gt; <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#af2667927e4b8f4a62a635a1a2f490eb8">FilterSmoothLaplacian</a>(</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;            <span class="keywordtype">int</span> number_of_iterations,</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;            <span class="keywordtype">double</span> lambda_filter,</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;            <a class="code" href="classopen3d_1_1geometry_1_1_mesh_base.412.de#af63b2a09012544530c370e7a3828c89c">FilterScope</a> scope = <a class="code" href="classopen3d_1_1geometry_1_1_mesh_base.412.de#af63b2a09012544530c370e7a3828c89cab1c94ca2fbc3e78fc30069c8d0f01680">FilterScope::All</a>) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160; </div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    std::shared_ptr&lt;TriangleMesh&gt; <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a20ed81f5e181b8342239b3d7c5ec1a90">FilterSmoothTaubin</a>(</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;            <span class="keywordtype">int</span> number_of_iterations,</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;            <span class="keywordtype">double</span> lambda_filter = 0.5,</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;            <span class="keywordtype">double</span> mu = -0.53,</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;            <a class="code" href="classopen3d_1_1geometry_1_1_mesh_base.412.de#af63b2a09012544530c370e7a3828c89c">FilterScope</a> scope = <a class="code" href="classopen3d_1_1geometry_1_1_mesh_base.412.de#af63b2a09012544530c370e7a3828c89cab1c94ca2fbc3e78fc30069c8d0f01680">FilterScope::All</a>) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160; </div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    <span class="keywordtype">int</span> <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a601b6d4b19f75e1677af5d02e881e2f3">EulerPoincareCharacteristic</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160; </div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;    std::vector&lt;Eigen::Vector2i&gt; <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a9e78ff8b6358ef24f5285e6bbc863e61">GetNonManifoldEdges</a>(</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;            <span class="keywordtype">bool</span> allow_boundary_edges = <span class="keyword">true</span>) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160; </div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a41b5ac2ab386ac85bfe056f0bf22bab9">IsEdgeManifold</a>(<span class="keywordtype">bool</span> allow_boundary_edges = <span class="keyword">true</span>) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160; </div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    std::vector&lt;int&gt; <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#af589b9fdfa2885c95a15977dd0874a24">GetNonManifoldVertices</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160; </div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a292f2d129637b15598fbbeec0b6b57e1">IsVertexManifold</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160; </div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;    std::vector&lt;Eigen::Vector2i&gt; <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a2895032074c34dd9375e3d3eecc81718">GetSelfIntersectingTriangles</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160; </div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#ae5ee35dd23c4a786be63e3da3f305062">IsSelfIntersecting</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160; </div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a0597075686ecda8953d33f3cbe57c385">IsBoundingBoxIntersecting</a>(<span class="keyword">const</span> <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40">TriangleMesh</a> &amp;other) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160; </div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#ac5abd918be627b6397bd8c149a0b0e47">IsIntersecting</a>(<span class="keyword">const</span> <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40">TriangleMesh</a> &amp;other) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160; </div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a7c336042cff2009101c6611a518abadd">IsOrientable</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160; </div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#abbf57ddb4e13f2ceb33e6785cc864a46">IsWatertight</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160; </div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a804035e82e0a721c23321c63d1697cfc">OrientTriangles</a>();</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160; </div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;    std::unordered_map&lt;Eigen::Vector2i,</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;                       std::vector&lt;int&gt;,</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;                       <a class="code" href="structopen3d_1_1utility_1_1hash__eigen.44c.d">utility::hash_eigen&lt;Eigen::Vector2i&gt;</a>&gt;</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;    <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a652be3b74a111590f1f41d1bdad8ec14">GetEdgeToTrianglesMap</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160; </div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;    std::unordered_map&lt;Eigen::Vector2i,</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;                       std::vector&lt;int&gt;,</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;                       <a class="code" href="structopen3d_1_1utility_1_1hash__eigen.44c.d">utility::hash_eigen&lt;Eigen::Vector2i&gt;</a>&gt;</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;    <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#ade21d10ceaf1299ea18d192f0668dd6f">GetEdgeToVerticesMap</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160; </div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;    <span class="keyword">static</span> <span class="keywordtype">double</span> <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a0d704fcb8fe632b9d4f310766870a51e">ComputeTriangleArea</a>(<span class="keyword">const</span> Eigen::Vector3d &amp;p0,</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;                                      <span class="keyword">const</span> Eigen::Vector3d &amp;p1,</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;                                      <span class="keyword">const</span> Eigen::Vector3d &amp;p2);</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160; </div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;    <span class="keywordtype">double</span> <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#ac91258e5fa363de720104f55d86ab793">GetTriangleArea</a>(<span class="keywordtype">size_t</span> triangle_idx) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160; </div>
<div class="line"><a name="l00291"></a><span class="lineno"><a class="line" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#ad5ce14c4c8ab19d08a179d58533c94bd">  291</a></span>&#160;    <span class="keyword">static</span> <span class="keyword">inline</span> Eigen::Vector3i <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#ad5ce14c4c8ab19d08a179d58533c94bd">GetOrderedTriangle</a>(<span class="keywordtype">int</span> vidx0,</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;                                                     <span class="keywordtype">int</span> vidx1,</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;                                                     <span class="keywordtype">int</span> vidx2) {</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;        <span class="keywordflow">if</span> (vidx0 &gt; vidx2) {</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;            <a class="code" href="namespacestd.html#ab5696ffa0858c1b1217180ee38205f3b">std::swap</a>(vidx0, vidx2);</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;        }</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;        <span class="keywordflow">if</span> (vidx0 &gt; vidx1) {</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;            <a class="code" href="namespacestd.html#ab5696ffa0858c1b1217180ee38205f3b">std::swap</a>(vidx0, vidx1);</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;        }</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;        <span class="keywordflow">if</span> (vidx1 &gt; vidx2) {</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;            <a class="code" href="namespacestd.html#ab5696ffa0858c1b1217180ee38205f3b">std::swap</a>(vidx1, vidx2);</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;        }</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;        <span class="keywordflow">return</span> Eigen::Vector3i(vidx0, vidx1, vidx2);</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;    }</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160; </div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;    <span class="keywordtype">double</span> <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#af3e5e2bcce2ae099a91bec61692b191a">GetSurfaceArea</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160; </div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;    <span class="keywordtype">double</span> <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#af3e5e2bcce2ae099a91bec61692b191a">GetSurfaceArea</a>(std::vector&lt;double&gt; &amp;triangle_areas) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160; </div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;    <span class="keywordtype">double</span> <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a18a4bfec706044d1c97edd2df30d9e98">GetVolume</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160; </div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;    <span class="keyword">static</span> Eigen::Vector4d <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a46707c4a7e41d4e82fc0460d3c568bda">ComputeTrianglePlane</a>(<span class="keyword">const</span> Eigen::Vector3d &amp;p0,</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;                                                <span class="keyword">const</span> Eigen::Vector3d &amp;p1,</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;                                                <span class="keyword">const</span> Eigen::Vector3d &amp;p2);</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160; </div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;    Eigen::Vector4d <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#ae0fdc61d44a6569a0b66afa3f4a10229">GetTrianglePlane</a>(<span class="keywordtype">size_t</span> triangle_idx) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160; </div>
<div class="line"><a name="l00332"></a><span class="lineno"><a class="line" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a52db96d3c6e509bac5a2ceecc9d8c1cc">  332</a></span>&#160;    <span class="keyword">static</span> <span class="keyword">inline</span> Eigen::Vector2i <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a52db96d3c6e509bac5a2ceecc9d8c1cc">GetOrderedEdge</a>(<span class="keywordtype">int</span> vidx0, <span class="keywordtype">int</span> vidx1) {</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;        <span class="keywordflow">return</span> Eigen::Vector2i(std::min(vidx0, vidx1), std::max(vidx0, vidx1));</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;    }</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160; </div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;    std::shared_ptr&lt;PointCloud&gt; <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a1568965f2cb441cf6439b7ee57cd2929">SamplePointsUniformlyImpl</a>(</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;            <span class="keywordtype">size_t</span> number_of_points,</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;            std::vector&lt;double&gt; &amp;triangle_areas,</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;            <span class="keywordtype">double</span> surface_area,</div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;            <span class="keywordtype">bool</span> use_triangle_normal);</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160; </div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;    std::shared_ptr&lt;PointCloud&gt; <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a2536a9b85f8060c7468da8378d696057">SamplePointsUniformly</a>(</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;            <span class="keywordtype">size_t</span> number_of_points, <span class="keywordtype">bool</span> use_triangle_normal = <span class="keyword">false</span>);</div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160; </div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;    std::shared_ptr&lt;PointCloud&gt; <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a28e1b29798f6e04d80de9e2638bf1c96">SamplePointsPoissonDisk</a>(</div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;            <span class="keywordtype">size_t</span> number_of_points,</div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;            <span class="keywordtype">double</span> init_factor = 5,</div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;            <span class="keyword">const</span> std::shared_ptr&lt;PointCloud&gt; pcl_init = <span class="keyword">nullptr</span>,</div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;            <span class="keywordtype">bool</span> use_triangle_normal = <span class="keyword">false</span>);</div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160; </div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;    std::shared_ptr&lt;TriangleMesh&gt; <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a10c0abffb559c91c5f4f5d50b8a2c1a4">SubdivideMidpoint</a>(</div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;            <span class="keywordtype">int</span> number_of_iterations) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160; </div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;    std::shared_ptr&lt;TriangleMesh&gt; <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a19c4ef9c1c9229213ecd05a15845d4d4">SubdivideLoop</a>(<span class="keywordtype">int</span> number_of_iterations) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160; </div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;    std::shared_ptr&lt;TriangleMesh&gt; <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a5dd07290669043643698e660d9e670ce">SimplifyVertexClustering</a>(</div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;            <span class="keywordtype">double</span> voxel_size,</div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;            <a class="code" href="classopen3d_1_1geometry_1_1_mesh_base.412.de#a84f9db88a4d0d23d755136ddfa7e6bd7">SimplificationContraction</a> contraction =</div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;                    <a class="code" href="classopen3d_1_1geometry_1_1_mesh_base.412.de#a84f9db88a4d0d23d755136ddfa7e6bd7ab1897515d548a960afe49ecf66a29021">SimplificationContraction::Average</a>) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160; </div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;    std::shared_ptr&lt;TriangleMesh&gt; <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#ab2a96a4bc20b515c111e3e756d7e4d1e">SimplifyQuadricDecimation</a>(</div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;            <span class="keywordtype">int</span> target_number_of_triangles,</div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;            <span class="keywordtype">double</span> maximum_error,</div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;            <span class="keywordtype">double</span> boundary_weight) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160; </div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;    std::shared_ptr&lt;TriangleMesh&gt; <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a64a0a850d21ec4d0fa297787ae28868c">SelectByIndex</a>(</div>
<div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;            <span class="keyword">const</span> std::vector&lt;size_t&gt; &amp;indices, <span class="keywordtype">bool</span> cleanup = <span class="keyword">true</span>) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160; </div>
<div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;    std::shared_ptr&lt;TriangleMesh&gt; <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a8f547f8869c3094427a184c5fa2ac519">Crop</a>(</div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;            <span class="keyword">const</span> <a class="code" href="classopen3d_1_1geometry_1_1_axis_aligned_bou">AxisAlignedBoundingBox</a> &amp;bbox) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160; </div>
<div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;    std::shared_ptr&lt;TriangleMesh&gt; <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a8f547f8869c3094427a184c5fa2ac519">Crop</a>(<span class="keyword">const</span> <a class="code" href="classopen3d_1_1geometry_1_1_oriented_boundin">OrientedBoundingBox</a> &amp;bbox) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160; </div>
<div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;    std::tuple&lt;std::vector&lt;int&gt;, std::vector&lt;size_t&gt;, std::vector&lt;double&gt;&gt;</div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;    <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a15ffe6ee562b74d1d48786c97f55bb0e">ClusterConnectedTriangles</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160; </div>
<div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a41c51a951a1ee0110a48b2ef7757b43c">RemoveTrianglesByIndex</a>(<span class="keyword">const</span> std::vector&lt;size_t&gt; &amp;triangle_indices);</div>
<div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160; </div>
<div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#af88fb06b3e541042a8f9f29e1c0e64de">RemoveTrianglesByMask</a>(<span class="keyword">const</span> std::vector&lt;bool&gt; &amp;triangle_mask);</div>
<div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160; </div>
<div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a4b3d0d742b2d0fd200b40b852890f5ff">RemoveVerticesByIndex</a>(<span class="keyword">const</span> std::vector&lt;size_t&gt; &amp;vertex_indices);</div>
<div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160; </div>
<div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a685b36e7ec28d4dd6655f5a2e72802ab">RemoveVerticesByMask</a>(<span class="keyword">const</span> std::vector&lt;bool&gt; &amp;vertex_mask);</div>
<div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160; </div>
<div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;    std::shared_ptr&lt;TriangleMesh&gt; <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#aa52410a1d4ce4f94955d3a15130d7400">DeformAsRigidAsPossible</a>(</div>
<div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;            <span class="keyword">const</span> std::vector&lt;int&gt; &amp;constraint_vertex_indices,</div>
<div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;            <span class="keyword">const</span> std::vector&lt;Eigen::Vector3d&gt; &amp;constraint_vertex_positions,</div>
<div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;            <span class="keywordtype">size_t</span> max_iter,</div>
<div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;            <a class="code" href="classopen3d_1_1geometry_1_1_mesh_base.412.de#a6f7e206d12e10f059ca530cd04c4d07a">DeformAsRigidAsPossibleEnergy</a> energy =</div>
<div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;                    <a class="code" href="classopen3d_1_1geometry_1_1_mesh_base.412.de#a6f7e206d12e10f059ca530cd04c4d07aa111552792d2df37209e4e9815a8524a8">DeformAsRigidAsPossibleEnergy::Spokes</a>,</div>
<div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;            <span class="keywordtype">double</span> smoothed_alpha = 0.01) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160; </div>
<div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;    <span class="keyword">static</span> std::shared_ptr&lt;TriangleMesh&gt; <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a5965a7bc530e8063507ca47a337c473a">CreateFromPointCloudAlphaShape</a>(</div>
<div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;            <span class="keyword">const</span> <a class="code" href="classopen3d_1_1geometry_1_1_point_cloud.41b">PointCloud</a> &amp;pcd,</div>
<div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;            <span class="keywordtype">double</span> alpha,</div>
<div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;            std::shared_ptr&lt;TetraMesh&gt; tetra_mesh = <span class="keyword">nullptr</span>,</div>
<div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;            std::vector&lt;size_t&gt; *pt_map = <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160; </div>
<div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;    <span class="keyword">static</span> std::shared_ptr&lt;TriangleMesh&gt; <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a6ab3d477f56928c447e28913484cf3c9">CreateFromPointCloudBallPivoting</a>(</div>
<div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;            <span class="keyword">const</span> <a class="code" href="classopen3d_1_1geometry_1_1_point_cloud.41b">PointCloud</a> &amp;pcd, <span class="keyword">const</span> std::vector&lt;double&gt; &amp;radii);</div>
<div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160; </div>
<div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;    <span class="keyword">static</span> std::tuple&lt;std::shared_ptr&lt;TriangleMesh&gt;, std::vector&lt;double&gt;&gt;</div>
<div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;    <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a4dacf0b62186999a6449f7332a1a5d54">CreateFromPointCloudPoisson</a>(<span class="keyword">const</span> <a class="code" href="classopen3d_1_1geometry_1_1_point_cloud.41b">PointCloud</a> &amp;pcd,</div>
<div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;                                <span class="keywordtype">size_t</span> depth = 8,</div>
<div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;                                <span class="keywordtype">float</span> <a class="code" href="io_2file__format_2_file_p_c_d_8cpp.375.delay#a2474a5474cbff19523a51eb1de01cda4">width</a> = 0.0f,</div>
<div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;                                <span class="keywordtype">float</span> scale = 1.1f,</div>
<div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;                                <span class="keywordtype">bool</span> linear_fit = <span class="keyword">false</span>,</div>
<div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;                                <span class="keywordtype">int</span> n_threads = -1);</div>
<div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160; </div>
<div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;    <span class="keyword">static</span> std::shared_ptr&lt;TriangleMesh&gt; <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a7887ba3429f25dd882d4445cade594b1">CreateTetrahedron</a>(</div>
<div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;            <span class="keywordtype">double</span> radius = 1.0, <span class="keywordtype">bool</span> create_uv_map = <span class="keyword">false</span>);</div>
<div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160; </div>
<div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;    <span class="keyword">static</span> std::shared_ptr&lt;TriangleMesh&gt; <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a93952e5fd1b8c30d6a9205a2aab55da6">CreateOctahedron</a>(</div>
<div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;            <span class="keywordtype">double</span> radius = 1.0, <span class="keywordtype">bool</span> create_uv_map = <span class="keyword">false</span>);</div>
<div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160; </div>
<div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;    <span class="keyword">static</span> std::shared_ptr&lt;TriangleMesh&gt; <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a1a4d59a4dc7706d6dc2497030ec983d3">CreateIcosahedron</a>(</div>
<div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;            <span class="keywordtype">double</span> radius = 1.0, <span class="keywordtype">bool</span> create_uv_map = <span class="keyword">false</span>);</div>
<div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160; </div>
<div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;    <span class="keyword">static</span> std::shared_ptr&lt;TriangleMesh&gt; <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a9e7518102a6d34c351a0d2746bd97751">CreateFromOrientedBoundingBox</a>(</div>
<div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;            <span class="keyword">const</span> <a class="code" href="classopen3d_1_1geometry_1_1_oriented_boundin">OrientedBoundingBox</a> &amp;obox,</div>
<div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;            <span class="keyword">const</span> Eigen::Vector3d &amp;scale = Eigen::Vector3d::Ones(),</div>
<div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;            <span class="keywordtype">bool</span> create_uv_map = <span class="keyword">false</span>);</div>
<div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160; </div>
<div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;    <span class="keyword">static</span> std::shared_ptr&lt;TriangleMesh&gt; <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#af021770830e75cc803dc449a3d7ea9d6">CreateBox</a>(</div>
<div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;            <span class="keywordtype">double</span> <a class="code" href="io_2file__format_2_file_p_c_d_8cpp.375.delay#a2474a5474cbff19523a51eb1de01cda4">width</a> = 1.0,</div>
<div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;            <span class="keywordtype">double</span> <a class="code" href="io_2file__format_2_file_p_c_d_8cpp.375.delay#ad12fc34ce789bce6c8a05d8a17138534">height</a> = 1.0,</div>
<div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;            <span class="keywordtype">double</span> depth = 1.0,</div>
<div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;            <span class="keywordtype">bool</span> create_uv_map = <span class="keyword">false</span>,</div>
<div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;            <span class="keywordtype">bool</span> map_texture_to_each_face = <span class="keyword">false</span>);</div>
<div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160; </div>
<div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;    <span class="keyword">static</span> std::shared_ptr&lt;TriangleMesh&gt; <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#afc3d6d87ae64e86a20c90e134424ad04">CreateSphere</a>(</div>
<div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;            <span class="keywordtype">double</span> radius = 1.0,</div>
<div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;            <span class="keywordtype">int</span> resolution = 20,</div>
<div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;            <span class="keywordtype">bool</span> create_uv_map = <span class="keyword">false</span>);</div>
<div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160; </div>
<div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;    <span class="keyword">static</span> std::shared_ptr&lt;TriangleMesh&gt; <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#ab6d789a436c3500b1eec51d304dbcb42">CreateCylinder</a>(</div>
<div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;            <span class="keywordtype">double</span> radius = 1.0,</div>
<div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;            <span class="keywordtype">double</span> <a class="code" href="io_2file__format_2_file_p_c_d_8cpp.375.delay#ad12fc34ce789bce6c8a05d8a17138534">height</a> = 2.0,</div>
<div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;            <span class="keywordtype">int</span> resolution = 20,</div>
<div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;            <span class="keywordtype">int</span> split = 4,</div>
<div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;            <span class="keywordtype">bool</span> create_uv_map = <span class="keyword">false</span>);</div>
<div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160; </div>
<div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;    <span class="keyword">static</span> std::shared_ptr&lt;TriangleMesh&gt; <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a4bbf5a268ec72582a78a882f474e198a">CreateCone</a>(<span class="keywordtype">double</span> radius = 1.0,</div>
<div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;                                                    <span class="keywordtype">double</span> <a class="code" href="io_2file__format_2_file_p_c_d_8cpp.375.delay#ad12fc34ce789bce6c8a05d8a17138534">height</a> = 2.0,</div>
<div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;                                                    <span class="keywordtype">int</span> resolution = 20,</div>
<div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;                                                    <span class="keywordtype">int</span> split = 1,</div>
<div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;                                                    <span class="keywordtype">bool</span> create_uv_map = <span class="keyword">false</span>);</div>
<div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160; </div>
<div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;    <span class="keyword">static</span> std::shared_ptr&lt;TriangleMesh&gt; <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#acb9780fe9ca63211dbda959c5e7f4fc0">CreateTorus</a>(</div>
<div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;            <span class="keywordtype">double</span> torus_radius = 1.0,</div>
<div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;            <span class="keywordtype">double</span> tube_radius = 0.5,</div>
<div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;            <span class="keywordtype">int</span> radial_resolution = 30,</div>
<div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;            <span class="keywordtype">int</span> tubular_resolution = 20);</div>
<div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160; </div>
<div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;    <span class="comment">//</span></div>
<div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;<span class="comment"></span>    <span class="keyword">static</span> std::shared_ptr&lt;TriangleMesh&gt; <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#aaa494192578437efa1ba34a5dded2b2f">CreateArrow</a>(</div>
<div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;            <span class="keywordtype">double</span> cylinder_radius = 1.0,</div>
<div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;            <span class="keywordtype">double</span> cone_radius = 1.5,</div>
<div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;            <span class="keywordtype">double</span> cylinder_height = 5.0,</div>
<div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;            <span class="keywordtype">double</span> cone_height = 4.0,</div>
<div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;            <span class="keywordtype">int</span> resolution = 20,</div>
<div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;            <span class="keywordtype">int</span> cylinder_split = 4,</div>
<div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;            <span class="keywordtype">int</span> cone_split = 1);</div>
<div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160; </div>
<div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;    <span class="keyword">static</span> std::shared_ptr&lt;TriangleMesh&gt; <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#af9599cdc1c8f4a5efb92016319daee05">CreateCoordinateFrame</a>(</div>
<div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;            <span class="keywordtype">double</span> <a class="code" href="io_2file__format_2_file_p_c_d_8cpp.375.delay#a439227feff9d7f55384e8780cfc2eb82">size</a> = 1.0,</div>
<div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;            <span class="keyword">const</span> Eigen::Vector3d &amp;origin = Eigen::Vector3d(0.0, 0.0, 0.0));</div>
<div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160; </div>
<div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;    <span class="keyword">static</span> std::shared_ptr&lt;TriangleMesh&gt; <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a3dec762c32c18d5d8a7f3259662a79cb">CreateMobius</a>(<span class="keywordtype">int</span> length_split = 70,</div>
<div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;                                                      <span class="keywordtype">int</span> width_split = 15,</div>
<div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;                                                      <span class="keywordtype">int</span> twists = 1,</div>
<div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;                                                      <span class="keywordtype">double</span> radius = 1,</div>
<div class="line"><a name="l00732"></a><span class="lineno">  732</span>&#160;                                                      <span class="keywordtype">double</span> flatness = 1,</div>
<div class="line"><a name="l00733"></a><span class="lineno">  733</span>&#160;                                                      <span class="keywordtype">double</span> <a class="code" href="io_2file__format_2_file_p_c_d_8cpp.375.delay#a2474a5474cbff19523a51eb1de01cda4">width</a> = 1,</div>
<div class="line"><a name="l00734"></a><span class="lineno">  734</span>&#160;                                                      <span class="keywordtype">double</span> scale = 1);</div>
<div class="line"><a name="l00735"></a><span class="lineno">  735</span>&#160; </div>
<div class="line"><a name="l00736"></a><span class="lineno">  736</span>&#160;<span class="keyword">protected</span>:</div>
<div class="line"><a name="l00737"></a><span class="lineno">  737</span>&#160;    <span class="comment">// Forward child class type to avoid indirect nonvirtual base</span></div>
<div class="line"><a name="l00738"></a><span class="lineno"><a class="line" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a07a3a1b482040ffce65063cc4dde9a2c">  738</a></span>&#160;    <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a07a3a1b482040ffce65063cc4dde9a2c">TriangleMesh</a>(<a class="code" href="classopen3d_1_1geometry_1_1_geometry.400.del#a69975c2b054d4fd12cf36866a030ed8e">Geometry::GeometryType</a> <a class="code" href="io_2file__format_2_file_p_c_d_8cpp.375.delay#aff17911edc8208aa8ddb1c7c52c78389">type</a>) : <a class="code" href="classopen3d_1_1geometry_1_1_mesh_base.412.de">MeshBase</a>(<a class="code" href="io_2file__format_2_file_p_c_d_8cpp.375.delay#aff17911edc8208aa8ddb1c7c52c78389">type</a>) {}</div>
<div class="line"><a name="l00739"></a><span class="lineno">  739</span>&#160; </div>
<div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a6e48df0de848bf8137bc2fe5e1981e90">FilterSmoothLaplacianHelper</a>(</div>
<div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;            std::shared_ptr&lt;TriangleMesh&gt; &amp;mesh,</div>
<div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;            <span class="keyword">const</span> std::vector&lt;Eigen::Vector3d&gt; &amp;prev_vertices,</div>
<div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;            <span class="keyword">const</span> std::vector&lt;Eigen::Vector3d&gt; &amp;prev_vertex_normals,</div>
<div class="line"><a name="l00744"></a><span class="lineno">  744</span>&#160;            <span class="keyword">const</span> std::vector&lt;Eigen::Vector3d&gt; &amp;prev_vertex_colors,</div>
<div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;            <span class="keyword">const</span> std::vector&lt;std::unordered_set&lt;int&gt;&gt; &amp;adjacency_list,</div>
<div class="line"><a name="l00746"></a><span class="lineno">  746</span>&#160;            <span class="keywordtype">double</span> lambda_filter,</div>
<div class="line"><a name="l00747"></a><span class="lineno">  747</span>&#160;            <span class="keywordtype">bool</span> filter_vertex,</div>
<div class="line"><a name="l00748"></a><span class="lineno">  748</span>&#160;            <span class="keywordtype">bool</span> filter_normal,</div>
<div class="line"><a name="l00749"></a><span class="lineno">  749</span>&#160;            <span class="keywordtype">bool</span> filter_color) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00750"></a><span class="lineno">  750</span>&#160; </div>
<div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160;    std::unordered_map&lt;Eigen::Vector2i,</div>
<div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;                       double,</div>
<div class="line"><a name="l00761"></a><span class="lineno">  761</span>&#160;                       <a class="code" href="structopen3d_1_1utility_1_1hash__eigen.44c.d">utility::hash_eigen&lt;Eigen::Vector2i&gt;</a>&gt;</div>
<div class="line"><a name="l00762"></a><span class="lineno">  762</span>&#160;    <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a7d293d2770e0c98de7c21a1a36975ad5">ComputeEdgeWeightsCot</a>(</div>
<div class="line"><a name="l00763"></a><span class="lineno">  763</span>&#160;            <span class="keyword">const</span> std::unordered_map&lt;Eigen::Vector2i,</div>
<div class="line"><a name="l00764"></a><span class="lineno">  764</span>&#160;                                     std::vector&lt;int&gt;,</div>
<div class="line"><a name="l00765"></a><span class="lineno">  765</span>&#160;                                     <a class="code" href="structopen3d_1_1utility_1_1hash__eigen.44c.d">utility::hash_eigen&lt;Eigen::Vector2i&gt;</a>&gt;</div>
<div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;                    &amp;edges_to_vertices,</div>
<div class="line"><a name="l00767"></a><span class="lineno">  767</span>&#160;            <span class="keywordtype">double</span> min_weight = std::numeric_limits&lt;double&gt;::lowest()) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00768"></a><span class="lineno">  768</span>&#160; </div>
<div class="line"><a name="l00769"></a><span class="lineno">  769</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00771"></a><span class="lineno"><a class="line" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a7dcddd5784eaa2efedfa5e274aa50e3e">  771</a></span>&#160;    std::vector&lt;Eigen::Vector3i&gt; <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a7dcddd5784eaa2efedfa5e274aa50e3e">triangles_</a>;</div>
<div class="line"><a name="l00773"></a><span class="lineno"><a class="line" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a90341a2a76590e3a9ce4d507d3a2285c">  773</a></span>&#160;    std::vector&lt;Eigen::Vector3d&gt; <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a90341a2a76590e3a9ce4d507d3a2285c">triangle_normals_</a>;</div>
<div class="line"><a name="l00776"></a><span class="lineno"><a class="line" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a37984016ded7bbceb893c5dba0e8b6c8">  776</a></span>&#160;    std::vector&lt;std::unordered_set&lt;int&gt;&gt; <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a37984016ded7bbceb893c5dba0e8b6c8">adjacency_list_</a>;</div>
<div class="line"><a name="l00778"></a><span class="lineno"><a class="line" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a6da74c05d87cfef5ca025b39d8e6efc3">  778</a></span>&#160;    std::vector&lt;Eigen::Vector2d&gt; <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a6da74c05d87cfef5ca025b39d8e6efc3">triangle_uvs_</a>;</div>
<div class="line"><a name="l00779"></a><span class="lineno">  779</span>&#160; </div>
<div class="line"><a name="l00780"></a><span class="lineno"><a class="line" href="structopen3d_1_1geometry_1_1_triangle_mesh_1">  780</a></span>&#160;    <span class="keyword">struct </span><a class="code" href="structopen3d_1_1geometry_1_1_triangle_mesh_1">Material</a> {</div>
<div class="line"><a name="l00781"></a><span class="lineno"><a class="line" href="structopen3d_1_1geometry_1_1_triangle_mesh_1-2">  781</a></span>&#160;        <span class="keyword">struct </span><a class="code" href="structopen3d_1_1geometry_1_1_triangle_mesh_1-2">MaterialParameter</a> {</div>
<div class="line"><a name="l00782"></a><span class="lineno"><a class="line" href="structopen3d_1_1geometry_1_1_triangle_mesh_1-2#a13876bc2b0c3f59f905c469f7fab0d0e">  782</a></span>&#160;            <span class="keywordtype">float</span> <a class="code" href="structopen3d_1_1geometry_1_1_triangle_mesh_1-2#a13876bc2b0c3f59f905c469f7fab0d0e">f4</a>[4] = {0};</div>
<div class="line"><a name="l00783"></a><span class="lineno">  783</span>&#160; </div>
<div class="line"><a name="l00784"></a><span class="lineno"><a class="line" href="structopen3d_1_1geometry_1_1_triangle_mesh_1-2#ad6fea2fe1eb15bd4990f4ce5c8aa7afa">  784</a></span>&#160;            <a class="code" href="structopen3d_1_1geometry_1_1_triangle_mesh_1-2#ad6fea2fe1eb15bd4990f4ce5c8aa7afa">MaterialParameter</a>() {</div>
<div class="line"><a name="l00785"></a><span class="lineno">  785</span>&#160;                <a class="code" href="structopen3d_1_1geometry_1_1_triangle_mesh_1-2#a13876bc2b0c3f59f905c469f7fab0d0e">f4</a>[0] = 0;</div>
<div class="line"><a name="l00786"></a><span class="lineno">  786</span>&#160;                <a class="code" href="structopen3d_1_1geometry_1_1_triangle_mesh_1-2#a13876bc2b0c3f59f905c469f7fab0d0e">f4</a>[1] = 0;</div>
<div class="line"><a name="l00787"></a><span class="lineno">  787</span>&#160;                <a class="code" href="structopen3d_1_1geometry_1_1_triangle_mesh_1-2#a13876bc2b0c3f59f905c469f7fab0d0e">f4</a>[2] = 0;</div>
<div class="line"><a name="l00788"></a><span class="lineno">  788</span>&#160;                <a class="code" href="structopen3d_1_1geometry_1_1_triangle_mesh_1-2#a13876bc2b0c3f59f905c469f7fab0d0e">f4</a>[3] = 0;</div>
<div class="line"><a name="l00789"></a><span class="lineno">  789</span>&#160;            }</div>
<div class="line"><a name="l00790"></a><span class="lineno">  790</span>&#160; </div>
<div class="line"><a name="l00791"></a><span class="lineno"><a class="line" href="structopen3d_1_1geometry_1_1_triangle_mesh_1-2#a32610b091395a72303e315e9818568f5">  791</a></span>&#160;            <a class="code" href="structopen3d_1_1geometry_1_1_triangle_mesh_1-2#a32610b091395a72303e315e9818568f5">MaterialParameter</a>(<span class="keyword">const</span> <span class="keywordtype">float</span> v1,</div>
<div class="line"><a name="l00792"></a><span class="lineno">  792</span>&#160;                              <span class="keyword">const</span> <span class="keywordtype">float</span> v2,</div>
<div class="line"><a name="l00793"></a><span class="lineno">  793</span>&#160;                              <span class="keyword">const</span> <span class="keywordtype">float</span> v3,</div>
<div class="line"><a name="l00794"></a><span class="lineno">  794</span>&#160;                              <span class="keyword">const</span> <span class="keywordtype">float</span> v4) {</div>
<div class="line"><a name="l00795"></a><span class="lineno">  795</span>&#160;                <a class="code" href="structopen3d_1_1geometry_1_1_triangle_mesh_1-2#a13876bc2b0c3f59f905c469f7fab0d0e">f4</a>[0] = v1;</div>
<div class="line"><a name="l00796"></a><span class="lineno">  796</span>&#160;                <a class="code" href="structopen3d_1_1geometry_1_1_triangle_mesh_1-2#a13876bc2b0c3f59f905c469f7fab0d0e">f4</a>[1] = v2;</div>
<div class="line"><a name="l00797"></a><span class="lineno">  797</span>&#160;                <a class="code" href="structopen3d_1_1geometry_1_1_triangle_mesh_1-2#a13876bc2b0c3f59f905c469f7fab0d0e">f4</a>[2] = v3;</div>
<div class="line"><a name="l00798"></a><span class="lineno">  798</span>&#160;                <a class="code" href="structopen3d_1_1geometry_1_1_triangle_mesh_1-2#a13876bc2b0c3f59f905c469f7fab0d0e">f4</a>[3] = v4;</div>
<div class="line"><a name="l00799"></a><span class="lineno">  799</span>&#160;            }</div>
<div class="line"><a name="l00800"></a><span class="lineno">  800</span>&#160; </div>
<div class="line"><a name="l00801"></a><span class="lineno"><a class="line" href="structopen3d_1_1geometry_1_1_triangle_mesh_1-2#a98f1b4940f7d45a17e7e1db97495d6a0">  801</a></span>&#160;            <a class="code" href="structopen3d_1_1geometry_1_1_triangle_mesh_1-2#a98f1b4940f7d45a17e7e1db97495d6a0">MaterialParameter</a>(<span class="keyword">const</span> <span class="keywordtype">float</span> v1, <span class="keyword">const</span> <span class="keywordtype">float</span> v2, <span class="keyword">const</span> <span class="keywordtype">float</span> v3) {</div>
<div class="line"><a name="l00802"></a><span class="lineno">  802</span>&#160;                <a class="code" href="structopen3d_1_1geometry_1_1_triangle_mesh_1-2#a13876bc2b0c3f59f905c469f7fab0d0e">f4</a>[0] = v1;</div>
<div class="line"><a name="l00803"></a><span class="lineno">  803</span>&#160;                <a class="code" href="structopen3d_1_1geometry_1_1_triangle_mesh_1-2#a13876bc2b0c3f59f905c469f7fab0d0e">f4</a>[1] = v2;</div>
<div class="line"><a name="l00804"></a><span class="lineno">  804</span>&#160;                <a class="code" href="structopen3d_1_1geometry_1_1_triangle_mesh_1-2#a13876bc2b0c3f59f905c469f7fab0d0e">f4</a>[2] = v3;</div>
<div class="line"><a name="l00805"></a><span class="lineno">  805</span>&#160;                <a class="code" href="structopen3d_1_1geometry_1_1_triangle_mesh_1-2#a13876bc2b0c3f59f905c469f7fab0d0e">f4</a>[3] = 1;</div>
<div class="line"><a name="l00806"></a><span class="lineno">  806</span>&#160;            }</div>
<div class="line"><a name="l00807"></a><span class="lineno">  807</span>&#160; </div>
<div class="line"><a name="l00808"></a><span class="lineno"><a class="line" href="structopen3d_1_1geometry_1_1_triangle_mesh_1-2#a9dfb3d167dac7c2c9736823d9227f4e4">  808</a></span>&#160;            <a class="code" href="structopen3d_1_1geometry_1_1_triangle_mesh_1-2#a9dfb3d167dac7c2c9736823d9227f4e4">MaterialParameter</a>(<span class="keyword">const</span> <span class="keywordtype">float</span> v1, <span class="keyword">const</span> <span class="keywordtype">float</span> v2) {</div>
<div class="line"><a name="l00809"></a><span class="lineno">  809</span>&#160;                <a class="code" href="structopen3d_1_1geometry_1_1_triangle_mesh_1-2#a13876bc2b0c3f59f905c469f7fab0d0e">f4</a>[0] = v1;</div>
<div class="line"><a name="l00810"></a><span class="lineno">  810</span>&#160;                <a class="code" href="structopen3d_1_1geometry_1_1_triangle_mesh_1-2#a13876bc2b0c3f59f905c469f7fab0d0e">f4</a>[1] = v2;</div>
<div class="line"><a name="l00811"></a><span class="lineno">  811</span>&#160;                <a class="code" href="structopen3d_1_1geometry_1_1_triangle_mesh_1-2#a13876bc2b0c3f59f905c469f7fab0d0e">f4</a>[2] = 0;</div>
<div class="line"><a name="l00812"></a><span class="lineno">  812</span>&#160;                <a class="code" href="structopen3d_1_1geometry_1_1_triangle_mesh_1-2#a13876bc2b0c3f59f905c469f7fab0d0e">f4</a>[3] = 0;</div>
<div class="line"><a name="l00813"></a><span class="lineno">  813</span>&#160;            }</div>
<div class="line"><a name="l00814"></a><span class="lineno">  814</span>&#160; </div>
<div class="line"><a name="l00815"></a><span class="lineno"><a class="line" href="structopen3d_1_1geometry_1_1_triangle_mesh_1-2#abdb44b81da0c1356caaa19dcd52515a4">  815</a></span>&#160;            <span class="keyword">explicit</span> <a class="code" href="structopen3d_1_1geometry_1_1_triangle_mesh_1-2#abdb44b81da0c1356caaa19dcd52515a4">MaterialParameter</a>(<span class="keyword">const</span> <span class="keywordtype">float</span> v1) {</div>
<div class="line"><a name="l00816"></a><span class="lineno">  816</span>&#160;                <a class="code" href="structopen3d_1_1geometry_1_1_triangle_mesh_1-2#a13876bc2b0c3f59f905c469f7fab0d0e">f4</a>[0] = v1;</div>
<div class="line"><a name="l00817"></a><span class="lineno">  817</span>&#160;                <a class="code" href="structopen3d_1_1geometry_1_1_triangle_mesh_1-2#a13876bc2b0c3f59f905c469f7fab0d0e">f4</a>[1] = 0;</div>
<div class="line"><a name="l00818"></a><span class="lineno">  818</span>&#160;                <a class="code" href="structopen3d_1_1geometry_1_1_triangle_mesh_1-2#a13876bc2b0c3f59f905c469f7fab0d0e">f4</a>[2] = 0;</div>
<div class="line"><a name="l00819"></a><span class="lineno">  819</span>&#160;                <a class="code" href="structopen3d_1_1geometry_1_1_triangle_mesh_1-2#a13876bc2b0c3f59f905c469f7fab0d0e">f4</a>[3] = 0;</div>
<div class="line"><a name="l00820"></a><span class="lineno">  820</span>&#160;            }</div>
<div class="line"><a name="l00821"></a><span class="lineno">  821</span>&#160; </div>
<div class="line"><a name="l00822"></a><span class="lineno"><a class="line" href="structopen3d_1_1geometry_1_1_triangle_mesh_1-2#a51799241475c7cff21c7209ab84eef21">  822</a></span>&#160;            <span class="keyword">static</span> <a class="code" href="structopen3d_1_1geometry_1_1_triangle_mesh_1-2">MaterialParameter</a> <a class="code" href="structopen3d_1_1geometry_1_1_triangle_mesh_1-2#a51799241475c7cff21c7209ab84eef21">CreateRGB</a>(<span class="keyword">const</span> <span class="keywordtype">float</span> <a class="code" href="structopen3d_1_1geometry_1_1_triangle_mesh_1-2#a1ee0b8c6ea6e1d8c73f149e758c7a610">r</a>,</div>
<div class="line"><a name="l00823"></a><span class="lineno">  823</span>&#160;                                               <span class="keyword">const</span> <span class="keywordtype">float</span> <a class="code" href="structopen3d_1_1geometry_1_1_triangle_mesh_1-2#a0cb5e296694fedfca38694231a576036">g</a>,</div>
<div class="line"><a name="l00824"></a><span class="lineno">  824</span>&#160;                                               <span class="keyword">const</span> <span class="keywordtype">float</span> <a class="code" href="structopen3d_1_1geometry_1_1_triangle_mesh_1-2#a06411b9ecf121fc6ca30f5b7e1242d42">b</a>) {</div>
<div class="line"><a name="l00825"></a><span class="lineno">  825</span>&#160;                <span class="keywordflow">return</span> {<a class="code" href="structopen3d_1_1geometry_1_1_triangle_mesh_1-2#a1ee0b8c6ea6e1d8c73f149e758c7a610">r</a>, <a class="code" href="structopen3d_1_1geometry_1_1_triangle_mesh_1-2#a0cb5e296694fedfca38694231a576036">g</a>, <a class="code" href="structopen3d_1_1geometry_1_1_triangle_mesh_1-2#a06411b9ecf121fc6ca30f5b7e1242d42">b</a>, 1.f};</div>
<div class="line"><a name="l00826"></a><span class="lineno">  826</span>&#160;            }</div>
<div class="line"><a name="l00827"></a><span class="lineno">  827</span>&#160; </div>
<div class="line"><a name="l00828"></a><span class="lineno"><a class="line" href="structopen3d_1_1geometry_1_1_triangle_mesh_1-2#a1ee0b8c6ea6e1d8c73f149e758c7a610">  828</a></span>&#160;            <span class="keywordtype">float</span> <a class="code" href="structopen3d_1_1geometry_1_1_triangle_mesh_1-2#a1ee0b8c6ea6e1d8c73f149e758c7a610">r</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <a class="code" href="structopen3d_1_1geometry_1_1_triangle_mesh_1-2#a13876bc2b0c3f59f905c469f7fab0d0e">f4</a>[0]; }</div>
<div class="line"><a name="l00829"></a><span class="lineno"><a class="line" href="structopen3d_1_1geometry_1_1_triangle_mesh_1-2#a0cb5e296694fedfca38694231a576036">  829</a></span>&#160;            <span class="keywordtype">float</span> <a class="code" href="structopen3d_1_1geometry_1_1_triangle_mesh_1-2#a0cb5e296694fedfca38694231a576036">g</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <a class="code" href="structopen3d_1_1geometry_1_1_triangle_mesh_1-2#a13876bc2b0c3f59f905c469f7fab0d0e">f4</a>[1]; }</div>
<div class="line"><a name="l00830"></a><span class="lineno"><a class="line" href="structopen3d_1_1geometry_1_1_triangle_mesh_1-2#a06411b9ecf121fc6ca30f5b7e1242d42">  830</a></span>&#160;            <span class="keywordtype">float</span> <a class="code" href="structopen3d_1_1geometry_1_1_triangle_mesh_1-2#a06411b9ecf121fc6ca30f5b7e1242d42">b</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <a class="code" href="structopen3d_1_1geometry_1_1_triangle_mesh_1-2#a13876bc2b0c3f59f905c469f7fab0d0e">f4</a>[2]; }</div>
<div class="line"><a name="l00831"></a><span class="lineno"><a class="line" href="structopen3d_1_1geometry_1_1_triangle_mesh_1-2#ae4921d31d9973c19b1fdba68cc3597c1">  831</a></span>&#160;            <span class="keywordtype">float</span> <a class="code" href="structopen3d_1_1geometry_1_1_triangle_mesh_1-2#ae4921d31d9973c19b1fdba68cc3597c1">a</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <a class="code" href="structopen3d_1_1geometry_1_1_triangle_mesh_1-2#a13876bc2b0c3f59f905c469f7fab0d0e">f4</a>[3]; }</div>
<div class="line"><a name="l00832"></a><span class="lineno">  832</span>&#160;        };</div>
<div class="line"><a name="l00833"></a><span class="lineno">  833</span>&#160; </div>
<div class="line"><a name="l00834"></a><span class="lineno"><a class="line" href="structopen3d_1_1geometry_1_1_triangle_mesh_1#a58bfba9559192cbf05bc44c0de2919a8">  834</a></span>&#160;        <a class="code" href="structopen3d_1_1geometry_1_1_triangle_mesh_1-2">MaterialParameter</a> <a class="code" href="structopen3d_1_1geometry_1_1_triangle_mesh_1#a58bfba9559192cbf05bc44c0de2919a8">baseColor</a>;</div>
<div class="line"><a name="l00835"></a><span class="lineno"><a class="line" href="structopen3d_1_1geometry_1_1_triangle_mesh_1#a91a575ac2c05ac874bbbb6a88efbb5c7">  835</a></span>&#160;        <span class="keywordtype">float</span> <a class="code" href="structopen3d_1_1geometry_1_1_triangle_mesh_1#a91a575ac2c05ac874bbbb6a88efbb5c7">baseMetallic</a> = 0.f;</div>
<div class="line"><a name="l00836"></a><span class="lineno"><a class="line" href="structopen3d_1_1geometry_1_1_triangle_mesh_1#a378b83ab26303ba51885d539d658a23f">  836</a></span>&#160;        <span class="keywordtype">float</span> <a class="code" href="structopen3d_1_1geometry_1_1_triangle_mesh_1#a378b83ab26303ba51885d539d658a23f">baseRoughness</a> = 1.f;</div>
<div class="line"><a name="l00837"></a><span class="lineno"><a class="line" href="structopen3d_1_1geometry_1_1_triangle_mesh_1#a7840368415e2aa4aef4bff9219350853">  837</a></span>&#160;        <span class="keywordtype">float</span> <a class="code" href="structopen3d_1_1geometry_1_1_triangle_mesh_1#a7840368415e2aa4aef4bff9219350853">baseReflectance</a> = 0.5f;</div>
<div class="line"><a name="l00838"></a><span class="lineno"><a class="line" href="structopen3d_1_1geometry_1_1_triangle_mesh_1#a3749d9fc94f9665f2f006340ce484726">  838</a></span>&#160;        <span class="keywordtype">float</span> <a class="code" href="structopen3d_1_1geometry_1_1_triangle_mesh_1#a3749d9fc94f9665f2f006340ce484726">baseClearCoat</a> = 0.f;</div>
<div class="line"><a name="l00839"></a><span class="lineno"><a class="line" href="structopen3d_1_1geometry_1_1_triangle_mesh_1#ac09aefe535044c3f6b88887c8e17df77">  839</a></span>&#160;        <span class="keywordtype">float</span> <a class="code" href="structopen3d_1_1geometry_1_1_triangle_mesh_1#ac09aefe535044c3f6b88887c8e17df77">baseClearCoatRoughness</a> = 0.f;</div>
<div class="line"><a name="l00840"></a><span class="lineno"><a class="line" href="structopen3d_1_1geometry_1_1_triangle_mesh_1#a26b39472cd0070600a74ce93617090ab">  840</a></span>&#160;        <span class="keywordtype">float</span> <a class="code" href="structopen3d_1_1geometry_1_1_triangle_mesh_1#a26b39472cd0070600a74ce93617090ab">baseAnisotropy</a> = 0.f;</div>
<div class="line"><a name="l00841"></a><span class="lineno">  841</span>&#160; </div>
<div class="line"><a name="l00842"></a><span class="lineno"><a class="line" href="structopen3d_1_1geometry_1_1_triangle_mesh_1#a76dc24223572c0e1498f92ad98dc30df">  842</a></span>&#160;        std::shared_ptr&lt;Image&gt; <a class="code" href="structopen3d_1_1geometry_1_1_triangle_mesh_1#a76dc24223572c0e1498f92ad98dc30df">albedo</a>;</div>
<div class="line"><a name="l00843"></a><span class="lineno"><a class="line" href="structopen3d_1_1geometry_1_1_triangle_mesh_1#a0168e383e13d519b726ee91c38f3696d">  843</a></span>&#160;        std::shared_ptr&lt;Image&gt; <a class="code" href="structopen3d_1_1geometry_1_1_triangle_mesh_1#a0168e383e13d519b726ee91c38f3696d">normalMap</a>;</div>
<div class="line"><a name="l00844"></a><span class="lineno"><a class="line" href="structopen3d_1_1geometry_1_1_triangle_mesh_1#a65c1bd5f64f23686d2cfc48498cee8f7">  844</a></span>&#160;        std::shared_ptr&lt;Image&gt; <a class="code" href="structopen3d_1_1geometry_1_1_triangle_mesh_1#a65c1bd5f64f23686d2cfc48498cee8f7">ambientOcclusion</a>;</div>
<div class="line"><a name="l00845"></a><span class="lineno"><a class="line" href="structopen3d_1_1geometry_1_1_triangle_mesh_1#a5d03d4e6033f9855c22b623be4c98d9a">  845</a></span>&#160;        std::shared_ptr&lt;Image&gt; <a class="code" href="structopen3d_1_1geometry_1_1_triangle_mesh_1#a5d03d4e6033f9855c22b623be4c98d9a">metallic</a>;</div>
<div class="line"><a name="l00846"></a><span class="lineno"><a class="line" href="structopen3d_1_1geometry_1_1_triangle_mesh_1#a246b916abb7383135dbf73eb409157ca">  846</a></span>&#160;        std::shared_ptr&lt;Image&gt; <a class="code" href="structopen3d_1_1geometry_1_1_triangle_mesh_1#a246b916abb7383135dbf73eb409157ca">roughness</a>;</div>
<div class="line"><a name="l00847"></a><span class="lineno"><a class="line" href="structopen3d_1_1geometry_1_1_triangle_mesh_1#a58bd1ace51d4983b8a9d7003296e0608">  847</a></span>&#160;        std::shared_ptr&lt;Image&gt; <a class="code" href="structopen3d_1_1geometry_1_1_triangle_mesh_1#a58bd1ace51d4983b8a9d7003296e0608">reflectance</a>;</div>
<div class="line"><a name="l00848"></a><span class="lineno"><a class="line" href="structopen3d_1_1geometry_1_1_triangle_mesh_1#aaa29fdb01411561e90cc31f4e29afaca">  848</a></span>&#160;        std::shared_ptr&lt;Image&gt; <a class="code" href="structopen3d_1_1geometry_1_1_triangle_mesh_1#aaa29fdb01411561e90cc31f4e29afaca">clearCoat</a>;</div>
<div class="line"><a name="l00849"></a><span class="lineno"><a class="line" href="structopen3d_1_1geometry_1_1_triangle_mesh_1#a1358677f5e3a6f0bdb2fda7dc2f2ff70">  849</a></span>&#160;        std::shared_ptr&lt;Image&gt; <a class="code" href="structopen3d_1_1geometry_1_1_triangle_mesh_1#a1358677f5e3a6f0bdb2fda7dc2f2ff70">clearCoatRoughness</a>;</div>
<div class="line"><a name="l00850"></a><span class="lineno"><a class="line" href="structopen3d_1_1geometry_1_1_triangle_mesh_1#a00c9e34c7ffc8b04a940e467942f0370">  850</a></span>&#160;        std::shared_ptr&lt;Image&gt; <a class="code" href="structopen3d_1_1geometry_1_1_triangle_mesh_1#a00c9e34c7ffc8b04a940e467942f0370">anisotropy</a>;</div>
<div class="line"><a name="l00851"></a><span class="lineno">  851</span>&#160; </div>
<div class="line"><a name="l00852"></a><span class="lineno"><a class="line" href="structopen3d_1_1geometry_1_1_triangle_mesh_1#a41e4091e16cf252d0a5c49c5e83d6bee">  852</a></span>&#160;        std::unordered_map&lt;std::string, MaterialParameter&gt; <a class="code" href="structopen3d_1_1geometry_1_1_triangle_mesh_1#a41e4091e16cf252d0a5c49c5e83d6bee">floatParameters</a>;</div>
<div class="line"><a name="l00853"></a><span class="lineno"><a class="line" href="structopen3d_1_1geometry_1_1_triangle_mesh_1#a2ba59bf22f6af206c354093672a87463">  853</a></span>&#160;        std::unordered_map&lt;std::string, Image&gt; <a class="code" href="structopen3d_1_1geometry_1_1_triangle_mesh_1#a2ba59bf22f6af206c354093672a87463">additionalMaps</a>;</div>
<div class="line"><a name="l00854"></a><span class="lineno">  854</span>&#160;    };</div>
<div class="line"><a name="l00855"></a><span class="lineno">  855</span>&#160; </div>
<div class="line"><a name="l00856"></a><span class="lineno"><a class="line" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#aa415bc74025604428db8b7d2f97b5d8d">  856</a></span>&#160;    std::unordered_map&lt;std::string, Material&gt; <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#aa415bc74025604428db8b7d2f97b5d8d">materials_</a>;</div>
<div class="line"><a name="l00857"></a><span class="lineno">  857</span>&#160; </div>
<div class="line"><a name="l00859"></a><span class="lineno"><a class="line" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#ade007ba5e10cb3c60c9d7f4d2e8f2611">  859</a></span>&#160;    std::vector&lt;int&gt; <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#ade007ba5e10cb3c60c9d7f4d2e8f2611">triangle_material_ids_</a>;</div>
<div class="line"><a name="l00861"></a><span class="lineno"><a class="line" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a0babf96deb5056e1b36b5ee3517d0a80">  861</a></span>&#160;    std::vector&lt;Image&gt; <a class="code" href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a0babf96deb5056e1b36b5ee3517d0a80">textures_</a>;</div>
<div class="line"><a name="l00862"></a><span class="lineno">  862</span>&#160;};</div>
<div class="line"><a name="l00863"></a><span class="lineno">  863</span>&#160; </div>
<div class="line"><a name="l00864"></a><span class="lineno">  864</span>&#160;}  <span class="comment">// namespace geometry</span></div>
<div class="line"><a name="l00865"></a><span class="lineno">  865</span>&#160;}  <span class="comment">// namespace open3d</span></div>
<div class="ttc" id="a_mesh_base_8h_html"><div class="ttname"><a href="_mesh_base_8h.html">MeshBase.h</a></div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_axis_aligned_bounding_box_html"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_axis_aligned_bou">open3d::geometry::AxisAlignedBoundingBox</a></div><div class="ttdoc">A bounding box that is aligned along the coordinate axes.</div><div class="ttdef"><b>Definition:</b> BoundingVolume.h:159</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_geometry_html"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_geometry.400.del">open3d::geometry::Geometry</a></div><div class="ttdoc">The base geometry class.</div><div class="ttdef"><b>Definition:</b> Geometry.h:18</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_geometry_html_a69975c2b054d4fd12cf36866a030ed8e"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_geometry.400.del#a69975c2b054d4fd12cf36866a030ed8e">open3d::geometry::Geometry::GeometryType</a></div><div class="ttdeci">GeometryType</div><div class="ttdoc">Specifies possible geometry types.</div><div class="ttdef"><b>Definition:</b> Geometry.h:23</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_image_html"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_image.406.delaye">open3d::geometry::Image</a></div><div class="ttdoc">The Image class stores image with customizable width, height, num of channels and bytes per channel.</div><div class="ttdef"><b>Definition:</b> Image.h:34</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_mesh_base_html"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_mesh_base.412.de">open3d::geometry::MeshBase</a></div><div class="ttdoc">MeshBash Class.</div><div class="ttdef"><b>Definition:</b> MeshBase.h:32</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_mesh_base_html_a004aeef2268433b07feb4ee32e560292"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_mesh_base.412.de#a004aeef2268433b07feb4ee32e560292">open3d::geometry::MeshBase::vertices_</a></div><div class="ttdeci">std::vector&lt; Eigen::Vector3d &gt; vertices_</div><div class="ttdoc">Vertex coordinates.</div><div class="ttdef"><b>Definition:</b> MeshBase.h:149</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_mesh_base_html_a6f7e206d12e10f059ca530cd04c4d07a"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_mesh_base.412.de#a6f7e206d12e10f059ca530cd04c4d07a">open3d::geometry::MeshBase::DeformAsRigidAsPossibleEnergy</a></div><div class="ttdeci">DeformAsRigidAsPossibleEnergy</div><div class="ttdef"><b>Definition:</b> MeshBase.h:57</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_mesh_base_html_a6f7e206d12e10f059ca530cd04c4d07aa111552792d2df37209e4e9815a8524a8"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_mesh_base.412.de#a6f7e206d12e10f059ca530cd04c4d07aa111552792d2df37209e4e9815a8524a8">open3d::geometry::MeshBase::DeformAsRigidAsPossibleEnergy::Spokes</a></div><div class="ttdeci">@ Spokes</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_mesh_base_html_a84f9db88a4d0d23d755136ddfa7e6bd7"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_mesh_base.412.de#a84f9db88a4d0d23d755136ddfa7e6bd7">open3d::geometry::MeshBase::SimplificationContraction</a></div><div class="ttdeci">SimplificationContraction</div><div class="ttdoc">Indicates the method that is used for mesh simplification if multiple vertices are combined to a sing...</div><div class="ttdef"><b>Definition:</b> MeshBase.h:42</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_mesh_base_html_a84f9db88a4d0d23d755136ddfa7e6bd7ab1897515d548a960afe49ecf66a29021"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_mesh_base.412.de#a84f9db88a4d0d23d755136ddfa7e6bd7ab1897515d548a960afe49ecf66a29021">open3d::geometry::MeshBase::SimplificationContraction::Average</a></div><div class="ttdeci">@ Average</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_mesh_base_html_ab0f5f6dc5af988b69c7d9f7ac4294bea"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_mesh_base.412.de#ab0f5f6dc5af988b69c7d9f7ac4294bea">open3d::geometry::MeshBase::NormalizeNormals</a></div><div class="ttdeci">MeshBase &amp; NormalizeNormals()</div><div class="ttdoc">Normalize vertex normals to length 1.</div><div class="ttdef"><b>Definition:</b> MeshBase.h:118</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_mesh_base_html_af63b2a09012544530c370e7a3828c89c"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_mesh_base.412.de#af63b2a09012544530c370e7a3828c89c">open3d::geometry::MeshBase::FilterScope</a></div><div class="ttdeci">FilterScope</div><div class="ttdoc">Indicates the scope of filter operations.</div><div class="ttdef"><b>Definition:</b> MeshBase.h:51</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_mesh_base_html_af63b2a09012544530c370e7a3828c89cab1c94ca2fbc3e78fc30069c8d0f01680"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_mesh_base.412.de#af63b2a09012544530c370e7a3828c89cab1c94ca2fbc3e78fc30069c8d0f01680">open3d::geometry::MeshBase::FilterScope::All</a></div><div class="ttdeci">@ All</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_oriented_bounding_box_html"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_oriented_boundin">open3d::geometry::OrientedBoundingBox</a></div><div class="ttdoc">A bounding box oriented along an arbitrary frame of reference.</div><div class="ttdef"><b>Definition:</b> BoundingVolume.h:25</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_point_cloud_html"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_point_cloud.41b">open3d::geometry::PointCloud</a></div><div class="ttdoc">A point cloud consists of point coordinates, and optionally point colors and point normals.</div><div class="ttdef"><b>Definition:</b> PointCloud.h:36</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40">open3d::geometry::TriangleMesh</a></div><div class="ttdoc">Triangle mesh contains vertices and triangles represented by the indices to the vertices.</div><div class="ttdef"><b>Definition:</b> TriangleMesh.h:35</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_a039c1d00b33423cb5371d6ba157557a1"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a039c1d00b33423cb5371d6ba157557a1">open3d::geometry::TriangleMesh::Rotate</a></div><div class="ttdeci">virtual TriangleMesh &amp; Rotate(const Eigen::Matrix3d &amp;R, const Eigen::Vector3d &amp;center) override</div><div class="ttdoc">Apply rotation to the geometry coordinates and normals. Given a rotation matrix , and center ,...</div><div class="ttdef"><b>Definition:</b> TriangleMesh.cpp:46</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_a0597075686ecda8953d33f3cbe57c385"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a0597075686ecda8953d33f3cbe57c385">open3d::geometry::TriangleMesh::IsBoundingBoxIntersecting</a></div><div class="ttdeci">bool IsBoundingBoxIntersecting(const TriangleMesh &amp;other) const</div><div class="ttdef"><b>Definition:</b> TriangleMesh.cpp:1393</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_a07a3a1b482040ffce65063cc4dde9a2c"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a07a3a1b482040ffce65063cc4dde9a2c">open3d::geometry::TriangleMesh::TriangleMesh</a></div><div class="ttdeci">TriangleMesh(Geometry::GeometryType type)</div><div class="ttdef"><b>Definition:</b> TriangleMesh.h:738</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_a0a667e04a73010d302eb60af0ea1cbf9"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a0a667e04a73010d302eb60af0ea1cbf9">open3d::geometry::TriangleMesh::RemoveNonManifoldEdges</a></div><div class="ttdeci">TriangleMesh &amp; RemoveNonManifoldEdges()</div><div class="ttdoc">Function that removes all non-manifold edges, by successively deleting triangles with the smallest su...</div><div class="ttdef"><b>Definition:</b> TriangleMesh.cpp:830</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_a0babf96deb5056e1b36b5ee3517d0a80"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a0babf96deb5056e1b36b5ee3517d0a80">open3d::geometry::TriangleMesh::textures_</a></div><div class="ttdeci">std::vector&lt; Image &gt; textures_</div><div class="ttdoc">Textures of the image.</div><div class="ttdef"><b>Definition:</b> TriangleMesh.h:861</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_a0d704fcb8fe632b9d4f310766870a51e"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a0d704fcb8fe632b9d4f310766870a51e">open3d::geometry::TriangleMesh::ComputeTriangleArea</a></div><div class="ttdeci">static double ComputeTriangleArea(const Eigen::Vector3d &amp;p0, const Eigen::Vector3d &amp;p1, const Eigen::Vector3d &amp;p2)</div><div class="ttdoc">Function that computes the area of a mesh triangle.</div><div class="ttdef"><b>Definition:</b> TriangleMesh.cpp:1148</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_a10c0abffb559c91c5f4f5d50b8a2c1a4"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a10c0abffb559c91c5f4f5d50b8a2c1a4">open3d::geometry::TriangleMesh::SubdivideMidpoint</a></div><div class="ttdeci">std::shared_ptr&lt; TriangleMesh &gt; SubdivideMidpoint(int number_of_iterations) const</div><div class="ttdef"><b>Definition:</b> TriangleMeshSubdivide.cpp:18</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_a1568965f2cb441cf6439b7ee57cd2929"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a1568965f2cb441cf6439b7ee57cd2929">open3d::geometry::TriangleMesh::SamplePointsUniformlyImpl</a></div><div class="ttdeci">std::shared_ptr&lt; PointCloud &gt; SamplePointsUniformlyImpl(size_t number_of_points, std::vector&lt; double &gt; &amp;triangle_areas, double surface_area, bool use_triangle_normal)</div><div class="ttdef"><b>Definition:</b> TriangleMesh.cpp:434</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_a15ffe6ee562b74d1d48786c97f55bb0e"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a15ffe6ee562b74d1d48786c97f55bb0e">open3d::geometry::TriangleMesh::ClusterConnectedTriangles</a></div><div class="ttdeci">std::tuple&lt; std::vector&lt; int &gt;, std::vector&lt; size_t &gt;, std::vector&lt; double &gt; &gt; ClusterConnectedTriangles() const</div><div class="ttdoc">Function that clusters connected triangles, i.e., triangles that are connected via edges are assigned...</div><div class="ttdef"><b>Definition:</b> TriangleMesh.cpp:1421</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_a18a4bfec706044d1c97edd2df30d9e98"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a18a4bfec706044d1c97edd2df30d9e98">open3d::geometry::TriangleMesh::GetVolume</a></div><div class="ttdeci">double GetVolume() const</div><div class="ttdef"><b>Definition:</b> TriangleMesh.cpp:1185</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_a19c4ef9c1c9229213ecd05a15845d4d4"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a19c4ef9c1c9229213ecd05a15845d4d4">open3d::geometry::TriangleMesh::SubdivideLoop</a></div><div class="ttdeci">std::shared_ptr&lt; TriangleMesh &gt; SubdivideLoop(int number_of_iterations) const</div><div class="ttdef"><b>Definition:</b> TriangleMeshSubdivide.cpp:96</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_a1a4d59a4dc7706d6dc2497030ec983d3"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a1a4d59a4dc7706d6dc2497030ec983d3">open3d::geometry::TriangleMesh::CreateIcosahedron</a></div><div class="ttdeci">static std::shared_ptr&lt; TriangleMesh &gt; CreateIcosahedron(double radius=1.0, bool create_uv_map=false)</div><div class="ttdef"><b>Definition:</b> TriangleMeshFactory.cpp:85</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_a1eb4bc21a1a623c719892967d996e314"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a1eb4bc21a1a623c719892967d996e314">open3d::geometry::TriangleMesh::operator+=</a></div><div class="ttdeci">TriangleMesh &amp; operator+=(const TriangleMesh &amp;mesh)</div><div class="ttdef"><b>Definition:</b> TriangleMesh.cpp:53</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_a20ed81f5e181b8342239b3d7c5ec1a90"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a20ed81f5e181b8342239b3d7c5ec1a90">open3d::geometry::TriangleMesh::FilterSmoothTaubin</a></div><div class="ttdeci">std::shared_ptr&lt; TriangleMesh &gt; FilterSmoothTaubin(int number_of_iterations, double lambda_filter=0.5, double mu=-0.53, FilterScope scope=FilterScope::All) const</div><div class="ttdoc">Function to smooth triangle mesh using method of Taubin, &quot;Curve and Surface Smoothing Without Shrinka...</div><div class="ttdef"><b>Definition:</b> TriangleMesh.cpp:386</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_a2536a9b85f8060c7468da8378d696057"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a2536a9b85f8060c7468da8378d696057">open3d::geometry::TriangleMesh::SamplePointsUniformly</a></div><div class="ttdeci">std::shared_ptr&lt; PointCloud &gt; SamplePointsUniformly(size_t number_of_points, bool use_triangle_normal=false)</div><div class="ttdef"><b>Definition:</b> TriangleMesh.cpp:501</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_a2895032074c34dd9375e3d3eecc81718"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a2895032074c34dd9375e3d3eecc81718">open3d::geometry::TriangleMesh::GetSelfIntersectingTriangles</a></div><div class="ttdeci">std::vector&lt; Eigen::Vector2i &gt; GetSelfIntersectingTriangles() const</div><div class="ttdef"><b>Definition:</b> TriangleMesh.cpp:1344</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_a28e1b29798f6e04d80de9e2638bf1c96"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a28e1b29798f6e04d80de9e2638bf1c96">open3d::geometry::TriangleMesh::SamplePointsPoissonDisk</a></div><div class="ttdeci">std::shared_ptr&lt; PointCloud &gt; SamplePointsPoissonDisk(size_t number_of_points, double init_factor=5, const std::shared_ptr&lt; PointCloud &gt; pcl_init=nullptr, bool use_triangle_normal=false)</div><div class="ttdef"><b>Definition:</b> TriangleMesh.cpp:518</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_a292f2d129637b15598fbbeec0b6b57e1"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a292f2d129637b15598fbbeec0b6b57e1">open3d::geometry::TriangleMesh::IsVertexManifold</a></div><div class="ttdeci">bool IsVertexManifold() const</div><div class="ttdef"><b>Definition:</b> TriangleMesh.cpp:1340</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_a34f090ed23456400c4192992d199bdad"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a34f090ed23456400c4192992d199bdad">open3d::geometry::TriangleMesh::RemoveDuplicatedVertices</a></div><div class="ttdeci">TriangleMesh &amp; RemoveDuplicatedVertices()</div><div class="ttdoc">Function that removes duplicated verties, i.e., vertices that have identical coordinates.</div><div class="ttdef"><b>Definition:</b> TriangleMesh.cpp:662</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_a37984016ded7bbceb893c5dba0e8b6c8"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a37984016ded7bbceb893c5dba0e8b6c8">open3d::geometry::TriangleMesh::adjacency_list_</a></div><div class="ttdeci">std::vector&lt; std::unordered_set&lt; int &gt; &gt; adjacency_list_</div><div class="ttdef"><b>Definition:</b> TriangleMesh.h:776</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_a3dec762c32c18d5d8a7f3259662a79cb"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a3dec762c32c18d5d8a7f3259662a79cb">open3d::geometry::TriangleMesh::CreateMobius</a></div><div class="ttdeci">static std::shared_ptr&lt; TriangleMesh &gt; CreateMobius(int length_split=70, int width_split=15, int twists=1, double radius=1, double flatness=1, double width=1, double scale=1)</div><div class="ttdef"><b>Definition:</b> TriangleMeshFactory.cpp:800</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_a41b5ac2ab386ac85bfe056f0bf22bab9"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a41b5ac2ab386ac85bfe056f0bf22bab9">open3d::geometry::TriangleMesh::IsEdgeManifold</a></div><div class="ttdeci">bool IsEdgeManifold(bool allow_boundary_edges=true) const</div><div class="ttdef"><b>Definition:</b> TriangleMesh.cpp:1271</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_a41c51a951a1ee0110a48b2ef7757b43c"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a41c51a951a1ee0110a48b2ef7757b43c">open3d::geometry::TriangleMesh::RemoveTrianglesByIndex</a></div><div class="ttdeci">void RemoveTrianglesByIndex(const std::vector&lt; size_t &gt; &amp;triangle_indices)</div><div class="ttdoc">This function removes the triangles with index in triangle_indices. Call RemoveUnreferencedVertices t...</div><div class="ttdef"><b>Definition:</b> TriangleMesh.cpp:1487</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_a46707c4a7e41d4e82fc0460d3c568bda"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a46707c4a7e41d4e82fc0460d3c568bda">open3d::geometry::TriangleMesh::ComputeTrianglePlane</a></div><div class="ttdeci">static Eigen::Vector4d ComputeTrianglePlane(const Eigen::Vector3d &amp;p0, const Eigen::Vector3d &amp;p1, const Eigen::Vector3d &amp;p2)</div><div class="ttdef"><b>Definition:</b> TriangleMesh.cpp:1218</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_a46f81b23e6538ab3d984824e93fb6e8c"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a46f81b23e6538ab3d984824e93fb6e8c">open3d::geometry::TriangleMesh::HasTriangles</a></div><div class="ttdeci">bool HasTriangles() const</div><div class="ttdoc">Returns true if the mesh contains triangles.</div><div class="ttdef"><b>Definition:</b> TriangleMesh.h:61</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_a4b31309a8d8c1f94a7ff0434a884f0eb"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a4b31309a8d8c1f94a7ff0434a884f0eb">open3d::geometry::TriangleMesh::ComputeVertexNormals</a></div><div class="ttdeci">TriangleMesh &amp; ComputeVertexNormals(bool normalized=true)</div><div class="ttdoc">Function to compute vertex normals, usually called before rendering.</div><div class="ttdef"><b>Definition:</b> TriangleMesh.cpp:127</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_a4b3d0d742b2d0fd200b40b852890f5ff"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a4b3d0d742b2d0fd200b40b852890f5ff">open3d::geometry::TriangleMesh::RemoveVerticesByIndex</a></div><div class="ttdeci">void RemoveVerticesByIndex(const std::vector&lt; size_t &gt; &amp;vertex_indices)</div><div class="ttdoc">This function removes the vertices with index in vertex_indices. Note that also all triangles associa...</div><div class="ttdef"><b>Definition:</b> TriangleMesh.cpp:1538</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_a4bbf5a268ec72582a78a882f474e198a"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a4bbf5a268ec72582a78a882f474e198a">open3d::geometry::TriangleMesh::CreateCone</a></div><div class="ttdeci">static std::shared_ptr&lt; TriangleMesh &gt; CreateCone(double radius=1.0, double height=2.0, int resolution=20, int split=1, bool create_uv_map=false)</div><div class="ttdef"><b>Definition:</b> TriangleMeshFactory.cpp:539</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_a4dacf0b62186999a6449f7332a1a5d54"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a4dacf0b62186999a6449f7332a1a5d54">open3d::geometry::TriangleMesh::CreateFromPointCloudPoisson</a></div><div class="ttdeci">static std::tuple&lt; std::shared_ptr&lt; TriangleMesh &gt;, std::vector&lt; double &gt; &gt; CreateFromPointCloudPoisson(const PointCloud &amp;pcd, size_t depth=8, float width=0.0f, float scale=1.1f, bool linear_fit=false, int n_threads=-1)</div><div class="ttdoc">Function that computes a triangle mesh from an oriented PointCloud pcd. This implements the Screened ...</div><div class="ttdef"><b>Definition:</b> SurfaceReconstructionPoisson.cpp:719</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_a4ea92820de31c1fcbf62e5c6d9516540"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a4ea92820de31c1fcbf62e5c6d9516540">open3d::geometry::TriangleMesh::Clear</a></div><div class="ttdeci">virtual TriangleMesh &amp; Clear() override</div><div class="ttdoc">Clear all elements in the geometry.</div><div class="ttdef"><b>Definition:</b> TriangleMesh.cpp:27</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_a51a42d9e899de697300c602bc8ad9251"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a51a42d9e899de697300c602bc8ad9251">open3d::geometry::TriangleMesh::MergeCloseVertices</a></div><div class="ttdeci">TriangleMesh &amp; MergeCloseVertices(double eps)</div><div class="ttdoc">Function that will merge close by vertices to a single one. The vertex position, normal and color wil...</div><div class="ttdef"><b>Definition:</b> TriangleMesh.cpp:910</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_a52db96d3c6e509bac5a2ceecc9d8c1cc"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a52db96d3c6e509bac5a2ceecc9d8c1cc">open3d::geometry::TriangleMesh::GetOrderedEdge</a></div><div class="ttdeci">static Eigen::Vector2i GetOrderedEdge(int vidx0, int vidx1)</div><div class="ttdoc">Helper function to get an edge with ordered vertex indices.</div><div class="ttdef"><b>Definition:</b> TriangleMesh.h:332</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_a5965a7bc530e8063507ca47a337c473a"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a5965a7bc530e8063507ca47a337c473a">open3d::geometry::TriangleMesh::CreateFromPointCloudAlphaShape</a></div><div class="ttdeci">static std::shared_ptr&lt; TriangleMesh &gt; CreateFromPointCloudAlphaShape(const PointCloud &amp;pcd, double alpha, std::shared_ptr&lt; TetraMesh &gt; tetra_mesh=nullptr, std::vector&lt; size_t &gt; *pt_map=nullptr)</div><div class="ttdoc">Alpha shapes are a generalization of the convex hull. With decreasing alpha value the shape schrinks ...</div><div class="ttdef"><b>Definition:</b> SurfaceReconstructionAlphaShape.cpp:25</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_a5dd07290669043643698e660d9e670ce"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a5dd07290669043643698e660d9e670ce">open3d::geometry::TriangleMesh::SimplifyVertexClustering</a></div><div class="ttdeci">std::shared_ptr&lt; TriangleMesh &gt; SimplifyVertexClustering(double voxel_size, SimplificationContraction contraction=SimplificationContraction::Average) const</div><div class="ttdef"><b>Definition:</b> TriangleMeshSimplification.cpp:72</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_a601b6d4b19f75e1677af5d02e881e2f3"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a601b6d4b19f75e1677af5d02e881e2f3">open3d::geometry::TriangleMesh::EulerPoincareCharacteristic</a></div><div class="ttdeci">int EulerPoincareCharacteristic() const</div><div class="ttdef"><b>Definition:</b> TriangleMesh.cpp:1242</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_a64a0a850d21ec4d0fa297787ae28868c"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a64a0a850d21ec4d0fa297787ae28868c">open3d::geometry::TriangleMesh::SelectByIndex</a></div><div class="ttdeci">std::shared_ptr&lt; TriangleMesh &gt; SelectByIndex(const std::vector&lt; size_t &gt; &amp;indices, bool cleanup=true) const</div><div class="ttdef"><b>Definition:</b> TriangleMesh.cpp:1599</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_a652be3b74a111590f1f41d1bdad8ec14"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a652be3b74a111590f1f41d1bdad8ec14">open3d::geometry::TriangleMesh::GetEdgeToTrianglesMap</a></div><div class="ttdeci">std::unordered_map&lt; Eigen::Vector2i, std::vector&lt; int &gt;, utility::hash_eigen&lt; Eigen::Vector2i &gt; &gt; GetEdgeToTrianglesMap() const</div><div class="ttdef"><b>Definition:</b> TriangleMesh.cpp:1113</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_a66abc01744c37d5eeefe0d7b6d3d8c8e"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a66abc01744c37d5eeefe0d7b6d3d8c8e">open3d::geometry::TriangleMesh::HasTriangleMaterialIds</a></div><div class="ttdeci">bool HasTriangleMaterialIds() const</div><div class="ttdef"><b>Definition:</b> TriangleMesh.h:90</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_a685b36e7ec28d4dd6655f5a2e72802ab"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a685b36e7ec28d4dd6655f5a2e72802ab">open3d::geometry::TriangleMesh::RemoveVerticesByMask</a></div><div class="ttdeci">void RemoveVerticesByMask(const std::vector&lt; bool &gt; &amp;vertex_mask)</div><div class="ttdoc">This function removes the vertices that are masked in vertex_mask. Note that also all triangles assoc...</div><div class="ttdef"><b>Definition:</b> TriangleMesh.cpp:1555</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_a6ab3d477f56928c447e28913484cf3c9"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a6ab3d477f56928c447e28913484cf3c9">open3d::geometry::TriangleMesh::CreateFromPointCloudBallPivoting</a></div><div class="ttdeci">static std::shared_ptr&lt; TriangleMesh &gt; CreateFromPointCloudBallPivoting(const PointCloud &amp;pcd, const std::vector&lt; double &gt; &amp;radii)</div><div class="ttdef"><b>Definition:</b> SurfaceReconstructionBallPivoting.cpp:737</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_a6da74c05d87cfef5ca025b39d8e6efc3"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a6da74c05d87cfef5ca025b39d8e6efc3">open3d::geometry::TriangleMesh::triangle_uvs_</a></div><div class="ttdeci">std::vector&lt; Eigen::Vector2d &gt; triangle_uvs_</div><div class="ttdoc">List of uv coordinates per triangle.</div><div class="ttdef"><b>Definition:</b> TriangleMesh.h:778</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_a6e48df0de848bf8137bc2fe5e1981e90"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a6e48df0de848bf8137bc2fe5e1981e90">open3d::geometry::TriangleMesh::FilterSmoothLaplacianHelper</a></div><div class="ttdeci">void FilterSmoothLaplacianHelper(std::shared_ptr&lt; TriangleMesh &gt; &amp;mesh, const std::vector&lt; Eigen::Vector3d &gt; &amp;prev_vertices, const std::vector&lt; Eigen::Vector3d &gt; &amp;prev_vertex_normals, const std::vector&lt; Eigen::Vector3d &gt; &amp;prev_vertex_colors, const std::vector&lt; std::unordered_set&lt; int &gt;&gt; &amp;adjacency_list, double lambda_filter, bool filter_vertex, bool filter_normal, bool filter_color) const</div><div class="ttdef"><b>Definition:</b> TriangleMesh.cpp:293</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_a7046aa1902fbc4e5688109930402ca5d"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a7046aa1902fbc4e5688109930402ca5d">open3d::geometry::TriangleMesh::~TriangleMesh</a></div><div class="ttdeci">~TriangleMesh() override</div><div class="ttdef"><b>Definition:</b> TriangleMesh.h:47</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_a76a6954168e7b35c70cdcd0f98086783"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a76a6954168e7b35c70cdcd0f98086783">open3d::geometry::TriangleMesh::Transform</a></div><div class="ttdeci">virtual TriangleMesh &amp; Transform(const Eigen::Matrix4d &amp;transformation) override</div><div class="ttdoc">Apply transformation (4x4 matrix) to the geometry coordinates.</div><div class="ttdef"><b>Definition:</b> TriangleMesh.cpp:40</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_a7887ba3429f25dd882d4445cade594b1"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a7887ba3429f25dd882d4445cade594b1">open3d::geometry::TriangleMesh::CreateTetrahedron</a></div><div class="ttdeci">static std::shared_ptr&lt; TriangleMesh &gt; CreateTetrahedron(double radius=1.0, bool create_uv_map=false)</div><div class="ttdef"><b>Definition:</b> TriangleMeshFactory.cpp:15</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_a7c336042cff2009101c6611a518abadd"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a7c336042cff2009101c6611a518abadd">open3d::geometry::TriangleMesh::IsOrientable</a></div><div class="ttdeci">bool IsOrientable() const</div><div class="ttdef"><b>Definition:</b> TriangleMesh.cpp:1094</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_a7d293d2770e0c98de7c21a1a36975ad5"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a7d293d2770e0c98de7c21a1a36975ad5">open3d::geometry::TriangleMesh::ComputeEdgeWeightsCot</a></div><div class="ttdeci">std::unordered_map&lt; Eigen::Vector2i, double, utility::hash_eigen&lt; Eigen::Vector2i &gt; &gt; ComputeEdgeWeightsCot(const std::unordered_map&lt; Eigen::Vector2i, std::vector&lt; int &gt;, utility::hash_eigen&lt; Eigen::Vector2i &gt;&gt; &amp;edges_to_vertices, double min_weight=std::numeric_limits&lt; double &gt;::lowest()) const</div><div class="ttdoc">Function that computes for each edge in the triangle mesh and passed as parameter edges_to_vertices t...</div><div class="ttdef"><b>Definition:</b> TriangleMesh.cpp:1683</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_a7dcddd5784eaa2efedfa5e274aa50e3e"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a7dcddd5784eaa2efedfa5e274aa50e3e">open3d::geometry::TriangleMesh::triangles_</a></div><div class="ttdeci">std::vector&lt; Eigen::Vector3i &gt; triangles_</div><div class="ttdoc">List of triangles denoted by the index of points forming the triangle.</div><div class="ttdef"><b>Definition:</b> TriangleMesh.h:771</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_a7ec00b3beae972048fa4a3e1f711b548"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a7ec00b3beae972048fa4a3e1f711b548">open3d::geometry::TriangleMesh::HasTextures</a></div><div class="ttdeci">bool HasTextures() const</div><div class="ttdoc">Returns true if the mesh has texture.</div><div class="ttdef"><b>Definition:</b> TriangleMesh.h:81</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_a804035e82e0a721c23321c63d1697cfc"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a804035e82e0a721c23321c63d1697cfc">open3d::geometry::TriangleMesh::OrientTriangles</a></div><div class="ttdeci">bool OrientTriangles()</div><div class="ttdef"><b>Definition:</b> TriangleMesh.cpp:1103</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_a84d50d05a4904038823231aa8252c4d2"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a84d50d05a4904038823231aa8252c4d2">open3d::geometry::TriangleMesh::HasTriangleUvs</a></div><div class="ttdeci">bool HasTriangleUvs() const</div><div class="ttdef"><b>Definition:</b> TriangleMesh.h:76</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_a8f547f8869c3094427a184c5fa2ac519"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a8f547f8869c3094427a184c5fa2ac519">open3d::geometry::TriangleMesh::Crop</a></div><div class="ttdeci">std::shared_ptr&lt; TriangleMesh &gt; Crop(const AxisAlignedBoundingBox &amp;bbox) const</div><div class="ttdef"><b>Definition:</b> TriangleMesh.cpp:1659</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_a90341a2a76590e3a9ce4d507d3a2285c"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a90341a2a76590e3a9ce4d507d3a2285c">open3d::geometry::TriangleMesh::triangle_normals_</a></div><div class="ttdeci">std::vector&lt; Eigen::Vector3d &gt; triangle_normals_</div><div class="ttdoc">Triangle normals.</div><div class="ttdef"><b>Definition:</b> TriangleMesh.h:773</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_a93952e5fd1b8c30d6a9205a2aab55da6"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a93952e5fd1b8c30d6a9205a2aab55da6">open3d::geometry::TriangleMesh::CreateOctahedron</a></div><div class="ttdeci">static std::shared_ptr&lt; TriangleMesh &gt; CreateOctahedron(double radius=1.0, bool create_uv_map=false)</div><div class="ttdef"><b>Definition:</b> TriangleMeshFactory.cpp:52</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_a9514b3c8075e0066fd041a853f23f0b7"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a9514b3c8075e0066fd041a853f23f0b7">open3d::geometry::TriangleMesh::RemoveDuplicatedTriangles</a></div><div class="ttdeci">TriangleMesh &amp; RemoveDuplicatedTriangles()</div><div class="ttdoc">Function that removes duplicated triangles, i.e., removes triangles that reference the same three ver...</div><div class="ttdef"><b>Definition:</b> TriangleMesh.cpp:705</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_a9e7518102a6d34c351a0d2746bd97751"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a9e7518102a6d34c351a0d2746bd97751">open3d::geometry::TriangleMesh::CreateFromOrientedBoundingBox</a></div><div class="ttdeci">static std::shared_ptr&lt; TriangleMesh &gt; CreateFromOrientedBoundingBox(const OrientedBoundingBox &amp;obox, const Eigen::Vector3d &amp;scale=Eigen::Vector3d::Ones(), bool create_uv_map=false)</div><div class="ttdef"><b>Definition:</b> TriangleMeshFactory.cpp:142</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_a9e78ff8b6358ef24f5285e6bbc863e61"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#a9e78ff8b6358ef24f5285e6bbc863e61">open3d::geometry::TriangleMesh::GetNonManifoldEdges</a></div><div class="ttdeci">std::vector&lt; Eigen::Vector2i &gt; GetNonManifoldEdges(bool allow_boundary_edges=true) const</div><div class="ttdef"><b>Definition:</b> TriangleMesh.cpp:1257</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_aa415bc74025604428db8b7d2f97b5d8d"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#aa415bc74025604428db8b7d2f97b5d8d">open3d::geometry::TriangleMesh::materials_</a></div><div class="ttdeci">std::unordered_map&lt; std::string, Material &gt; materials_</div><div class="ttdef"><b>Definition:</b> TriangleMesh.h:856</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_aa49a80312d128fbfa70eeb8525cc24ec"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#aa49a80312d128fbfa70eeb8525cc24ec">open3d::geometry::TriangleMesh::RemoveDegenerateTriangles</a></div><div class="ttdeci">TriangleMesh &amp; RemoveDegenerateTriangles()</div><div class="ttdoc">Function that removes degenerate triangles, i.e., triangles that reference a single vertex multiple t...</div><div class="ttdef"><b>Definition:</b> TriangleMesh.cpp:800</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_aa52410a1d4ce4f94955d3a15130d7400"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#aa52410a1d4ce4f94955d3a15130d7400">open3d::geometry::TriangleMesh::DeformAsRigidAsPossible</a></div><div class="ttdeci">std::shared_ptr&lt; TriangleMesh &gt; DeformAsRigidAsPossible(const std::vector&lt; int &gt; &amp;constraint_vertex_indices, const std::vector&lt; Eigen::Vector3d &gt; &amp;constraint_vertex_positions, size_t max_iter, DeformAsRigidAsPossibleEnergy energy=DeformAsRigidAsPossibleEnergy::Spokes, double smoothed_alpha=0.01) const</div><div class="ttdoc">This function deforms the mesh using the method by Sorkine and Alexa, &quot;As-Rigid-As-Possible Surface M...</div><div class="ttdef"><b>Definition:</b> TriangleMeshDeformation.cpp:19</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_aaa494192578437efa1ba34a5dded2b2f"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#aaa494192578437efa1ba34a5dded2b2f">open3d::geometry::TriangleMesh::CreateArrow</a></div><div class="ttdeci">static std::shared_ptr&lt; TriangleMesh &gt; CreateArrow(double cylinder_radius=1.0, double cone_radius=1.5, double cylinder_height=5.0, double cone_height=4.0, int resolution=20, int cylinder_split=4, int cone_split=1)</div><div class="ttdef"><b>Definition:</b> TriangleMeshFactory.cpp:718</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_aab1782c3de14f8553de0a946b8900bce"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#aab1782c3de14f8553de0a946b8900bce">open3d::geometry::TriangleMesh::RemoveUnreferencedVertices</a></div><div class="ttdeci">TriangleMesh &amp; RemoveUnreferencedVertices()</div><div class="ttdoc">This function removes vertices from the triangle mesh that are not referenced in any triangle of the ...</div><div class="ttdef"><b>Definition:</b> TriangleMesh.cpp:757</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_ab2a96a4bc20b515c111e3e756d7e4d1e"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#ab2a96a4bc20b515c111e3e756d7e4d1e">open3d::geometry::TriangleMesh::SimplifyQuadricDecimation</a></div><div class="ttdeci">std::shared_ptr&lt; TriangleMesh &gt; SimplifyQuadricDecimation(int target_number_of_triangles, double maximum_error, double boundary_weight) const</div><div class="ttdef"><b>Definition:</b> TriangleMeshSimplification.cpp:246</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_ab6b745727a70875ba9bd3e8b706c131d"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#ab6b745727a70875ba9bd3e8b706c131d">open3d::geometry::TriangleMesh::HasTriangleNormals</a></div><div class="ttdeci">bool HasTriangleNormals() const</div><div class="ttdoc">Returns true if the mesh contains triangle normals.</div><div class="ttdef"><b>Definition:</b> TriangleMesh.h:66</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_ab6d789a436c3500b1eec51d304dbcb42"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#ab6d789a436c3500b1eec51d304dbcb42">open3d::geometry::TriangleMesh::CreateCylinder</a></div><div class="ttdeci">static std::shared_ptr&lt; TriangleMesh &gt; CreateCylinder(double radius=1.0, double height=2.0, int resolution=20, int split=4, bool create_uv_map=false)</div><div class="ttdef"><b>Definition:</b> TriangleMeshFactory.cpp:383</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_abbf57ddb4e13f2ceb33e6785cc864a46"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#abbf57ddb4e13f2ceb33e6785cc864a46">open3d::geometry::TriangleMesh::IsWatertight</a></div><div class="ttdeci">bool IsWatertight() const</div><div class="ttdef"><b>Definition:</b> TriangleMesh.cpp:1099</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_ac5109ef64ef2e20467e1560935e8ccfb"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#ac5109ef64ef2e20467e1560935e8ccfb">open3d::geometry::TriangleMesh::HasAdjacencyList</a></div><div class="ttdeci">bool HasAdjacencyList() const</div><div class="ttdoc">Returns true if the mesh contains adjacency normals.</div><div class="ttdef"><b>Definition:</b> TriangleMesh.h:71</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_ac5abd918be627b6397bd8c149a0b0e47"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#ac5abd918be627b6397bd8c149a0b0e47">open3d::geometry::TriangleMesh::IsIntersecting</a></div><div class="ttdeci">bool IsIntersecting(const TriangleMesh &amp;other) const</div><div class="ttdef"><b>Definition:</b> TriangleMesh.cpp:1398</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_ac701002ed8fbbf5ec30c261338794501"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#ac701002ed8fbbf5ec30c261338794501">open3d::geometry::TriangleMesh::NormalizeNormals</a></div><div class="ttdeci">TriangleMesh &amp; NormalizeNormals()</div><div class="ttdoc">Normalize both triangle normals and vertex normals to length 1.</div><div class="ttdef"><b>Definition:</b> TriangleMesh.h:96</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_ac91258e5fa363de720104f55d86ab793"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#ac91258e5fa363de720104f55d86ab793">open3d::geometry::TriangleMesh::GetTriangleArea</a></div><div class="ttdeci">double GetTriangleArea(size_t triangle_idx) const</div><div class="ttdef"><b>Definition:</b> TriangleMesh.cpp:1157</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_acb9780fe9ca63211dbda959c5e7f4fc0"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#acb9780fe9ca63211dbda959c5e7f4fc0">open3d::geometry::TriangleMesh::CreateTorus</a></div><div class="ttdeci">static std::shared_ptr&lt; TriangleMesh &gt; CreateTorus(double torus_radius=1.0, double tube_radius=0.5, int radial_resolution=30, int tubular_resolution=20)</div><div class="ttdef"><b>Definition:</b> TriangleMeshFactory.cpp:666</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_acf0f8d836ee1eea6ecc540c43bc1e9d1"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#acf0f8d836ee1eea6ecc540c43bc1e9d1">open3d::geometry::TriangleMesh::ComputeAdjacencyList</a></div><div class="ttdeci">TriangleMesh &amp; ComputeAdjacencyList()</div><div class="ttdoc">Function to compute adjacency list, call before adjacency list is needed.</div><div class="ttdef"><b>Definition:</b> TriangleMesh.cpp:142</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_ad1f5666200f972bed5b78dd3b0e1f9ec"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#ad1f5666200f972bed5b78dd3b0e1f9ec">open3d::geometry::TriangleMesh::TriangleMesh</a></div><div class="ttdeci">TriangleMesh(const std::vector&lt; Eigen::Vector3d &gt; &amp;vertices, const std::vector&lt; Eigen::Vector3i &gt; &amp;triangles)</div><div class="ttdoc">Parameterized Constructor.</div><div class="ttdef"><b>Definition:</b> TriangleMesh.h:43</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_ad5ce14c4c8ab19d08a179d58533c94bd"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#ad5ce14c4c8ab19d08a179d58533c94bd">open3d::geometry::TriangleMesh::GetOrderedTriangle</a></div><div class="ttdeci">static Eigen::Vector3i GetOrderedTriangle(int vidx0, int vidx1, int vidx2)</div><div class="ttdef"><b>Definition:</b> TriangleMesh.h:291</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_add35eb810d82fe03e39dfb3984ccdc96"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#add35eb810d82fe03e39dfb3984ccdc96">open3d::geometry::TriangleMesh::FilterSharpen</a></div><div class="ttdeci">std::shared_ptr&lt; TriangleMesh &gt; FilterSharpen(int number_of_iterations, double strength, FilterScope scope=FilterScope::All) const</div><div class="ttdoc">Function to sharpen triangle mesh.</div><div class="ttdef"><b>Definition:</b> TriangleMesh.cpp:156</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_ade007ba5e10cb3c60c9d7f4d2e8f2611"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#ade007ba5e10cb3c60c9d7f4d2e8f2611">open3d::geometry::TriangleMesh::triangle_material_ids_</a></div><div class="ttdeci">std::vector&lt; int &gt; triangle_material_ids_</div><div class="ttdoc">List of material ids.</div><div class="ttdef"><b>Definition:</b> TriangleMesh.h:859</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_ade21d10ceaf1299ea18d192f0668dd6f"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#ade21d10ceaf1299ea18d192f0668dd6f">open3d::geometry::TriangleMesh::GetEdgeToVerticesMap</a></div><div class="ttdeci">std::unordered_map&lt; Eigen::Vector2i, std::vector&lt; int &gt;, utility::hash_eigen&lt; Eigen::Vector2i &gt; &gt; GetEdgeToVerticesMap() const</div><div class="ttdef"><b>Definition:</b> TriangleMesh.cpp:1132</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_ae0fdc61d44a6569a0b66afa3f4a10229"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#ae0fdc61d44a6569a0b66afa3f4a10229">open3d::geometry::TriangleMesh::GetTrianglePlane</a></div><div class="ttdeci">Eigen::Vector4d GetTrianglePlane(size_t triangle_idx) const</div><div class="ttdef"><b>Definition:</b> TriangleMesh.cpp:1234</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_ae15d30fa98b93c2ebc365380e3b3ebe8"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#ae15d30fa98b93c2ebc365380e3b3ebe8">open3d::geometry::TriangleMesh::FilterSmoothSimple</a></div><div class="ttdeci">std::shared_ptr&lt; TriangleMesh &gt; FilterSmoothSimple(int number_of_iterations, FilterScope scope=FilterScope::All) const</div><div class="ttdoc">Function to smooth triangle mesh with simple neighbour average.</div><div class="ttdef"><b>Definition:</b> TriangleMesh.cpp:227</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_ae24042df732dd8cd2b8272c7302a1154"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#ae24042df732dd8cd2b8272c7302a1154">open3d::geometry::TriangleMesh::operator+</a></div><div class="ttdeci">TriangleMesh operator+(const TriangleMesh &amp;mesh) const</div><div class="ttdef"><b>Definition:</b> TriangleMesh.cpp:108</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_ae2d8c6f82481d56ba06e849991261924"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#ae2d8c6f82481d56ba06e849991261924">open3d::geometry::TriangleMesh::TriangleMesh</a></div><div class="ttdeci">TriangleMesh()</div><div class="ttdoc">Default Constructor.</div><div class="ttdef"><b>Definition:</b> TriangleMesh.h:38</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_ae5ee35dd23c4a786be63e3da3f305062"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#ae5ee35dd23c4a786be63e3da3f305062">open3d::geometry::TriangleMesh::IsSelfIntersecting</a></div><div class="ttdeci">bool IsSelfIntersecting() const</div><div class="ttdef"><b>Definition:</b> TriangleMesh.cpp:1389</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_af021770830e75cc803dc449a3d7ea9d6"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#af021770830e75cc803dc449a3d7ea9d6">open3d::geometry::TriangleMesh::CreateBox</a></div><div class="ttdeci">static std::shared_ptr&lt; TriangleMesh &gt; CreateBox(double width=1.0, double height=1.0, double depth=1.0, bool create_uv_map=false, bool map_texture_to_each_face=false)</div><div class="ttdef"><b>Definition:</b> TriangleMeshFactory.cpp:154</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_af2667927e4b8f4a62a635a1a2f490eb8"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#af2667927e4b8f4a62a635a1a2f490eb8">open3d::geometry::TriangleMesh::FilterSmoothLaplacian</a></div><div class="ttdeci">std::shared_ptr&lt; TriangleMesh &gt; FilterSmoothLaplacian(int number_of_iterations, double lambda_filter, FilterScope scope=FilterScope::All) const</div><div class="ttdoc">Function to smooth triangle mesh using Laplacian.</div><div class="ttdef"><b>Definition:</b> TriangleMesh.cpp:345</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_af324cfbefa0bed22b0325a2a34bf6069"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#af324cfbefa0bed22b0325a2a34bf6069">open3d::geometry::TriangleMesh::ComputeTriangleNormals</a></div><div class="ttdeci">TriangleMesh &amp; ComputeTriangleNormals(bool normalized=true)</div><div class="ttdoc">Function to compute triangle normals, usually called before rendering.</div><div class="ttdef"><b>Definition:</b> TriangleMesh.cpp:112</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_af3e5e2bcce2ae099a91bec61692b191a"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#af3e5e2bcce2ae099a91bec61692b191a">open3d::geometry::TriangleMesh::GetSurfaceArea</a></div><div class="ttdeci">double GetSurfaceArea() const</div><div class="ttdef"><b>Definition:</b> TriangleMesh.cpp:1165</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_af589b9fdfa2885c95a15977dd0874a24"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#af589b9fdfa2885c95a15977dd0874a24">open3d::geometry::TriangleMesh::GetNonManifoldVertices</a></div><div class="ttdeci">std::vector&lt; int &gt; GetNonManifoldVertices() const</div><div class="ttdef"><b>Definition:</b> TriangleMesh.cpp:1284</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_af88fb06b3e541042a8f9f29e1c0e64de"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#af88fb06b3e541042a8f9f29e1c0e64de">open3d::geometry::TriangleMesh::RemoveTrianglesByMask</a></div><div class="ttdeci">void RemoveTrianglesByMask(const std::vector&lt; bool &gt; &amp;triangle_mask)</div><div class="ttdoc">This function removes the triangles that are masked in triangle_mask. Call RemoveUnreferencedVertices...</div><div class="ttdef"><b>Definition:</b> TriangleMesh.cpp:1504</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_af9599cdc1c8f4a5efb92016319daee05"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#af9599cdc1c8f4a5efb92016319daee05">open3d::geometry::TriangleMesh::CreateCoordinateFrame</a></div><div class="ttdeci">static std::shared_ptr&lt; TriangleMesh &gt; CreateCoordinateFrame(double size=1.0, const Eigen::Vector3d &amp;origin=Eigen::Vector3d(0.0, 0.0, 0.0))</div><div class="ttdef"><b>Definition:</b> TriangleMeshFactory.cpp:761</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_afc3d6d87ae64e86a20c90e134424ad04"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#afc3d6d87ae64e86a20c90e134424ad04">open3d::geometry::TriangleMesh::CreateSphere</a></div><div class="ttdeci">static std::shared_ptr&lt; TriangleMesh &gt; CreateSphere(double radius=1.0, int resolution=20, bool create_uv_map=false)</div><div class="ttdef"><b>Definition:</b> TriangleMeshFactory.cpp:216</div></div>
<div class="ttc" id="aclassopen3d_1_1geometry_1_1_triangle_mesh_html_afc871b155b0282561652ab8db5ac5cc0"><div class="ttname"><a href="classopen3d_1_1geometry_1_1_triangle_mesh.40#afc871b155b0282561652ab8db5ac5cc0">open3d::geometry::TriangleMesh::HasMaterials</a></div><div class="ttdeci">bool HasMaterials() const</div><div class="ttdef"><b>Definition:</b> TriangleMesh.h:88</div></div>
<div class="ttc" id="ageometry_2_image_8h_html"><div class="ttname"><a href="geometry_2_image_8h.html">Image.h</a></div></div>
<div class="ttc" id="aio_2file__format_2_file_p_c_d_8cpp_html_a2474a5474cbff19523a51eb1de01cda4"><div class="ttname"><a href="io_2file__format_2_file_p_c_d_8cpp.375.delay#a2474a5474cbff19523a51eb1de01cda4">width</a></div><div class="ttdeci">int width</div><div class="ttdef"><b>Definition:</b> FilePCD.cpp:52</div></div>
<div class="ttc" id="aio_2file__format_2_file_p_c_d_8cpp_html_a439227feff9d7f55384e8780cfc2eb82"><div class="ttname"><a href="io_2file__format_2_file_p_c_d_8cpp.375.delay#a439227feff9d7f55384e8780cfc2eb82">size</a></div><div class="ttdeci">int size</div><div class="ttdef"><b>Definition:</b> FilePCD.cpp:40</div></div>
<div class="ttc" id="aio_2file__format_2_file_p_c_d_8cpp_html_ad12fc34ce789bce6c8a05d8a17138534"><div class="ttname"><a href="io_2file__format_2_file_p_c_d_8cpp.375.delay#ad12fc34ce789bce6c8a05d8a17138534">height</a></div><div class="ttdeci">int height</div><div class="ttdef"><b>Definition:</b> FilePCD.cpp:53</div></div>
<div class="ttc" id="aio_2file__format_2_file_p_c_d_8cpp_html_aff17911edc8208aa8ddb1c7c52c78389"><div class="ttname"><a href="io_2file__format_2_file_p_c_d_8cpp.375.delay#aff17911edc8208aa8ddb1c7c52c78389">type</a></div><div class="ttdeci">char type</div><div class="ttdef"><b>Definition:</b> FilePCD.cpp:41</div></div>
<div class="ttc" id="anamespaceopen3d_html"><div class="ttname"><a href="namespaceopen3d.html">open3d</a></div><div class="ttdef"><b>Definition:</b> PinholeCameraIntrinsic.cpp:16</div></div>
<div class="ttc" id="anamespacestd_html_ab5696ffa0858c1b1217180ee38205f3b"><div class="ttname"><a href="namespacestd.html#ab5696ffa0858c1b1217180ee38205f3b">std::swap</a></div><div class="ttdeci">void swap(open3d::core::SmallVectorImpl&lt; T &gt; &amp;LHS, open3d::core::SmallVectorImpl&lt; T &gt; &amp;RHS)</div><div class="ttdoc">Implement std::swap in terms of SmallVector swap.</div><div class="ttdef"><b>Definition:</b> SmallVector.h:1370</div></div>
<div class="ttc" id="astructopen3d_1_1geometry_1_1_triangle_mesh_1_1_material_1_1_material_parameter_html"><div class="ttname"><a href="structopen3d_1_1geometry_1_1_triangle_mesh_1-2">open3d::geometry::TriangleMesh::Material::MaterialParameter</a></div><div class="ttdef"><b>Definition:</b> TriangleMesh.h:781</div></div>
<div class="ttc" id="astructopen3d_1_1geometry_1_1_triangle_mesh_1_1_material_1_1_material_parameter_html_a06411b9ecf121fc6ca30f5b7e1242d42"><div class="ttname"><a href="structopen3d_1_1geometry_1_1_triangle_mesh_1-2#a06411b9ecf121fc6ca30f5b7e1242d42">open3d::geometry::TriangleMesh::Material::MaterialParameter::b</a></div><div class="ttdeci">float b() const</div><div class="ttdef"><b>Definition:</b> TriangleMesh.h:830</div></div>
<div class="ttc" id="astructopen3d_1_1geometry_1_1_triangle_mesh_1_1_material_1_1_material_parameter_html_a0cb5e296694fedfca38694231a576036"><div class="ttname"><a href="structopen3d_1_1geometry_1_1_triangle_mesh_1-2#a0cb5e296694fedfca38694231a576036">open3d::geometry::TriangleMesh::Material::MaterialParameter::g</a></div><div class="ttdeci">float g() const</div><div class="ttdef"><b>Definition:</b> TriangleMesh.h:829</div></div>
<div class="ttc" id="astructopen3d_1_1geometry_1_1_triangle_mesh_1_1_material_1_1_material_parameter_html_a13876bc2b0c3f59f905c469f7fab0d0e"><div class="ttname"><a href="structopen3d_1_1geometry_1_1_triangle_mesh_1-2#a13876bc2b0c3f59f905c469f7fab0d0e">open3d::geometry::TriangleMesh::Material::MaterialParameter::f4</a></div><div class="ttdeci">float f4[4]</div><div class="ttdef"><b>Definition:</b> TriangleMesh.h:782</div></div>
<div class="ttc" id="astructopen3d_1_1geometry_1_1_triangle_mesh_1_1_material_1_1_material_parameter_html_a1ee0b8c6ea6e1d8c73f149e758c7a610"><div class="ttname"><a href="structopen3d_1_1geometry_1_1_triangle_mesh_1-2#a1ee0b8c6ea6e1d8c73f149e758c7a610">open3d::geometry::TriangleMesh::Material::MaterialParameter::r</a></div><div class="ttdeci">float r() const</div><div class="ttdef"><b>Definition:</b> TriangleMesh.h:828</div></div>
<div class="ttc" id="astructopen3d_1_1geometry_1_1_triangle_mesh_1_1_material_1_1_material_parameter_html_a32610b091395a72303e315e9818568f5"><div class="ttname"><a href="structopen3d_1_1geometry_1_1_triangle_mesh_1-2#a32610b091395a72303e315e9818568f5">open3d::geometry::TriangleMesh::Material::MaterialParameter::MaterialParameter</a></div><div class="ttdeci">MaterialParameter(const float v1, const float v2, const float v3, const float v4)</div><div class="ttdef"><b>Definition:</b> TriangleMesh.h:791</div></div>
<div class="ttc" id="astructopen3d_1_1geometry_1_1_triangle_mesh_1_1_material_1_1_material_parameter_html_a51799241475c7cff21c7209ab84eef21"><div class="ttname"><a href="structopen3d_1_1geometry_1_1_triangle_mesh_1-2#a51799241475c7cff21c7209ab84eef21">open3d::geometry::TriangleMesh::Material::MaterialParameter::CreateRGB</a></div><div class="ttdeci">static MaterialParameter CreateRGB(const float r, const float g, const float b)</div><div class="ttdef"><b>Definition:</b> TriangleMesh.h:822</div></div>
<div class="ttc" id="astructopen3d_1_1geometry_1_1_triangle_mesh_1_1_material_1_1_material_parameter_html_a98f1b4940f7d45a17e7e1db97495d6a0"><div class="ttname"><a href="structopen3d_1_1geometry_1_1_triangle_mesh_1-2#a98f1b4940f7d45a17e7e1db97495d6a0">open3d::geometry::TriangleMesh::Material::MaterialParameter::MaterialParameter</a></div><div class="ttdeci">MaterialParameter(const float v1, const float v2, const float v3)</div><div class="ttdef"><b>Definition:</b> TriangleMesh.h:801</div></div>
<div class="ttc" id="astructopen3d_1_1geometry_1_1_triangle_mesh_1_1_material_1_1_material_parameter_html_a9dfb3d167dac7c2c9736823d9227f4e4"><div class="ttname"><a href="structopen3d_1_1geometry_1_1_triangle_mesh_1-2#a9dfb3d167dac7c2c9736823d9227f4e4">open3d::geometry::TriangleMesh::Material::MaterialParameter::MaterialParameter</a></div><div class="ttdeci">MaterialParameter(const float v1, const float v2)</div><div class="ttdef"><b>Definition:</b> TriangleMesh.h:808</div></div>
<div class="ttc" id="astructopen3d_1_1geometry_1_1_triangle_mesh_1_1_material_1_1_material_parameter_html_abdb44b81da0c1356caaa19dcd52515a4"><div class="ttname"><a href="structopen3d_1_1geometry_1_1_triangle_mesh_1-2#abdb44b81da0c1356caaa19dcd52515a4">open3d::geometry::TriangleMesh::Material::MaterialParameter::MaterialParameter</a></div><div class="ttdeci">MaterialParameter(const float v1)</div><div class="ttdef"><b>Definition:</b> TriangleMesh.h:815</div></div>
<div class="ttc" id="astructopen3d_1_1geometry_1_1_triangle_mesh_1_1_material_1_1_material_parameter_html_ad6fea2fe1eb15bd4990f4ce5c8aa7afa"><div class="ttname"><a href="structopen3d_1_1geometry_1_1_triangle_mesh_1-2#ad6fea2fe1eb15bd4990f4ce5c8aa7afa">open3d::geometry::TriangleMesh::Material::MaterialParameter::MaterialParameter</a></div><div class="ttdeci">MaterialParameter()</div><div class="ttdef"><b>Definition:</b> TriangleMesh.h:784</div></div>
<div class="ttc" id="astructopen3d_1_1geometry_1_1_triangle_mesh_1_1_material_1_1_material_parameter_html_ae4921d31d9973c19b1fdba68cc3597c1"><div class="ttname"><a href="structopen3d_1_1geometry_1_1_triangle_mesh_1-2#ae4921d31d9973c19b1fdba68cc3597c1">open3d::geometry::TriangleMesh::Material::MaterialParameter::a</a></div><div class="ttdeci">float a() const</div><div class="ttdef"><b>Definition:</b> TriangleMesh.h:831</div></div>
<div class="ttc" id="astructopen3d_1_1geometry_1_1_triangle_mesh_1_1_material_html"><div class="ttname"><a href="structopen3d_1_1geometry_1_1_triangle_mesh_1">open3d::geometry::TriangleMesh::Material</a></div><div class="ttdef"><b>Definition:</b> TriangleMesh.h:780</div></div>
<div class="ttc" id="astructopen3d_1_1geometry_1_1_triangle_mesh_1_1_material_html_a00c9e34c7ffc8b04a940e467942f0370"><div class="ttname"><a href="structopen3d_1_1geometry_1_1_triangle_mesh_1#a00c9e34c7ffc8b04a940e467942f0370">open3d::geometry::TriangleMesh::Material::anisotropy</a></div><div class="ttdeci">std::shared_ptr&lt; Image &gt; anisotropy</div><div class="ttdef"><b>Definition:</b> TriangleMesh.h:850</div></div>
<div class="ttc" id="astructopen3d_1_1geometry_1_1_triangle_mesh_1_1_material_html_a0168e383e13d519b726ee91c38f3696d"><div class="ttname"><a href="structopen3d_1_1geometry_1_1_triangle_mesh_1#a0168e383e13d519b726ee91c38f3696d">open3d::geometry::TriangleMesh::Material::normalMap</a></div><div class="ttdeci">std::shared_ptr&lt; Image &gt; normalMap</div><div class="ttdef"><b>Definition:</b> TriangleMesh.h:843</div></div>
<div class="ttc" id="astructopen3d_1_1geometry_1_1_triangle_mesh_1_1_material_html_a1358677f5e3a6f0bdb2fda7dc2f2ff70"><div class="ttname"><a href="structopen3d_1_1geometry_1_1_triangle_mesh_1#a1358677f5e3a6f0bdb2fda7dc2f2ff70">open3d::geometry::TriangleMesh::Material::clearCoatRoughness</a></div><div class="ttdeci">std::shared_ptr&lt; Image &gt; clearCoatRoughness</div><div class="ttdef"><b>Definition:</b> TriangleMesh.h:849</div></div>
<div class="ttc" id="astructopen3d_1_1geometry_1_1_triangle_mesh_1_1_material_html_a246b916abb7383135dbf73eb409157ca"><div class="ttname"><a href="structopen3d_1_1geometry_1_1_triangle_mesh_1#a246b916abb7383135dbf73eb409157ca">open3d::geometry::TriangleMesh::Material::roughness</a></div><div class="ttdeci">std::shared_ptr&lt; Image &gt; roughness</div><div class="ttdef"><b>Definition:</b> TriangleMesh.h:846</div></div>
<div class="ttc" id="astructopen3d_1_1geometry_1_1_triangle_mesh_1_1_material_html_a26b39472cd0070600a74ce93617090ab"><div class="ttname"><a href="structopen3d_1_1geometry_1_1_triangle_mesh_1#a26b39472cd0070600a74ce93617090ab">open3d::geometry::TriangleMesh::Material::baseAnisotropy</a></div><div class="ttdeci">float baseAnisotropy</div><div class="ttdef"><b>Definition:</b> TriangleMesh.h:840</div></div>
<div class="ttc" id="astructopen3d_1_1geometry_1_1_triangle_mesh_1_1_material_html_a2ba59bf22f6af206c354093672a87463"><div class="ttname"><a href="structopen3d_1_1geometry_1_1_triangle_mesh_1#a2ba59bf22f6af206c354093672a87463">open3d::geometry::TriangleMesh::Material::additionalMaps</a></div><div class="ttdeci">std::unordered_map&lt; std::string, Image &gt; additionalMaps</div><div class="ttdef"><b>Definition:</b> TriangleMesh.h:853</div></div>
<div class="ttc" id="astructopen3d_1_1geometry_1_1_triangle_mesh_1_1_material_html_a3749d9fc94f9665f2f006340ce484726"><div class="ttname"><a href="structopen3d_1_1geometry_1_1_triangle_mesh_1#a3749d9fc94f9665f2f006340ce484726">open3d::geometry::TriangleMesh::Material::baseClearCoat</a></div><div class="ttdeci">float baseClearCoat</div><div class="ttdef"><b>Definition:</b> TriangleMesh.h:838</div></div>
<div class="ttc" id="astructopen3d_1_1geometry_1_1_triangle_mesh_1_1_material_html_a378b83ab26303ba51885d539d658a23f"><div class="ttname"><a href="structopen3d_1_1geometry_1_1_triangle_mesh_1#a378b83ab26303ba51885d539d658a23f">open3d::geometry::TriangleMesh::Material::baseRoughness</a></div><div class="ttdeci">float baseRoughness</div><div class="ttdef"><b>Definition:</b> TriangleMesh.h:836</div></div>
<div class="ttc" id="astructopen3d_1_1geometry_1_1_triangle_mesh_1_1_material_html_a41e4091e16cf252d0a5c49c5e83d6bee"><div class="ttname"><a href="structopen3d_1_1geometry_1_1_triangle_mesh_1#a41e4091e16cf252d0a5c49c5e83d6bee">open3d::geometry::TriangleMesh::Material::floatParameters</a></div><div class="ttdeci">std::unordered_map&lt; std::string, MaterialParameter &gt; floatParameters</div><div class="ttdef"><b>Definition:</b> TriangleMesh.h:852</div></div>
<div class="ttc" id="astructopen3d_1_1geometry_1_1_triangle_mesh_1_1_material_html_a58bd1ace51d4983b8a9d7003296e0608"><div class="ttname"><a href="structopen3d_1_1geometry_1_1_triangle_mesh_1#a58bd1ace51d4983b8a9d7003296e0608">open3d::geometry::TriangleMesh::Material::reflectance</a></div><div class="ttdeci">std::shared_ptr&lt; Image &gt; reflectance</div><div class="ttdef"><b>Definition:</b> TriangleMesh.h:847</div></div>
<div class="ttc" id="astructopen3d_1_1geometry_1_1_triangle_mesh_1_1_material_html_a58bfba9559192cbf05bc44c0de2919a8"><div class="ttname"><a href="structopen3d_1_1geometry_1_1_triangle_mesh_1#a58bfba9559192cbf05bc44c0de2919a8">open3d::geometry::TriangleMesh::Material::baseColor</a></div><div class="ttdeci">MaterialParameter baseColor</div><div class="ttdef"><b>Definition:</b> TriangleMesh.h:834</div></div>
<div class="ttc" id="astructopen3d_1_1geometry_1_1_triangle_mesh_1_1_material_html_a5d03d4e6033f9855c22b623be4c98d9a"><div class="ttname"><a href="structopen3d_1_1geometry_1_1_triangle_mesh_1#a5d03d4e6033f9855c22b623be4c98d9a">open3d::geometry::TriangleMesh::Material::metallic</a></div><div class="ttdeci">std::shared_ptr&lt; Image &gt; metallic</div><div class="ttdef"><b>Definition:</b> TriangleMesh.h:845</div></div>
<div class="ttc" id="astructopen3d_1_1geometry_1_1_triangle_mesh_1_1_material_html_a65c1bd5f64f23686d2cfc48498cee8f7"><div class="ttname"><a href="structopen3d_1_1geometry_1_1_triangle_mesh_1#a65c1bd5f64f23686d2cfc48498cee8f7">open3d::geometry::TriangleMesh::Material::ambientOcclusion</a></div><div class="ttdeci">std::shared_ptr&lt; Image &gt; ambientOcclusion</div><div class="ttdef"><b>Definition:</b> TriangleMesh.h:844</div></div>
<div class="ttc" id="astructopen3d_1_1geometry_1_1_triangle_mesh_1_1_material_html_a76dc24223572c0e1498f92ad98dc30df"><div class="ttname"><a href="structopen3d_1_1geometry_1_1_triangle_mesh_1#a76dc24223572c0e1498f92ad98dc30df">open3d::geometry::TriangleMesh::Material::albedo</a></div><div class="ttdeci">std::shared_ptr&lt; Image &gt; albedo</div><div class="ttdef"><b>Definition:</b> TriangleMesh.h:842</div></div>
<div class="ttc" id="astructopen3d_1_1geometry_1_1_triangle_mesh_1_1_material_html_a7840368415e2aa4aef4bff9219350853"><div class="ttname"><a href="structopen3d_1_1geometry_1_1_triangle_mesh_1#a7840368415e2aa4aef4bff9219350853">open3d::geometry::TriangleMesh::Material::baseReflectance</a></div><div class="ttdeci">float baseReflectance</div><div class="ttdef"><b>Definition:</b> TriangleMesh.h:837</div></div>
<div class="ttc" id="astructopen3d_1_1geometry_1_1_triangle_mesh_1_1_material_html_a91a575ac2c05ac874bbbb6a88efbb5c7"><div class="ttname"><a href="structopen3d_1_1geometry_1_1_triangle_mesh_1#a91a575ac2c05ac874bbbb6a88efbb5c7">open3d::geometry::TriangleMesh::Material::baseMetallic</a></div><div class="ttdeci">float baseMetallic</div><div class="ttdef"><b>Definition:</b> TriangleMesh.h:835</div></div>
<div class="ttc" id="astructopen3d_1_1geometry_1_1_triangle_mesh_1_1_material_html_aaa29fdb01411561e90cc31f4e29afaca"><div class="ttname"><a href="structopen3d_1_1geometry_1_1_triangle_mesh_1#aaa29fdb01411561e90cc31f4e29afaca">open3d::geometry::TriangleMesh::Material::clearCoat</a></div><div class="ttdeci">std::shared_ptr&lt; Image &gt; clearCoat</div><div class="ttdef"><b>Definition:</b> TriangleMesh.h:848</div></div>
<div class="ttc" id="astructopen3d_1_1geometry_1_1_triangle_mesh_1_1_material_html_ac09aefe535044c3f6b88887c8e17df77"><div class="ttname"><a href="structopen3d_1_1geometry_1_1_triangle_mesh_1#ac09aefe535044c3f6b88887c8e17df77">open3d::geometry::TriangleMesh::Material::baseClearCoatRoughness</a></div><div class="ttdeci">float baseClearCoatRoughness</div><div class="ttdef"><b>Definition:</b> TriangleMesh.h:839</div></div>
<div class="ttc" id="astructopen3d_1_1utility_1_1hash__eigen_html"><div class="ttname"><a href="structopen3d_1_1utility_1_1hash__eigen.44c.d">open3d::utility::hash_eigen</a></div><div class="ttdef"><b>Definition:</b> Helper.h:71</div></div>
<div class="ttc" id="autility_2_helper_8h_html"><div class="ttname"><a href="utility_2_helper_8h.html">Helper.h</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1
</small></address>
</body>

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/geometry_2_triangle_mesh_8h_source.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 10:59:35 GMT -->
</html>
