<!-- HTML header for doxygen 1.8.20-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/namespaceopen3d_1_1core_1_1linalg_1_1kernel.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 10:59:51 GMT -->
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Open3D (C++ API): open3d::core::linalg::kernel Namespace Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js", "TeX/AMSmath.html", "TeX/AMSsymbols.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="../../../../cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-3TQPKGV6Z3"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());
  gtag('config', 'G-3TQPKGV6Z3');
</script>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="open3d_logo.ico"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Open3D (C++ API)
   &#160;<span id="projectnumber">0.17.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.html');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.html','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceopen3d.html">open3d</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1core.html">core</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1core_1_1linalg.37e.delaye">linalg</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1core_1_1linalg_1_1kernel">kernel</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">open3d::core::linalg::kernel Namespace Reference</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">union &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="unionopen3d_1_1core_1_1linalg_1_1kernel_1_1u">un</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a87d58bc2876975c71787af19a670c1c1"><td class="memTemplParams" colspan="2">template&lt;typename scalar_t &gt; </td></tr>
<tr class="memitem:a87d58bc2876975c71787af19a670c1c1"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="_c_u_d_a_utils_8h.html#a36245af68b6d012935c0de2cec6abd2d">OPEN3D_DEVICE</a> <a class="el" href="_c_u_d_a_utils_8h.html#aa07d7d5ed80e72059d1ae591df918e39">OPEN3D_FORCE_INLINE</a> void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1core_1_1linalg_1_1kernel#a87d58bc2876975c71787af19a670c1c1">matmul3x3_3x1</a> (const scalar_t *A_3x3, const scalar_t *B_3x1, scalar_t *C_3x1)</td></tr>
<tr class="separator:a87d58bc2876975c71787af19a670c1c1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5e717fb82bfbead8d7975544bed8b25a"><td class="memTemplParams" colspan="2">template&lt;typename scalar_t &gt; </td></tr>
<tr class="memitem:a5e717fb82bfbead8d7975544bed8b25a"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="_c_u_d_a_utils_8h.html#a36245af68b6d012935c0de2cec6abd2d">OPEN3D_DEVICE</a> <a class="el" href="_c_u_d_a_utils_8h.html#aa07d7d5ed80e72059d1ae591df918e39">OPEN3D_FORCE_INLINE</a> void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1core_1_1linalg_1_1kernel#a5e717fb82bfbead8d7975544bed8b25a">matmul3x3_3x3</a> (const scalar_t *A_3x3, const scalar_t *B_3x3, scalar_t *C_3x3)</td></tr>
<tr class="separator:a5e717fb82bfbead8d7975544bed8b25a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a58c21d6697eb92603af2d5c7c8a953ac"><td class="memTemplParams" colspan="2">template&lt;typename scalar_t &gt; </td></tr>
<tr class="memitem:a58c21d6697eb92603af2d5c7c8a953ac"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="_c_u_d_a_utils_8h.html#a134fcda29ee61227f5883af2d33c00a1">OPEN3D_HOST_DEVICE</a> <a class="el" href="_c_u_d_a_utils_8h.html#aa07d7d5ed80e72059d1ae591df918e39">OPEN3D_FORCE_INLINE</a> void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1core_1_1linalg_1_1kernel#a58c21d6697eb92603af2d5c7c8a953ac">cross_3x1</a> (const scalar_t *A_3x1_input, const scalar_t *B_3x1_input, scalar_t *C_3x1_output)</td></tr>
<tr class="separator:a58c21d6697eb92603af2d5c7c8a953ac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af4b1f63b94d77f0ac5f34a59e3cf570f"><td class="memTemplParams" colspan="2">template&lt;typename scalar_t &gt; </td></tr>
<tr class="memitem:af4b1f63b94d77f0ac5f34a59e3cf570f"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="_c_u_d_a_utils_8h.html#a134fcda29ee61227f5883af2d33c00a1">OPEN3D_HOST_DEVICE</a> <a class="el" href="_c_u_d_a_utils_8h.html#aa07d7d5ed80e72059d1ae591df918e39">OPEN3D_FORCE_INLINE</a> scalar_t&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1core_1_1linalg_1_1kernel#af4b1f63b94d77f0ac5f34a59e3cf570f">dot_3x1</a> (const scalar_t *A_3x1_input, const scalar_t *B_3x1_input)</td></tr>
<tr class="separator:af4b1f63b94d77f0ac5f34a59e3cf570f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3dee6cb785a2fce5af694cc00d900acc"><td class="memTemplParams" colspan="2">template&lt;typename scalar_t &gt; </td></tr>
<tr class="memitem:a3dee6cb785a2fce5af694cc00d900acc"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="_c_u_d_a_utils_8h.html#a36245af68b6d012935c0de2cec6abd2d">OPEN3D_DEVICE</a> <a class="el" href="_c_u_d_a_utils_8h.html#aa07d7d5ed80e72059d1ae591df918e39">OPEN3D_FORCE_INLINE</a> scalar_t&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1core_1_1linalg_1_1kernel#a3dee6cb785a2fce5af694cc00d900acc">det2x2</a> (const scalar_t *A_2x2)</td></tr>
<tr class="separator:a3dee6cb785a2fce5af694cc00d900acc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a68e716c3939965f0fd688e73497f0d76"><td class="memTemplParams" colspan="2">template&lt;typename scalar_t &gt; </td></tr>
<tr class="memitem:a68e716c3939965f0fd688e73497f0d76"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="_c_u_d_a_utils_8h.html#a36245af68b6d012935c0de2cec6abd2d">OPEN3D_DEVICE</a> <a class="el" href="_c_u_d_a_utils_8h.html#aa07d7d5ed80e72059d1ae591df918e39">OPEN3D_FORCE_INLINE</a> scalar_t&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1core_1_1linalg_1_1kernel#a68e716c3939965f0fd688e73497f0d76">det3x3</a> (const scalar_t *A_3x3)</td></tr>
<tr class="separator:a68e716c3939965f0fd688e73497f0d76"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a531236f9c29907d625ff6999e0c0cc77"><td class="memTemplParams" colspan="2">template&lt;typename scalar_t &gt; </td></tr>
<tr class="memitem:a531236f9c29907d625ff6999e0c0cc77"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="_c_u_d_a_utils_8h.html#a36245af68b6d012935c0de2cec6abd2d">OPEN3D_DEVICE</a> <a class="el" href="_c_u_d_a_utils_8h.html#aa07d7d5ed80e72059d1ae591df918e39">OPEN3D_FORCE_INLINE</a> bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1core_1_1linalg_1_1kernel#a531236f9c29907d625ff6999e0c0cc77">inverse2x2</a> (const scalar_t *A_2x2, scalar_t *output_2x2)</td></tr>
<tr class="separator:a531236f9c29907d625ff6999e0c0cc77"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f937f89f73ed281cdaff91ef1a02dd5"><td class="memTemplParams" colspan="2">template&lt;typename scalar_t &gt; </td></tr>
<tr class="memitem:a5f937f89f73ed281cdaff91ef1a02dd5"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="_c_u_d_a_utils_8h.html#a36245af68b6d012935c0de2cec6abd2d">OPEN3D_DEVICE</a> <a class="el" href="_c_u_d_a_utils_8h.html#aa07d7d5ed80e72059d1ae591df918e39">OPEN3D_FORCE_INLINE</a> bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1core_1_1linalg_1_1kernel#a5f937f89f73ed281cdaff91ef1a02dd5">inverse3x3</a> (const scalar_t *A_3x3, scalar_t *output_3x3)</td></tr>
<tr class="separator:a5f937f89f73ed281cdaff91ef1a02dd5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2ca5704c0a4214c96c1b0f777f91a631"><td class="memTemplParams" colspan="2">template&lt;typename scalar_t &gt; </td></tr>
<tr class="memitem:a2ca5704c0a4214c96c1b0f777f91a631"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="_c_u_d_a_utils_8h.html#a36245af68b6d012935c0de2cec6abd2d">OPEN3D_DEVICE</a> <a class="el" href="_c_u_d_a_utils_8h.html#aa07d7d5ed80e72059d1ae591df918e39">OPEN3D_FORCE_INLINE</a> void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1core_1_1linalg_1_1kernel#a2ca5704c0a4214c96c1b0f777f91a631">transpose2x2_</a> (scalar_t *A_2x2)</td></tr>
<tr class="separator:a2ca5704c0a4214c96c1b0f777f91a631"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8f459b620b815cbceb348c5a09c6a839"><td class="memTemplParams" colspan="2">template&lt;typename scalar_t &gt; </td></tr>
<tr class="memitem:a8f459b620b815cbceb348c5a09c6a839"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="_c_u_d_a_utils_8h.html#a36245af68b6d012935c0de2cec6abd2d">OPEN3D_DEVICE</a> <a class="el" href="_c_u_d_a_utils_8h.html#aa07d7d5ed80e72059d1ae591df918e39">OPEN3D_FORCE_INLINE</a> void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1core_1_1linalg_1_1kernel#a8f459b620b815cbceb348c5a09c6a839">transpose2x2</a> (const scalar_t *A_2x2, scalar_t *output_2x2)</td></tr>
<tr class="separator:a8f459b620b815cbceb348c5a09c6a839"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a23a34b421e7f46e537af6b8d91e0b1ec"><td class="memTemplParams" colspan="2">template&lt;typename scalar_t &gt; </td></tr>
<tr class="memitem:a23a34b421e7f46e537af6b8d91e0b1ec"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="_c_u_d_a_utils_8h.html#a36245af68b6d012935c0de2cec6abd2d">OPEN3D_DEVICE</a> <a class="el" href="_c_u_d_a_utils_8h.html#aa07d7d5ed80e72059d1ae591df918e39">OPEN3D_FORCE_INLINE</a> void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1core_1_1linalg_1_1kernel#a23a34b421e7f46e537af6b8d91e0b1ec">transpose3x3_</a> (scalar_t *A_3x3)</td></tr>
<tr class="separator:a23a34b421e7f46e537af6b8d91e0b1ec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a69ad0f0f5d547645f8f7cbb79ad5ab2e"><td class="memTemplParams" colspan="2">template&lt;typename scalar_t &gt; </td></tr>
<tr class="memitem:a69ad0f0f5d547645f8f7cbb79ad5ab2e"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="_c_u_d_a_utils_8h.html#a36245af68b6d012935c0de2cec6abd2d">OPEN3D_DEVICE</a> <a class="el" href="_c_u_d_a_utils_8h.html#aa07d7d5ed80e72059d1ae591df918e39">OPEN3D_FORCE_INLINE</a> void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1core_1_1linalg_1_1kernel#a69ad0f0f5d547645f8f7cbb79ad5ab2e">transpose3x3</a> (const scalar_t *A_3x3, scalar_t *output_3x3)</td></tr>
<tr class="separator:a69ad0f0f5d547645f8f7cbb79ad5ab2e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a80f23889d2d4e7f5d146e376b9f2f495"><td class="memTemplParams" colspan="2">template&lt;typename scalar_t &gt; </td></tr>
<tr class="memitem:a80f23889d2d4e7f5d146e376b9f2f495"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="_c_u_d_a_utils_8h.html#a36245af68b6d012935c0de2cec6abd2d">OPEN3D_DEVICE</a> <a class="el" href="_c_u_d_a_utils_8h.html#aa07d7d5ed80e72059d1ae591df918e39">OPEN3D_FORCE_INLINE</a> void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1core_1_1linalg_1_1kernel#a80f23889d2d4e7f5d146e376b9f2f495">transpose4x4_</a> (scalar_t *A_4x4)</td></tr>
<tr class="separator:a80f23889d2d4e7f5d146e376b9f2f495"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ada214a15f1da0ba42a551f68fb6d2c5c"><td class="memTemplParams" colspan="2">template&lt;typename scalar_t &gt; </td></tr>
<tr class="memitem:ada214a15f1da0ba42a551f68fb6d2c5c"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="_c_u_d_a_utils_8h.html#a36245af68b6d012935c0de2cec6abd2d">OPEN3D_DEVICE</a> <a class="el" href="_c_u_d_a_utils_8h.html#aa07d7d5ed80e72059d1ae591df918e39">OPEN3D_FORCE_INLINE</a> void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1core_1_1linalg_1_1kernel#ada214a15f1da0ba42a551f68fb6d2c5c">transpose4x4</a> (const scalar_t *A_4x4, scalar_t *output_4x4)</td></tr>
<tr class="separator:ada214a15f1da0ba42a551f68fb6d2c5c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a674f3255ef4cea092ea5776a6071f001"><td class="memTemplParams" colspan="2">template&lt;typename scalar_t &gt; </td></tr>
<tr class="memitem:a674f3255ef4cea092ea5776a6071f001"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="_c_u_d_a_utils_8h.html#a36245af68b6d012935c0de2cec6abd2d">OPEN3D_DEVICE</a> <a class="el" href="_c_u_d_a_utils_8h.html#aa07d7d5ed80e72059d1ae591df918e39">OPEN3D_FORCE_INLINE</a> void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1core_1_1linalg_1_1kernel#a674f3255ef4cea092ea5776a6071f001">svd3x3</a> (const scalar_t *A_3x3, scalar_t *U_3x3, scalar_t *S_3x1, scalar_t *V_3x3)</td></tr>
<tr class="separator:a674f3255ef4cea092ea5776a6071f001"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2c450256b66a830b0662b5918ca3697a"><td class="memItemLeft" align="right" valign="top">template&lt;&gt; </td></tr>
<tr class="memitem:a2c450256b66a830b0662b5918ca3697a"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="_c_u_d_a_utils_8h.html#a36245af68b6d012935c0de2cec6abd2d">OPEN3D_DEVICE</a> <a class="el" href="_c_u_d_a_utils_8h.html#aa07d7d5ed80e72059d1ae591df918e39">OPEN3D_FORCE_INLINE</a> void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1core_1_1linalg_1_1kernel#a2c450256b66a830b0662b5918ca3697a">svd3x3&lt; double &gt;</a> (const double *A_3x3, double *U_3x3, double *S_3x1, double *V_3x3)</td></tr>
<tr class="separator:a2c450256b66a830b0662b5918ca3697a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a613a56129dc49ef12da0123b6fdde2c3"><td class="memItemLeft" align="right" valign="top">template&lt;&gt; </td></tr>
<tr class="memitem:a613a56129dc49ef12da0123b6fdde2c3"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="_c_u_d_a_utils_8h.html#a36245af68b6d012935c0de2cec6abd2d">OPEN3D_DEVICE</a> <a class="el" href="_c_u_d_a_utils_8h.html#aa07d7d5ed80e72059d1ae591df918e39">OPEN3D_FORCE_INLINE</a> void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1core_1_1linalg_1_1kernel#a613a56129dc49ef12da0123b6fdde2c3">svd3x3&lt; float &gt;</a> (const float *A_3x3, float *U_3x3, float *S_3x1, float *V_3x3)</td></tr>
<tr class="separator:a613a56129dc49ef12da0123b6fdde2c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa1fb564b7606dae22ed635bd02a0bbe9"><td class="memTemplParams" colspan="2">template&lt;typename scalar_t &gt; </td></tr>
<tr class="memitem:aa1fb564b7606dae22ed635bd02a0bbe9"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="_c_u_d_a_utils_8h.html#a36245af68b6d012935c0de2cec6abd2d">OPEN3D_DEVICE</a> <a class="el" href="_c_u_d_a_utils_8h.html#aa07d7d5ed80e72059d1ae591df918e39">OPEN3D_FORCE_INLINE</a> void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1core_1_1linalg_1_1kernel#aa1fb564b7606dae22ed635bd02a0bbe9">solve_svd3x3</a> (const scalar_t *A_3x3, const scalar_t *B_3x1, scalar_t *X_3x1)</td></tr>
<tr class="separator:aa1fb564b7606dae22ed635bd02a0bbe9"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a id="a58c21d6697eb92603af2d5c7c8a953ac"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a58c21d6697eb92603af2d5c7c8a953ac">&#9670;&nbsp;</a></span>cross_3x1()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename scalar_t &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="_c_u_d_a_utils_8h.html#a134fcda29ee61227f5883af2d33c00a1">OPEN3D_HOST_DEVICE</a> <a class="el" href="_c_u_d_a_utils_8h.html#aa07d7d5ed80e72059d1ae591df918e39">OPEN3D_FORCE_INLINE</a> void open3d::core::linalg::kernel::cross_3x1 </td>
          <td>(</td>
          <td class="paramtype">const scalar_t *&#160;</td>
          <td class="paramname"><em>A_3x1_input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const scalar_t *&#160;</td>
          <td class="paramname"><em>B_3x1_input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">scalar_t *&#160;</td>
          <td class="paramname"><em>C_3x1_output</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a3dee6cb785a2fce5af694cc00d900acc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3dee6cb785a2fce5af694cc00d900acc">&#9670;&nbsp;</a></span>det2x2()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename scalar_t &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="_c_u_d_a_utils_8h.html#a36245af68b6d012935c0de2cec6abd2d">OPEN3D_DEVICE</a> <a class="el" href="_c_u_d_a_utils_8h.html#aa07d7d5ed80e72059d1ae591df918e39">OPEN3D_FORCE_INLINE</a> scalar_t open3d::core::linalg::kernel::det2x2 </td>
          <td>(</td>
          <td class="paramtype">const scalar_t *&#160;</td>
          <td class="paramname"><em>A_2x2</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a68e716c3939965f0fd688e73497f0d76"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a68e716c3939965f0fd688e73497f0d76">&#9670;&nbsp;</a></span>det3x3()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename scalar_t &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="_c_u_d_a_utils_8h.html#a36245af68b6d012935c0de2cec6abd2d">OPEN3D_DEVICE</a> <a class="el" href="_c_u_d_a_utils_8h.html#aa07d7d5ed80e72059d1ae591df918e39">OPEN3D_FORCE_INLINE</a> scalar_t open3d::core::linalg::kernel::det3x3 </td>
          <td>(</td>
          <td class="paramtype">const scalar_t *&#160;</td>
          <td class="paramname"><em>A_3x3</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="af4b1f63b94d77f0ac5f34a59e3cf570f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af4b1f63b94d77f0ac5f34a59e3cf570f">&#9670;&nbsp;</a></span>dot_3x1()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename scalar_t &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="_c_u_d_a_utils_8h.html#a134fcda29ee61227f5883af2d33c00a1">OPEN3D_HOST_DEVICE</a> <a class="el" href="_c_u_d_a_utils_8h.html#aa07d7d5ed80e72059d1ae591df918e39">OPEN3D_FORCE_INLINE</a> scalar_t open3d::core::linalg::kernel::dot_3x1 </td>
          <td>(</td>
          <td class="paramtype">const scalar_t *&#160;</td>
          <td class="paramname"><em>A_3x1_input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const scalar_t *&#160;</td>
          <td class="paramname"><em>B_3x1_input</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a531236f9c29907d625ff6999e0c0cc77"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a531236f9c29907d625ff6999e0c0cc77">&#9670;&nbsp;</a></span>inverse2x2()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename scalar_t &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="_c_u_d_a_utils_8h.html#a36245af68b6d012935c0de2cec6abd2d">OPEN3D_DEVICE</a> <a class="el" href="_c_u_d_a_utils_8h.html#aa07d7d5ed80e72059d1ae591df918e39">OPEN3D_FORCE_INLINE</a> bool open3d::core::linalg::kernel::inverse2x2 </td>
          <td>(</td>
          <td class="paramtype">const scalar_t *&#160;</td>
          <td class="paramname"><em>A_2x2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">scalar_t *&#160;</td>
          <td class="paramname"><em>output_2x2</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a5f937f89f73ed281cdaff91ef1a02dd5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5f937f89f73ed281cdaff91ef1a02dd5">&#9670;&nbsp;</a></span>inverse3x3()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename scalar_t &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="_c_u_d_a_utils_8h.html#a36245af68b6d012935c0de2cec6abd2d">OPEN3D_DEVICE</a> <a class="el" href="_c_u_d_a_utils_8h.html#aa07d7d5ed80e72059d1ae591df918e39">OPEN3D_FORCE_INLINE</a> bool open3d::core::linalg::kernel::inverse3x3 </td>
          <td>(</td>
          <td class="paramtype">const scalar_t *&#160;</td>
          <td class="paramname"><em>A_3x3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">scalar_t *&#160;</td>
          <td class="paramname"><em>output_3x3</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a87d58bc2876975c71787af19a670c1c1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a87d58bc2876975c71787af19a670c1c1">&#9670;&nbsp;</a></span>matmul3x3_3x1()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename scalar_t &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="_c_u_d_a_utils_8h.html#a36245af68b6d012935c0de2cec6abd2d">OPEN3D_DEVICE</a> <a class="el" href="_c_u_d_a_utils_8h.html#aa07d7d5ed80e72059d1ae591df918e39">OPEN3D_FORCE_INLINE</a> void open3d::core::linalg::kernel::matmul3x3_3x1 </td>
          <td>(</td>
          <td class="paramtype">const scalar_t *&#160;</td>
          <td class="paramname"><em>A_3x3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const scalar_t *&#160;</td>
          <td class="paramname"><em>B_3x1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">scalar_t *&#160;</td>
          <td class="paramname"><em>C_3x1</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a5e717fb82bfbead8d7975544bed8b25a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5e717fb82bfbead8d7975544bed8b25a">&#9670;&nbsp;</a></span>matmul3x3_3x3()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename scalar_t &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="_c_u_d_a_utils_8h.html#a36245af68b6d012935c0de2cec6abd2d">OPEN3D_DEVICE</a> <a class="el" href="_c_u_d_a_utils_8h.html#aa07d7d5ed80e72059d1ae591df918e39">OPEN3D_FORCE_INLINE</a> void open3d::core::linalg::kernel::matmul3x3_3x3 </td>
          <td>(</td>
          <td class="paramtype">const scalar_t *&#160;</td>
          <td class="paramname"><em>A_3x3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const scalar_t *&#160;</td>
          <td class="paramname"><em>B_3x3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">scalar_t *&#160;</td>
          <td class="paramname"><em>C_3x3</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="aa1fb564b7606dae22ed635bd02a0bbe9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa1fb564b7606dae22ed635bd02a0bbe9">&#9670;&nbsp;</a></span>solve_svd3x3()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename scalar_t &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="_c_u_d_a_utils_8h.html#a36245af68b6d012935c0de2cec6abd2d">OPEN3D_DEVICE</a> <a class="el" href="_c_u_d_a_utils_8h.html#aa07d7d5ed80e72059d1ae591df918e39">OPEN3D_FORCE_INLINE</a> void open3d::core::linalg::kernel::solve_svd3x3 </td>
          <td>(</td>
          <td class="paramtype">const scalar_t *&#160;</td>
          <td class="paramname"><em>A_3x3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const scalar_t *&#160;</td>
          <td class="paramname"><em>B_3x1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">scalar_t *&#160;</td>
          <td class="paramname"><em>X_3x1</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a674f3255ef4cea092ea5776a6071f001"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a674f3255ef4cea092ea5776a6071f001">&#9670;&nbsp;</a></span>svd3x3()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename scalar_t &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="_c_u_d_a_utils_8h.html#a36245af68b6d012935c0de2cec6abd2d">OPEN3D_DEVICE</a> <a class="el" href="_c_u_d_a_utils_8h.html#aa07d7d5ed80e72059d1ae591df918e39">OPEN3D_FORCE_INLINE</a> void open3d::core::linalg::kernel::svd3x3 </td>
          <td>(</td>
          <td class="paramtype">const scalar_t *&#160;</td>
          <td class="paramname"><em>A_3x3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">scalar_t *&#160;</td>
          <td class="paramname"><em>U_3x3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">scalar_t *&#160;</td>
          <td class="paramname"><em>S_3x1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">scalar_t *&#160;</td>
          <td class="paramname"><em>V_3x3</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a2c450256b66a830b0662b5918ca3697a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2c450256b66a830b0662b5918ca3697a">&#9670;&nbsp;</a></span>svd3x3&lt; double &gt;()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="_c_u_d_a_utils_8h.html#a36245af68b6d012935c0de2cec6abd2d">OPEN3D_DEVICE</a> <a class="el" href="_c_u_d_a_utils_8h.html#aa07d7d5ed80e72059d1ae591df918e39">OPEN3D_FORCE_INLINE</a> void <a class="el" href="namespaceopen3d_1_1core_1_1linalg_1_1kernel#a674f3255ef4cea092ea5776a6071f001">open3d::core::linalg::kernel::svd3x3</a>&lt; double &gt; </td>
          <td>(</td>
          <td class="paramtype">const double *&#160;</td>
          <td class="paramname"><em>A_3x3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double *&#160;</td>
          <td class="paramname"><em>U_3x3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double *&#160;</td>
          <td class="paramname"><em>S_3x1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double *&#160;</td>
          <td class="paramname"><em>V_3x3</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<h6></h6>

</div>
</div>
<a id="a613a56129dc49ef12da0123b6fdde2c3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a613a56129dc49ef12da0123b6fdde2c3">&#9670;&nbsp;</a></span>svd3x3&lt; float &gt;()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="_c_u_d_a_utils_8h.html#a36245af68b6d012935c0de2cec6abd2d">OPEN3D_DEVICE</a> <a class="el" href="_c_u_d_a_utils_8h.html#aa07d7d5ed80e72059d1ae591df918e39">OPEN3D_FORCE_INLINE</a> void <a class="el" href="namespaceopen3d_1_1core_1_1linalg_1_1kernel#a674f3255ef4cea092ea5776a6071f001">open3d::core::linalg::kernel::svd3x3</a>&lt; float &gt; </td>
          <td>(</td>
          <td class="paramtype">const float *&#160;</td>
          <td class="paramname"><em>A_3x3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>U_3x3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>S_3x1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>V_3x3</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<h6></h6>

</div>
</div>
<a id="a8f459b620b815cbceb348c5a09c6a839"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8f459b620b815cbceb348c5a09c6a839">&#9670;&nbsp;</a></span>transpose2x2()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename scalar_t &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="_c_u_d_a_utils_8h.html#a36245af68b6d012935c0de2cec6abd2d">OPEN3D_DEVICE</a> <a class="el" href="_c_u_d_a_utils_8h.html#aa07d7d5ed80e72059d1ae591df918e39">OPEN3D_FORCE_INLINE</a> void open3d::core::linalg::kernel::transpose2x2 </td>
          <td>(</td>
          <td class="paramtype">const scalar_t *&#160;</td>
          <td class="paramname"><em>A_2x2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">scalar_t *&#160;</td>
          <td class="paramname"><em>output_2x2</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a2ca5704c0a4214c96c1b0f777f91a631"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2ca5704c0a4214c96c1b0f777f91a631">&#9670;&nbsp;</a></span>transpose2x2_()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename scalar_t &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="_c_u_d_a_utils_8h.html#a36245af68b6d012935c0de2cec6abd2d">OPEN3D_DEVICE</a> <a class="el" href="_c_u_d_a_utils_8h.html#aa07d7d5ed80e72059d1ae591df918e39">OPEN3D_FORCE_INLINE</a> void open3d::core::linalg::kernel::transpose2x2_ </td>
          <td>(</td>
          <td class="paramtype">scalar_t *&#160;</td>
          <td class="paramname"><em>A_2x2</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a69ad0f0f5d547645f8f7cbb79ad5ab2e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a69ad0f0f5d547645f8f7cbb79ad5ab2e">&#9670;&nbsp;</a></span>transpose3x3()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename scalar_t &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="_c_u_d_a_utils_8h.html#a36245af68b6d012935c0de2cec6abd2d">OPEN3D_DEVICE</a> <a class="el" href="_c_u_d_a_utils_8h.html#aa07d7d5ed80e72059d1ae591df918e39">OPEN3D_FORCE_INLINE</a> void open3d::core::linalg::kernel::transpose3x3 </td>
          <td>(</td>
          <td class="paramtype">const scalar_t *&#160;</td>
          <td class="paramname"><em>A_3x3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">scalar_t *&#160;</td>
          <td class="paramname"><em>output_3x3</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a23a34b421e7f46e537af6b8d91e0b1ec"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a23a34b421e7f46e537af6b8d91e0b1ec">&#9670;&nbsp;</a></span>transpose3x3_()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename scalar_t &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="_c_u_d_a_utils_8h.html#a36245af68b6d012935c0de2cec6abd2d">OPEN3D_DEVICE</a> <a class="el" href="_c_u_d_a_utils_8h.html#aa07d7d5ed80e72059d1ae591df918e39">OPEN3D_FORCE_INLINE</a> void open3d::core::linalg::kernel::transpose3x3_ </td>
          <td>(</td>
          <td class="paramtype">scalar_t *&#160;</td>
          <td class="paramname"><em>A_3x3</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ada214a15f1da0ba42a551f68fb6d2c5c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ada214a15f1da0ba42a551f68fb6d2c5c">&#9670;&nbsp;</a></span>transpose4x4()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename scalar_t &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="_c_u_d_a_utils_8h.html#a36245af68b6d012935c0de2cec6abd2d">OPEN3D_DEVICE</a> <a class="el" href="_c_u_d_a_utils_8h.html#aa07d7d5ed80e72059d1ae591df918e39">OPEN3D_FORCE_INLINE</a> void open3d::core::linalg::kernel::transpose4x4 </td>
          <td>(</td>
          <td class="paramtype">const scalar_t *&#160;</td>
          <td class="paramname"><em>A_4x4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">scalar_t *&#160;</td>
          <td class="paramname"><em>output_4x4</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a80f23889d2d4e7f5d146e376b9f2f495"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a80f23889d2d4e7f5d146e376b9f2f495">&#9670;&nbsp;</a></span>transpose4x4_()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename scalar_t &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="_c_u_d_a_utils_8h.html#a36245af68b6d012935c0de2cec6abd2d">OPEN3D_DEVICE</a> <a class="el" href="_c_u_d_a_utils_8h.html#aa07d7d5ed80e72059d1ae591df918e39">OPEN3D_FORCE_INLINE</a> void open3d::core::linalg::kernel::transpose4x4_ </td>
          <td>(</td>
          <td class="paramtype">scalar_t *&#160;</td>
          <td class="paramname"><em>A_4x4</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1
</small></address>
</body>

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/namespaceopen3d_1_1core_1_1linalg_1_1kernel.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 10:59:51 GMT -->
</html>
