<!-- HTML header for doxygen 1.8.20-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/_c_u_d_a_hash_backend_buffer_accessor_8h_source.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 10:59:58 GMT -->
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Open3D (C++ API): /home/runner/work/Open3D/Open3D/cpp/open3d/core/hashmap/CUDA/CUDAHashBackendBufferAccessor.h (9238339 (Tue Mar 14 18:49:09 2023 -0700)) Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js", "TeX/AMSmath.html", "TeX/AMSsymbols.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="../../../../cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-3TQPKGV6Z3"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());
  gtag('config', 'G-3TQPKGV6Z3');
</script>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="open3d_logo.ico"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Open3D (C++ API)
   &#160;<span id="projectnumber">0.17.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.html');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.html','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_df511e5bd85cec96854b39d5e1c27aa8.357.del">cpp</a></li><li class="navelem"><a class="el" href="dir_f8cc15b2217ff526bd336cf17635da2a.358.del">open3d</a></li><li class="navelem"><a class="el" href="dir_559a533dc613f808f5747b65451c8a78.48c.del">core</a></li><li class="navelem"><a class="el" href="dir_ffa67b2964f7855cb8806476a13cb367.5a0.del">hashmap</a></li><li class="navelem"><a class="el" href="dir_6af912363938fcacd9d19a6bfa1e46ca.5a3.del">CUDA</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">CUDAHashBackendBufferAccessor.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_c_u_d_a_hash_backend_buffer_accessor_8h.9d9">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">// ----------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// -                        Open3D: www.open3d.org                            -</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// ----------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">// Copyright (c) 2018-2023 www.open3d.org</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">// SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">// ----------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160; </div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160; </div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &lt;assert.h&gt;</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160; </div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &lt;memory&gt;</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160; </div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_c_u_d_a_utils_8h.html">open3d/core/CUDAUtils.h</a>&quot;</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_memory_manager_8h.html">open3d/core/MemoryManager.h</a>&quot;</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_slab_macros_8h.html">open3d/core/hashmap/CUDA/SlabMacros.h</a>&quot;</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_slab_traits_8h.html">open3d/core/hashmap/CUDA/SlabTraits.h</a>&quot;</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_hash_backend_buffer_8h.html">open3d/core/hashmap/HashBackendBuffer.h</a>&quot;</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160; </div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceopen3d.html">open3d</a> {</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="keyword">namespace </span>core {</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160; </div>
<div class="line"><a name="l00024"></a><span class="lineno"><a class="line" href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend">   24</a></span>&#160;<span class="keyword">class </span><a class="code" href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend">CUDAHashBackendBufferAccessor</a> {</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00026"></a><span class="lineno"><a class="line" href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend#a3b90b935cb7ad2be7d8d7734517e91d6">   26</a></span>&#160;    __host__ <span class="keywordtype">void</span> <a class="code" href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend#a3b90b935cb7ad2be7d8d7734517e91d6">Setup</a>(<a class="code" href="classopen3d_1_1core_1_1_hash_backend_buffer">HashBackendBuffer</a> &amp;hashmap_buffer) {</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;        <a class="code" href="classopen3d_1_1core_1_1_device.html">Device</a> device = hashmap_buffer.<a class="code" href="classopen3d_1_1core_1_1_hash_backend_buffer#a50da0f977cb5805a3431f2c2682a5ff4">GetDevice</a>();</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160; </div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;        <span class="comment">// Properties</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;        <a class="code" href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend#aac2e1f4e55e63eefd34e8c88d373dcf8">capacity_</a> = hashmap_buffer.<a class="code" href="classopen3d_1_1core_1_1_hash_backend_buffer#a7db23b4b5b58b71312b28b37dbb1e995">GetCapacity</a>();</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;        <a class="code" href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend#af9fa1d23870168d9df81ffe81d77a8d6">key_dsize_</a> = hashmap_buffer.<a class="code" href="classopen3d_1_1core_1_1_hash_backend_buffer#a0518809dff593acf813dd699af43b546">GetKeyDsize</a>();</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160; </div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;        std::vector&lt;int64_t&gt; value_dsizes_host =</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;                hashmap_buffer.<a class="code" href="classopen3d_1_1core_1_1_hash_backend_buffer#abc16f2025a8d169b53d7bdc62b8dea48">GetValueDsizes</a>();</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;        std::vector&lt;int64_t&gt; value_blocks_per_element_host =</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;                hashmap_buffer.<a class="code" href="classopen3d_1_1core_1_1_hash_backend_buffer#afef8871eabb9bce55272004f987ba3cf">GetValueBlocksPerElement</a>();</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;        <a class="code" href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend#ad3ae9652138dc674604525003d27b3c3">n_values_</a> = value_blocks_per_element_host.size();</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160; </div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;        <a class="code" href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend#a48ccde0f4f053593d516ae636d8e86b4">value_dsizes_</a> = <span class="keyword">static_cast&lt;</span>int64_t *<span class="keyword">&gt;</span>(</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;                <a class="code" href="classopen3d_1_1core_1_1_memory_manager.3a6.d#aa3908635804752f01a1f9377b22d0b09">MemoryManager::Malloc</a>(<a class="code" href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend#ad3ae9652138dc674604525003d27b3c3">n_values_</a> * <span class="keyword">sizeof</span>(int64_t), device));</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;        <a class="code" href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend#a12986bb83db42301428512a26ffccab9">value_blocks_per_element_</a> = <span class="keyword">static_cast&lt;</span>int64_t *<span class="keyword">&gt;</span>(</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;                <a class="code" href="classopen3d_1_1core_1_1_memory_manager.3a6.d#aa3908635804752f01a1f9377b22d0b09">MemoryManager::Malloc</a>(<a class="code" href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend#ad3ae9652138dc674604525003d27b3c3">n_values_</a> * <span class="keyword">sizeof</span>(int64_t), device));</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160; </div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;        <a class="code" href="classopen3d_1_1core_1_1_memory_manager.3a6.d#a74921d92777e0fbdf559eb5bbbc9aa53">MemoryManager::MemcpyFromHost</a>(<a class="code" href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend#a48ccde0f4f053593d516ae636d8e86b4">value_dsizes_</a>, device,</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;                                      value_dsizes_host.data(),</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;                                      <a class="code" href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend#ad3ae9652138dc674604525003d27b3c3">n_values_</a> * <span class="keyword">sizeof</span>(int64_t));</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;        <a class="code" href="classopen3d_1_1core_1_1_memory_manager.3a6.d#a74921d92777e0fbdf559eb5bbbc9aa53">MemoryManager::MemcpyFromHost</a>(<a class="code" href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend#a12986bb83db42301428512a26ffccab9">value_blocks_per_element_</a>, device,</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;                                      value_blocks_per_element_host.data(),</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;                                      <a class="code" href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend#ad3ae9652138dc674604525003d27b3c3">n_values_</a> * <span class="keyword">sizeof</span>(int64_t));</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160; </div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;        <a class="code" href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend#afd8acaa54ee3c1f549d28b27e68006bf">common_block_size_</a> = hashmap_buffer.<a class="code" href="classopen3d_1_1core_1_1_hash_backend_buffer#ad830fa0c8911ef42e727be5909d4601f">GetCommonBlockSize</a>();</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160; </div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;        <span class="comment">// Pointers</span></div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;        <a class="code" href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend#ae760d10e8089fbf77c63157b5d648a82">heap_</a> = hashmap_buffer.<a class="code" href="classopen3d_1_1core_1_1_hash_backend_buffer#a68f9a3df65330632e9dbf1854c1cdaa6">GetIndexHeap</a>().<a class="code" href="classopen3d_1_1core_1_1_tensor.html#a02fcf79268d821e0b1081207ea02f11c">GetDataPtr</a>&lt;<a class="code" href="namespaceopen3d_1_1core.html#a2e24567ecd0819b60fcd901703289eec">buf_index_t</a>&gt;();</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;        <a class="code" href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend#abe89445b949dfa7e1372f083abc12522">keys_</a> = hashmap_buffer.<a class="code" href="classopen3d_1_1core_1_1_hash_backend_buffer#ab559bf4c57ed8e593885ed9093007462">GetKeyBuffer</a>().<a class="code" href="classopen3d_1_1core_1_1_tensor.html#a02fcf79268d821e0b1081207ea02f11c">GetDataPtr</a>&lt;uint8_t&gt;();</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160; </div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        std::vector&lt;Tensor&gt; value_buffers = hashmap_buffer.<a class="code" href="classopen3d_1_1core_1_1_hash_backend_buffer#afeaa58a31883621fe9e260973cacfee4">GetValueBuffers</a>();</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;        std::vector&lt;uint8_t *&gt; value_ptrs(<a class="code" href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend#ad3ae9652138dc674604525003d27b3c3">n_values_</a>);</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> i = 0; i &lt; <a class="code" href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend#ad3ae9652138dc674604525003d27b3c3">n_values_</a>; ++i) {</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;            value_ptrs[i] = value_buffers[i].GetDataPtr&lt;uint8_t&gt;();</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;            cudaMemset(value_ptrs[i], 0, <a class="code" href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend#aac2e1f4e55e63eefd34e8c88d373dcf8">capacity_</a> * value_dsizes_host[i]);</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        }</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        <a class="code" href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend#a50e3c124e5f465509538e8b6cb124f5e">values_</a> = <span class="keyword">static_cast&lt;</span>uint8_t **<span class="keyword">&gt;</span>(</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;                <a class="code" href="classopen3d_1_1core_1_1_memory_manager.3a6.d#aa3908635804752f01a1f9377b22d0b09">MemoryManager::Malloc</a>(<a class="code" href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend#ad3ae9652138dc674604525003d27b3c3">n_values_</a> * <span class="keyword">sizeof</span>(uint8_t *), device));</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        <a class="code" href="classopen3d_1_1core_1_1_memory_manager.3a6.d#a74921d92777e0fbdf559eb5bbbc9aa53">MemoryManager::MemcpyFromHost</a>(<a class="code" href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend#a50e3c124e5f465509538e8b6cb124f5e">values_</a>, device, value_ptrs.data(),</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;                                      <a class="code" href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend#ad3ae9652138dc674604525003d27b3c3">n_values_</a> * <span class="keyword">sizeof</span>(uint8_t *));</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160; </div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        <a class="code" href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend#a7cc9f0a8a913faed52aa65256bd8306e">heap_top_</a> = hashmap_buffer.<a class="code" href="classopen3d_1_1core_1_1_hash_backend_buffer#a9a0d900079ee04414f15d7a143d0389a">GetHeapTop</a>().<a class="code" href="structopen3d_1_1core_1_1_hash_backend_buffer#abd79e43446e94c64a2739eb7a9156273">cuda</a>.<a class="code" href="classopen3d_1_1core_1_1_tensor.html#a02fcf79268d821e0b1081207ea02f11c">GetDataPtr</a>&lt;<span class="keywordtype">int</span>&gt;();</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        <a class="code" href="namespaceopen3d_1_1core_1_1cuda.html#ab9c482d5e2b659cea9d7c54eb24cfc5c">cuda::Synchronize</a>();</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        <a class="code" href="_c_u_d_a_utils_8h.html#ac85b9a5192bb9afd3198a30a5d47cb2f">OPEN3D_CUDA_CHECK</a>(cudaGetLastError());</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    }</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160; </div>
<div class="line"><a name="l00073"></a><span class="lineno"><a class="line" href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend#abde55e4f9f5f607d65049ba92823b04f">   73</a></span>&#160;    __host__ <span class="keywordtype">void</span> <a class="code" href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend#abde55e4f9f5f607d65049ba92823b04f">Shutdown</a>(<span class="keyword">const</span> <a class="code" href="classopen3d_1_1core_1_1_device.html">Device</a> &amp;device) {</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        <a class="code" href="classopen3d_1_1core_1_1_memory_manager.3a6.d#ae43870c863b2a038f08e2f5ae3227707">MemoryManager::Free</a>(<a class="code" href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend#a50e3c124e5f465509538e8b6cb124f5e">values_</a>, device);</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        <a class="code" href="classopen3d_1_1core_1_1_memory_manager.3a6.d#ae43870c863b2a038f08e2f5ae3227707">MemoryManager::Free</a>(<a class="code" href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend#a48ccde0f4f053593d516ae636d8e86b4">value_dsizes_</a>, device);</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        <a class="code" href="classopen3d_1_1core_1_1_memory_manager.3a6.d#ae43870c863b2a038f08e2f5ae3227707">MemoryManager::Free</a>(<a class="code" href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend#a12986bb83db42301428512a26ffccab9">value_blocks_per_element_</a>, device);</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    }</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160; </div>
<div class="line"><a name="l00079"></a><span class="lineno"><a class="line" href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend#a786baf49266b03227b7432e020680b42">   79</a></span>&#160;    __device__ <a class="code" href="namespaceopen3d_1_1core.html#a2e24567ecd0819b60fcd901703289eec">buf_index_t</a> <a class="code" href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend#a786baf49266b03227b7432e020680b42">DeviceAllocate</a>() {</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        <span class="keywordtype">int</span> index = atomicAdd(<a class="code" href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend#a7cc9f0a8a913faed52aa65256bd8306e">heap_top_</a>, 1);</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend#ae760d10e8089fbf77c63157b5d648a82">heap_</a>[index];</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    }</div>
<div class="line"><a name="l00083"></a><span class="lineno"><a class="line" href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend#a92255272f37c7ed05099a07d11ebd460">   83</a></span>&#160;    __device__ <span class="keywordtype">void</span> <a class="code" href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend#a92255272f37c7ed05099a07d11ebd460">DeviceFree</a>(<a class="code" href="namespaceopen3d_1_1core.html#a2e24567ecd0819b60fcd901703289eec">buf_index_t</a> ptr) {</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        <span class="keywordtype">int</span> index = atomicSub(<a class="code" href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend#a7cc9f0a8a913faed52aa65256bd8306e">heap_top_</a>, 1);</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;        <a class="code" href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend#ae760d10e8089fbf77c63157b5d648a82">heap_</a>[index - 1] = ptr;</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    }</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160; </div>
<div class="line"><a name="l00088"></a><span class="lineno"><a class="line" href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend#ad55682bc28dc4be647b3d9d1bc8b064e">   88</a></span>&#160;    __device__ <span class="keywordtype">void</span> *<a class="code" href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend#ad55682bc28dc4be647b3d9d1bc8b064e">GetKeyPtr</a>(<a class="code" href="namespaceopen3d_1_1core.html#a2e24567ecd0819b60fcd901703289eec">buf_index_t</a> ptr) {</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend#abe89445b949dfa7e1372f083abc12522">keys_</a> + ptr * <a class="code" href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend#af9fa1d23870168d9df81ffe81d77a8d6">key_dsize_</a>;</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    }</div>
<div class="line"><a name="l00091"></a><span class="lineno"><a class="line" href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend#ae5976790b498688edd4ce38544bc8c47">   91</a></span>&#160;    __device__ <span class="keywordtype">void</span> *<a class="code" href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend#ae5976790b498688edd4ce38544bc8c47">GetValuePtr</a>(<a class="code" href="namespaceopen3d_1_1core.html#a2e24567ecd0819b60fcd901703289eec">buf_index_t</a> ptr, <span class="keywordtype">int</span> value_idx = 0) {</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend#a50e3c124e5f465509538e8b6cb124f5e">values_</a>[value_idx] + ptr * <a class="code" href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend#a48ccde0f4f053593d516ae636d8e86b4">value_dsizes_</a>[value_idx];</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    }</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160; </div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00096"></a><span class="lineno"><a class="line" href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend#ae760d10e8089fbf77c63157b5d648a82">   96</a></span>&#160;    <a class="code" href="namespaceopen3d_1_1core.html#a2e24567ecd0819b60fcd901703289eec">buf_index_t</a> *<a class="code" href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend#ae760d10e8089fbf77c63157b5d648a82">heap_</a>;       <span class="comment">/* [N] */</span></div>
<div class="line"><a name="l00097"></a><span class="lineno"><a class="line" href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend#a7cc9f0a8a913faed52aa65256bd8306e">   97</a></span>&#160;    <span class="keywordtype">int</span> *<a class="code" href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend#a7cc9f0a8a913faed52aa65256bd8306e">heap_top_</a> = <span class="keyword">nullptr</span>; <span class="comment">/* [1] */</span></div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160; </div>
<div class="line"><a name="l00099"></a><span class="lineno"><a class="line" href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend#abe89445b949dfa7e1372f083abc12522">   99</a></span>&#160;    uint8_t *<a class="code" href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend#abe89445b949dfa7e1372f083abc12522">keys_</a>; <span class="comment">/* [N] * sizeof(Key) */</span></div>
<div class="line"><a name="l00100"></a><span class="lineno"><a class="line" href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend#af9fa1d23870168d9df81ffe81d77a8d6">  100</a></span>&#160;    int64_t <a class="code" href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend#af9fa1d23870168d9df81ffe81d77a8d6">key_dsize_</a>;</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160; </div>
<div class="line"><a name="l00102"></a><span class="lineno"><a class="line" href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend#ad3ae9652138dc674604525003d27b3c3">  102</a></span>&#160;    <span class="keywordtype">size_t</span> <a class="code" href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend#ad3ae9652138dc674604525003d27b3c3">n_values_</a>;</div>
<div class="line"><a name="l00103"></a><span class="lineno"><a class="line" href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend#a50e3c124e5f465509538e8b6cb124f5e">  103</a></span>&#160;    uint8_t **<a class="code" href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend#a50e3c124e5f465509538e8b6cb124f5e">values_</a>;</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160; </div>
<div class="line"><a name="l00105"></a><span class="lineno"><a class="line" href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend#afd8acaa54ee3c1f549d28b27e68006bf">  105</a></span>&#160;    int64_t <a class="code" href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend#afd8acaa54ee3c1f549d28b27e68006bf">common_block_size_</a>;</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160; </div>
<div class="line"><a name="l00107"></a><span class="lineno"><a class="line" href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend#a48ccde0f4f053593d516ae636d8e86b4">  107</a></span>&#160;    int64_t *<a class="code" href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend#a48ccde0f4f053593d516ae636d8e86b4">value_dsizes_</a>;</div>
<div class="line"><a name="l00108"></a><span class="lineno"><a class="line" href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend#a12986bb83db42301428512a26ffccab9">  108</a></span>&#160;    int64_t *<a class="code" href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend#a12986bb83db42301428512a26ffccab9">value_blocks_per_element_</a>;</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160; </div>
<div class="line"><a name="l00110"></a><span class="lineno"><a class="line" href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend#aac2e1f4e55e63eefd34e8c88d373dcf8">  110</a></span>&#160;    int64_t <a class="code" href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend#aac2e1f4e55e63eefd34e8c88d373dcf8">capacity_</a>;</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;};</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160; </div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;}  <span class="comment">// namespace core</span></div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;}  <span class="comment">// namespace open3d</span></div>
<div class="ttc" id="a_c_u_d_a_utils_8h_html"><div class="ttname"><a href="_c_u_d_a_utils_8h.html">CUDAUtils.h</a></div><div class="ttdoc">Common CUDA utilities.</div></div>
<div class="ttc" id="a_c_u_d_a_utils_8h_html_ac85b9a5192bb9afd3198a30a5d47cb2f"><div class="ttname"><a href="_c_u_d_a_utils_8h.html#ac85b9a5192bb9afd3198a30a5d47cb2f">OPEN3D_CUDA_CHECK</a></div><div class="ttdeci">#define OPEN3D_CUDA_CHECK(err)</div><div class="ttdef"><b>Definition:</b> CUDAUtils.h:47</div></div>
<div class="ttc" id="a_hash_backend_buffer_8h_html"><div class="ttname"><a href="_hash_backend_buffer_8h.html">HashBackendBuffer.h</a></div></div>
<div class="ttc" id="a_memory_manager_8h_html"><div class="ttname"><a href="_memory_manager_8h.html">MemoryManager.h</a></div></div>
<div class="ttc" id="a_slab_macros_8h_html"><div class="ttname"><a href="_slab_macros_8h.html">SlabMacros.h</a></div></div>
<div class="ttc" id="a_slab_traits_8h_html"><div class="ttname"><a href="_slab_traits_8h.html">SlabTraits.h</a></div></div>
<div class="ttc" id="aclassopen3d_1_1core_1_1_c_u_d_a_hash_backend_buffer_accessor_html"><div class="ttname"><a href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend">open3d::core::CUDAHashBackendBufferAccessor</a></div><div class="ttdef"><b>Definition:</b> CUDAHashBackendBufferAccessor.h:24</div></div>
<div class="ttc" id="aclassopen3d_1_1core_1_1_c_u_d_a_hash_backend_buffer_accessor_html_a12986bb83db42301428512a26ffccab9"><div class="ttname"><a href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend#a12986bb83db42301428512a26ffccab9">open3d::core::CUDAHashBackendBufferAccessor::value_blocks_per_element_</a></div><div class="ttdeci">int64_t * value_blocks_per_element_</div><div class="ttdef"><b>Definition:</b> CUDAHashBackendBufferAccessor.h:108</div></div>
<div class="ttc" id="aclassopen3d_1_1core_1_1_c_u_d_a_hash_backend_buffer_accessor_html_a3b90b935cb7ad2be7d8d7734517e91d6"><div class="ttname"><a href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend#a3b90b935cb7ad2be7d8d7734517e91d6">open3d::core::CUDAHashBackendBufferAccessor::Setup</a></div><div class="ttdeci">__host__ void Setup(HashBackendBuffer &amp;hashmap_buffer)</div><div class="ttdef"><b>Definition:</b> CUDAHashBackendBufferAccessor.h:26</div></div>
<div class="ttc" id="aclassopen3d_1_1core_1_1_c_u_d_a_hash_backend_buffer_accessor_html_a48ccde0f4f053593d516ae636d8e86b4"><div class="ttname"><a href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend#a48ccde0f4f053593d516ae636d8e86b4">open3d::core::CUDAHashBackendBufferAccessor::value_dsizes_</a></div><div class="ttdeci">int64_t * value_dsizes_</div><div class="ttdef"><b>Definition:</b> CUDAHashBackendBufferAccessor.h:107</div></div>
<div class="ttc" id="aclassopen3d_1_1core_1_1_c_u_d_a_hash_backend_buffer_accessor_html_a50e3c124e5f465509538e8b6cb124f5e"><div class="ttname"><a href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend#a50e3c124e5f465509538e8b6cb124f5e">open3d::core::CUDAHashBackendBufferAccessor::values_</a></div><div class="ttdeci">uint8_t ** values_</div><div class="ttdef"><b>Definition:</b> CUDAHashBackendBufferAccessor.h:103</div></div>
<div class="ttc" id="aclassopen3d_1_1core_1_1_c_u_d_a_hash_backend_buffer_accessor_html_a786baf49266b03227b7432e020680b42"><div class="ttname"><a href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend#a786baf49266b03227b7432e020680b42">open3d::core::CUDAHashBackendBufferAccessor::DeviceAllocate</a></div><div class="ttdeci">__device__ buf_index_t DeviceAllocate()</div><div class="ttdef"><b>Definition:</b> CUDAHashBackendBufferAccessor.h:79</div></div>
<div class="ttc" id="aclassopen3d_1_1core_1_1_c_u_d_a_hash_backend_buffer_accessor_html_a7cc9f0a8a913faed52aa65256bd8306e"><div class="ttname"><a href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend#a7cc9f0a8a913faed52aa65256bd8306e">open3d::core::CUDAHashBackendBufferAccessor::heap_top_</a></div><div class="ttdeci">int * heap_top_</div><div class="ttdef"><b>Definition:</b> CUDAHashBackendBufferAccessor.h:97</div></div>
<div class="ttc" id="aclassopen3d_1_1core_1_1_c_u_d_a_hash_backend_buffer_accessor_html_a92255272f37c7ed05099a07d11ebd460"><div class="ttname"><a href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend#a92255272f37c7ed05099a07d11ebd460">open3d::core::CUDAHashBackendBufferAccessor::DeviceFree</a></div><div class="ttdeci">__device__ void DeviceFree(buf_index_t ptr)</div><div class="ttdef"><b>Definition:</b> CUDAHashBackendBufferAccessor.h:83</div></div>
<div class="ttc" id="aclassopen3d_1_1core_1_1_c_u_d_a_hash_backend_buffer_accessor_html_aac2e1f4e55e63eefd34e8c88d373dcf8"><div class="ttname"><a href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend#aac2e1f4e55e63eefd34e8c88d373dcf8">open3d::core::CUDAHashBackendBufferAccessor::capacity_</a></div><div class="ttdeci">int64_t capacity_</div><div class="ttdef"><b>Definition:</b> CUDAHashBackendBufferAccessor.h:110</div></div>
<div class="ttc" id="aclassopen3d_1_1core_1_1_c_u_d_a_hash_backend_buffer_accessor_html_abde55e4f9f5f607d65049ba92823b04f"><div class="ttname"><a href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend#abde55e4f9f5f607d65049ba92823b04f">open3d::core::CUDAHashBackendBufferAccessor::Shutdown</a></div><div class="ttdeci">__host__ void Shutdown(const Device &amp;device)</div><div class="ttdef"><b>Definition:</b> CUDAHashBackendBufferAccessor.h:73</div></div>
<div class="ttc" id="aclassopen3d_1_1core_1_1_c_u_d_a_hash_backend_buffer_accessor_html_abe89445b949dfa7e1372f083abc12522"><div class="ttname"><a href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend#abe89445b949dfa7e1372f083abc12522">open3d::core::CUDAHashBackendBufferAccessor::keys_</a></div><div class="ttdeci">uint8_t * keys_</div><div class="ttdef"><b>Definition:</b> CUDAHashBackendBufferAccessor.h:99</div></div>
<div class="ttc" id="aclassopen3d_1_1core_1_1_c_u_d_a_hash_backend_buffer_accessor_html_ad3ae9652138dc674604525003d27b3c3"><div class="ttname"><a href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend#ad3ae9652138dc674604525003d27b3c3">open3d::core::CUDAHashBackendBufferAccessor::n_values_</a></div><div class="ttdeci">size_t n_values_</div><div class="ttdef"><b>Definition:</b> CUDAHashBackendBufferAccessor.h:102</div></div>
<div class="ttc" id="aclassopen3d_1_1core_1_1_c_u_d_a_hash_backend_buffer_accessor_html_ad55682bc28dc4be647b3d9d1bc8b064e"><div class="ttname"><a href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend#ad55682bc28dc4be647b3d9d1bc8b064e">open3d::core::CUDAHashBackendBufferAccessor::GetKeyPtr</a></div><div class="ttdeci">__device__ void * GetKeyPtr(buf_index_t ptr)</div><div class="ttdef"><b>Definition:</b> CUDAHashBackendBufferAccessor.h:88</div></div>
<div class="ttc" id="aclassopen3d_1_1core_1_1_c_u_d_a_hash_backend_buffer_accessor_html_ae5976790b498688edd4ce38544bc8c47"><div class="ttname"><a href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend#ae5976790b498688edd4ce38544bc8c47">open3d::core::CUDAHashBackendBufferAccessor::GetValuePtr</a></div><div class="ttdeci">__device__ void * GetValuePtr(buf_index_t ptr, int value_idx=0)</div><div class="ttdef"><b>Definition:</b> CUDAHashBackendBufferAccessor.h:91</div></div>
<div class="ttc" id="aclassopen3d_1_1core_1_1_c_u_d_a_hash_backend_buffer_accessor_html_ae760d10e8089fbf77c63157b5d648a82"><div class="ttname"><a href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend#ae760d10e8089fbf77c63157b5d648a82">open3d::core::CUDAHashBackendBufferAccessor::heap_</a></div><div class="ttdeci">buf_index_t * heap_</div><div class="ttdef"><b>Definition:</b> CUDAHashBackendBufferAccessor.h:96</div></div>
<div class="ttc" id="aclassopen3d_1_1core_1_1_c_u_d_a_hash_backend_buffer_accessor_html_af9fa1d23870168d9df81ffe81d77a8d6"><div class="ttname"><a href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend#af9fa1d23870168d9df81ffe81d77a8d6">open3d::core::CUDAHashBackendBufferAccessor::key_dsize_</a></div><div class="ttdeci">int64_t key_dsize_</div><div class="ttdef"><b>Definition:</b> CUDAHashBackendBufferAccessor.h:100</div></div>
<div class="ttc" id="aclassopen3d_1_1core_1_1_c_u_d_a_hash_backend_buffer_accessor_html_afd8acaa54ee3c1f549d28b27e68006bf"><div class="ttname"><a href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend#afd8acaa54ee3c1f549d28b27e68006bf">open3d::core::CUDAHashBackendBufferAccessor::common_block_size_</a></div><div class="ttdeci">int64_t common_block_size_</div><div class="ttdef"><b>Definition:</b> CUDAHashBackendBufferAccessor.h:105</div></div>
<div class="ttc" id="aclassopen3d_1_1core_1_1_device_html"><div class="ttname"><a href="classopen3d_1_1core_1_1_device.html">open3d::core::Device</a></div><div class="ttdef"><b>Definition:</b> Device.h:18</div></div>
<div class="ttc" id="aclassopen3d_1_1core_1_1_hash_backend_buffer_html"><div class="ttname"><a href="classopen3d_1_1core_1_1_hash_backend_buffer">open3d::core::HashBackendBuffer</a></div><div class="ttdef"><b>Definition:</b> HashBackendBuffer.h:46</div></div>
<div class="ttc" id="aclassopen3d_1_1core_1_1_hash_backend_buffer_html_a0518809dff593acf813dd699af43b546"><div class="ttname"><a href="classopen3d_1_1core_1_1_hash_backend_buffer#a0518809dff593acf813dd699af43b546">open3d::core::HashBackendBuffer::GetKeyDsize</a></div><div class="ttdeci">int64_t GetKeyDsize() const</div><div class="ttdoc">Return key's data size in bytes.</div><div class="ttdef"><b>Definition:</b> HashBackendBuffer.cpp:77</div></div>
<div class="ttc" id="aclassopen3d_1_1core_1_1_hash_backend_buffer_html_a50da0f977cb5805a3431f2c2682a5ff4"><div class="ttname"><a href="classopen3d_1_1core_1_1_hash_backend_buffer#a50da0f977cb5805a3431f2c2682a5ff4">open3d::core::HashBackendBuffer::GetDevice</a></div><div class="ttdeci">Device GetDevice() const</div><div class="ttdoc">Return device of the buffer.</div><div class="ttdef"><b>Definition:</b> HashBackendBuffer.cpp:73</div></div>
<div class="ttc" id="aclassopen3d_1_1core_1_1_hash_backend_buffer_html_a68f9a3df65330632e9dbf1854c1cdaa6"><div class="ttname"><a href="classopen3d_1_1core_1_1_hash_backend_buffer#a68f9a3df65330632e9dbf1854c1cdaa6">open3d::core::HashBackendBuffer::GetIndexHeap</a></div><div class="ttdeci">Tensor GetIndexHeap() const</div><div class="ttdoc">Return the index heap tensor.</div><div class="ttdef"><b>Definition:</b> HashBackendBuffer.cpp:97</div></div>
<div class="ttc" id="aclassopen3d_1_1core_1_1_hash_backend_buffer_html_a7db23b4b5b58b71312b28b37dbb1e995"><div class="ttname"><a href="classopen3d_1_1core_1_1_hash_backend_buffer#a7db23b4b5b58b71312b28b37dbb1e995">open3d::core::HashBackendBuffer::GetCapacity</a></div><div class="ttdeci">int64_t GetCapacity() const</div><div class="ttdoc">Return capacity of the buffer.</div><div class="ttdef"><b>Definition:</b> HashBackendBuffer.cpp:75</div></div>
<div class="ttc" id="aclassopen3d_1_1core_1_1_hash_backend_buffer_html_a9a0d900079ee04414f15d7a143d0389a"><div class="ttname"><a href="classopen3d_1_1core_1_1_hash_backend_buffer#a9a0d900079ee04414f15d7a143d0389a">open3d::core::HashBackendBuffer::GetHeapTop</a></div><div class="ttdeci">HeapTop &amp; GetHeapTop()</div><div class="ttdef"><b>Definition:</b> HashBackendBuffer.cpp:99</div></div>
<div class="ttc" id="aclassopen3d_1_1core_1_1_hash_backend_buffer_html_ab559bf4c57ed8e593885ed9093007462"><div class="ttname"><a href="classopen3d_1_1core_1_1_hash_backend_buffer#ab559bf4c57ed8e593885ed9093007462">open3d::core::HashBackendBuffer::GetKeyBuffer</a></div><div class="ttdeci">Tensor GetKeyBuffer() const</div><div class="ttdoc">Return the key buffer tensor.</div><div class="ttdef"><b>Definition:</b> HashBackendBuffer.cpp:110</div></div>
<div class="ttc" id="aclassopen3d_1_1core_1_1_hash_backend_buffer_html_abc16f2025a8d169b53d7bdc62b8dea48"><div class="ttname"><a href="classopen3d_1_1core_1_1_hash_backend_buffer#abc16f2025a8d169b53d7bdc62b8dea48">open3d::core::HashBackendBuffer::GetValueDsizes</a></div><div class="ttdeci">std::vector&lt; int64_t &gt; GetValueDsizes() const</div><div class="ttdoc">Return value's data sizes in bytes.</div><div class="ttdef"><b>Definition:</b> HashBackendBuffer.cpp:81</div></div>
<div class="ttc" id="aclassopen3d_1_1core_1_1_hash_backend_buffer_html_ad830fa0c8911ef42e727be5909d4601f"><div class="ttname"><a href="classopen3d_1_1core_1_1_hash_backend_buffer#ad830fa0c8911ef42e727be5909d4601f">open3d::core::HashBackendBuffer::GetCommonBlockSize</a></div><div class="ttdeci">int64_t GetCommonBlockSize() const</div><div class="ttdoc">Get the common block size divisor of all values types.</div><div class="ttdef"><b>Definition:</b> HashBackendBuffer.cpp:89</div></div>
<div class="ttc" id="aclassopen3d_1_1core_1_1_hash_backend_buffer_html_afeaa58a31883621fe9e260973cacfee4"><div class="ttname"><a href="classopen3d_1_1core_1_1_hash_backend_buffer#afeaa58a31883621fe9e260973cacfee4">open3d::core::HashBackendBuffer::GetValueBuffers</a></div><div class="ttdeci">std::vector&lt; Tensor &gt; GetValueBuffers() const</div><div class="ttdoc">Return the value buffer tensors.</div><div class="ttdef"><b>Definition:</b> HashBackendBuffer.cpp:112</div></div>
<div class="ttc" id="aclassopen3d_1_1core_1_1_hash_backend_buffer_html_afef8871eabb9bce55272004f987ba3cf"><div class="ttname"><a href="classopen3d_1_1core_1_1_hash_backend_buffer#afef8871eabb9bce55272004f987ba3cf">open3d::core::HashBackendBuffer::GetValueBlocksPerElement</a></div><div class="ttdeci">std::vector&lt; int64_t &gt; GetValueBlocksPerElement() const</div><div class="ttdoc">Return value's data sizes in the unit of common block size divisor.</div><div class="ttdef"><b>Definition:</b> HashBackendBuffer.cpp:93</div></div>
<div class="ttc" id="aclassopen3d_1_1core_1_1_memory_manager_html_a74921d92777e0fbdf559eb5bbbc9aa53"><div class="ttname"><a href="classopen3d_1_1core_1_1_memory_manager.3a6.d#a74921d92777e0fbdf559eb5bbbc9aa53">open3d::core::MemoryManager::MemcpyFromHost</a></div><div class="ttdeci">static void MemcpyFromHost(void *dst_ptr, const Device &amp;dst_device, const void *host_ptr, size_t num_bytes)</div><div class="ttdoc">Same as Memcpy, but with host (CPU:0) as default src_device.</div><div class="ttdef"><b>Definition:</b> MemoryManager.cpp:77</div></div>
<div class="ttc" id="aclassopen3d_1_1core_1_1_memory_manager_html_aa3908635804752f01a1f9377b22d0b09"><div class="ttname"><a href="classopen3d_1_1core_1_1_memory_manager.3a6.d#aa3908635804752f01a1f9377b22d0b09">open3d::core::MemoryManager::Malloc</a></div><div class="ttdeci">static void * Malloc(size_t byte_size, const Device &amp;device)</div><div class="ttdef"><b>Definition:</b> MemoryManager.cpp:22</div></div>
<div class="ttc" id="aclassopen3d_1_1core_1_1_memory_manager_html_ae43870c863b2a038f08e2f5ae3227707"><div class="ttname"><a href="classopen3d_1_1core_1_1_memory_manager.3a6.d#ae43870c863b2a038f08e2f5ae3227707">open3d::core::MemoryManager::Free</a></div><div class="ttdeci">static void Free(void *ptr, const Device &amp;device)</div><div class="ttdoc">Frees previously allocated memory at address ptr on device device.</div><div class="ttdef"><b>Definition:</b> MemoryManager.cpp:28</div></div>
<div class="ttc" id="aclassopen3d_1_1core_1_1_tensor_html_a02fcf79268d821e0b1081207ea02f11c"><div class="ttname"><a href="classopen3d_1_1core_1_1_tensor.html#a02fcf79268d821e0b1081207ea02f11c">open3d::core::Tensor::GetDataPtr</a></div><div class="ttdeci">T * GetDataPtr()</div><div class="ttdef"><b>Definition:</b> Tensor.h:1133</div></div>
<div class="ttc" id="anamespaceopen3d_1_1core_1_1cuda_html_ab9c482d5e2b659cea9d7c54eb24cfc5c"><div class="ttname"><a href="namespaceopen3d_1_1core_1_1cuda.html#ab9c482d5e2b659cea9d7c54eb24cfc5c">open3d::core::cuda::Synchronize</a></div><div class="ttdeci">void Synchronize()</div><div class="ttdef"><b>Definition:</b> CUDAUtils.cpp:58</div></div>
<div class="ttc" id="anamespaceopen3d_1_1core_html_a2e24567ecd0819b60fcd901703289eec"><div class="ttname"><a href="namespaceopen3d_1_1core.html#a2e24567ecd0819b60fcd901703289eec">open3d::core::buf_index_t</a></div><div class="ttdeci">uint32_t buf_index_t</div><div class="ttdef"><b>Definition:</b> HashBackendBuffer.h:44</div></div>
<div class="ttc" id="anamespaceopen3d_html"><div class="ttname"><a href="namespaceopen3d.html">open3d</a></div><div class="ttdef"><b>Definition:</b> PinholeCameraIntrinsic.cpp:16</div></div>
<div class="ttc" id="astructopen3d_1_1core_1_1_hash_backend_buffer_1_1_heap_top_html_abd79e43446e94c64a2739eb7a9156273"><div class="ttname"><a href="structopen3d_1_1core_1_1_hash_backend_buffer#abd79e43446e94c64a2739eb7a9156273">open3d::core::HashBackendBuffer::HeapTop::cuda</a></div><div class="ttdeci">Tensor cuda</div><div class="ttdef"><b>Definition:</b> HashBackendBuffer.h:49</div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1
</small></address>
</body>

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/_c_u_d_a_hash_backend_buffer_accessor_8h_source.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 10:59:59 GMT -->
</html>
