<!-- HTML header for doxygen 1.8.20-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/classopen3d_1_1t_1_1pipelines_1_1slam_1_1_frame.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 11:02:18 GMT -->
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Open3D (C++ API): open3d::t::pipelines::slam::Frame Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js", "TeX/AMSmath.html", "TeX/AMSsymbols.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="../../../../cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-3TQPKGV6Z3"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());
  gtag('config', 'G-3TQPKGV6Z3');
</script>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="open3d_logo.ico"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Open3D (C++ API)
   &#160;<span id="projectnumber">0.17.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.html');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.html','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceopen3d.html">open3d</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1t.html">t</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1t_1_1pipelines.33e.delaye">pipelines</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1t_1_1pipelines_1_1slam.49">slam</a></li><li class="navelem"><a class="el" href="classopen3d_1_1t_1_1pipelines_1_1slam_1_1_fr">Frame</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">open3d::t::pipelines::slam::Frame Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><a class="el" href="classopen3d_1_1t_1_1pipelines_1_1slam_1_1_fr" title="Frame is a container class storing an intrinsic matrix and several 2D tensors, from depth map,...">Frame</a> is a container class storing an intrinsic matrix and several 2D tensors, from depth map, vertex map, to color map, in a customized way.  
 <a href="classopen3d_1_1t_1_1pipelines_1_1slam_1_1_fr#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_frame_8h_source.html">Frame.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ad285451e62b8e48bf596c5d1adea82c3"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1pipelines_1_1slam_1_1_fr#ad285451e62b8e48bf596c5d1adea82c3">Frame</a> (int <a class="el" href="io_2file__format_2_file_p_c_d_8cpp.375.delay#ad12fc34ce789bce6c8a05d8a17138534">height</a>, int <a class="el" href="io_2file__format_2_file_p_c_d_8cpp.375.delay#a2474a5474cbff19523a51eb1de01cda4">width</a>, const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;intrinsics, const <a class="el" href="classopen3d_1_1core_1_1_device.html">core::Device</a> &amp;device)</td></tr>
<tr class="separator:ad285451e62b8e48bf596c5d1adea82c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1bc57fde54d8b356004a46ed69fbd04f"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1pipelines_1_1slam_1_1_fr#a1bc57fde54d8b356004a46ed69fbd04f">GetHeight</a> () const</td></tr>
<tr class="separator:a1bc57fde54d8b356004a46ed69fbd04f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9325b2fbd63fb4279047ab7bfcba95ac"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1pipelines_1_1slam_1_1_fr#a9325b2fbd63fb4279047ab7bfcba95ac">GetWidth</a> () const</td></tr>
<tr class="separator:a9325b2fbd63fb4279047ab7bfcba95ac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac75aedd625ebb51bde3848ca650fcd1f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1pipelines_1_1slam_1_1_fr#ac75aedd625ebb51bde3848ca650fcd1f">SetIntrinsics</a> (const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;intrinsics)</td></tr>
<tr class="separator:ac75aedd625ebb51bde3848ca650fcd1f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acccd704c83f496aa6ddaec98cc6da8f5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1pipelines_1_1slam_1_1_fr#acccd704c83f496aa6ddaec98cc6da8f5">GetIntrinsics</a> () const</td></tr>
<tr class="separator:acccd704c83f496aa6ddaec98cc6da8f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a120b1e425a51a21b19dd11168a6f2a87"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1pipelines_1_1slam_1_1_fr#a120b1e425a51a21b19dd11168a6f2a87">SetData</a> (const std::string &amp;<a class="el" href="_o3_d_visualizer_8cpp.html#a9b45b3e13bd9167aab02e17e08916231">name</a>, const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;data)</td></tr>
<tr class="separator:a120b1e425a51a21b19dd11168a6f2a87"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa20418cd139849107af63b7fa9ccf54c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1pipelines_1_1slam_1_1_fr#aa20418cd139849107af63b7fa9ccf54c">GetData</a> (const std::string &amp;<a class="el" href="_o3_d_visualizer_8cpp.html#a9b45b3e13bd9167aab02e17e08916231">name</a>) const</td></tr>
<tr class="separator:aa20418cd139849107af63b7fa9ccf54c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a07c0262a173abbf2f25265deeb7c37cd"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1pipelines_1_1slam_1_1_fr#a07c0262a173abbf2f25265deeb7c37cd">SetDataFromImage</a> (const std::string &amp;<a class="el" href="_o3_d_visualizer_8cpp.html#a9b45b3e13bd9167aab02e17e08916231">name</a>, const <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_image.34e.d">t::geometry::Image</a> &amp;data)</td></tr>
<tr class="separator:a07c0262a173abbf2f25265deeb7c37cd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4c17a395d40d23a50f007ae9dc7f149f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_image.34e.d">t::geometry::Image</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1pipelines_1_1slam_1_1_fr#a4c17a395d40d23a50f007ae9dc7f149f">GetDataAsImage</a> (const std::string &amp;<a class="el" href="_o3_d_visualizer_8cpp.html#a9b45b3e13bd9167aab02e17e08916231">name</a>) const</td></tr>
<tr class="separator:a4c17a395d40d23a50f007ae9dc7f149f"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p><a class="el" href="classopen3d_1_1t_1_1pipelines_1_1slam_1_1_fr" title="Frame is a container class storing an intrinsic matrix and several 2D tensors, from depth map,...">Frame</a> is a container class storing an intrinsic matrix and several 2D tensors, from depth map, vertex map, to color map, in a customized way. </p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="ad285451e62b8e48bf596c5d1adea82c3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad285451e62b8e48bf596c5d1adea82c3">&#9670;&nbsp;</a></span>Frame()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">open3d::t::pipelines::slam::Frame::Frame </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>height</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>width</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>intrinsics</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_device.html">core::Device</a> &amp;&#160;</td>
          <td class="paramname"><em>device</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="aa20418cd139849107af63b7fa9ccf54c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa20418cd139849107af63b7fa9ccf54c">&#9670;&nbsp;</a></span>GetData()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> open3d::t::pipelines::slam::Frame::GetData </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>name</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a4c17a395d40d23a50f007ae9dc7f149f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4c17a395d40d23a50f007ae9dc7f149f">&#9670;&nbsp;</a></span>GetDataAsImage()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_image.34e.d">t::geometry::Image</a> open3d::t::pipelines::slam::Frame::GetDataAsImage </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>name</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a1bc57fde54d8b356004a46ed69fbd04f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1bc57fde54d8b356004a46ed69fbd04f">&#9670;&nbsp;</a></span>GetHeight()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int open3d::t::pipelines::slam::Frame::GetHeight </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="acccd704c83f496aa6ddaec98cc6da8f5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acccd704c83f496aa6ddaec98cc6da8f5">&#9670;&nbsp;</a></span>GetIntrinsics()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> open3d::t::pipelines::slam::Frame::GetIntrinsics </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a9325b2fbd63fb4279047ab7bfcba95ac"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9325b2fbd63fb4279047ab7bfcba95ac">&#9670;&nbsp;</a></span>GetWidth()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int open3d::t::pipelines::slam::Frame::GetWidth </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a120b1e425a51a21b19dd11168a6f2a87"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a120b1e425a51a21b19dd11168a6f2a87">&#9670;&nbsp;</a></span>SetData()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::t::pipelines::slam::Frame::SetData </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>data</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a07c0262a173abbf2f25265deeb7c37cd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a07c0262a173abbf2f25265deeb7c37cd">&#9670;&nbsp;</a></span>SetDataFromImage()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::t::pipelines::slam::Frame::SetDataFromImage </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_image.34e.d">t::geometry::Image</a> &amp;&#160;</td>
          <td class="paramname"><em>data</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ac75aedd625ebb51bde3848ca650fcd1f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac75aedd625ebb51bde3848ca650fcd1f">&#9670;&nbsp;</a></span>SetIntrinsics()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::t::pipelines::slam::Frame::SetIntrinsics </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>intrinsics</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>/home/runner/work/Open3D/Open3D/cpp/open3d/t/pipelines/slam/<a class="el" href="_frame_8h_source.html">Frame.h (9238339 (Tue Mar 14 18:49:09 2023 -0700))</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1
</small></address>
</body>

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/classopen3d_1_1t_1_1pipelines_1_1slam_1_1_frame.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 11:02:18 GMT -->
</html>
