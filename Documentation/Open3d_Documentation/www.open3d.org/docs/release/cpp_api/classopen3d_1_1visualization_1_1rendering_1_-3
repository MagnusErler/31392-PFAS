<!-- HTML header for doxygen 1.8.20-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/classopen3d_1_1visualization_1_1rendering_1_1_camera.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 11:01:38 GMT -->
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Open3D (C++ API): open3d::visualization::rendering::Camera Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js", "TeX/AMSmath.html", "TeX/AMSsymbols.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="../../../../cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-3TQPKGV6Z3"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());
  gtag('config', 'G-3TQPKGV6Z3');
</script>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="open3d_logo.ico"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Open3D (C++ API)
   &#160;<span id="projectnumber">0.17.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.html');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.html','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceopen3d.html">open3d</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1visualization.html">visualization</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1visualization_1_1renderin">rendering</a></li><li class="navelem"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-3">Camera</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">open3d::visualization::rendering::Camera Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_camera_8h_source.html">Camera.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for open3d::visualization::rendering::Camera:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classopen3d_1_1visualization_1_1rendering_1_-36" usemap="#open3d::visualization::rendering::Camera_map" alt=""/>
  <map id="open3d::visualization::rendering::Camera_map" name="open3d::visualization::rendering::Camera_map">
<area href="classopen3d_1_1visualization_1_1rendering_1_-7" alt="open3d::visualization::rendering::FilamentCamera" shape="rect" coords="0,56,287,80"/>
  </map>
</div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structopen3d_1_1visualization_1_1rendering_1-10">ProjectionInfo</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a4aa59a62070636c07968846db47d5bbf"><td class="memItemLeft" align="right" valign="top">enum class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-3#a4aa59a62070636c07968846db47d5bbf">FovType</a> { <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-3#a4aa59a62070636c07968846db47d5bbfa06ce2a25e5d12c166a36f654dbea6012">Vertical</a>
, <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-3#a4aa59a62070636c07968846db47d5bbfac1b5fa03ecdb95d4a45dd1c40b02527f">Horizontal</a>
 }</td></tr>
<tr class="separator:a4aa59a62070636c07968846db47d5bbf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8fddaae1c336f0b79e47955a128675f3"><td class="memItemLeft" align="right" valign="top">enum class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-3#a8fddaae1c336f0b79e47955a128675f3">Projection</a> { <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-3#a8fddaae1c336f0b79e47955a128675f3aa80420eef88d11f77532f1b9cb467fa3">Perspective</a>
, <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-3#a8fddaae1c336f0b79e47955a128675f3a170d5dfdfd387d456a0749b4a8e1524f">Ortho</a>
 }</td></tr>
<tr class="separator:a8fddaae1c336f0b79e47955a128675f3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a53ad55bbc774aca6d8de373394460ee3"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-3#a53ad55bbc774aca6d8de373394460ee3">Transform</a> = Eigen::Transform&lt; float, 3, Eigen::Affine &gt;</td></tr>
<tr class="separator:a53ad55bbc774aca6d8de373394460ee3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a075b912e2726bd75ed15f66a7516dcd5"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-3#a075b912e2726bd75ed15f66a7516dcd5">ProjectionMatrix</a> = Eigen::Transform&lt; float, 3, Eigen::Projective &gt;</td></tr>
<tr class="separator:a075b912e2726bd75ed15f66a7516dcd5"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a43b00bd10216d6c3cf859ab08c72761a"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-3#a43b00bd10216d6c3cf859ab08c72761a">~Camera</a> ()=default</td></tr>
<tr class="separator:a43b00bd10216d6c3cf859ab08c72761a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa1a76a5234397d96a53c423bd9232792"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-3#aa1a76a5234397d96a53c423bd9232792">SetProjection</a> (double fov, double aspect, double near, double far, <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-3#a4aa59a62070636c07968846db47d5bbf">FovType</a> fov_type)=0</td></tr>
<tr class="separator:aa1a76a5234397d96a53c423bd9232792"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac8200f4d3119b28c1974615b85296fba"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-3#ac8200f4d3119b28c1974615b85296fba">SetProjection</a> (<a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-3#a8fddaae1c336f0b79e47955a128675f3">Projection</a> projection, double left, double right, double bottom, double top, double near, double far)=0</td></tr>
<tr class="separator:ac8200f4d3119b28c1974615b85296fba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a74f1f79e0167da3a44b874054c3c9043"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-3#a74f1f79e0167da3a44b874054c3c9043">SetProjection</a> (const Eigen::Matrix3d &amp;intrinsics, double near, double far, double <a class="el" href="io_2file__format_2_file_p_c_d_8cpp.375.delay#a2474a5474cbff19523a51eb1de01cda4">width</a>, double <a class="el" href="io_2file__format_2_file_p_c_d_8cpp.375.delay#ad12fc34ce789bce6c8a05d8a17138534">height</a>)=0</td></tr>
<tr class="separator:a74f1f79e0167da3a44b874054c3c9043"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a22fef15fb71f3e7102a8052635c603ef"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-3#a22fef15fb71f3e7102a8052635c603ef">LookAt</a> (const Eigen::Vector3f &amp;center, const Eigen::Vector3f &amp;eye, const Eigen::Vector3f &amp;up)=0</td></tr>
<tr class="separator:a22fef15fb71f3e7102a8052635c603ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a87dac843c461e283f7797a857c1ccdfe"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-3#a87dac843c461e283f7797a857c1ccdfe">FromExtrinsics</a> (const Eigen::Matrix4d &amp;extrinsics)</td></tr>
<tr class="separator:a87dac843c461e283f7797a857c1ccdfe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af86b3737996fe2e57bbb75dda3a48fdf"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-3#af86b3737996fe2e57bbb75dda3a48fdf">SetModelMatrix</a> (const <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-3#a53ad55bbc774aca6d8de373394460ee3">Transform</a> &amp;view)=0</td></tr>
<tr class="separator:af86b3737996fe2e57bbb75dda3a48fdf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7b4844b0e7ae81478e9937d7b6dbecf6"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-3#a7b4844b0e7ae81478e9937d7b6dbecf6">SetModelMatrix</a> (const Eigen::Vector3f &amp;forward, const Eigen::Vector3f &amp;left, const Eigen::Vector3f &amp;up)=0</td></tr>
<tr class="separator:a7b4844b0e7ae81478e9937d7b6dbecf6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9355147051b826dbfdf55931725046b9"><td class="memItemLeft" align="right" valign="top">virtual double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-3#a9355147051b826dbfdf55931725046b9">GetNear</a> () const =0</td></tr>
<tr class="separator:a9355147051b826dbfdf55931725046b9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acfb81fbb4395e8b49668037088d05fc8"><td class="memItemLeft" align="right" valign="top">virtual double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-3#acfb81fbb4395e8b49668037088d05fc8">GetFar</a> () const =0</td></tr>
<tr class="separator:acfb81fbb4395e8b49668037088d05fc8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a97e5a2850b656a02cd1b55577dad1c0c"><td class="memItemLeft" align="right" valign="top">virtual double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-3#a97e5a2850b656a02cd1b55577dad1c0c">GetFieldOfView</a> () const =0</td></tr>
<tr class="memdesc:a97e5a2850b656a02cd1b55577dad1c0c"><td class="mdescLeft">&#160;</td><td class="mdescRight">only valid if fov was passed to <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-3#aa1a76a5234397d96a53c423bd9232792">SetProjection()</a>  <a href="classopen3d_1_1visualization_1_1rendering_1_-3#a97e5a2850b656a02cd1b55577dad1c0c">More...</a><br /></td></tr>
<tr class="separator:a97e5a2850b656a02cd1b55577dad1c0c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2d0c5bf8bb67db7c9dfb553b1a279b6d"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-3#a4aa59a62070636c07968846db47d5bbf">FovType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-3#a2d0c5bf8bb67db7c9dfb553b1a279b6d">GetFieldOfViewType</a> () const =0</td></tr>
<tr class="memdesc:a2d0c5bf8bb67db7c9dfb553b1a279b6d"><td class="mdescLeft">&#160;</td><td class="mdescRight">only valid if fov was passed to <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-3#aa1a76a5234397d96a53c423bd9232792">SetProjection()</a>  <a href="classopen3d_1_1visualization_1_1rendering_1_-3#a2d0c5bf8bb67db7c9dfb553b1a279b6d">More...</a><br /></td></tr>
<tr class="separator:a2d0c5bf8bb67db7c9dfb553b1a279b6d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8a082b6ee7c27dc4341c2a9539fb7b8b"><td class="memItemLeft" align="right" valign="top">virtual Eigen::Vector3f&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-3#a8a082b6ee7c27dc4341c2a9539fb7b8b">GetPosition</a> () const =0</td></tr>
<tr class="separator:a8a082b6ee7c27dc4341c2a9539fb7b8b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2a4cbc88592fdb293d254f973babaeb2"><td class="memItemLeft" align="right" valign="top">virtual Eigen::Vector3f&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-3#a2a4cbc88592fdb293d254f973babaeb2">GetForwardVector</a> () const =0</td></tr>
<tr class="separator:a2a4cbc88592fdb293d254f973babaeb2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afb842d4eb019e3d9b4232efbc15e8b90"><td class="memItemLeft" align="right" valign="top">virtual Eigen::Vector3f&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-3#afb842d4eb019e3d9b4232efbc15e8b90">GetLeftVector</a> () const =0</td></tr>
<tr class="separator:afb842d4eb019e3d9b4232efbc15e8b90"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abef165a49dbce6fcb8c578a3a196abed"><td class="memItemLeft" align="right" valign="top">virtual Eigen::Vector3f&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-3#abef165a49dbce6fcb8c578a3a196abed">GetUpVector</a> () const =0</td></tr>
<tr class="separator:abef165a49dbce6fcb8c578a3a196abed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3dbf2aa05497940b9313e866f15e0281"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-3#a53ad55bbc774aca6d8de373394460ee3">Transform</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-3#a3dbf2aa05497940b9313e866f15e0281">GetModelMatrix</a> () const =0</td></tr>
<tr class="separator:a3dbf2aa05497940b9313e866f15e0281"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a87f2b5baf6944f2069d14192439e1776"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-3#a53ad55bbc774aca6d8de373394460ee3">Transform</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-3#a87f2b5baf6944f2069d14192439e1776">GetViewMatrix</a> () const =0</td></tr>
<tr class="separator:a87f2b5baf6944f2069d14192439e1776"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a86c5e8b5b8e3448ad4366286350ab6f3"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-3#a075b912e2726bd75ed15f66a7516dcd5">ProjectionMatrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-3#a86c5e8b5b8e3448ad4366286350ab6f3">GetProjectionMatrix</a> () const =0</td></tr>
<tr class="separator:a86c5e8b5b8e3448ad4366286350ab6f3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd3f6e9101527a2d511195c3f86d7cf7"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-3#a53ad55bbc774aca6d8de373394460ee3">Transform</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-3#acd3f6e9101527a2d511195c3f86d7cf7">GetCullingProjectionMatrix</a> () const =0</td></tr>
<tr class="separator:acd3f6e9101527a2d511195c3f86d7cf7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5cad7c466014ebee5c9951272865b2e1"><td class="memItemLeft" align="right" valign="top">virtual Eigen::Vector3f&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-3#a5cad7c466014ebee5c9951272865b2e1">Unproject</a> (float x, float y, float z, float view_width, float view_height) const =0</td></tr>
<tr class="separator:a5cad7c466014ebee5c9951272865b2e1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aab235c4b191847a33a05236fa2a17a38"><td class="memItemLeft" align="right" valign="top">virtual Eigen::Vector2f&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-3#aab235c4b191847a33a05236fa2a17a38">GetNDC</a> (const Eigen::Vector3f &amp;pt) const =0</td></tr>
<tr class="separator:aab235c4b191847a33a05236fa2a17a38"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6fb471869b979623c1a937e145b935ad"><td class="memItemLeft" align="right" valign="top">virtual double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-3#a6fb471869b979623c1a937e145b935ad">GetViewZ</a> (float z_buffer) const =0</td></tr>
<tr class="separator:a6fb471869b979623c1a937e145b935ad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1790e685a55968368c809ebcd736c706"><td class="memItemLeft" align="right" valign="top">virtual const <a class="el" href="structopen3d_1_1visualization_1_1rendering_1-10">ProjectionInfo</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-3#a1790e685a55968368c809ebcd736c706">GetProjection</a> () const =0</td></tr>
<tr class="separator:a1790e685a55968368c809ebcd736c706"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a162ef884eb5bfe6b70d3f2728880b8c6"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-3#a162ef884eb5bfe6b70d3f2728880b8c6">CopyFrom</a> (const <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-3">Camera</a> *camera)=0</td></tr>
<tr class="separator:a162ef884eb5bfe6b70d3f2728880b8c6"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a62231889e310fb81bccfd6b909c55287"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-3#a62231889e310fb81bccfd6b909c55287">SetupCameraAsPinholeCamera</a> (<a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-3">rendering::Camera</a> &amp;camera, const Eigen::Matrix3d &amp;intrinsic, const Eigen::Matrix4d &amp;extrinsic, int intrinsic_width_px, int intrinsic_height_px, const <a class="el" href="classopen3d_1_1geometry_1_1_axis_aligned_bou">geometry::AxisAlignedBoundingBox</a> &amp;scene_bounds)</td></tr>
<tr class="separator:a62231889e310fb81bccfd6b909c55287"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7c0ebcb91d068e2a78d796b5fed5037a"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-3#a7c0ebcb91d068e2a78d796b5fed5037a">CalcNearPlane</a> ()</td></tr>
<tr class="memdesc:a7c0ebcb91d068e2a78d796b5fed5037a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a good value for the near plane.  <a href="classopen3d_1_1visualization_1_1rendering_1_-3#a7c0ebcb91d068e2a78d796b5fed5037a">More...</a><br /></td></tr>
<tr class="separator:a7c0ebcb91d068e2a78d796b5fed5037a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3cc4560fd47e20a13cf246d0e35ac31d"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-3#a3cc4560fd47e20a13cf246d0e35ac31d">CalcFarPlane</a> (const <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-3">rendering::Camera</a> &amp;camera, const <a class="el" href="classopen3d_1_1geometry_1_1_axis_aligned_bou">geometry::AxisAlignedBoundingBox</a> &amp;scene_bounds)</td></tr>
<tr class="separator:a3cc4560fd47e20a13cf246d0e35ac31d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Member Typedef Documentation</h2>
<a id="a075b912e2726bd75ed15f66a7516dcd5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a075b912e2726bd75ed15f66a7516dcd5">&#9670;&nbsp;</a></span>ProjectionMatrix</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-3#a075b912e2726bd75ed15f66a7516dcd5">open3d::visualization::rendering::Camera::ProjectionMatrix</a> =  Eigen::Transform&lt;float, 3, Eigen::Projective&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a53ad55bbc774aca6d8de373394460ee3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a53ad55bbc774aca6d8de373394460ee3">&#9670;&nbsp;</a></span>Transform</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-3#a53ad55bbc774aca6d8de373394460ee3">open3d::visualization::rendering::Camera::Transform</a> =  Eigen::Transform&lt;float, 3, Eigen::Affine&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Enumeration Documentation</h2>
<a id="a4aa59a62070636c07968846db47d5bbf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4aa59a62070636c07968846db47d5bbf">&#9670;&nbsp;</a></span>FovType</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-3#a4aa59a62070636c07968846db47d5bbf">open3d::visualization::rendering::Camera::FovType</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a4aa59a62070636c07968846db47d5bbfa06ce2a25e5d12c166a36f654dbea6012"></a>Vertical&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a4aa59a62070636c07968846db47d5bbfac1b5fa03ecdb95d4a45dd1c40b02527f"></a>Horizontal&#160;</td><td class="fielddoc"></td></tr>
</table>

</div>
</div>
<a id="a8fddaae1c336f0b79e47955a128675f3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8fddaae1c336f0b79e47955a128675f3">&#9670;&nbsp;</a></span>Projection</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-3#a8fddaae1c336f0b79e47955a128675f3">open3d::visualization::rendering::Camera::Projection</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a8fddaae1c336f0b79e47955a128675f3aa80420eef88d11f77532f1b9cb467fa3"></a>Perspective&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a8fddaae1c336f0b79e47955a128675f3a170d5dfdfd387d456a0749b4a8e1524f"></a>Ortho&#160;</td><td class="fielddoc"></td></tr>
</table>

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a43b00bd10216d6c3cf859ab08c72761a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a43b00bd10216d6c3cf859ab08c72761a">&#9670;&nbsp;</a></span>~Camera()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual open3d::visualization::rendering::Camera::~Camera </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a3cc4560fd47e20a13cf246d0e35ac31d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3cc4560fd47e20a13cf246d0e35ac31d">&#9670;&nbsp;</a></span>CalcFarPlane()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float open3d::visualization::rendering::Camera::CalcFarPlane </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-3">rendering::Camera</a> &amp;&#160;</td>
          <td class="paramname"><em>camera</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1geometry_1_1_axis_aligned_bou">geometry::AxisAlignedBoundingBox</a> &amp;&#160;</td>
          <td class="paramname"><em>scene_bounds</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Returns a value for the far plane that ensures that the entire bounds provided will not be clipped. </p>

</div>
</div>
<a id="a7c0ebcb91d068e2a78d796b5fed5037a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7c0ebcb91d068e2a78d796b5fed5037a">&#9670;&nbsp;</a></span>CalcNearPlane()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float open3d::visualization::rendering::Camera::CalcNearPlane </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns a good value for the near plane. </p>

</div>
</div>
<a id="a162ef884eb5bfe6b70d3f2728880b8c6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a162ef884eb5bfe6b70d3f2728880b8c6">&#9670;&nbsp;</a></span>CopyFrom()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void open3d::visualization::rendering::Camera::CopyFrom </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-3">Camera</a> *&#160;</td>
          <td class="paramname"><em>camera</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-7#abe52ae52b5c8e7608385061a92a04901">open3d::visualization::rendering::FilamentCamera</a>.</p>

</div>
</div>
<a id="a87dac843c461e283f7797a857c1ccdfe"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a87dac843c461e283f7797a857c1ccdfe">&#9670;&nbsp;</a></span>FromExtrinsics()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::rendering::Camera::FromExtrinsics </td>
          <td>(</td>
          <td class="paramtype">const Eigen::Matrix4d &amp;&#160;</td>
          <td class="paramname"><em>extrinsics</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="acd3f6e9101527a2d511195c3f86d7cf7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acd3f6e9101527a2d511195c3f86d7cf7">&#9670;&nbsp;</a></span>GetCullingProjectionMatrix()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-3#a53ad55bbc774aca6d8de373394460ee3">Transform</a> open3d::visualization::rendering::Camera::GetCullingProjectionMatrix </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-7#a2a5ad34f8516c68cfea3e298406851a9">open3d::visualization::rendering::FilamentCamera</a>.</p>

</div>
</div>
<a id="acfb81fbb4395e8b49668037088d05fc8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acfb81fbb4395e8b49668037088d05fc8">&#9670;&nbsp;</a></span>GetFar()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual double open3d::visualization::rendering::Camera::GetFar </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-7#a1e9d970468d5d597b0166df2457b7c37">open3d::visualization::rendering::FilamentCamera</a>.</p>

</div>
</div>
<a id="a97e5a2850b656a02cd1b55577dad1c0c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a97e5a2850b656a02cd1b55577dad1c0c">&#9670;&nbsp;</a></span>GetFieldOfView()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual double open3d::visualization::rendering::Camera::GetFieldOfView </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>only valid if fov was passed to <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-3#aa1a76a5234397d96a53c423bd9232792">SetProjection()</a> </p>

<p>Implemented in <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-7#a2a36a01aca56250b827358453525245f">open3d::visualization::rendering::FilamentCamera</a>.</p>

</div>
</div>
<a id="a2d0c5bf8bb67db7c9dfb553b1a279b6d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2d0c5bf8bb67db7c9dfb553b1a279b6d">&#9670;&nbsp;</a></span>GetFieldOfViewType()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-3#a4aa59a62070636c07968846db47d5bbf">FovType</a> open3d::visualization::rendering::Camera::GetFieldOfViewType </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>only valid if fov was passed to <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-3#aa1a76a5234397d96a53c423bd9232792">SetProjection()</a> </p>

<p>Implemented in <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-7#af47c022d03d123019731185f794b0512">open3d::visualization::rendering::FilamentCamera</a>.</p>

</div>
</div>
<a id="a2a4cbc88592fdb293d254f973babaeb2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2a4cbc88592fdb293d254f973babaeb2">&#9670;&nbsp;</a></span>GetForwardVector()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual Eigen::Vector3f open3d::visualization::rendering::Camera::GetForwardVector </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-7#a80675d24af3f54744ea8355862224fc4">open3d::visualization::rendering::FilamentCamera</a>.</p>

</div>
</div>
<a id="afb842d4eb019e3d9b4232efbc15e8b90"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afb842d4eb019e3d9b4232efbc15e8b90">&#9670;&nbsp;</a></span>GetLeftVector()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual Eigen::Vector3f open3d::visualization::rendering::Camera::GetLeftVector </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-7#acf20c4fc994dad5ccadac111cef87562">open3d::visualization::rendering::FilamentCamera</a>.</p>

</div>
</div>
<a id="a3dbf2aa05497940b9313e866f15e0281"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3dbf2aa05497940b9313e866f15e0281">&#9670;&nbsp;</a></span>GetModelMatrix()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-3#a53ad55bbc774aca6d8de373394460ee3">Transform</a> open3d::visualization::rendering::Camera::GetModelMatrix </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-7#ad5eda5e675b085f48d0b10f6f0be0b46">open3d::visualization::rendering::FilamentCamera</a>.</p>

</div>
</div>
<a id="aab235c4b191847a33a05236fa2a17a38"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aab235c4b191847a33a05236fa2a17a38">&#9670;&nbsp;</a></span>GetNDC()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual Eigen::Vector2f open3d::visualization::rendering::Camera::GetNDC </td>
          <td>(</td>
          <td class="paramtype">const Eigen::Vector3f &amp;&#160;</td>
          <td class="paramname"><em>pt</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-7#a90b94609aec4ae8c637ac6b065d8d56c">open3d::visualization::rendering::FilamentCamera</a>.</p>

</div>
</div>
<a id="a9355147051b826dbfdf55931725046b9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9355147051b826dbfdf55931725046b9">&#9670;&nbsp;</a></span>GetNear()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual double open3d::visualization::rendering::Camera::GetNear </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-7#ae864279c5c5fedc41dc3853a88b9c82d">open3d::visualization::rendering::FilamentCamera</a>.</p>

</div>
</div>
<a id="a8a082b6ee7c27dc4341c2a9539fb7b8b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8a082b6ee7c27dc4341c2a9539fb7b8b">&#9670;&nbsp;</a></span>GetPosition()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual Eigen::Vector3f open3d::visualization::rendering::Camera::GetPosition </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-7#a9f6ff77a5714377187d9cc3dd5f1cafe">open3d::visualization::rendering::FilamentCamera</a>.</p>

</div>
</div>
<a id="a1790e685a55968368c809ebcd736c706"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1790e685a55968368c809ebcd736c706">&#9670;&nbsp;</a></span>GetProjection()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const <a class="el" href="structopen3d_1_1visualization_1_1rendering_1-10">ProjectionInfo</a>&amp; open3d::visualization::rendering::Camera::GetProjection </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-7#ad4189f2a06694ef0ecf115ccc08a4468">open3d::visualization::rendering::FilamentCamera</a>.</p>

</div>
</div>
<a id="a86c5e8b5b8e3448ad4366286350ab6f3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a86c5e8b5b8e3448ad4366286350ab6f3">&#9670;&nbsp;</a></span>GetProjectionMatrix()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-3#a075b912e2726bd75ed15f66a7516dcd5">ProjectionMatrix</a> open3d::visualization::rendering::Camera::GetProjectionMatrix </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-7#a21892b5784077d62dd27b226a72efd75">open3d::visualization::rendering::FilamentCamera</a>.</p>

</div>
</div>
<a id="abef165a49dbce6fcb8c578a3a196abed"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abef165a49dbce6fcb8c578a3a196abed">&#9670;&nbsp;</a></span>GetUpVector()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual Eigen::Vector3f open3d::visualization::rendering::Camera::GetUpVector </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-7#a74e1e6dcf66521e5992cea101aebf68a">open3d::visualization::rendering::FilamentCamera</a>.</p>

</div>
</div>
<a id="a87f2b5baf6944f2069d14192439e1776"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a87f2b5baf6944f2069d14192439e1776">&#9670;&nbsp;</a></span>GetViewMatrix()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-3#a53ad55bbc774aca6d8de373394460ee3">Transform</a> open3d::visualization::rendering::Camera::GetViewMatrix </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-7#a2edbcc1d3f2826b68a87b9ebcb426e96">open3d::visualization::rendering::FilamentCamera</a>.</p>

</div>
</div>
<a id="a6fb471869b979623c1a937e145b935ad"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6fb471869b979623c1a937e145b935ad">&#9670;&nbsp;</a></span>GetViewZ()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual double open3d::visualization::rendering::Camera::GetViewZ </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>z_buffer</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Returns the view space depth (i.e., distance from camera) for the given Z-buffer value </p>

<p>Implemented in <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-7#a71d8ec760cee84c980accd74bdfdf9f0">open3d::visualization::rendering::FilamentCamera</a>.</p>

</div>
</div>
<a id="a22fef15fb71f3e7102a8052635c603ef"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a22fef15fb71f3e7102a8052635c603ef">&#9670;&nbsp;</a></span>LookAt()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void open3d::visualization::rendering::Camera::LookAt </td>
          <td>(</td>
          <td class="paramtype">const Eigen::Vector3f &amp;&#160;</td>
          <td class="paramname"><em>center</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const Eigen::Vector3f &amp;&#160;</td>
          <td class="paramname"><em>eye</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const Eigen::Vector3f &amp;&#160;</td>
          <td class="paramname"><em>up</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-7#af8643d321436e18acbc732905c0bc369">open3d::visualization::rendering::FilamentCamera</a>.</p>

</div>
</div>
<a id="a7b4844b0e7ae81478e9937d7b6dbecf6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7b4844b0e7ae81478e9937d7b6dbecf6">&#9670;&nbsp;</a></span>SetModelMatrix() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void open3d::visualization::rendering::Camera::SetModelMatrix </td>
          <td>(</td>
          <td class="paramtype">const Eigen::Vector3f &amp;&#160;</td>
          <td class="paramname"><em>forward</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const Eigen::Vector3f &amp;&#160;</td>
          <td class="paramname"><em>left</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const Eigen::Vector3f &amp;&#160;</td>
          <td class="paramname"><em>up</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-7#a575cd379c190351ad87371708980022f">open3d::visualization::rendering::FilamentCamera</a>.</p>

</div>
</div>
<a id="af86b3737996fe2e57bbb75dda3a48fdf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af86b3737996fe2e57bbb75dda3a48fdf">&#9670;&nbsp;</a></span>SetModelMatrix() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void open3d::visualization::rendering::Camera::SetModelMatrix </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-3#a53ad55bbc774aca6d8de373394460ee3">Transform</a> &amp;&#160;</td>
          <td class="paramname"><em>view</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-7#a84bca9e214ea1771d02ce8d53d557362">open3d::visualization::rendering::FilamentCamera</a>.</p>

</div>
</div>
<a id="a74f1f79e0167da3a44b874054c3c9043"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a74f1f79e0167da3a44b874054c3c9043">&#9670;&nbsp;</a></span>SetProjection() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void open3d::visualization::rendering::Camera::SetProjection </td>
          <td>(</td>
          <td class="paramtype">const Eigen::Matrix3d &amp;&#160;</td>
          <td class="paramname"><em>intrinsics</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>near</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>far</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>width</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>height</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-7#af39a9ae8df49b9bcef11b5ed7c68fca1">open3d::visualization::rendering::FilamentCamera</a>.</p>

</div>
</div>
<a id="aa1a76a5234397d96a53c423bd9232792"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa1a76a5234397d96a53c423bd9232792">&#9670;&nbsp;</a></span>SetProjection() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void open3d::visualization::rendering::Camera::SetProjection </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>fov</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>aspect</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>near</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>far</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-3#a4aa59a62070636c07968846db47d5bbf">FovType</a>&#160;</td>
          <td class="paramname"><em>fov_type</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-7#a775a008c5b302dd8b8795a186c84f1df">open3d::visualization::rendering::FilamentCamera</a>.</p>

</div>
</div>
<a id="ac8200f4d3119b28c1974615b85296fba"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac8200f4d3119b28c1974615b85296fba">&#9670;&nbsp;</a></span>SetProjection() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void open3d::visualization::rendering::Camera::SetProjection </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-3#a8fddaae1c336f0b79e47955a128675f3">Projection</a>&#160;</td>
          <td class="paramname"><em>projection</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>left</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>right</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>bottom</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>top</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>near</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>far</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Sets the projection matrix from a frustum defined by six planes.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">projection</td><td>type of <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-3#a8fddaae1c336f0b79e47955a128675f3">Projection</a> to use.</td></tr>
    <tr><td class="paramname">left</td><td>distance in world units from the camera to the left plane, at the near plane.</td></tr>
    <tr><td class="paramname">right</td><td>distance in world units from the camera to the right plane, at the near plane.</td></tr>
    <tr><td class="paramname">bottom</td><td>distance in world units from the camera to the bottom plane, at the near plane.</td></tr>
    <tr><td class="paramname">top</td><td>distance in world units from the camera to the top plane, at the near plane.</td></tr>
    <tr><td class="paramname">near</td><td>distance in world units from the camera to the near plane. The near plane's</td></tr>
    <tr><td class="paramname">far</td><td>distance in world units from the camera to the far plane. The far plane's </td></tr>
  </table>
  </dd>
</dl>

<p>Implemented in <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-7#a2a30970107bcce2a8b3321b3ad34487a">open3d::visualization::rendering::FilamentCamera</a>.</p>

</div>
</div>
<a id="a62231889e310fb81bccfd6b909c55287"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a62231889e310fb81bccfd6b909c55287">&#9670;&nbsp;</a></span>SetupCameraAsPinholeCamera()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::rendering::Camera::SetupCameraAsPinholeCamera </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-3">rendering::Camera</a> &amp;&#160;</td>
          <td class="paramname"><em>camera</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const Eigen::Matrix3d &amp;&#160;</td>
          <td class="paramname"><em>intrinsic</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const Eigen::Matrix4d &amp;&#160;</td>
          <td class="paramname"><em>extrinsic</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>intrinsic_width_px</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>intrinsic_height_px</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1geometry_1_1_axis_aligned_bou">geometry::AxisAlignedBoundingBox</a> &amp;&#160;</td>
          <td class="paramname"><em>scene_bounds</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Convenience function for configuring a camera as a pinhole camera. Configures the projection using the intrinsics and bounds, and the model matrix using the extrinsic matrix. Equivalent to calling <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-3#aa1a76a5234397d96a53c423bd9232792">SetProjection()</a> and <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-3#a87dac843c461e283f7797a857c1ccdfe">FromExtrinsics()</a>. </p>

</div>
</div>
<a id="a5cad7c466014ebee5c9951272865b2e1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5cad7c466014ebee5c9951272865b2e1">&#9670;&nbsp;</a></span>Unproject()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual Eigen::Vector3f open3d::visualization::rendering::Camera::Unproject </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>z</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>view_width</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>view_height</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Returns world space coordinates given an x,y position in screen coordinates relative to upper left, the screen dimensions, and z is the depth value (0.0 - 1.0) </p>

<p>Implemented in <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-7#a44fbf6cc1f043c3cda39bc0e25fb2e36">open3d::visualization::rendering::FilamentCamera</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/runner/work/Open3D/Open3D/cpp/open3d/visualization/rendering/<a class="el" href="_camera_8h_source.html">Camera.h (9238339 (Tue Mar 14 18:49:09 2023 -0700))</a></li>
<li>/home/runner/work/Open3D/Open3D/cpp/open3d/visualization/rendering/<a class="el" href="_camera_8cpp.html">Camera.cpp (9238339 (Tue Mar 14 18:49:09 2023 -0700))</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1
</small></address>
</body>

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/classopen3d_1_1visualization_1_1rendering_1_1_camera.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 11:01:38 GMT -->
</html>
