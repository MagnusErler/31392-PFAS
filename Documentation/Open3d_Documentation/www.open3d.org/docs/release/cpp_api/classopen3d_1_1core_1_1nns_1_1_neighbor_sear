<!-- HTML header for doxygen 1.8.20-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/classopen3d_1_1core_1_1nns_1_1_neighbor_search_allocator.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 10:59:56 GMT -->
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Open3D (C++ API): open3d::core::nns::NeighborSearchAllocator&lt; T, TIndex &gt; Class Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js", "TeX/AMSmath.html", "TeX/AMSsymbols.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="../../../../cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-3TQPKGV6Z3"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());
  gtag('config', 'G-3TQPKGV6Z3');
</script>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="open3d_logo.ico"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Open3D (C++ API)
   &#160;<span id="projectnumber">0.17.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.html');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.html','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceopen3d.html">open3d</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1core.html">core</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1core_1_1nns.html">nns</a></li><li class="navelem"><a class="el" href="classopen3d_1_1core_1_1nns_1_1_neighbor_sear">NeighborSearchAllocator</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">open3d::core::nns::NeighborSearchAllocator&lt; T, TIndex &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="core_2nns_2_neighbor_search_allocator_8h_sou">NeighborSearchAllocator.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ac6cde304ae8f6afe56c97a06f73a4298"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1nns_1_1_neighbor_sear#ac6cde304ae8f6afe56c97a06f73a4298">NeighborSearchAllocator</a> (<a class="el" href="classopen3d_1_1core_1_1_device.html">Device</a> device)</td></tr>
<tr class="separator:ac6cde304ae8f6afe56c97a06f73a4298"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6dbfba44c31be4871ba1d3a6bc7634a8"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1nns_1_1_neighbor_sear#a6dbfba44c31be4871ba1d3a6bc7634a8">AllocIndices</a> (TIndex **ptr, size_t num)</td></tr>
<tr class="separator:a6dbfba44c31be4871ba1d3a6bc7634a8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aee6b336c7c06aa7b18057a08cc79c563"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1nns_1_1_neighbor_sear#aee6b336c7c06aa7b18057a08cc79c563">AllocIndices</a> (TIndex **ptr, size_t num, TIndex value)</td></tr>
<tr class="separator:aee6b336c7c06aa7b18057a08cc79c563"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a166383acc27a45f0e28eb8e9beb5a6a7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1nns_1_1_neighbor_sear#a166383acc27a45f0e28eb8e9beb5a6a7">AllocDistances</a> (T **ptr, size_t num)</td></tr>
<tr class="separator:a166383acc27a45f0e28eb8e9beb5a6a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4ecf7e56cfca1331694a225586c1808b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1nns_1_1_neighbor_sear#a4ecf7e56cfca1331694a225586c1808b">AllocDistances</a> (T **ptr, size_t num, T value)</td></tr>
<tr class="separator:a4ecf7e56cfca1331694a225586c1808b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa4b7561bfad453458d3a983adc87ac8c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1nns_1_1_neighbor_sear#aa4b7561bfad453458d3a983adc87ac8c">AllocCounts</a> (TIndex **ptr, size_t num)</td></tr>
<tr class="separator:aa4b7561bfad453458d3a983adc87ac8c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0cc4b1b6426565571a87c20f8b73296f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1nns_1_1_neighbor_sear#a0cc4b1b6426565571a87c20f8b73296f">AllocCounts</a> (TIndex **ptr, size_t num, TIndex value)</td></tr>
<tr class="separator:a0cc4b1b6426565571a87c20f8b73296f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a336c81fd37eb8da23caaeb5ad5836e94"><td class="memItemLeft" align="right" valign="top">const TIndex *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1nns_1_1_neighbor_sear#a336c81fd37eb8da23caaeb5ad5836e94">IndicesPtr</a> () const</td></tr>
<tr class="separator:a336c81fd37eb8da23caaeb5ad5836e94"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1660cd0437c9e3a4cbd5a7b7267c82b5"><td class="memItemLeft" align="right" valign="top">const T *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1nns_1_1_neighbor_sear#a1660cd0437c9e3a4cbd5a7b7267c82b5">DistancesPtr</a> () const</td></tr>
<tr class="separator:a1660cd0437c9e3a4cbd5a7b7267c82b5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adb8f73275b2ad13692fe8910109b8775"><td class="memItemLeft" align="right" valign="top">const TIndex *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1nns_1_1_neighbor_sear#adb8f73275b2ad13692fe8910109b8775">CountsPtr</a> () const</td></tr>
<tr class="separator:adb8f73275b2ad13692fe8910109b8775"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a446efca67cd1298e5894912013f18e64"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1nns_1_1_neighbor_sear#a446efca67cd1298e5894912013f18e64">NeighborsIndex</a> () const</td></tr>
<tr class="separator:a446efca67cd1298e5894912013f18e64"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acee78d3aa583934c45f2c1df24ba1cdc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1nns_1_1_neighbor_sear#acee78d3aa583934c45f2c1df24ba1cdc">NeighborsIndex_</a> ()</td></tr>
<tr class="separator:acee78d3aa583934c45f2c1df24ba1cdc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a637f8357940f8589f05aa9fb9bb8c8f4"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1nns_1_1_neighbor_sear#a637f8357940f8589f05aa9fb9bb8c8f4">NeighborsDistance</a> () const</td></tr>
<tr class="separator:a637f8357940f8589f05aa9fb9bb8c8f4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a70a887c6032028de351896a79cd93ab7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1nns_1_1_neighbor_sear#a70a887c6032028de351896a79cd93ab7">NeighborsDistance_</a> ()</td></tr>
<tr class="separator:a70a887c6032028de351896a79cd93ab7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a807382f83c29c2bf9de88622fedf7fd1"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1nns_1_1_neighbor_sear#a807382f83c29c2bf9de88622fedf7fd1">NeighborsCount</a> () const</td></tr>
<tr class="separator:a807382f83c29c2bf9de88622fedf7fd1"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="ac6cde304ae8f6afe56c97a06f73a4298"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac6cde304ae8f6afe56c97a06f73a4298">&#9670;&nbsp;</a></span>NeighborSearchAllocator()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class TIndex  = int32_t&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1core_1_1nns_1_1_neighbor_sear">open3d::core::nns::NeighborSearchAllocator</a>&lt; T, TIndex &gt;::<a class="el" href="classopen3d_1_1core_1_1nns_1_1_neighbor_sear">NeighborSearchAllocator</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1core_1_1_device.html">Device</a>&#160;</td>
          <td class="paramname"><em>device</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="aa4b7561bfad453458d3a983adc87ac8c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa4b7561bfad453458d3a983adc87ac8c">&#9670;&nbsp;</a></span>AllocCounts() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class TIndex  = int32_t&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classopen3d_1_1core_1_1nns_1_1_neighbor_sear">open3d::core::nns::NeighborSearchAllocator</a>&lt; T, TIndex &gt;::AllocCounts </td>
          <td>(</td>
          <td class="paramtype">TIndex **&#160;</td>
          <td class="paramname"><em>ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>num</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a0cc4b1b6426565571a87c20f8b73296f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0cc4b1b6426565571a87c20f8b73296f">&#9670;&nbsp;</a></span>AllocCounts() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class TIndex  = int32_t&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classopen3d_1_1core_1_1nns_1_1_neighbor_sear">open3d::core::nns::NeighborSearchAllocator</a>&lt; T, TIndex &gt;::AllocCounts </td>
          <td>(</td>
          <td class="paramtype">TIndex **&#160;</td>
          <td class="paramname"><em>ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>num</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">TIndex&#160;</td>
          <td class="paramname"><em>value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a166383acc27a45f0e28eb8e9beb5a6a7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a166383acc27a45f0e28eb8e9beb5a6a7">&#9670;&nbsp;</a></span>AllocDistances() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class TIndex  = int32_t&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classopen3d_1_1core_1_1nns_1_1_neighbor_sear">open3d::core::nns::NeighborSearchAllocator</a>&lt; T, TIndex &gt;::AllocDistances </td>
          <td>(</td>
          <td class="paramtype">T **&#160;</td>
          <td class="paramname"><em>ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>num</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a4ecf7e56cfca1331694a225586c1808b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4ecf7e56cfca1331694a225586c1808b">&#9670;&nbsp;</a></span>AllocDistances() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class TIndex  = int32_t&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classopen3d_1_1core_1_1nns_1_1_neighbor_sear">open3d::core::nns::NeighborSearchAllocator</a>&lt; T, TIndex &gt;::AllocDistances </td>
          <td>(</td>
          <td class="paramtype">T **&#160;</td>
          <td class="paramname"><em>ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>num</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">T&#160;</td>
          <td class="paramname"><em>value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a6dbfba44c31be4871ba1d3a6bc7634a8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6dbfba44c31be4871ba1d3a6bc7634a8">&#9670;&nbsp;</a></span>AllocIndices() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class TIndex  = int32_t&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classopen3d_1_1core_1_1nns_1_1_neighbor_sear">open3d::core::nns::NeighborSearchAllocator</a>&lt; T, TIndex &gt;::AllocIndices </td>
          <td>(</td>
          <td class="paramtype">TIndex **&#160;</td>
          <td class="paramname"><em>ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>num</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aee6b336c7c06aa7b18057a08cc79c563"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aee6b336c7c06aa7b18057a08cc79c563">&#9670;&nbsp;</a></span>AllocIndices() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class TIndex  = int32_t&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classopen3d_1_1core_1_1nns_1_1_neighbor_sear">open3d::core::nns::NeighborSearchAllocator</a>&lt; T, TIndex &gt;::AllocIndices </td>
          <td>(</td>
          <td class="paramtype">TIndex **&#160;</td>
          <td class="paramname"><em>ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>num</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">TIndex&#160;</td>
          <td class="paramname"><em>value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="adb8f73275b2ad13692fe8910109b8775"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adb8f73275b2ad13692fe8910109b8775">&#9670;&nbsp;</a></span>CountsPtr()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class TIndex  = int32_t&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const TIndex* <a class="el" href="classopen3d_1_1core_1_1nns_1_1_neighbor_sear">open3d::core::nns::NeighborSearchAllocator</a>&lt; T, TIndex &gt;::CountsPtr </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a1660cd0437c9e3a4cbd5a7b7267c82b5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1660cd0437c9e3a4cbd5a7b7267c82b5">&#9670;&nbsp;</a></span>DistancesPtr()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class TIndex  = int32_t&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const T* <a class="el" href="classopen3d_1_1core_1_1nns_1_1_neighbor_sear">open3d::core::nns::NeighborSearchAllocator</a>&lt; T, TIndex &gt;::DistancesPtr </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a336c81fd37eb8da23caaeb5ad5836e94"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a336c81fd37eb8da23caaeb5ad5836e94">&#9670;&nbsp;</a></span>IndicesPtr()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class TIndex  = int32_t&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const TIndex* <a class="el" href="classopen3d_1_1core_1_1nns_1_1_neighbor_sear">open3d::core::nns::NeighborSearchAllocator</a>&lt; T, TIndex &gt;::IndicesPtr </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a807382f83c29c2bf9de88622fedf7fd1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a807382f83c29c2bf9de88622fedf7fd1">&#9670;&nbsp;</a></span>NeighborsCount()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class TIndex  = int32_t&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a>&amp; <a class="el" href="classopen3d_1_1core_1_1nns_1_1_neighbor_sear">open3d::core::nns::NeighborSearchAllocator</a>&lt; T, TIndex &gt;::NeighborsCount </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a637f8357940f8589f05aa9fb9bb8c8f4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a637f8357940f8589f05aa9fb9bb8c8f4">&#9670;&nbsp;</a></span>NeighborsDistance()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class TIndex  = int32_t&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a>&amp; <a class="el" href="classopen3d_1_1core_1_1nns_1_1_neighbor_sear">open3d::core::nns::NeighborSearchAllocator</a>&lt; T, TIndex &gt;::NeighborsDistance </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a70a887c6032028de351896a79cd93ab7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a70a887c6032028de351896a79cd93ab7">&#9670;&nbsp;</a></span>NeighborsDistance_()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class TIndex  = int32_t&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a>&amp; <a class="el" href="classopen3d_1_1core_1_1nns_1_1_neighbor_sear">open3d::core::nns::NeighborSearchAllocator</a>&lt; T, TIndex &gt;::NeighborsDistance_ </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a446efca67cd1298e5894912013f18e64"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a446efca67cd1298e5894912013f18e64">&#9670;&nbsp;</a></span>NeighborsIndex()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class TIndex  = int32_t&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a>&amp; <a class="el" href="classopen3d_1_1core_1_1nns_1_1_neighbor_sear">open3d::core::nns::NeighborSearchAllocator</a>&lt; T, TIndex &gt;::NeighborsIndex </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="acee78d3aa583934c45f2c1df24ba1cdc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acee78d3aa583934c45f2c1df24ba1cdc">&#9670;&nbsp;</a></span>NeighborsIndex_()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , class TIndex  = int32_t&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a>&amp; <a class="el" href="classopen3d_1_1core_1_1nns_1_1_neighbor_sear">open3d::core::nns::NeighborSearchAllocator</a>&lt; T, TIndex &gt;::NeighborsIndex_ </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>/home/runner/work/Open3D/Open3D/cpp/open3d/core/nns/<a class="el" href="core_2nns_2_neighbor_search_allocator_8h_sou">NeighborSearchAllocator.h (9238339 (Tue Mar 14 18:49:09 2023 -0700))</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1
</small></address>
</body>

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/classopen3d_1_1core_1_1nns_1_1_neighbor_search_allocator.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 10:59:56 GMT -->
</html>
