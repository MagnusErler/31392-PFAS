<!-- HTML header for doxygen 1.8.20-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/classopen3d_1_1t_1_1io_1_1_real_sense_sensor.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 10:53:39 GMT -->
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Open3D (C++ API): open3d::t::io::RealSenseSensor Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js", "TeX/AMSmath.html", "TeX/AMSsymbols.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="../../../../cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-3TQPKGV6Z3"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());
  gtag('config', 'G-3TQPKGV6Z3');
</script>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="open3d_logo.ico"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Open3D (C++ API)
   &#160;<span id="projectnumber">0.17.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.html');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.html','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceopen3d.html">open3d</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1t.html">t</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1t_1_1io.html">io</a></li><li class="navelem"><a class="el" href="classopen3d_1_1t_1_1io_1_1_real_sense_sensor">RealSenseSensor</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">open3d::t::io::RealSenseSensor Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>RealSense camera discovery, configuration, streaming and recording.  
 <a href="classopen3d_1_1t_1_1io_1_1_real_sense_sensor#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_real_sense_sensor_8h_source.html">RealSenseSensor.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for open3d::t::io::RealSenseSensor:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classopen3d_1_1t_1_1io_1_1_real_sense_sensor-3" usemap="#open3d::t::io::RealSenseSensor_map" alt=""/>
  <map id="open3d::t::io::RealSenseSensor_map" name="open3d::t::io::RealSenseSensor_map">
<area href="classopen3d_1_1t_1_1io_1_1_r_g_b_d_sensor.34" title="Interface class for control of RGBD cameras." alt="open3d::t::io::RGBDSensor" shape="rect" coords="0,0,185,24"/>
  </map>
</div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a4061afcd0c2fccacd1d1d4cbe7d80fa9"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1io_1_1_real_sense_sensor#a4061afcd0c2fccacd1d1d4cbe7d80fa9">RealSenseSensor</a> ()</td></tr>
<tr class="memdesc:a4061afcd0c2fccacd1d1d4cbe7d80fa9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor. Initialize with default settings.  <a href="classopen3d_1_1t_1_1io_1_1_real_sense_sensor#a4061afcd0c2fccacd1d1d4cbe7d80fa9">More...</a><br /></td></tr>
<tr class="separator:a4061afcd0c2fccacd1d1d4cbe7d80fa9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a764c9588c2bc962f94e26976b2d92d16"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1io_1_1_real_sense_sensor#a764c9588c2bc962f94e26976b2d92d16">RealSenseSensor</a> (const <a class="el" href="classopen3d_1_1t_1_1io_1_1_real_sense_sensor">RealSenseSensor</a> &amp;)=delete</td></tr>
<tr class="separator:a764c9588c2bc962f94e26976b2d92d16"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abb14458bfa464ee3ca41cbe9aef4119e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1t_1_1io_1_1_real_sense_sensor">RealSenseSensor</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1io_1_1_real_sense_sensor#abb14458bfa464ee3ca41cbe9aef4119e">operator=</a> (const <a class="el" href="classopen3d_1_1t_1_1io_1_1_real_sense_sensor">RealSenseSensor</a> &amp;)=delete</td></tr>
<tr class="separator:abb14458bfa464ee3ca41cbe9aef4119e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4acaa64b1755f883a6148d6ba08e3b3f"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1io_1_1_real_sense_sensor#a4acaa64b1755f883a6148d6ba08e3b3f">~RealSenseSensor</a> () override</td></tr>
<tr class="separator:a4acaa64b1755f883a6148d6ba08e3b3f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad39f6d1e428340c422f0b7adc8ca4086"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1io_1_1_real_sense_sensor#ad39f6d1e428340c422f0b7adc8ca4086">InitSensor</a> (const <a class="el" href="classopen3d_1_1t_1_1io_1_1_real_sense_sensor-2">RealSenseSensorConfig</a> &amp;sensor_config=<a class="el" href="classopen3d_1_1t_1_1io_1_1_real_sense_sensor-2">RealSenseSensorConfig</a>{}, size_t sensor_index=0, const std::string &amp;filename=&quot;&quot;)</td></tr>
<tr class="separator:ad39f6d1e428340c422f0b7adc8ca4086"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9e8788b86ff9c3aaf3a16000c723989d"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1io_1_1_real_sense_sensor#a9e8788b86ff9c3aaf3a16000c723989d">InitSensor</a> (const <a class="el" href="classopen3d_1_1io_1_1_r_g_b_d_sensor_config">RGBDSensorConfig</a> &amp;sensor_config, size_t sensor_index=0, const std::string &amp;filename=&quot;&quot;) override</td></tr>
<tr class="separator:a9e8788b86ff9c3aaf3a16000c723989d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a98b52888e9d63b5c6d3ae4d124ec127f"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1io_1_1_real_sense_sensor#a98b52888e9d63b5c6d3ae4d124ec127f">StartCapture</a> (bool start_record=false) override</td></tr>
<tr class="separator:a98b52888e9d63b5c6d3ae4d124ec127f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a14dd69b1b28fd79abd51aefd91edbf06"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1io_1_1_real_sense_sensor#a14dd69b1b28fd79abd51aefd91edbf06">PauseRecord</a> () override</td></tr>
<tr class="separator:a14dd69b1b28fd79abd51aefd91edbf06"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2a865e0b4b948ab566c47440edfadc42"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1io_1_1_real_sense_sensor#a2a865e0b4b948ab566c47440edfadc42">ResumeRecord</a> () override</td></tr>
<tr class="separator:a2a865e0b4b948ab566c47440edfadc42"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a49abe7b2863fb15cdf60f76568b2df2a"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_r_g_b_d_ima">geometry::RGBDImage</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1io_1_1_real_sense_sensor#a49abe7b2863fb15cdf60f76568b2df2a">CaptureFrame</a> (bool wait=true, bool align_depth_to_color=true) override</td></tr>
<tr class="separator:a49abe7b2863fb15cdf60f76568b2df2a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa6d2d16ed496b4d07ac1c9a0658248f2"><td class="memItemLeft" align="right" valign="top">virtual uint64_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1io_1_1_real_sense_sensor#aa6d2d16ed496b4d07ac1c9a0658248f2">GetTimestamp</a> () const override</td></tr>
<tr class="separator:aa6d2d16ed496b4d07ac1c9a0658248f2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a148ab87ea17c7e692b53721566744796"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1io_1_1_real_sense_sensor#a148ab87ea17c7e692b53721566744796">StopCapture</a> () override</td></tr>
<tr class="memdesc:a148ab87ea17c7e692b53721566744796"><td class="mdescLeft">&#160;</td><td class="mdescRight">Stop capturing frames.  <a href="classopen3d_1_1t_1_1io_1_1_real_sense_sensor#a148ab87ea17c7e692b53721566744796">More...</a><br /></td></tr>
<tr class="separator:a148ab87ea17c7e692b53721566744796"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8f165572d4f4630c983ad2b20ad902a8"><td class="memItemLeft" align="right" valign="top">virtual const <a class="el" href="classopen3d_1_1t_1_1io_1_1_r_g_b_d_video_met">RGBDVideoMetadata</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1io_1_1_real_sense_sensor#a8f165572d4f4630c983ad2b20ad902a8">GetMetadata</a> () const override</td></tr>
<tr class="memdesc:a8f165572d4f4630c983ad2b20ad902a8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get metadata of the RealSense video capture.  <a href="classopen3d_1_1t_1_1io_1_1_real_sense_sensor#a8f165572d4f4630c983ad2b20ad902a8">More...</a><br /></td></tr>
<tr class="separator:a8f165572d4f4630c983ad2b20ad902a8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac020ba98ba81326bc143f3ef3dfc9c73"><td class="memItemLeft" align="right" valign="top">virtual std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1io_1_1_real_sense_sensor#ac020ba98ba81326bc143f3ef3dfc9c73">GetFilename</a> () const override</td></tr>
<tr class="memdesc:ac020ba98ba81326bc143f3ef3dfc9c73"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get filename being written.  <a href="classopen3d_1_1t_1_1io_1_1_real_sense_sensor#ac020ba98ba81326bc143f3ef3dfc9c73">More...</a><br /></td></tr>
<tr class="separator:ac020ba98ba81326bc143f3ef3dfc9c73"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa146e20fb56cfa080046161d6db7691d"><td class="memItemLeft" align="right" valign="top">virtual const std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1io_1_1_real_sense_sensor#aa146e20fb56cfa080046161d6db7691d">ToString</a> () const</td></tr>
<tr class="memdesc:aa146e20fb56cfa080046161d6db7691d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Text Description.  <a href="classopen3d_1_1t_1_1io_1_1_real_sense_sensor#aa146e20fb56cfa080046161d6db7691d">More...</a><br /></td></tr>
<tr class="separator:aa146e20fb56cfa080046161d6db7691d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classopen3d_1_1t_1_1io_1_1_r_g_b_d_sensor"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classopen3d_1_1t_1_1io_1_1_r_g_b_d_sensor')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classopen3d_1_1t_1_1io_1_1_r_g_b_d_sensor.34">open3d::t::io::RGBDSensor</a></td></tr>
<tr class="memitem:a844297c3b3a25eebfa6df82f1898f38d inherit pub_methods_classopen3d_1_1t_1_1io_1_1_r_g_b_d_sensor"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1io_1_1_r_g_b_d_sensor.34#a844297c3b3a25eebfa6df82f1898f38d">RGBDSensor</a> ()</td></tr>
<tr class="memdesc:a844297c3b3a25eebfa6df82f1898f38d inherit pub_methods_classopen3d_1_1t_1_1io_1_1_r_g_b_d_sensor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor. Initialize with default settings.  <a href="classopen3d_1_1t_1_1io_1_1_r_g_b_d_sensor.34#a844297c3b3a25eebfa6df82f1898f38d">More...</a><br /></td></tr>
<tr class="separator:a844297c3b3a25eebfa6df82f1898f38d inherit pub_methods_classopen3d_1_1t_1_1io_1_1_r_g_b_d_sensor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5eb8a9b51dc9cc54934ea87a30dd22b1 inherit pub_methods_classopen3d_1_1t_1_1io_1_1_r_g_b_d_sensor"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1io_1_1_r_g_b_d_sensor.34#a5eb8a9b51dc9cc54934ea87a30dd22b1">~RGBDSensor</a> ()</td></tr>
<tr class="separator:a5eb8a9b51dc9cc54934ea87a30dd22b1 inherit pub_methods_classopen3d_1_1t_1_1io_1_1_r_g_b_d_sensor"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa146e20fb56cfa080046161d6db7691d inherit pub_methods_classopen3d_1_1t_1_1io_1_1_r_g_b_d_sensor"><td class="memItemLeft" align="right" valign="top">virtual const std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1io_1_1_r_g_b_d_sensor.34#aa146e20fb56cfa080046161d6db7691d">ToString</a> () const</td></tr>
<tr class="memdesc:aa146e20fb56cfa080046161d6db7691d inherit pub_methods_classopen3d_1_1t_1_1io_1_1_r_g_b_d_sensor"><td class="mdescLeft">&#160;</td><td class="mdescRight">Text Description.  <a href="classopen3d_1_1t_1_1io_1_1_r_g_b_d_sensor.34#aa146e20fb56cfa080046161d6db7691d">More...</a><br /></td></tr>
<tr class="separator:aa146e20fb56cfa080046161d6db7691d inherit pub_methods_classopen3d_1_1t_1_1io_1_1_r_g_b_d_sensor"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a7df0af2d90e991b45919350895c5e96d"><td class="memItemLeft" align="right" valign="top">static std::vector&lt; <a class="el" href="structopen3d_1_1t_1_1io_1_1_real_sense_valid">RealSenseValidConfigs</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1io_1_1_real_sense_sensor#a7df0af2d90e991b45919350895c5e96d">EnumerateDevices</a> ()</td></tr>
<tr class="separator:a7df0af2d90e991b45919350895c5e96d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a96ba893423b0967f0ec2c281d4f66a37"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1io_1_1_real_sense_sensor#a96ba893423b0967f0ec2c281d4f66a37">ListDevices</a> ()</td></tr>
<tr class="separator:a96ba893423b0967f0ec2c281d4f66a37"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>RealSense camera discovery, configuration, streaming and recording. </p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a4061afcd0c2fccacd1d1d4cbe7d80fa9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4061afcd0c2fccacd1d1d4cbe7d80fa9">&#9670;&nbsp;</a></span>RealSenseSensor() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">open3d::t::io::RealSenseSensor::RealSenseSensor </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Default constructor. Initialize with default settings. </p>

</div>
</div>
<a id="a764c9588c2bc962f94e26976b2d92d16"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a764c9588c2bc962f94e26976b2d92d16">&#9670;&nbsp;</a></span>RealSenseSensor() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">open3d::t::io::RealSenseSensor::RealSenseSensor </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1t_1_1io_1_1_real_sense_sensor">RealSenseSensor</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a4acaa64b1755f883a6148d6ba08e3b3f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4acaa64b1755f883a6148d6ba08e3b3f">&#9670;&nbsp;</a></span>~RealSenseSensor()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">open3d::t::io::RealSenseSensor::~RealSenseSensor </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a49abe7b2863fb15cdf60f76568b2df2a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a49abe7b2863fb15cdf60f76568b2df2a">&#9670;&nbsp;</a></span>CaptureFrame()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_r_g_b_d_ima">geometry::RGBDImage</a> open3d::t::io::RealSenseSensor::CaptureFrame </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>wait</em> = <code>true</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>align_depth_to_color</em> = <code>true</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Acquire the next synchronized RGBD frameset from the camera.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">wait</td><td>If true wait for the next frame set, else return immediately with an empty RGBDImage if it is not yet available. </td></tr>
    <tr><td class="paramname">align_depth_to_color</td><td>Enable aligning WFOV depth image to the color image in visualizer. </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classopen3d_1_1t_1_1io_1_1_r_g_b_d_sensor.34#a351119a6092c88425caaadfb88357f5e">open3d::t::io::RGBDSensor</a>.</p>

</div>
</div>
<a id="a7df0af2d90e991b45919350895c5e96d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7df0af2d90e991b45919350895c5e96d">&#9670;&nbsp;</a></span>EnumerateDevices()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt; <a class="el" href="structopen3d_1_1t_1_1io_1_1_real_sense_valid">RealSenseValidConfigs</a> &gt; open3d::t::io::RealSenseSensor::EnumerateDevices </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Query all connected RealSense cameras for their capabilities.</p>
<dl class="section return"><dt>Returns</dt><dd>A list of devices and their supported capabilities. </dd></dl>

</div>
</div>
<a id="ac020ba98ba81326bc143f3ef3dfc9c73"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac020ba98ba81326bc143f3ef3dfc9c73">&#9670;&nbsp;</a></span>GetFilename()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual std::string open3d::t::io::RealSenseSensor::GetFilename </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get filename being written. </p>

<p>Implements <a class="el" href="classopen3d_1_1t_1_1io_1_1_r_g_b_d_sensor.34#a5739cca0b50068c3e0bfde936d4ca9ad">open3d::t::io::RGBDSensor</a>.</p>

</div>
</div>
<a id="a8f165572d4f4630c983ad2b20ad902a8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8f165572d4f4630c983ad2b20ad902a8">&#9670;&nbsp;</a></span>GetMetadata()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const <a class="el" href="classopen3d_1_1t_1_1io_1_1_r_g_b_d_video_met">RGBDVideoMetadata</a>&amp; open3d::t::io::RealSenseSensor::GetMetadata </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get metadata of the RealSense video capture. </p>

<p>Implements <a class="el" href="classopen3d_1_1t_1_1io_1_1_r_g_b_d_sensor.34#aa78520457c00691cda623091d614e106">open3d::t::io::RGBDSensor</a>.</p>

</div>
</div>
<a id="aa6d2d16ed496b4d07ac1c9a0658248f2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa6d2d16ed496b4d07ac1c9a0658248f2">&#9670;&nbsp;</a></span>GetTimestamp()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual uint64_t open3d::t::io::RealSenseSensor::GetTimestamp </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Get current timestamp (in us)</p>
<p>See <a href="https://intelrealsense.github.io/librealsense/doxygen/classrs2_1_1frame.html#a25f71d45193f2f4d77960320276b83f1">https://intelrealsense.github.io/librealsense/doxygen/classrs2_1_1frame.html#a25f71d45193f2f4d77960320276b83f1</a> for more details. </p>

<p>Implements <a class="el" href="classopen3d_1_1t_1_1io_1_1_r_g_b_d_sensor.34#a7f83011f67bead35e112d9a0a2507981">open3d::t::io::RGBDSensor</a>.</p>

</div>
</div>
<a id="ad39f6d1e428340c422f0b7adc8ca4086"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad39f6d1e428340c422f0b7adc8ca4086">&#9670;&nbsp;</a></span>InitSensor() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool open3d::t::io::RealSenseSensor::InitSensor </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1t_1_1io_1_1_real_sense_sensor-2">RealSenseSensorConfig</a> &amp;&#160;</td>
          <td class="paramname"><em>sensor_config</em> = <code><a class="el" href="classopen3d_1_1t_1_1io_1_1_real_sense_sensor-2">RealSenseSensorConfig</a>{}</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>sensor_index</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>filename</em> = <code>&quot;&quot;</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Initialize sensor (optional).</p>
<p>Configure sensor with custom settings. If this is skipped, default settings will be used. You can enable recording to a bag file by specifying a filename. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">sensor_config</td><td>Camera configuration, such as resolution and framerate. A serial number can be entered here to connect to a specific camera. </td></tr>
    <tr><td class="paramname">sensor_index</td><td>Connect to a camera at this position in the enumeration of RealSense cameras that are currently connected. Use <a class="el" href="classopen3d_1_1t_1_1io_1_1_real_sense_sensor#a7df0af2d90e991b45919350895c5e96d">EnumerateDevices()</a> or <a class="el" href="classopen3d_1_1t_1_1io_1_1_real_sense_sensor#a96ba893423b0967f0ec2c281d4f66a37">ListDevices()</a> to obtain a list of connected cameras. This is ignored if <code>sensor_config</code> contains a serial entry. </td></tr>
    <tr><td class="paramname">filename</td><td>Save frames to a bag file </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>true if a camera was found and initialized with the given settings, else false. </dd></dl>

</div>
</div>
<a id="a9e8788b86ff9c3aaf3a16000c723989d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9e8788b86ff9c3aaf3a16000c723989d">&#9670;&nbsp;</a></span>InitSensor() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool open3d::t::io::RealSenseSensor::InitSensor </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1io_1_1_r_g_b_d_sensor_config">RGBDSensorConfig</a> &amp;&#160;</td>
          <td class="paramname"><em>sensor_config</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>sensor_index</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>filename</em> = <code>&quot;&quot;</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Initialize sensor (optional).</p>
<p>Configure sensor with custom settings. If this is skipped, default settings will be used. You can enable recording to a file by specifying a filename. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">sensor_config</td><td>Camera configuration, such as resolution and framerate. A serial number can be entered here to connect to a specific camera. </td></tr>
    <tr><td class="paramname">sensor_index</td><td>Connect to a camera at this position in the enumeration of RealSense cameras that are currently connected. Use <a class="el" href="classopen3d_1_1t_1_1io_1_1_real_sense_sensor#a7df0af2d90e991b45919350895c5e96d">EnumerateDevices()</a> or <a class="el" href="classopen3d_1_1t_1_1io_1_1_real_sense_sensor#a96ba893423b0967f0ec2c281d4f66a37">ListDevices()</a> to obtain a list of connected cameras and their capabilities. This is ignored if <code>sensor_config</code> contains a "serial" entry. </td></tr>
    <tr><td class="paramname">filename</td><td>Save frames to this file. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>true if a camera was found and initialized with the given settings, else false. </dd></dl>

<p>Implements <a class="el" href="classopen3d_1_1t_1_1io_1_1_r_g_b_d_sensor.34#a627beb960a4a829cae79682842d0a53f">open3d::t::io::RGBDSensor</a>.</p>

</div>
</div>
<a id="a96ba893423b0967f0ec2c281d4f66a37"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a96ba893423b0967f0ec2c281d4f66a37">&#9670;&nbsp;</a></span>ListDevices()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool open3d::t::io::RealSenseSensor::ListDevices </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>List all RealSense cameras connected to the system along with their capabilities. Use this listing to select an appropriate configuration for a camera. </p>

</div>
</div>
<a id="abb14458bfa464ee3ca41cbe9aef4119e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abb14458bfa464ee3ca41cbe9aef4119e">&#9670;&nbsp;</a></span>operator=()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1t_1_1io_1_1_real_sense_sensor">RealSenseSensor</a>&amp; open3d::t::io::RealSenseSensor::operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1t_1_1io_1_1_real_sense_sensor">RealSenseSensor</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a14dd69b1b28fd79abd51aefd91edbf06"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a14dd69b1b28fd79abd51aefd91edbf06">&#9670;&nbsp;</a></span>PauseRecord()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::t::io::RealSenseSensor::PauseRecord </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Pause recording to the bag file.</p>
<dl class="section warning"><dt>Warning</dt><dd>If this is called immediately after <code><a class="el" href="classopen3d_1_1t_1_1io_1_1_real_sense_sensor#a98b52888e9d63b5c6d3ae4d124ec127f">StartCapture()</a></code>, the bag file may have an incorrect end time. </dd></dl>

<p>Implements <a class="el" href="classopen3d_1_1t_1_1io_1_1_r_g_b_d_sensor.34#a650adfe4e4eba4efd6376def3471270c">open3d::t::io::RGBDSensor</a>.</p>

</div>
</div>
<a id="a2a865e0b4b948ab566c47440edfadc42"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2a865e0b4b948ab566c47440edfadc42">&#9670;&nbsp;</a></span>ResumeRecord()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::t::io::RealSenseSensor::ResumeRecord </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Resume recording to the bag file. The file will contain discontinuous segments. </p>

<p>Implements <a class="el" href="classopen3d_1_1t_1_1io_1_1_r_g_b_d_sensor.34#a5539c7376a2771e41318f9a3c4010782">open3d::t::io::RGBDSensor</a>.</p>

</div>
</div>
<a id="a98b52888e9d63b5c6d3ae4d124ec127f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a98b52888e9d63b5c6d3ae4d124ec127f">&#9670;&nbsp;</a></span>StartCapture()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool open3d::t::io::RealSenseSensor::StartCapture </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>start_record</em> = <code>false</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Start capturing synchronized depth and color frames. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">start_record</td><td>start recording to the specified bag file as well. </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classopen3d_1_1t_1_1io_1_1_r_g_b_d_sensor.34#aed36bb194b86993ccb6d69984b820865">open3d::t::io::RGBDSensor</a>.</p>

</div>
</div>
<a id="a148ab87ea17c7e692b53721566744796"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a148ab87ea17c7e692b53721566744796">&#9670;&nbsp;</a></span>StopCapture()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::t::io::RealSenseSensor::StopCapture </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Stop capturing frames. </p>

<p>Implements <a class="el" href="classopen3d_1_1t_1_1io_1_1_r_g_b_d_sensor.34#a42c8d2f3ed8500e2e85586ff77996463">open3d::t::io::RGBDSensor</a>.</p>

</div>
</div>
<a id="aa146e20fb56cfa080046161d6db7691d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa146e20fb56cfa080046161d6db7691d">&#9670;&nbsp;</a></span>ToString()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const std::string open3d::t::io::RGBDSensor::ToString</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Text Description. </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/runner/work/Open3D/Open3D/cpp/open3d/t/io/sensor/realsense/<a class="el" href="_real_sense_sensor_8h_source.html">RealSenseSensor.h (9238339 (Tue Mar 14 18:49:09 2023 -0700))</a></li>
<li>/home/runner/work/Open3D/Open3D/cpp/open3d/t/io/sensor/realsense/<a class="el" href="_real_sense_sensor_8cpp.html">RealSenseSensor.cpp (9238339 (Tue Mar 14 18:49:09 2023 -0700))</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1
</small></address>
</body>

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/classopen3d_1_1t_1_1io_1_1_real_sense_sensor.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 10:53:40 GMT -->
</html>
