<!-- HTML header for doxygen 1.8.20-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/classopen3d_1_1visualization_1_1gui_1_1_widget_proxy.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 11:01:36 GMT -->
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Open3D (C++ API): open3d::visualization::gui::WidgetProxy Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js", "TeX/AMSmath.html", "TeX/AMSsymbols.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="../../../../cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-3TQPKGV6Z3"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());
  gtag('config', 'G-3TQPKGV6Z3');
</script>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="open3d_logo.ico"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Open3D (C++ API)
   &#160;<span id="projectnumber">0.17.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.html');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.html','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceopen3d.html">open3d</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1visualization.html">visualization</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1visualization_1_1gui.46a">gui</a></li><li class="navelem"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg-2">WidgetProxy</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">open3d::visualization::gui::WidgetProxy Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg">Widget</a> container to delegate any widget dynamically.  
 <a href="classopen3d_1_1visualization_1_1gui_1_1_widg-2#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_widget_proxy_8h_source.html">WidgetProxy.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for open3d::visualization::gui::WidgetProxy:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classopen3d_1_1visualization_1_1gui_1_1_widg-5" usemap="#open3d::visualization::gui::WidgetProxy_map" alt=""/>
  <map id="open3d::visualization::gui::WidgetProxy_map" name="open3d::visualization::gui::WidgetProxy_map">
<area href="classopen3d_1_1visualization_1_1gui_1_1_widg" alt="open3d::visualization::gui::Widget" shape="rect" coords="0,0,229,24"/>
<area href="classopen3d_1_1visualization_1_1gui_1_1_widg-3" title="WidgetStack manages multiple widgets in a stack." alt="open3d::visualization::gui::WidgetStack" shape="rect" coords="0,112,229,136"/>
  </map>
</div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structopen3d_1_1visualization_1_1gui_1_1_wid-3">Impl</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a819aabe5993826cef4d4ff08cc4cf435"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg-2#a819aabe5993826cef4d4ff08cc4cf435">WidgetProxy</a> ()</td></tr>
<tr class="separator:a819aabe5993826cef4d4ff08cc4cf435"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aff167b908945e0e1e0021594ef07a804"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg-2#aff167b908945e0e1e0021594ef07a804">~WidgetProxy</a> () override</td></tr>
<tr class="separator:aff167b908945e0e1e0021594ef07a804"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa242d5422c326e86447fccd18e5e3166"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg-2#aa242d5422c326e86447fccd18e5e3166">AddChild</a> (std::shared_ptr&lt; <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg">Widget</a> &gt; child) override</td></tr>
<tr class="separator:aa242d5422c326e86447fccd18e5e3166"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3909a479caf6447bdad3985ad210e76a"><td class="memItemLeft" align="right" valign="top">const std::vector&lt; std::shared_ptr&lt; <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg">Widget</a> &gt; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg-2#a3909a479caf6447bdad3985ad210e76a">GetChildren</a> () const override</td></tr>
<tr class="separator:a3909a479caf6447bdad3985ad210e76a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2fe1a57d65f840301bc7aa52017ab463"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg-2#a2fe1a57d65f840301bc7aa52017ab463">SetWidget</a> (std::shared_ptr&lt; <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg">Widget</a> &gt; widget)</td></tr>
<tr class="memdesc:a2fe1a57d65f840301bc7aa52017ab463"><td class="mdescLeft">&#160;</td><td class="mdescRight">set a new widget to be delegated by this one.  <a href="classopen3d_1_1visualization_1_1gui_1_1_widg-2#a2fe1a57d65f840301bc7aa52017ab463">More...</a><br /></td></tr>
<tr class="separator:a2fe1a57d65f840301bc7aa52017ab463"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3961ee7708f16e5974e94600eba29b8e"><td class="memItemLeft" align="right" valign="top">virtual std::shared_ptr&lt; <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg">Widget</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg-2#a3961ee7708f16e5974e94600eba29b8e">GetWidget</a> ()</td></tr>
<tr class="memdesc:a3961ee7708f16e5974e94600eba29b8e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Retrieve current delegated widget.  <a href="classopen3d_1_1visualization_1_1gui_1_1_widg-2#a3961ee7708f16e5974e94600eba29b8e">More...</a><br /></td></tr>
<tr class="separator:a3961ee7708f16e5974e94600eba29b8e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9356b5f6274e57811cc7dce5cae934d1"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="structopen3d_1_1visualization_1_1gui_1_1_rec">Rect</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg-2#a9356b5f6274e57811cc7dce5cae934d1">GetFrame</a> () const override</td></tr>
<tr class="memdesc:a9356b5f6274e57811cc7dce5cae934d1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the frame size in pixels.  <a href="classopen3d_1_1visualization_1_1gui_1_1_widg-2#a9356b5f6274e57811cc7dce5cae934d1">More...</a><br /></td></tr>
<tr class="separator:a9356b5f6274e57811cc7dce5cae934d1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a399e8dd78b508641b722f9ee0b41a073"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg-2#a399e8dd78b508641b722f9ee0b41a073">SetFrame</a> (const <a class="el" href="structopen3d_1_1visualization_1_1gui_1_1_rec">Rect</a> &amp;f) override</td></tr>
<tr class="separator:a399e8dd78b508641b722f9ee0b41a073"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a96ac4989cdcb0f11757b998ae65a1f3a"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_colo">Color</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg-2#a96ac4989cdcb0f11757b998ae65a1f3a">GetBackgroundColor</a> () const override</td></tr>
<tr class="separator:a96ac4989cdcb0f11757b998ae65a1f3a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0fd8509b48acab06b3fd85ae43122c35"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg-2#a0fd8509b48acab06b3fd85ae43122c35">IsDefaultBackgroundColor</a> () const override</td></tr>
<tr class="separator:a0fd8509b48acab06b3fd85ae43122c35"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a90a23c16f40d4db55615d8081b566de7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg-2#a90a23c16f40d4db55615d8081b566de7">SetBackgroundColor</a> (const <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_colo">Color</a> &amp;<a class="el" href="_triangle_mesh_buffers_8cpp.html#aa332976d803be75beb81e81af320bfcb">color</a>) override</td></tr>
<tr class="separator:a90a23c16f40d4db55615d8081b566de7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad501d308ef7f7fe7a5931f37eb4ab1e1"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg-2#ad501d308ef7f7fe7a5931f37eb4ab1e1">IsVisible</a> () const override</td></tr>
<tr class="separator:ad501d308ef7f7fe7a5931f37eb4ab1e1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6d750a04d2ac9dbae1c48528c8f042bd"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg-2#a6d750a04d2ac9dbae1c48528c8f042bd">SetVisible</a> (bool vis) override</td></tr>
<tr class="separator:a6d750a04d2ac9dbae1c48528c8f042bd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2c53c814d5953763dc71ebefd5f1eda0"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg-2#a2c53c814d5953763dc71ebefd5f1eda0">IsEnabled</a> () const override</td></tr>
<tr class="separator:a2c53c814d5953763dc71ebefd5f1eda0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a22dc565039d20c405be1d79ead24e455"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg-2#a22dc565039d20c405be1d79ead24e455">SetEnabled</a> (bool enabled) override</td></tr>
<tr class="separator:a22dc565039d20c405be1d79ead24e455"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a77c286f6e7d693989d1ae64ac74dae06"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg-2#a77c286f6e7d693989d1ae64ac74dae06">SetTooltip</a> (const char *text) override</td></tr>
<tr class="separator:a77c286f6e7d693989d1ae64ac74dae06"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acec6c4359a8e69e0843943156b6d3fd3"><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg-2#acec6c4359a8e69e0843943156b6d3fd3">GetTooltip</a> () const override</td></tr>
<tr class="separator:acec6c4359a8e69e0843943156b6d3fd3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad933774ed4761a6fe1e2c3b7ed57ca59"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structopen3d_1_1visualization_1_1gui_1_1_siz">Size</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg-2#ad933774ed4761a6fe1e2c3b7ed57ca59">CalcPreferredSize</a> (const <a class="el" href="structopen3d_1_1visualization_1_1gui_1_1_lay">LayoutContext</a> &amp;<a class="el" href="_window_8cpp.html#a0fc46c2cc73ed5bf25b870a781a2d18e">context</a>, const <a class="el" href="structopen3d_1_1visualization_1_1gui_1_1_wid">Constraints</a> &amp;constraints) const override</td></tr>
<tr class="separator:ad933774ed4761a6fe1e2c3b7ed57ca59"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af7e025a213ba46ce44a63ded34892d73"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structopen3d_1_1visualization_1_1gui_1_1_siz">Size</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg-2#af7e025a213ba46ce44a63ded34892d73">CalcMinimumSize</a> (const <a class="el" href="structopen3d_1_1visualization_1_1gui_1_1_lay">LayoutContext</a> &amp;<a class="el" href="_window_8cpp.html#a0fc46c2cc73ed5bf25b870a781a2d18e">context</a>) const override</td></tr>
<tr class="separator:af7e025a213ba46ce44a63ded34892d73"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aee601ece57605c0f6ba56f9435ecde12"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg-2#aee601ece57605c0f6ba56f9435ecde12">Layout</a> (const <a class="el" href="structopen3d_1_1visualization_1_1gui_1_1_lay">LayoutContext</a> &amp;<a class="el" href="_window_8cpp.html#a0fc46c2cc73ed5bf25b870a781a2d18e">context</a>) override</td></tr>
<tr class="separator:aee601ece57605c0f6ba56f9435ecde12"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae88b26e55c101130b98935b5e1a5c520"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg#ac5b0492207776249171a5b3f60f4c2f7">DrawResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg-2#ae88b26e55c101130b98935b5e1a5c520">Draw</a> (const <a class="el" href="structopen3d_1_1visualization_1_1gui_1_1_dra">DrawContext</a> &amp;<a class="el" href="_window_8cpp.html#a0fc46c2cc73ed5bf25b870a781a2d18e">context</a>) override</td></tr>
<tr class="separator:ae88b26e55c101130b98935b5e1a5c520"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4d6a9a5e86003c5dfdfd9d3085964105"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg#aaacf4d3fcb4098ccc49458cf6d7245cf">EventResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg-2#a4d6a9a5e86003c5dfdfd9d3085964105">Mouse</a> (const <a class="el" href="structopen3d_1_1visualization_1_1gui_1_1_mou">MouseEvent</a> &amp;e) override</td></tr>
<tr class="separator:a4d6a9a5e86003c5dfdfd9d3085964105"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a58eae449c2cfd71f4d08172e4f7311f6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg#aaacf4d3fcb4098ccc49458cf6d7245cf">EventResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg-2#a58eae449c2cfd71f4d08172e4f7311f6">Key</a> (const <a class="el" href="structopen3d_1_1visualization_1_1gui_1_1_key">KeyEvent</a> &amp;e) override</td></tr>
<tr class="separator:a58eae449c2cfd71f4d08172e4f7311f6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2fa3a740d46b341677ea45b228747b9c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg#ac5b0492207776249171a5b3f60f4c2f7">DrawResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg-2#a2fa3a740d46b341677ea45b228747b9c">Tick</a> (const <a class="el" href="structopen3d_1_1visualization_1_1gui_1_1_tic">TickEvent</a> &amp;e) override</td></tr>
<tr class="separator:a2fa3a740d46b341677ea45b228747b9c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classopen3d_1_1visualization_1_1gui_1_1_widget"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classopen3d_1_1visualization_1_1gui_1_1_widget')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg">open3d::visualization::gui::Widget</a></td></tr>
<tr class="memitem:a479dae7b486abec504840f6b41dfc06b inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_widget"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg#a479dae7b486abec504840f6b41dfc06b">Widget</a> ()</td></tr>
<tr class="separator:a479dae7b486abec504840f6b41dfc06b inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_widget"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac32c5f0ec864b851fef6bb643f586063 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_widget"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg#ac32c5f0ec864b851fef6bb643f586063">Widget</a> (const std::vector&lt; std::shared_ptr&lt; <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg">Widget</a> &gt;&gt; &amp;children)</td></tr>
<tr class="separator:ac32c5f0ec864b851fef6bb643f586063 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_widget"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6b46b9305a7c3abc57912830fc330c26 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_widget"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg#a6b46b9305a7c3abc57912830fc330c26">~Widget</a> ()</td></tr>
<tr class="separator:a6b46b9305a7c3abc57912830fc330c26 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_widget"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:ad13299a5060dd352951ea09445f51525"><td class="memItemLeft" align="right" valign="top">virtual std::shared_ptr&lt; <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg">Widget</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg-2#ad13299a5060dd352951ea09445f51525">GetActiveWidget</a> () const</td></tr>
<tr class="separator:ad13299a5060dd352951ea09445f51525"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_classopen3d_1_1visualization_1_1gui_1_1_widget"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_classopen3d_1_1visualization_1_1gui_1_1_widget')"><img src="closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg">open3d::visualization::gui::Widget</a></td></tr>
<tr class="memitem:a32315c2966250ffadc589b40353c4264 inherit pro_methods_classopen3d_1_1visualization_1_1gui_1_1_widget"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg#a32315c2966250ffadc589b40353c4264">DrawImGuiPushEnabledState</a> ()</td></tr>
<tr class="separator:a32315c2966250ffadc589b40353c4264 inherit pro_methods_classopen3d_1_1visualization_1_1gui_1_1_widget"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1bbf100518987231c14467d4195e0d22 inherit pro_methods_classopen3d_1_1visualization_1_1gui_1_1_widget"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg#a1bbf100518987231c14467d4195e0d22">DrawImGuiPopEnabledState</a> ()</td></tr>
<tr class="separator:a1bbf100518987231c14467d4195e0d22 inherit pro_methods_classopen3d_1_1visualization_1_1gui_1_1_widget"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a618d0a1281f223f7854759ed910ee0ca inherit pro_methods_classopen3d_1_1visualization_1_1gui_1_1_widget"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg#a618d0a1281f223f7854759ed910ee0ca">DrawImGuiTooltip</a> ()</td></tr>
<tr class="separator:a618d0a1281f223f7854759ed910ee0ca inherit pro_methods_classopen3d_1_1visualization_1_1gui_1_1_widget"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_types_classopen3d_1_1visualization_1_1gui_1_1_widget"><td colspan="2" onclick="javascript:toggleInherit('pub_types_classopen3d_1_1visualization_1_1gui_1_1_widget')"><img src="closed.png" alt="-"/>&#160;Public Types inherited from <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg">open3d::visualization::gui::Widget</a></td></tr>
<tr class="memitem:ac5b0492207776249171a5b3f60f4c2f7 inherit pub_types_classopen3d_1_1visualization_1_1gui_1_1_widget"><td class="memItemLeft" align="right" valign="top">enum class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg#ac5b0492207776249171a5b3f60f4c2f7">DrawResult</a> { <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg#ac5b0492207776249171a5b3f60f4c2f7ab50339a10e1de285ac99d4c3990b8693">NONE</a>
, <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg#ac5b0492207776249171a5b3f60f4c2f7a8493617dd77e400daa81294925a52201">REDRAW</a>
, <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg#ac5b0492207776249171a5b3f60f4c2f7a6d1d847705a266c2219411150a03ad81">RELAYOUT</a>
 }</td></tr>
<tr class="separator:ac5b0492207776249171a5b3f60f4c2f7 inherit pub_types_classopen3d_1_1visualization_1_1gui_1_1_widget"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaacf4d3fcb4098ccc49458cf6d7245cf inherit pub_types_classopen3d_1_1visualization_1_1gui_1_1_widget"><td class="memItemLeft" align="right" valign="top">enum class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg#aaacf4d3fcb4098ccc49458cf6d7245cf">EventResult</a> { <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg#aaacf4d3fcb4098ccc49458cf6d7245cfa92c30de24509d2778c9515bab375d253">IGNORED</a>
, <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg#aaacf4d3fcb4098ccc49458cf6d7245cfa5fd4e4caa04c7a478debcf06da9a3b0c">CONSUMED</a>
, <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg#aaacf4d3fcb4098ccc49458cf6d7245cfaecd1d945f3cac918744bcc5766e0ae2d">DISCARD</a>
 }</td></tr>
<tr class="separator:aaacf4d3fcb4098ccc49458cf6d7245cf inherit pub_types_classopen3d_1_1visualization_1_1gui_1_1_widget"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_static_attribs_classopen3d_1_1visualization_1_1gui_1_1_widget"><td colspan="2" onclick="javascript:toggleInherit('pub_static_attribs_classopen3d_1_1visualization_1_1gui_1_1_widget')"><img src="closed.png" alt="-"/>&#160;Static Public Attributes inherited from <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg">open3d::visualization::gui::Widget</a></td></tr>
<tr class="memitem:a4cadaf1be840d76fd037b57598b5b4cc inherit pub_static_attribs_classopen3d_1_1visualization_1_1gui_1_1_widget"><td class="memItemLeft" align="right" valign="top">static constexpr int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg#a4cadaf1be840d76fd037b57598b5b4cc">DIM_GROW</a> = 10000</td></tr>
<tr class="separator:a4cadaf1be840d76fd037b57598b5b4cc inherit pub_static_attribs_classopen3d_1_1visualization_1_1gui_1_1_widget"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg">Widget</a> container to delegate any widget dynamically. </p>
<p><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg">Widget</a> can not be managed dynamically. Although it is allowed to add more child widgets, it's impossible to replace some child with new on or remove children. <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg-2" title="Widget container to delegate any widget dynamically.">WidgetProxy</a> is designed to solve this problem.</p>
<p>When <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg-2" title="Widget container to delegate any widget dynamically.">WidgetProxy</a> is created, it's invisible and disabled, so it won't be drawn or layout, seeming like it does not exist. When a widget is set by <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg-2#a2fe1a57d65f840301bc7aa52017ab463">SetWidget</a>, all <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg">Widget</a>'s APIs will be conducted to that child widget. It looks like <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg-2" title="Widget container to delegate any widget dynamically.">WidgetProxy</a> is that widget.</p>
<p>At any time, a new widget could be set, to replace the old one. and the old widget will be destroyed.</p>
<p>Due to the content changing after a new widget is set or cleared, a relayout of <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind">Window</a> might be called after SetWidget.</p>
<p>The delegated widget could be retrieved by <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg-2#a3961ee7708f16e5974e94600eba29b8e">GetWidget</a> in case you need to access it directly, like get check status of a CheckBox.</p>
<p>API other than <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg-2#a2fe1a57d65f840301bc7aa52017ab463">SetWidget</a> and <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg-2#a3961ee7708f16e5974e94600eba29b8e">GetWidget</a> has completely same function as <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg">Widget</a>. </p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a819aabe5993826cef4d4ff08cc4cf435"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a819aabe5993826cef4d4ff08cc4cf435">&#9670;&nbsp;</a></span>WidgetProxy()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">open3d::visualization::gui::WidgetProxy::WidgetProxy </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="aff167b908945e0e1e0021594ef07a804"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aff167b908945e0e1e0021594ef07a804">&#9670;&nbsp;</a></span>~WidgetProxy()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">open3d::visualization::gui::WidgetProxy::~WidgetProxy </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="aa242d5422c326e86447fccd18e5e3166"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa242d5422c326e86447fccd18e5e3166">&#9670;&nbsp;</a></span>AddChild()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::gui::WidgetProxy::AddChild </td>
          <td>(</td>
          <td class="paramtype">std::shared_ptr&lt; <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg">Widget</a> &gt;&#160;</td>
          <td class="paramname"><em>child</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented from <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg#a740af001646d4625f8fcfa16af0e889b">open3d::visualization::gui::Widget</a>.</p>

</div>
</div>
<a id="af7e025a213ba46ce44a63ded34892d73"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af7e025a213ba46ce44a63ded34892d73">&#9670;&nbsp;</a></span>CalcMinimumSize()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structopen3d_1_1visualization_1_1gui_1_1_siz">Size</a> open3d::visualization::gui::WidgetProxy::CalcMinimumSize </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structopen3d_1_1visualization_1_1gui_1_1_lay">LayoutContext</a> &amp;&#160;</td>
          <td class="paramname"><em>context</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented from <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg#a6087cf365358deb96a04b497aaa14fde">open3d::visualization::gui::Widget</a>.</p>

</div>
</div>
<a id="ad933774ed4761a6fe1e2c3b7ed57ca59"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad933774ed4761a6fe1e2c3b7ed57ca59">&#9670;&nbsp;</a></span>CalcPreferredSize()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structopen3d_1_1visualization_1_1gui_1_1_siz">Size</a> open3d::visualization::gui::WidgetProxy::CalcPreferredSize </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structopen3d_1_1visualization_1_1gui_1_1_lay">LayoutContext</a> &amp;&#160;</td>
          <td class="paramname"><em>context</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structopen3d_1_1visualization_1_1gui_1_1_wid">Constraints</a> &amp;&#160;</td>
          <td class="paramname"><em>constraints</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented from <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg#a14ac91d780cd5f3efc0933c9eb20e886">open3d::visualization::gui::Widget</a>.</p>

</div>
</div>
<a id="ae88b26e55c101130b98935b5e1a5c520"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae88b26e55c101130b98935b5e1a5c520">&#9670;&nbsp;</a></span>Draw()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg#ac5b0492207776249171a5b3f60f4c2f7">Widget::DrawResult</a> open3d::visualization::gui::WidgetProxy::Draw </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structopen3d_1_1visualization_1_1gui_1_1_dra">DrawContext</a> &amp;&#160;</td>
          <td class="paramname"><em>context</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Draws the widget. If this is a Dear ImGUI widget, this is where the actual event processing happens. Return NONE if no action needs to be taken, REDRAW if the widget needs to be redrawn (e.g. its value changed), and RELAYOUT if the widget wishes to change size. </p>

<p>Reimplemented from <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg#a9b63242dae184c90d031c706926ff67e">open3d::visualization::gui::Widget</a>.</p>

</div>
</div>
<a id="ad13299a5060dd352951ea09445f51525"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad13299a5060dd352951ea09445f51525">&#9670;&nbsp;</a></span>GetActiveWidget()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::shared_ptr&lt; <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg">Widget</a> &gt; open3d::visualization::gui::WidgetProxy::GetActiveWidget </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a96ac4989cdcb0f11757b998ae65a1f3a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a96ac4989cdcb0f11757b998ae65a1f3a">&#9670;&nbsp;</a></span>GetBackgroundColor()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_colo">Color</a> &amp; open3d::visualization::gui::WidgetProxy::GetBackgroundColor </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented from <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg#ab9ce131aa847cd6f063217ff97f2bad6">open3d::visualization::gui::Widget</a>.</p>

</div>
</div>
<a id="a3909a479caf6447bdad3985ad210e76a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3909a479caf6447bdad3985ad210e76a">&#9670;&nbsp;</a></span>GetChildren()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const std::vector&lt; std::shared_ptr&lt; <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg">Widget</a> &gt; &gt; open3d::visualization::gui::WidgetProxy::GetChildren </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented from <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg#abbf993ebb40401e36103c7f36e4dfaa0">open3d::visualization::gui::Widget</a>.</p>

</div>
</div>
<a id="a9356b5f6274e57811cc7dce5cae934d1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9356b5f6274e57811cc7dce5cae934d1">&#9670;&nbsp;</a></span>GetFrame()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="structopen3d_1_1visualization_1_1gui_1_1_rec">Rect</a> &amp; open3d::visualization::gui::WidgetProxy::GetFrame </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the frame size in pixels. </p>

<p>Reimplemented from <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg#a38bdb54279d05626b34513333ea5da64">open3d::visualization::gui::Widget</a>.</p>

</div>
</div>
<a id="acec6c4359a8e69e0843943156b6d3fd3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acec6c4359a8e69e0843943156b6d3fd3">&#9670;&nbsp;</a></span>GetTooltip()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const char * open3d::visualization::gui::WidgetProxy::GetTooltip </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented from <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg#a4160fc44e680306822d4fd034158a8b2">open3d::visualization::gui::Widget</a>.</p>

</div>
</div>
<a id="a3961ee7708f16e5974e94600eba29b8e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3961ee7708f16e5974e94600eba29b8e">&#9670;&nbsp;</a></span>GetWidget()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::shared_ptr&lt; <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg">Widget</a> &gt; open3d::visualization::gui::WidgetProxy::GetWidget </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Retrieve current delegated widget. </p>
<dl class="section return"><dt>Returns</dt><dd>Instance of current delegated widget set by <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg-2#a2fe1a57d65f840301bc7aa52017ab463">SetWidget</a>. An empty pointer will be returned if there is none. </dd></dl>

</div>
</div>
<a id="a0fd8509b48acab06b3fd85ae43122c35"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0fd8509b48acab06b3fd85ae43122c35">&#9670;&nbsp;</a></span>IsDefaultBackgroundColor()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool open3d::visualization::gui::WidgetProxy::IsDefaultBackgroundColor </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented from <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg#af034c90b8a43f8603a24ae2139d8b353">open3d::visualization::gui::Widget</a>.</p>

</div>
</div>
<a id="a2c53c814d5953763dc71ebefd5f1eda0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2c53c814d5953763dc71ebefd5f1eda0">&#9670;&nbsp;</a></span>IsEnabled()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool open3d::visualization::gui::WidgetProxy::IsEnabled </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented from <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg#a8ab00344adaafa1cd8b725a62b5e57ea">open3d::visualization::gui::Widget</a>.</p>

</div>
</div>
<a id="ad501d308ef7f7fe7a5931f37eb4ab1e1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad501d308ef7f7fe7a5931f37eb4ab1e1">&#9670;&nbsp;</a></span>IsVisible()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool open3d::visualization::gui::WidgetProxy::IsVisible </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented from <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg#aafb86debb7b31719b8a745885f0acb5b">open3d::visualization::gui::Widget</a>.</p>

</div>
</div>
<a id="a58eae449c2cfd71f4d08172e4f7311f6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a58eae449c2cfd71f4d08172e4f7311f6">&#9670;&nbsp;</a></span>Key()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg#aaacf4d3fcb4098ccc49458cf6d7245cf">Widget::EventResult</a> open3d::visualization::gui::WidgetProxy::Key </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structopen3d_1_1visualization_1_1gui_1_1_key">KeyEvent</a> &amp;&#160;</td>
          <td class="paramname"><em>e</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Widgets that use Dear ImGUI should not need to override this, as Dear ImGUI will take care of all the key handling during the <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg-2#ae88b26e55c101130b98935b5e1a5c520">Draw()</a>. </p>

<p>Reimplemented from <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg#a6860c5e875d9c460fb05bd0729f95384">open3d::visualization::gui::Widget</a>.</p>

</div>
</div>
<a id="aee601ece57605c0f6ba56f9435ecde12"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aee601ece57605c0f6ba56f9435ecde12">&#9670;&nbsp;</a></span>Layout()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::gui::WidgetProxy::Layout </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structopen3d_1_1visualization_1_1gui_1_1_lay">LayoutContext</a> &amp;&#160;</td>
          <td class="paramname"><em>context</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented from <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg#a56a05b8436b8a138759bc7f547d16831">open3d::visualization::gui::Widget</a>.</p>

</div>
</div>
<a id="a4d6a9a5e86003c5dfdfd9d3085964105"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4d6a9a5e86003c5dfdfd9d3085964105">&#9670;&nbsp;</a></span>Mouse()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg#aaacf4d3fcb4098ccc49458cf6d7245cf">Widget::EventResult</a> open3d::visualization::gui::WidgetProxy::Mouse </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structopen3d_1_1visualization_1_1gui_1_1_mou">MouseEvent</a> &amp;&#160;</td>
          <td class="paramname"><em>e</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Widgets that use Dear ImGUI should not need to override this, as Dear ImGUI will take care of all the mouse handling during the <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg-2#ae88b26e55c101130b98935b5e1a5c520">Draw()</a>. </p>

<p>Reimplemented from <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg#a6093f24929d9956b38eaa1cf9fd4af49">open3d::visualization::gui::Widget</a>.</p>

</div>
</div>
<a id="a90a23c16f40d4db55615d8081b566de7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a90a23c16f40d4db55615d8081b566de7">&#9670;&nbsp;</a></span>SetBackgroundColor()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::gui::WidgetProxy::SetBackgroundColor </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_colo">Color</a> &amp;&#160;</td>
          <td class="paramname"><em>color</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented from <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg#a1fc0fe61b7adb8394ae200f865aee301">open3d::visualization::gui::Widget</a>.</p>

</div>
</div>
<a id="a22dc565039d20c405be1d79ead24e455"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a22dc565039d20c405be1d79ead24e455">&#9670;&nbsp;</a></span>SetEnabled()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::gui::WidgetProxy::SetEnabled </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>enabled</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented from <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg#a6fb9b6d06da91ffdef0289767bc0cd50">open3d::visualization::gui::Widget</a>.</p>

</div>
</div>
<a id="a399e8dd78b508641b722f9ee0b41a073"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a399e8dd78b508641b722f9ee0b41a073">&#9670;&nbsp;</a></span>SetFrame()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::gui::WidgetProxy::SetFrame </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structopen3d_1_1visualization_1_1gui_1_1_rec">Rect</a> &amp;&#160;</td>
          <td class="paramname"><em>f</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>The frame is in pixels. The size of a pixel varies on different and operating systems now frequently scale text sizes on high DPI monitors. Prefer using a Layout to using this function, but if you must use it, it is best to use a multiple of <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind#a23ee69da890f8edd058bcfae46d25b57">Window::GetTheme()</a>.fontSize, which represents 1em and is scaled according to the scaling factor of the window. </p>

<p>Reimplemented from <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg#a0cff4642a394b5d2947bc38c31ac1c2e">open3d::visualization::gui::Widget</a>.</p>

</div>
</div>
<a id="a77c286f6e7d693989d1ae64ac74dae06"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a77c286f6e7d693989d1ae64ac74dae06">&#9670;&nbsp;</a></span>SetTooltip()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::gui::WidgetProxy::SetTooltip </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>text</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented from <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg#af4d4e3c60037c2651694913ca036e846">open3d::visualization::gui::Widget</a>.</p>

</div>
</div>
<a id="a6d750a04d2ac9dbae1c48528c8f042bd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6d750a04d2ac9dbae1c48528c8f042bd">&#9670;&nbsp;</a></span>SetVisible()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::gui::WidgetProxy::SetVisible </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>vis</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented from <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg#a6bac1ef4efd7d69ebf9f6df6dbfc6950">open3d::visualization::gui::Widget</a>.</p>

</div>
</div>
<a id="a2fe1a57d65f840301bc7aa52017ab463"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2fe1a57d65f840301bc7aa52017ab463">&#9670;&nbsp;</a></span>SetWidget()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::gui::WidgetProxy::SetWidget </td>
          <td>(</td>
          <td class="paramtype">std::shared_ptr&lt; <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg">Widget</a> &gt;&#160;</td>
          <td class="paramname"><em>widget</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>set a new widget to be delegated by this one. </p>
<p>After SetWidget, the previously delegated widget will be abandon, all calls to <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg">Widget</a>'s API will be conducted to <code>widget</code>.</p>
<p>Before any SetWidget call, this widget is invisible and disabled, seems it does not exist because it won't be drawn or in a layout.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">widget</td><td>Any widget to be delegated. Set to NULL to clear current delegated proxy. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a2fa3a740d46b341677ea45b228747b9c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2fa3a740d46b341677ea45b228747b9c">&#9670;&nbsp;</a></span>Tick()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg#ac5b0492207776249171a5b3f60f4c2f7">Widget::DrawResult</a> open3d::visualization::gui::WidgetProxy::Tick </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structopen3d_1_1visualization_1_1gui_1_1_tic">TickEvent</a> &amp;&#160;</td>
          <td class="paramname"><em>e</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Tick events are sent regularly and allow for things like smoothly moving the camera based on keys that are pressed, or animations. Return <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg#ac5b0492207776249171a5b3f60f4c2f7a8493617dd77e400daa81294925a52201">DrawResult::REDRAW</a> if you want to be redrawn. </p>

<p>Reimplemented from <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_widg#a6a30390a7209c31e2890db0e3a372154">open3d::visualization::gui::Widget</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/runner/work/Open3D/Open3D/cpp/open3d/visualization/gui/<a class="el" href="_widget_proxy_8h_source.html">WidgetProxy.h (9238339 (Tue Mar 14 18:49:09 2023 -0700))</a></li>
<li>/home/runner/work/Open3D/Open3D/cpp/open3d/visualization/gui/<a class="el" href="_widget_proxy_8cpp.html">WidgetProxy.cpp (9238339 (Tue Mar 14 18:49:09 2023 -0700))</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1
</small></address>
</body>

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/classopen3d_1_1visualization_1_1gui_1_1_widget_proxy.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 11:01:37 GMT -->
</html>
