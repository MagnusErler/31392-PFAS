<!-- HTML header for doxygen 1.8.20-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/classopen3d_1_1ml_1_1contrib_1_1_sampled_data.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 11:00:36 GMT -->
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Open3D (C++ API): open3d::ml::contrib::SampledData Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js", "TeX/AMSmath.html", "TeX/AMSsymbols.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="../../../../cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-3TQPKGV6Z3"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());
  gtag('config', 'G-3TQPKGV6Z3');
</script>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="open3d_logo.ico"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Open3D (C++ API)
   &#160;<span id="projectnumber">0.17.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.html');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.html','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceopen3d.html">open3d</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1ml.html">ml</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1ml_1_1contrib.html">contrib</a></li><li class="navelem"><a class="el" href="classopen3d_1_1ml_1_1contrib_1_1_sampled_dat">SampledData</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Data Fields</a>  </div>
  <div class="headertitle">
<div class="title">open3d::ml::contrib::SampledData Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_grid_subsampling_8h_source.html">GridSubsampling.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ae3f2969f9fbf718b0d2d5be0b9936b4a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1ml_1_1contrib_1_1_sampled_dat#ae3f2969f9fbf718b0d2d5be0b9936b4a">SampledData</a> ()</td></tr>
<tr class="separator:ae3f2969f9fbf718b0d2d5be0b9936b4a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a63d7b0ab18bd3868f1ae3170967eebb3"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1ml_1_1contrib_1_1_sampled_dat#a63d7b0ab18bd3868f1ae3170967eebb3">SampledData</a> (const size_t fdim, const size_t ldim)</td></tr>
<tr class="separator:a63d7b0ab18bd3868f1ae3170967eebb3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aba56bab1cdba99733a6ac117049bc9d4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1ml_1_1contrib_1_1_sampled_dat#aba56bab1cdba99733a6ac117049bc9d4">update_all</a> (const <a class="el" href="classopen3d_1_1ml_1_1contrib_1_1_point_x_y_z">PointXYZ</a> p, std::vector&lt; float &gt;::iterator f_begin, std::vector&lt; int &gt;::iterator l_begin)</td></tr>
<tr class="separator:aba56bab1cdba99733a6ac117049bc9d4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5b4f6130760f1780cd70448e830e0c79"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1ml_1_1contrib_1_1_sampled_dat#a5b4f6130760f1780cd70448e830e0c79">update_features</a> (const <a class="el" href="classopen3d_1_1ml_1_1contrib_1_1_point_x_y_z">PointXYZ</a> p, std::vector&lt; float &gt;::iterator f_begin)</td></tr>
<tr class="separator:a5b4f6130760f1780cd70448e830e0c79"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9c3652ef7838417e45721a5d1d3648d3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1ml_1_1contrib_1_1_sampled_dat#a9c3652ef7838417e45721a5d1d3648d3">update_classes</a> (const <a class="el" href="classopen3d_1_1ml_1_1contrib_1_1_point_x_y_z">PointXYZ</a> p, std::vector&lt; int &gt;::iterator l_begin)</td></tr>
<tr class="separator:a9c3652ef7838417e45721a5d1d3648d3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa90f179e6fcf5c9589a4c603d2835d0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1ml_1_1contrib_1_1_sampled_dat#aaa90f179e6fcf5c9589a4c603d2835d0">update_points</a> (const <a class="el" href="classopen3d_1_1ml_1_1contrib_1_1_point_x_y_z">PointXYZ</a> p)</td></tr>
<tr class="separator:aaa90f179e6fcf5c9589a4c603d2835d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Data Fields</h2></td></tr>
<tr class="memitem:af7a1286dc295b3206d8d783828ccff7a"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1ml_1_1contrib_1_1_sampled_dat#af7a1286dc295b3206d8d783828ccff7a">count</a></td></tr>
<tr class="separator:af7a1286dc295b3206d8d783828ccff7a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac6a2128bf08f97f6bf8f040c17395a4d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1ml_1_1contrib_1_1_point_x_y_z">PointXYZ</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1ml_1_1contrib_1_1_sampled_dat#ac6a2128bf08f97f6bf8f040c17395a4d">point</a></td></tr>
<tr class="separator:ac6a2128bf08f97f6bf8f040c17395a4d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae829271940f6b92d4453e3e4ccfc9da5"><td class="memItemLeft" align="right" valign="top">std::vector&lt; float &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1ml_1_1contrib_1_1_sampled_dat#ae829271940f6b92d4453e3e4ccfc9da5">features</a></td></tr>
<tr class="separator:ae829271940f6b92d4453e3e4ccfc9da5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9f8ada21ef821faffd2493e745306f8c"><td class="memItemLeft" align="right" valign="top">std::vector&lt; std::unordered_map&lt; int, int &gt; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1ml_1_1contrib_1_1_sampled_dat#a9f8ada21ef821faffd2493e745306f8c">labels</a></td></tr>
<tr class="separator:a9f8ada21ef821faffd2493e745306f8c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="ae3f2969f9fbf718b0d2d5be0b9936b4a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae3f2969f9fbf718b0d2d5be0b9936b4a">&#9670;&nbsp;</a></span>SampledData() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">open3d::ml::contrib::SampledData::SampledData </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a63d7b0ab18bd3868f1ae3170967eebb3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a63d7b0ab18bd3868f1ae3170967eebb3">&#9670;&nbsp;</a></span>SampledData() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">open3d::ml::contrib::SampledData::SampledData </td>
          <td>(</td>
          <td class="paramtype">const size_t&#160;</td>
          <td class="paramname"><em>fdim</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const size_t&#160;</td>
          <td class="paramname"><em>ldim</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="aba56bab1cdba99733a6ac117049bc9d4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aba56bab1cdba99733a6ac117049bc9d4">&#9670;&nbsp;</a></span>update_all()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::ml::contrib::SampledData::update_all </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1ml_1_1contrib_1_1_point_x_y_z">PointXYZ</a>&#160;</td>
          <td class="paramname"><em>p</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::vector&lt; float &gt;::iterator&#160;</td>
          <td class="paramname"><em>f_begin</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::vector&lt; int &gt;::iterator&#160;</td>
          <td class="paramname"><em>l_begin</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a9c3652ef7838417e45721a5d1d3648d3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9c3652ef7838417e45721a5d1d3648d3">&#9670;&nbsp;</a></span>update_classes()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::ml::contrib::SampledData::update_classes </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1ml_1_1contrib_1_1_point_x_y_z">PointXYZ</a>&#160;</td>
          <td class="paramname"><em>p</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::vector&lt; int &gt;::iterator&#160;</td>
          <td class="paramname"><em>l_begin</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a5b4f6130760f1780cd70448e830e0c79"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5b4f6130760f1780cd70448e830e0c79">&#9670;&nbsp;</a></span>update_features()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::ml::contrib::SampledData::update_features </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1ml_1_1contrib_1_1_point_x_y_z">PointXYZ</a>&#160;</td>
          <td class="paramname"><em>p</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::vector&lt; float &gt;::iterator&#160;</td>
          <td class="paramname"><em>f_begin</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aaa90f179e6fcf5c9589a4c603d2835d0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaa90f179e6fcf5c9589a4c603d2835d0">&#9670;&nbsp;</a></span>update_points()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::ml::contrib::SampledData::update_points </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1ml_1_1contrib_1_1_point_x_y_z">PointXYZ</a>&#160;</td>
          <td class="paramname"><em>p</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Field Documentation</h2>
<a id="af7a1286dc295b3206d8d783828ccff7a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af7a1286dc295b3206d8d783828ccff7a">&#9670;&nbsp;</a></span>count</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int open3d::ml::contrib::SampledData::count</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ae829271940f6b92d4453e3e4ccfc9da5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae829271940f6b92d4453e3e4ccfc9da5">&#9670;&nbsp;</a></span>features</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;float&gt; open3d::ml::contrib::SampledData::features</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a9f8ada21ef821faffd2493e745306f8c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9f8ada21ef821faffd2493e745306f8c">&#9670;&nbsp;</a></span>labels</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;std::unordered_map&lt;int, int&gt; &gt; open3d::ml::contrib::SampledData::labels</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ac6a2128bf08f97f6bf8f040c17395a4d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac6a2128bf08f97f6bf8f040c17395a4d">&#9670;&nbsp;</a></span>point</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1ml_1_1contrib_1_1_point_x_y_z">PointXYZ</a> open3d::ml::contrib::SampledData::point</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>/home/runner/work/Open3D/Open3D/cpp/open3d/ml/contrib/<a class="el" href="_grid_subsampling_8h_source.html">GridSubsampling.h (9238339 (Tue Mar 14 18:49:09 2023 -0700))</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1
</small></address>
</body>

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/classopen3d_1_1ml_1_1contrib_1_1_sampled_data.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 11:00:36 GMT -->
</html>
