<!-- HTML header for doxygen 1.8.20-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/namespaceopen3d_1_1t_1_1pipelines_1_1slac.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 10:57:55 GMT -->
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Open3D (C++ API): open3d::t::pipelines::slac Namespace Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js", "TeX/AMSmath.html", "TeX/AMSsymbols.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="../../../../cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-3TQPKGV6Z3"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());
  gtag('config', 'G-3TQPKGV6Z3');
</script>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="open3d_logo.ico"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Open3D (C++ API)
   &#160;<span id="projectnumber">0.17.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.html');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.html','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceopen3d.html">open3d</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1t.html">t</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1t_1_1pipelines.33e.delaye">pipelines</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1t_1_1pipelines_1_1slac.49">slac</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">open3d::t::pipelines::slac Namespace Reference</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1pipelines_1_1slac_1_1_co">ControlGrid</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structopen3d_1_1t_1_1pipelines_1_1slac_1_1_s">SLACOptimizerParams</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structopen3d_1_1t_1_1pipelines_1_1slac_1_1_s-2">SLACDebugOption</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:a413226d3f045745ee5604a9c4e60c9d5"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1pipelines_1_1slac.49#a413226d3f045745ee5604a9c4e60c9d5">PoseGraph</a> = <a class="el" href="classopen3d_1_1pipelines_1_1registration_1_1-2">open3d::pipelines::registration::PoseGraph</a></td></tr>
<tr class="separator:a413226d3f045745ee5604a9c4e60c9d5"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a8d76788585af486a2c74de1d21f6a368"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1pipelines_1_1slac.49#a8d76788585af486a2c74de1d21f6a368">FillInRigidAlignmentTerm</a> (<a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a> &amp;AtA, <a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a> &amp;Atb, <a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a> &amp;residual, const std::vector&lt; std::string &gt; &amp;fnames, const <a class="el" href="namespaceopen3d_1_1t_1_1pipelines_1_1slac.49#a413226d3f045745ee5604a9c4e60c9d5">PoseGraph</a> &amp;pose_graph, const <a class="el" href="structopen3d_1_1t_1_1pipelines_1_1slac_1_1_s">SLACOptimizerParams</a> &amp;params, const <a class="el" href="structopen3d_1_1t_1_1pipelines_1_1slac_1_1_s-2">SLACDebugOption</a> &amp;debug_option)</td></tr>
<tr class="separator:a8d76788585af486a2c74de1d21f6a368"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9d62f0601d4b2245c330948d8cbee89c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1pipelines_1_1slac.49#a9d62f0601d4b2245c330948d8cbee89c">FillInSLACAlignmentTerm</a> (<a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a> &amp;AtA, <a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a> &amp;Atb, <a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a> &amp;residual, <a class="el" href="classopen3d_1_1t_1_1pipelines_1_1slac_1_1_co">ControlGrid</a> &amp;ctr_grid, const std::vector&lt; std::string &gt; &amp;fnames, const <a class="el" href="namespaceopen3d_1_1t_1_1pipelines_1_1slac.49#a413226d3f045745ee5604a9c4e60c9d5">PoseGraph</a> &amp;pose_graph, const <a class="el" href="structopen3d_1_1t_1_1pipelines_1_1slac_1_1_s">SLACOptimizerParams</a> &amp;params, const <a class="el" href="structopen3d_1_1t_1_1pipelines_1_1slac_1_1_s-2">SLACDebugOption</a> &amp;debug_option)</td></tr>
<tr class="separator:a9d62f0601d4b2245c330948d8cbee89c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af36f23252b1ff2e1c9f05858728f916c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1pipelines_1_1slac.49#af36f23252b1ff2e1c9f05858728f916c">FillInSLACRegularizerTerm</a> (<a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a> &amp;AtA, <a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a> &amp;Atb, <a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a> &amp;residual, <a class="el" href="classopen3d_1_1t_1_1pipelines_1_1slac_1_1_co">ControlGrid</a> &amp;ctr_grid, int n_frags, const <a class="el" href="structopen3d_1_1t_1_1pipelines_1_1slac_1_1_s">SLACOptimizerParams</a> &amp;params, const <a class="el" href="structopen3d_1_1t_1_1pipelines_1_1slac_1_1_s-2">SLACDebugOption</a> &amp;debug_option)</td></tr>
<tr class="separator:af36f23252b1ff2e1c9f05858728f916c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a61c6e0c7142b9986ef11b3174ce753d6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1pipelines_1_1slac.49#a61c6e0c7142b9986ef11b3174ce753d6">SaveCorrespondencesForPointClouds</a> (const std::vector&lt; std::string &gt; &amp;fnames_processed, const <a class="el" href="namespaceopen3d_1_1t_1_1pipelines_1_1slac.49#a413226d3f045745ee5604a9c4e60c9d5">PoseGraph</a> &amp;fragment_pose_graph, const <a class="el" href="structopen3d_1_1t_1_1pipelines_1_1slac_1_1_s">SLACOptimizerParams</a> &amp;params=<a class="el" href="structopen3d_1_1t_1_1pipelines_1_1slac_1_1_s">SLACOptimizerParams</a>(), const <a class="el" href="structopen3d_1_1t_1_1pipelines_1_1slac_1_1_s-2">SLACDebugOption</a> &amp;debug_option=<a class="el" href="structopen3d_1_1t_1_1pipelines_1_1slac_1_1_s-2">SLACDebugOption</a>())</td></tr>
<tr class="memdesc:a61c6e0c7142b9986ef11b3174ce753d6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Read pose graph containing loop closures and odometry to compute putative correspondences between pairs of pointclouds.  <a href="namespaceopen3d_1_1t_1_1pipelines_1_1slac.49#a61c6e0c7142b9986ef11b3174ce753d6">More...</a><br /></td></tr>
<tr class="separator:a61c6e0c7142b9986ef11b3174ce753d6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abcb97ddea4661e686bf8c5eedff1ce9a"><td class="memItemLeft" align="right" valign="top">std::pair&lt; <a class="el" href="namespaceopen3d_1_1t_1_1pipelines_1_1slac.49#a413226d3f045745ee5604a9c4e60c9d5">PoseGraph</a>, <a class="el" href="classopen3d_1_1t_1_1pipelines_1_1slac_1_1_co">ControlGrid</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1pipelines_1_1slac.49#abcb97ddea4661e686bf8c5eedff1ce9a">RunSLACOptimizerForFragments</a> (const std::vector&lt; std::string &gt; &amp;fragment_filenames, const <a class="el" href="namespaceopen3d_1_1t_1_1pipelines_1_1slac.49#a413226d3f045745ee5604a9c4e60c9d5">PoseGraph</a> &amp;fragment_pose_graph, const <a class="el" href="structopen3d_1_1t_1_1pipelines_1_1slac_1_1_s">SLACOptimizerParams</a> &amp;params=<a class="el" href="structopen3d_1_1t_1_1pipelines_1_1slac_1_1_s">SLACOptimizerParams</a>(), const <a class="el" href="structopen3d_1_1t_1_1pipelines_1_1slac_1_1_s-2">SLACDebugOption</a> &amp;debug_option=<a class="el" href="structopen3d_1_1t_1_1pipelines_1_1slac_1_1_s-2">SLACDebugOption</a>())</td></tr>
<tr class="memdesc:abcb97ddea4661e686bf8c5eedff1ce9a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Simultaneous Localization and Calibration: Self-Calibration of Consumer Depth Cameras, CVPR 2014 Qian-Yi Zhou and Vladlen Koltun Estimate a shared control grid for all fragments for scene reconstruction, implemented in <a href="https://github.com/qianyizh/ElasticReconstruction">https://github.com/qianyizh/ElasticReconstruction</a>.  <a href="namespaceopen3d_1_1t_1_1pipelines_1_1slac.49#abcb97ddea4661e686bf8c5eedff1ce9a">More...</a><br /></td></tr>
<tr class="separator:abcb97ddea4661e686bf8c5eedff1ce9a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0e978c5aec810f5cbff6d85daf0b527d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceopen3d_1_1t_1_1pipelines_1_1slac.49#a413226d3f045745ee5604a9c4e60c9d5">PoseGraph</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1pipelines_1_1slac.49#a0e978c5aec810f5cbff6d85daf0b527d">RunRigidOptimizerForFragments</a> (const std::vector&lt; std::string &gt; &amp;fragment_filenames, const <a class="el" href="namespaceopen3d_1_1t_1_1pipelines_1_1slac.49#a413226d3f045745ee5604a9c4e60c9d5">PoseGraph</a> &amp;fragment_pose_graph, const <a class="el" href="structopen3d_1_1t_1_1pipelines_1_1slac_1_1_s">SLACOptimizerParams</a> &amp;params=<a class="el" href="structopen3d_1_1t_1_1pipelines_1_1slac_1_1_s">SLACOptimizerParams</a>(), const <a class="el" href="structopen3d_1_1t_1_1pipelines_1_1slac_1_1_s-2">SLACDebugOption</a> &amp;debug_option=<a class="el" href="structopen3d_1_1t_1_1pipelines_1_1slac_1_1_s-2">SLACDebugOption</a>())</td></tr>
<tr class="memdesc:a0e978c5aec810f5cbff6d85daf0b527d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Extended ICP to simultaneously align multiple point clouds with dense pairwise point-to-plane distances.  <a href="namespaceopen3d_1_1t_1_1pipelines_1_1slac.49#a0e978c5aec810f5cbff6d85daf0b527d">More...</a><br /></td></tr>
<tr class="separator:a0e978c5aec810f5cbff6d85daf0b527d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aace36e0425228406cc32d2a063fba732"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1pipelines_1_1slac.49#aace36e0425228406cc32d2a063fba732">VisualizePointCloudCorrespondences</a> (const <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_point_cloud">t::geometry::PointCloud</a> &amp;tpcd_i, const <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_point_cloud">t::geometry::PointCloud</a> &amp;tpcd_j, const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> correspondences, const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;T_ij)</td></tr>
<tr class="memdesc:aace36e0425228406cc32d2a063fba732"><td class="mdescLeft">&#160;</td><td class="mdescRight">Visualize pairs with correspondences.  <a href="namespaceopen3d_1_1t_1_1pipelines_1_1slac.49#aace36e0425228406cc32d2a063fba732">More...</a><br /></td></tr>
<tr class="separator:aace36e0425228406cc32d2a063fba732"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:add7af2f916fcb8bbeda6fb050499f477"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1pipelines_1_1slac.49#add7af2f916fcb8bbeda6fb050499f477">VisualizePointCloudEmbedding</a> (<a class="el" href="classopen3d_1_1t_1_1geometry_1_1_point_cloud">t::geometry::PointCloud</a> &amp;tpcd_param, <a class="el" href="classopen3d_1_1t_1_1pipelines_1_1slac_1_1_co">ControlGrid</a> &amp;ctr_grid, bool show_lines)</td></tr>
<tr class="separator:add7af2f916fcb8bbeda6fb050499f477"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a69c306809365803d34ee495805919edc"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1pipelines_1_1slac.49#a69c306809365803d34ee495805919edc">VisualizePointCloudDeformation</a> (const <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_point_cloud">geometry::PointCloud</a> &amp;tpcd_param, <a class="el" href="classopen3d_1_1t_1_1pipelines_1_1slac_1_1_co">ControlGrid</a> &amp;ctr_grid)</td></tr>
<tr class="separator:a69c306809365803d34ee495805919edc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6ff79b29a2253625a0bd93116dc9a9b5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1pipelines_1_1slac.49#a6ff79b29a2253625a0bd93116dc9a9b5">VisualizeGridDeformation</a> (<a class="el" href="classopen3d_1_1t_1_1pipelines_1_1slac_1_1_co">ControlGrid</a> &amp;cgrid)</td></tr>
<tr class="separator:a6ff79b29a2253625a0bd93116dc9a9b5"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Typedef Documentation</h2>
<a id="a413226d3f045745ee5604a9c4e60c9d5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a413226d3f045745ee5604a9c4e60c9d5">&#9670;&nbsp;</a></span>PoseGraph</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="namespaceopen3d_1_1t_1_1pipelines_1_1slac.49#a413226d3f045745ee5604a9c4e60c9d5">open3d::t::pipelines::slac::PoseGraph</a> = typedef <a class="el" href="classopen3d_1_1pipelines_1_1registration_1_1-2">open3d::pipelines::registration::PoseGraph</a></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a id="a8d76788585af486a2c74de1d21f6a368"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8d76788585af486a2c74de1d21f6a368">&#9670;&nbsp;</a></span>FillInRigidAlignmentTerm()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::t::pipelines::slac::FillInRigidAlignmentTerm </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>AtA</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>Atb</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>residual</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; std::string &gt; &amp;&#160;</td>
          <td class="paramname"><em>fnames</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceopen3d_1_1t_1_1pipelines_1_1slac.49#a413226d3f045745ee5604a9c4e60c9d5">PoseGraph</a> &amp;&#160;</td>
          <td class="paramname"><em>pose_graph</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structopen3d_1_1t_1_1pipelines_1_1slac_1_1_s">SLACOptimizerParams</a> &amp;&#160;</td>
          <td class="paramname"><em>params</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structopen3d_1_1t_1_1pipelines_1_1slac_1_1_s-2">SLACDebugOption</a> &amp;&#160;</td>
          <td class="paramname"><em>debug_option</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a9d62f0601d4b2245c330948d8cbee89c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9d62f0601d4b2245c330948d8cbee89c">&#9670;&nbsp;</a></span>FillInSLACAlignmentTerm()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::t::pipelines::slac::FillInSLACAlignmentTerm </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>AtA</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>Atb</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>residual</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1t_1_1pipelines_1_1slac_1_1_co">ControlGrid</a> &amp;&#160;</td>
          <td class="paramname"><em>ctr_grid</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; std::string &gt; &amp;&#160;</td>
          <td class="paramname"><em>fnames</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceopen3d_1_1t_1_1pipelines_1_1slac.49#a413226d3f045745ee5604a9c4e60c9d5">PoseGraph</a> &amp;&#160;</td>
          <td class="paramname"><em>pose_graph</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structopen3d_1_1t_1_1pipelines_1_1slac_1_1_s">SLACOptimizerParams</a> &amp;&#160;</td>
          <td class="paramname"><em>params</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structopen3d_1_1t_1_1pipelines_1_1slac_1_1_s-2">SLACDebugOption</a> &amp;&#160;</td>
          <td class="paramname"><em>debug_option</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="af36f23252b1ff2e1c9f05858728f916c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af36f23252b1ff2e1c9f05858728f916c">&#9670;&nbsp;</a></span>FillInSLACRegularizerTerm()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::t::pipelines::slac::FillInSLACRegularizerTerm </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>AtA</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>Atb</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>residual</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1t_1_1pipelines_1_1slac_1_1_co">ControlGrid</a> &amp;&#160;</td>
          <td class="paramname"><em>ctr_grid</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>n_frags</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structopen3d_1_1t_1_1pipelines_1_1slac_1_1_s">SLACOptimizerParams</a> &amp;&#160;</td>
          <td class="paramname"><em>params</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structopen3d_1_1t_1_1pipelines_1_1slac_1_1_s-2">SLACDebugOption</a> &amp;&#160;</td>
          <td class="paramname"><em>debug_option</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a0e978c5aec810f5cbff6d85daf0b527d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0e978c5aec810f5cbff6d85daf0b527d">&#9670;&nbsp;</a></span>RunRigidOptimizerForFragments()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceopen3d_1_1t_1_1pipelines_1_1slac.49#a413226d3f045745ee5604a9c4e60c9d5">PoseGraph</a> open3d::t::pipelines::slac::RunRigidOptimizerForFragments </td>
          <td>(</td>
          <td class="paramtype">const std::vector&lt; std::string &gt; &amp;&#160;</td>
          <td class="paramname"><em>fragment_filenames</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceopen3d_1_1t_1_1pipelines_1_1slac.49#a413226d3f045745ee5604a9c4e60c9d5">PoseGraph</a> &amp;&#160;</td>
          <td class="paramname"><em>fragment_pose_graph</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structopen3d_1_1t_1_1pipelines_1_1slac_1_1_s">SLACOptimizerParams</a> &amp;&#160;</td>
          <td class="paramname"><em>params</em> = <code><a class="el" href="structopen3d_1_1t_1_1pipelines_1_1slac_1_1_s">SLACOptimizerParams</a>()</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structopen3d_1_1t_1_1pipelines_1_1slac_1_1_s-2">SLACDebugOption</a> &amp;&#160;</td>
          <td class="paramname"><em>debug_option</em> = <code><a class="el" href="structopen3d_1_1t_1_1pipelines_1_1slac_1_1_s-2">SLACDebugOption</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Extended ICP to simultaneously align multiple point clouds with dense pairwise point-to-plane distances. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">fragment_fnames</td><td>Vector of filenames for pointcloud fragments. </td></tr>
    <tr><td class="paramname">fragment_pose_graph</td><td>Legacy PoseGraph for pointcloud fragments. </td></tr>
    <tr><td class="paramname">params</td><td>Parameters to tune in rigid optimization. </td></tr>
    <tr><td class="paramname">debug_option</td><td>Debug options. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Updated pose graph. </dd></dl>

</div>
</div>
<a id="abcb97ddea4661e686bf8c5eedff1ce9a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abcb97ddea4661e686bf8c5eedff1ce9a">&#9670;&nbsp;</a></span>RunSLACOptimizerForFragments()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::pair&lt; <a class="el" href="namespaceopen3d_1_1t_1_1pipelines_1_1slac.49#a413226d3f045745ee5604a9c4e60c9d5">PoseGraph</a>, <a class="el" href="classopen3d_1_1t_1_1pipelines_1_1slac_1_1_co">ControlGrid</a> &gt; open3d::t::pipelines::slac::RunSLACOptimizerForFragments </td>
          <td>(</td>
          <td class="paramtype">const std::vector&lt; std::string &gt; &amp;&#160;</td>
          <td class="paramname"><em>fragment_filenames</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceopen3d_1_1t_1_1pipelines_1_1slac.49#a413226d3f045745ee5604a9c4e60c9d5">PoseGraph</a> &amp;&#160;</td>
          <td class="paramname"><em>fragment_pose_graph</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structopen3d_1_1t_1_1pipelines_1_1slac_1_1_s">SLACOptimizerParams</a> &amp;&#160;</td>
          <td class="paramname"><em>params</em> = <code><a class="el" href="structopen3d_1_1t_1_1pipelines_1_1slac_1_1_s">SLACOptimizerParams</a>()</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structopen3d_1_1t_1_1pipelines_1_1slac_1_1_s-2">SLACDebugOption</a> &amp;&#160;</td>
          <td class="paramname"><em>debug_option</em> = <code><a class="el" href="structopen3d_1_1t_1_1pipelines_1_1slac_1_1_s-2">SLACDebugOption</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Simultaneous Localization and Calibration: Self-Calibration of Consumer Depth Cameras, CVPR 2014 Qian-Yi Zhou and Vladlen Koltun Estimate a shared control grid for all fragments for scene reconstruction, implemented in <a href="https://github.com/qianyizh/ElasticReconstruction">https://github.com/qianyizh/ElasticReconstruction</a>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">fragment_filenames</td><td>Vector of filenames for pointcloud fragments. </td></tr>
    <tr><td class="paramname">fragment_pose_graph</td><td>Legacy PoseGraph for pointcloud fragments. </td></tr>
    <tr><td class="paramname">params</td><td>Parameters to tune in SLAC. </td></tr>
    <tr><td class="paramname">debug_option</td><td>Debug options. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>pair of optimized registration::PoseGraph and <a class="el" href="classopen3d_1_1t_1_1pipelines_1_1slac_1_1_co">slac::ControlGrid</a>. </dd></dl>

</div>
</div>
<a id="a61c6e0c7142b9986ef11b3174ce753d6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a61c6e0c7142b9986ef11b3174ce753d6">&#9670;&nbsp;</a></span>SaveCorrespondencesForPointClouds()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::t::pipelines::slac::SaveCorrespondencesForPointClouds </td>
          <td>(</td>
          <td class="paramtype">const std::vector&lt; std::string &gt; &amp;&#160;</td>
          <td class="paramname"><em>fnames_processed</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceopen3d_1_1t_1_1pipelines_1_1slac.49#a413226d3f045745ee5604a9c4e60c9d5">PoseGraph</a> &amp;&#160;</td>
          <td class="paramname"><em>fragment_pose_graph</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structopen3d_1_1t_1_1pipelines_1_1slac_1_1_s">SLACOptimizerParams</a> &amp;&#160;</td>
          <td class="paramname"><em>params</em> = <code><a class="el" href="structopen3d_1_1t_1_1pipelines_1_1slac_1_1_s">SLACOptimizerParams</a>()</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structopen3d_1_1t_1_1pipelines_1_1slac_1_1_s-2">SLACDebugOption</a> &amp;&#160;</td>
          <td class="paramname"><em>debug_option</em> = <code><a class="el" href="structopen3d_1_1t_1_1pipelines_1_1slac_1_1_s-2">SLACDebugOption</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Read pose graph containing loop closures and odometry to compute putative correspondences between pairs of pointclouds. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">fnames_processed</td><td>Vector of filenames for processed pointcloud fragments. </td></tr>
    <tr><td class="paramname">fragment_pose_graph</td><td>Legacy PoseGraph for pointcloud fragments. </td></tr>
    <tr><td class="paramname">params</td><td>Parameters to tune in finding correspondences. </td></tr>
    <tr><td class="paramname">debug_option</td><td><a class="el" href="structopen3d_1_1t_1_1pipelines_1_1slac_1_1_s-2">SLACDebugOption</a> containing the debug options. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a6ff79b29a2253625a0bd93116dc9a9b5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6ff79b29a2253625a0bd93116dc9a9b5">&#9670;&nbsp;</a></span>VisualizeGridDeformation()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::t::pipelines::slac::VisualizeGridDeformation </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1t_1_1pipelines_1_1slac_1_1_co">ControlGrid</a> &amp;&#160;</td>
          <td class="paramname"><em>cgrid</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="aace36e0425228406cc32d2a063fba732"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aace36e0425228406cc32d2a063fba732">&#9670;&nbsp;</a></span>VisualizePointCloudCorrespondences()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::t::pipelines::slac::VisualizePointCloudCorrespondences </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_point_cloud">t::geometry::PointCloud</a> &amp;&#160;</td>
          <td class="paramname"><em>tpcd_i</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_point_cloud">t::geometry::PointCloud</a> &amp;&#160;</td>
          <td class="paramname"><em>tpcd_j</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a>&#160;</td>
          <td class="paramname"><em>correspondences</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>T_ij</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Visualize pairs with correspondences. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">tpcd_i,source</td><td>point cloud. </td></tr>
    <tr><td class="paramname">tpcd_j,target</td><td>point cloud. </td></tr>
    <tr><td class="paramname">correspondences</td><td>Putative correspondence between tcpd_i and tpcd_j. </td></tr>
    <tr><td class="paramname">T_ij</td><td>Transformation from tpcd_i to tpcd_j. Use <a class="el" href="namespaceopen3d_1_1core.html#a7dd24f81af2e4aa934e23f4abeda0726" title="Computes A^{-1} with LU factorization, where A is a N x N square matrix.">T_j.Inverse()</a> @ T_i (node transformation in a pose graph) to check global correspondences , and T_ij (edge transformation) to check pairwise correspondences. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a69c306809365803d34ee495805919edc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a69c306809365803d34ee495805919edc">&#9670;&nbsp;</a></span>VisualizePointCloudDeformation()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::t::pipelines::slac::VisualizePointCloudDeformation </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_point_cloud">geometry::PointCloud</a> &amp;&#160;</td>
          <td class="paramname"><em>tpcd_param</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1t_1_1pipelines_1_1slac_1_1_co">ControlGrid</a> &amp;&#160;</td>
          <td class="paramname"><em>ctr_grid</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="add7af2f916fcb8bbeda6fb050499f477"></a>
<h2 class="memtitle"><span class="permalink"><a href="#add7af2f916fcb8bbeda6fb050499f477">&#9670;&nbsp;</a></span>VisualizePointCloudEmbedding()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::t::pipelines::slac::VisualizePointCloudEmbedding </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_point_cloud">t::geometry::PointCloud</a> &amp;&#160;</td>
          <td class="paramname"><em>tpcd_param</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1t_1_1pipelines_1_1slac_1_1_co">ControlGrid</a> &amp;&#160;</td>
          <td class="paramname"><em>ctr_grid</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>show_lines</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1
</small></address>
</body>

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/namespaceopen3d_1_1t_1_1pipelines_1_1slac.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 10:57:55 GMT -->
</html>
