<!-- HTML header for doxygen 1.8.20-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/namespaceopen3d_1_1io_1_1rpc_1_1messages.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 11:00:28 GMT -->
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Open3D (C++ API): open3d::io::rpc::messages Namespace Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js", "TeX/AMSmath.html", "TeX/AMSsymbols.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="../../../../cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-3TQPKGV6Z3"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());
  gtag('config', 'G-3TQPKGV6Z3');
</script>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="open3d_logo.ico"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Open3D (C++ API)
   &#160;<span id="projectnumber">0.17.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.html');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.html','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceopen3d.html">open3d</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1io.html">io</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1io_1_1rpc.html">rpc</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1io_1_1rpc_1_1messages.64b">messages</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">open3d::io::rpc::messages Namespace Reference</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structopen3d_1_1io_1_1rpc_1_1messages_1_1_ar">Array</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structopen3d_1_1io_1_1rpc_1_1messages_1_1_me">MeshData</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">struct for storing <a class="el" href="structopen3d_1_1io_1_1rpc_1_1messages_1_1_me" title="struct for storing MeshData, e.g., PointClouds, TriangleMesh, ..">MeshData</a>, e.g., PointClouds, TriangleMesh, ..  <a href="structopen3d_1_1io_1_1rpc_1_1messages_1_1_me#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structopen3d_1_1io_1_1rpc_1_1messages_1_1_se">SetMeshData</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structopen3d_1_1io_1_1rpc_1_1messages_1_1_ge">GetMeshData</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">struct for defining a "get_mesh_data" message, which requests mesh data.  <a href="structopen3d_1_1io_1_1rpc_1_1messages_1_1_ge#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structopen3d_1_1io_1_1rpc_1_1messages_1_1_ca">CameraData</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">struct for storing camera data  <a href="structopen3d_1_1io_1_1rpc_1_1messages_1_1_ca#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structopen3d_1_1io_1_1rpc_1_1messages_1_1_se-2">SetCameraData</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structopen3d_1_1io_1_1rpc_1_1messages_1_1_se-5">SetTime</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structopen3d_1_1io_1_1rpc_1_1messages_1_1_se-4">SetActiveCamera</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structopen3d_1_1io_1_1rpc_1_1messages_1_1_se-3">SetProperties</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structopen3d_1_1io_1_1rpc_1_1messages_1_1_re">Request</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structopen3d_1_1io_1_1rpc_1_1messages_1_1_re-2">Reply</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structopen3d_1_1io_1_1rpc_1_1messages_1_1_st">Status</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:aa0ee276663659236ba90e2eca1c86620"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1io_1_1rpc_1_1messages.64b#aa0ee276663659236ba90e2eca1c86620">EndiannessStr</a> ()</td></tr>
<tr class="separator:aa0ee276663659236ba90e2eca1c86620"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a49e46257c3cfca664aebc77bc1ebdf8b"><td class="memTemplParams" colspan="2">template&lt;class T &gt; </td></tr>
<tr class="memitem:a49e46257c3cfca664aebc77bc1ebdf8b"><td class="memTemplItemLeft" align="right" valign="top">std::string&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1io_1_1rpc_1_1messages.64b#a49e46257c3cfca664aebc77bc1ebdf8b">TypeStr</a> ()</td></tr>
<tr class="separator:a49e46257c3cfca664aebc77bc1ebdf8b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa16f8e2763886b6550a472c93e831fc6"><td class="memItemLeft" align="right" valign="top">template&lt;&gt; </td></tr>
<tr class="memitem:aa16f8e2763886b6550a472c93e831fc6"><td class="memTemplItemLeft" align="right" valign="top">std::string&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1io_1_1rpc_1_1messages.64b#aa16f8e2763886b6550a472c93e831fc6">TypeStr&lt; float &gt;</a> ()</td></tr>
<tr class="separator:aa16f8e2763886b6550a472c93e831fc6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa583d7e1f5486dc39a4dff29b6db2c1d"><td class="memItemLeft" align="right" valign="top">template&lt;&gt; </td></tr>
<tr class="memitem:aa583d7e1f5486dc39a4dff29b6db2c1d"><td class="memTemplItemLeft" align="right" valign="top">std::string&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1io_1_1rpc_1_1messages.64b#aa583d7e1f5486dc39a4dff29b6db2c1d">TypeStr&lt; double &gt;</a> ()</td></tr>
<tr class="separator:aa583d7e1f5486dc39a4dff29b6db2c1d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6adece64391956982d0ff69a28b80ac8"><td class="memItemLeft" align="right" valign="top">template&lt;&gt; </td></tr>
<tr class="memitem:a6adece64391956982d0ff69a28b80ac8"><td class="memTemplItemLeft" align="right" valign="top">std::string&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1io_1_1rpc_1_1messages.64b#a6adece64391956982d0ff69a28b80ac8">TypeStr&lt; int8_t &gt;</a> ()</td></tr>
<tr class="separator:a6adece64391956982d0ff69a28b80ac8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9b331121620e3206089de5a7c9e66c96"><td class="memItemLeft" align="right" valign="top">template&lt;&gt; </td></tr>
<tr class="memitem:a9b331121620e3206089de5a7c9e66c96"><td class="memTemplItemLeft" align="right" valign="top">std::string&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1io_1_1rpc_1_1messages.64b#a9b331121620e3206089de5a7c9e66c96">TypeStr&lt; int16_t &gt;</a> ()</td></tr>
<tr class="separator:a9b331121620e3206089de5a7c9e66c96"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aac33e19245cd11c4aa84958bd7032d53"><td class="memItemLeft" align="right" valign="top">template&lt;&gt; </td></tr>
<tr class="memitem:aac33e19245cd11c4aa84958bd7032d53"><td class="memTemplItemLeft" align="right" valign="top">std::string&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1io_1_1rpc_1_1messages.64b#aac33e19245cd11c4aa84958bd7032d53">TypeStr&lt; int32_t &gt;</a> ()</td></tr>
<tr class="separator:aac33e19245cd11c4aa84958bd7032d53"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab35e1960249f856cd6b3c738b1e73316"><td class="memItemLeft" align="right" valign="top">template&lt;&gt; </td></tr>
<tr class="memitem:ab35e1960249f856cd6b3c738b1e73316"><td class="memTemplItemLeft" align="right" valign="top">std::string&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1io_1_1rpc_1_1messages.64b#ab35e1960249f856cd6b3c738b1e73316">TypeStr&lt; int64_t &gt;</a> ()</td></tr>
<tr class="separator:ab35e1960249f856cd6b3c738b1e73316"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa7975d63d42030233fcfffe71dbca555"><td class="memItemLeft" align="right" valign="top">template&lt;&gt; </td></tr>
<tr class="memitem:aa7975d63d42030233fcfffe71dbca555"><td class="memTemplItemLeft" align="right" valign="top">std::string&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1io_1_1rpc_1_1messages.64b#aa7975d63d42030233fcfffe71dbca555">TypeStr&lt; uint8_t &gt;</a> ()</td></tr>
<tr class="separator:aa7975d63d42030233fcfffe71dbca555"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afca8a4675731b2e88ae5768e3b6eaca6"><td class="memItemLeft" align="right" valign="top">template&lt;&gt; </td></tr>
<tr class="memitem:afca8a4675731b2e88ae5768e3b6eaca6"><td class="memTemplItemLeft" align="right" valign="top">std::string&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1io_1_1rpc_1_1messages.64b#afca8a4675731b2e88ae5768e3b6eaca6">TypeStr&lt; uint16_t &gt;</a> ()</td></tr>
<tr class="separator:afca8a4675731b2e88ae5768e3b6eaca6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad23dc832f37a9be9db2e563f9495adaf"><td class="memItemLeft" align="right" valign="top">template&lt;&gt; </td></tr>
<tr class="memitem:ad23dc832f37a9be9db2e563f9495adaf"><td class="memTemplItemLeft" align="right" valign="top">std::string&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1io_1_1rpc_1_1messages.64b#ad23dc832f37a9be9db2e563f9495adaf">TypeStr&lt; uint32_t &gt;</a> ()</td></tr>
<tr class="separator:ad23dc832f37a9be9db2e563f9495adaf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6f8728bfec054345ffa4196751c7d160"><td class="memItemLeft" align="right" valign="top">template&lt;&gt; </td></tr>
<tr class="memitem:a6f8728bfec054345ffa4196751c7d160"><td class="memTemplItemLeft" align="right" valign="top">std::string&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1io_1_1rpc_1_1messages.64b#a6f8728bfec054345ffa4196751c7d160">TypeStr&lt; uint64_t &gt;</a> ()</td></tr>
<tr class="separator:a6f8728bfec054345ffa4196751c7d160"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a id="aa0ee276663659236ba90e2eca1c86620"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa0ee276663659236ba90e2eca1c86620">&#9670;&nbsp;</a></span>EndiannessStr()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::string open3d::io::rpc::messages::EndiannessStr </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a49e46257c3cfca664aebc77bc1ebdf8b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a49e46257c3cfca664aebc77bc1ebdf8b">&#9670;&nbsp;</a></span>TypeStr()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::string open3d::io::rpc::messages::TypeStr </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Template function for converting types to their string representation. E.g. <a class="el" href="namespaceopen3d_1_1io_1_1rpc_1_1messages.64b#aa16f8e2763886b6550a472c93e831fc6">TypeStr&lt;float&gt;()</a> -&gt; "&lt;f4" </p>

</div>
</div>
<a id="aa583d7e1f5486dc39a4dff29b6db2c1d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa583d7e1f5486dc39a4dff29b6db2c1d">&#9670;&nbsp;</a></span>TypeStr&lt; double &gt;()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::string <a class="el" href="namespaceopen3d_1_1io_1_1rpc_1_1messages.64b#a49e46257c3cfca664aebc77bc1ebdf8b">open3d::io::rpc::messages::TypeStr</a>&lt; double &gt; </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aa16f8e2763886b6550a472c93e831fc6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa16f8e2763886b6550a472c93e831fc6">&#9670;&nbsp;</a></span>TypeStr&lt; float &gt;()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::string <a class="el" href="namespaceopen3d_1_1io_1_1rpc_1_1messages.64b#a49e46257c3cfca664aebc77bc1ebdf8b">open3d::io::rpc::messages::TypeStr</a>&lt; float &gt; </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a9b331121620e3206089de5a7c9e66c96"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9b331121620e3206089de5a7c9e66c96">&#9670;&nbsp;</a></span>TypeStr&lt; int16_t &gt;()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::string <a class="el" href="namespaceopen3d_1_1io_1_1rpc_1_1messages.64b#a49e46257c3cfca664aebc77bc1ebdf8b">open3d::io::rpc::messages::TypeStr</a>&lt; int16_t &gt; </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aac33e19245cd11c4aa84958bd7032d53"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aac33e19245cd11c4aa84958bd7032d53">&#9670;&nbsp;</a></span>TypeStr&lt; int32_t &gt;()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::string <a class="el" href="namespaceopen3d_1_1io_1_1rpc_1_1messages.64b#a49e46257c3cfca664aebc77bc1ebdf8b">open3d::io::rpc::messages::TypeStr</a>&lt; int32_t &gt; </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ab35e1960249f856cd6b3c738b1e73316"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab35e1960249f856cd6b3c738b1e73316">&#9670;&nbsp;</a></span>TypeStr&lt; int64_t &gt;()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::string <a class="el" href="namespaceopen3d_1_1io_1_1rpc_1_1messages.64b#a49e46257c3cfca664aebc77bc1ebdf8b">open3d::io::rpc::messages::TypeStr</a>&lt; int64_t &gt; </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a6adece64391956982d0ff69a28b80ac8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6adece64391956982d0ff69a28b80ac8">&#9670;&nbsp;</a></span>TypeStr&lt; int8_t &gt;()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::string <a class="el" href="namespaceopen3d_1_1io_1_1rpc_1_1messages.64b#a49e46257c3cfca664aebc77bc1ebdf8b">open3d::io::rpc::messages::TypeStr</a>&lt; int8_t &gt; </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="afca8a4675731b2e88ae5768e3b6eaca6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afca8a4675731b2e88ae5768e3b6eaca6">&#9670;&nbsp;</a></span>TypeStr&lt; uint16_t &gt;()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::string <a class="el" href="namespaceopen3d_1_1io_1_1rpc_1_1messages.64b#a49e46257c3cfca664aebc77bc1ebdf8b">open3d::io::rpc::messages::TypeStr</a>&lt; uint16_t &gt; </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ad23dc832f37a9be9db2e563f9495adaf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad23dc832f37a9be9db2e563f9495adaf">&#9670;&nbsp;</a></span>TypeStr&lt; uint32_t &gt;()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::string <a class="el" href="namespaceopen3d_1_1io_1_1rpc_1_1messages.64b#a49e46257c3cfca664aebc77bc1ebdf8b">open3d::io::rpc::messages::TypeStr</a>&lt; uint32_t &gt; </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a6f8728bfec054345ffa4196751c7d160"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6f8728bfec054345ffa4196751c7d160">&#9670;&nbsp;</a></span>TypeStr&lt; uint64_t &gt;()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::string <a class="el" href="namespaceopen3d_1_1io_1_1rpc_1_1messages.64b#a49e46257c3cfca664aebc77bc1ebdf8b">open3d::io::rpc::messages::TypeStr</a>&lt; uint64_t &gt; </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aa7975d63d42030233fcfffe71dbca555"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa7975d63d42030233fcfffe71dbca555">&#9670;&nbsp;</a></span>TypeStr&lt; uint8_t &gt;()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::string <a class="el" href="namespaceopen3d_1_1io_1_1rpc_1_1messages.64b#a49e46257c3cfca664aebc77bc1ebdf8b">open3d::io::rpc::messages::TypeStr</a>&lt; uint8_t &gt; </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1
</small></address>
</body>

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/namespaceopen3d_1_1io_1_1rpc_1_1messages.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 11:00:28 GMT -->
</html>
