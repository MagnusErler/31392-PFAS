<!-- HTML header for doxygen 1.8.20-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/classopen3d_1_1t_1_1geometry_1_1_r_g_b_d_image.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 10:53:07 GMT -->
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Open3D (C++ API): open3d::t::geometry::RGBDImage Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js", "TeX/AMSmath.html", "TeX/AMSsymbols.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="../../../../cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-3TQPKGV6Z3"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());
  gtag('config', 'G-3TQPKGV6Z3');
</script>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="open3d_logo.ico"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Open3D (C++ API)
   &#160;<span id="projectnumber">0.17.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.html');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.html','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceopen3d.html">open3d</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1t.html">t</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1t_1_1geometry.html">geometry</a></li><li class="navelem"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_r_g_b_d_ima">RGBDImage</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Data Fields</a>  </div>
  <div class="headertitle">
<div class="title">open3d::t::geometry::RGBDImage Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_r_g_b_d_ima" title="RGBDImage A pair of color and depth images.">RGBDImage</a> A pair of color and depth images.  
 <a href="classopen3d_1_1t_1_1geometry_1_1_r_g_b_d_ima#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="t_2geometry_2_r_g_b_d_image_8h_source.36c.de">RGBDImage.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for open3d::t::geometry::RGBDImage:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classopen3d_1_1t_1_1geometry_1_1_r_g_b_d_ima-2" usemap="#open3d::t::geometry::RGBDImage_map" alt=""/>
  <map id="open3d::t::geometry::RGBDImage_map" name="open3d::t::geometry::RGBDImage_map">
<area href="classopen3d_1_1t_1_1geometry_1_1_geometry.36" title="The base geometry class." alt="open3d::t::geometry::Geometry" shape="rect" coords="0,56,194,80"/>
<area href="classopen3d_1_1core_1_1_is_device.36f.delaye" alt="open3d::core::IsDevice" shape="rect" coords="0,0,194,24"/>
  </map>
</div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a159e5f29fef36c27a1258d8b18e37f92"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_r_g_b_d_ima#a159e5f29fef36c27a1258d8b18e37f92">RGBDImage</a> ()</td></tr>
<tr class="memdesc:a159e5f29fef36c27a1258d8b18e37f92"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default Comnstructor.  <a href="classopen3d_1_1t_1_1geometry_1_1_r_g_b_d_ima#a159e5f29fef36c27a1258d8b18e37f92">More...</a><br /></td></tr>
<tr class="separator:a159e5f29fef36c27a1258d8b18e37f92"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a85f534b1301944dc926ddeb0b0e3ebcb"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_r_g_b_d_ima#a85f534b1301944dc926ddeb0b0e3ebcb">RGBDImage</a> (const <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_image.34e.d">Image</a> &amp;<a class="el" href="_triangle_mesh_buffers_8cpp.html#aa332976d803be75beb81e81af320bfcb">color</a>, const <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_image.34e.d">Image</a> &amp;depth, bool aligned=true)</td></tr>
<tr class="memdesc:a85f534b1301944dc926ddeb0b0e3ebcb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parameterized Constructor.  <a href="classopen3d_1_1t_1_1geometry_1_1_r_g_b_d_ima#a85f534b1301944dc926ddeb0b0e3ebcb">More...</a><br /></td></tr>
<tr class="separator:a85f534b1301944dc926ddeb0b0e3ebcb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad3cf8cbc134e9f759b3030ec70142e40"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1core_1_1_device.html">core::Device</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_r_g_b_d_ima#ad3cf8cbc134e9f759b3030ec70142e40">GetDevice</a> () const override</td></tr>
<tr class="memdesc:ad3cf8cbc134e9f759b3030ec70142e40"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the device of the geometry.  <a href="classopen3d_1_1t_1_1geometry_1_1_r_g_b_d_ima#ad3cf8cbc134e9f759b3030ec70142e40">More...</a><br /></td></tr>
<tr class="separator:ad3cf8cbc134e9f759b3030ec70142e40"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6969569f54bba4371f76f80a1a141090"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_r_g_b_d_ima#a6969569f54bba4371f76f80a1a141090">~RGBDImage</a> () override</td></tr>
<tr class="separator:a6969569f54bba4371f76f80a1a141090"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a67c6663c10582ba401937683dfb8469a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_r_g_b_d_ima">RGBDImage</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_r_g_b_d_ima#a67c6663c10582ba401937683dfb8469a">Clear</a> () override</td></tr>
<tr class="memdesc:a67c6663c10582ba401937683dfb8469a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clear stored data.  <a href="classopen3d_1_1t_1_1geometry_1_1_r_g_b_d_ima#a67c6663c10582ba401937683dfb8469a">More...</a><br /></td></tr>
<tr class="separator:a67c6663c10582ba401937683dfb8469a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac9c50d60ea568e5069c17761799addda"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_r_g_b_d_ima#ac9c50d60ea568e5069c17761799addda">IsEmpty</a> () const override</td></tr>
<tr class="memdesc:ac9c50d60ea568e5069c17761799addda"><td class="mdescLeft">&#160;</td><td class="mdescRight">Is any data stored?  <a href="classopen3d_1_1t_1_1geometry_1_1_r_g_b_d_ima#ac9c50d60ea568e5069c17761799addda">More...</a><br /></td></tr>
<tr class="separator:ac9c50d60ea568e5069c17761799addda"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a80382c3b36fdbd36bcb8157977908330"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_r_g_b_d_ima#a80382c3b36fdbd36bcb8157977908330">AreAligned</a> () const</td></tr>
<tr class="memdesc:a80382c3b36fdbd36bcb8157977908330"><td class="mdescLeft">&#160;</td><td class="mdescRight">Are the depth and color images aligned (same viewpoint and resolution)?  <a href="classopen3d_1_1t_1_1geometry_1_1_r_g_b_d_ima#a80382c3b36fdbd36bcb8157977908330">More...</a><br /></td></tr>
<tr class="separator:a80382c3b36fdbd36bcb8157977908330"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab6655a5d2835f5bd99c4a3b1e75e12ba"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_r_g_b_d_ima#ab6655a5d2835f5bd99c4a3b1e75e12ba">GetMinBound</a> () const</td></tr>
<tr class="memdesc:ab6655a5d2835f5bd99c4a3b1e75e12ba"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compute min 2D coordinates for the data (always {0,0}).  <a href="classopen3d_1_1t_1_1geometry_1_1_r_g_b_d_ima#ab6655a5d2835f5bd99c4a3b1e75e12ba">More...</a><br /></td></tr>
<tr class="separator:ab6655a5d2835f5bd99c4a3b1e75e12ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2de277fa81e5f23dc3bd526342bbf0b9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_r_g_b_d_ima#a2de277fa81e5f23dc3bd526342bbf0b9">GetMaxBound</a> () const</td></tr>
<tr class="memdesc:a2de277fa81e5f23dc3bd526342bbf0b9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compute max 2D coordinates for the data.  <a href="classopen3d_1_1t_1_1geometry_1_1_r_g_b_d_ima#a2de277fa81e5f23dc3bd526342bbf0b9">More...</a><br /></td></tr>
<tr class="separator:a2de277fa81e5f23dc3bd526342bbf0b9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9e5816085957525a572d77763771c3fe"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_r_g_b_d_ima">RGBDImage</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_r_g_b_d_ima#a9e5816085957525a572d77763771c3fe">To</a> (const <a class="el" href="classopen3d_1_1core_1_1_device.html">core::Device</a> &amp;device, bool <a class="el" href="_vtk_utils_8cpp.html#acad86cc31af25e3d02b6d43041d0c6e9">copy</a>=false) const</td></tr>
<tr class="separator:a9e5816085957525a572d77763771c3fe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2b3f56d9ec458ae1be93fcde4819b12d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_r_g_b_d_ima">RGBDImage</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_r_g_b_d_ima#a2b3f56d9ec458ae1be93fcde4819b12d">Clone</a> () const</td></tr>
<tr class="memdesc:a2b3f56d9ec458ae1be93fcde4819b12d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns copy of the RGBD image on the same device.  <a href="classopen3d_1_1t_1_1geometry_1_1_r_g_b_d_ima#a2b3f56d9ec458ae1be93fcde4819b12d">More...</a><br /></td></tr>
<tr class="separator:a2b3f56d9ec458ae1be93fcde4819b12d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a821d39d1133b16c38df0b39a21f11693"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1geometry_1_1_r_g_b_d_image.37">open3d::geometry::RGBDImage</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_r_g_b_d_ima#a821d39d1133b16c38df0b39a21f11693">ToLegacy</a> () const</td></tr>
<tr class="memdesc:a821d39d1133b16c38df0b39a21f11693"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convert to the legacy <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_r_g_b_d_ima" title="RGBDImage A pair of color and depth images.">RGBDImage</a> format.  <a href="classopen3d_1_1t_1_1geometry_1_1_r_g_b_d_ima#a821d39d1133b16c38df0b39a21f11693">More...</a><br /></td></tr>
<tr class="separator:a821d39d1133b16c38df0b39a21f11693"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a018b6ceef03e54405ab732642258d1bd"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_r_g_b_d_ima#a018b6ceef03e54405ab732642258d1bd">ToString</a> () const</td></tr>
<tr class="memdesc:a018b6ceef03e54405ab732642258d1bd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Text description.  <a href="classopen3d_1_1t_1_1geometry_1_1_r_g_b_d_ima#a018b6ceef03e54405ab732642258d1bd">More...</a><br /></td></tr>
<tr class="separator:a018b6ceef03e54405ab732642258d1bd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classopen3d_1_1t_1_1geometry_1_1_geometry"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classopen3d_1_1t_1_1geometry_1_1_geometry')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36">open3d::t::geometry::Geometry</a></td></tr>
<tr class="memitem:aae3fa46ae2c36a9245da717db105a049 inherit pub_methods_classopen3d_1_1t_1_1geometry_1_1_geometry"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#aae3fa46ae2c36a9245da717db105a049">~Geometry</a> ()</td></tr>
<tr class="separator:aae3fa46ae2c36a9245da717db105a049 inherit pub_methods_classopen3d_1_1t_1_1geometry_1_1_geometry"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1c02f58e26d56a742001b61d5ddb3aee inherit pub_methods_classopen3d_1_1t_1_1geometry_1_1_geometry"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#a2058abb1036dfbfb2a9c13fbb7e2a88d">GeometryType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#a1c02f58e26d56a742001b61d5ddb3aee">GetGeometryType</a> () const</td></tr>
<tr class="memdesc:a1c02f58e26d56a742001b61d5ddb3aee inherit pub_methods_classopen3d_1_1t_1_1geometry_1_1_geometry"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns one of registered geometry types.  <a href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#a1c02f58e26d56a742001b61d5ddb3aee">More...</a><br /></td></tr>
<tr class="separator:a1c02f58e26d56a742001b61d5ddb3aee inherit pub_methods_classopen3d_1_1t_1_1geometry_1_1_geometry"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a54d95d1e8e1a279d554140a507d0ece0 inherit pub_methods_classopen3d_1_1t_1_1geometry_1_1_geometry"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#a54d95d1e8e1a279d554140a507d0ece0">Dimension</a> () const</td></tr>
<tr class="memdesc:a54d95d1e8e1a279d554140a507d0ece0 inherit pub_methods_classopen3d_1_1t_1_1geometry_1_1_geometry"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the geometry is 2D or 3D.  <a href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#a54d95d1e8e1a279d554140a507d0ece0">More...</a><br /></td></tr>
<tr class="separator:a54d95d1e8e1a279d554140a507d0ece0 inherit pub_methods_classopen3d_1_1t_1_1geometry_1_1_geometry"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f2d0f2491f0f14b3edc14a6eb458732 inherit pub_methods_classopen3d_1_1t_1_1geometry_1_1_geometry"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#a5f2d0f2491f0f14b3edc14a6eb458732">GetName</a> () const</td></tr>
<tr class="separator:a5f2d0f2491f0f14b3edc14a6eb458732 inherit pub_methods_classopen3d_1_1t_1_1geometry_1_1_geometry"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0f41994b219be5601876f12fe76974de inherit pub_methods_classopen3d_1_1t_1_1geometry_1_1_geometry"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#a0f41994b219be5601876f12fe76974de">SetName</a> (const std::string &amp;<a class="el" href="_o3_d_visualizer_8cpp.html#a9b45b3e13bd9167aab02e17e08916231">name</a>)</td></tr>
<tr class="separator:a0f41994b219be5601876f12fe76974de inherit pub_methods_classopen3d_1_1t_1_1geometry_1_1_geometry"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classopen3d_1_1core_1_1_is_device"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classopen3d_1_1core_1_1_is_device')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classopen3d_1_1core_1_1_is_device.36f.delaye">open3d::core::IsDevice</a></td></tr>
<tr class="memitem:ac8a6c234c0f58bedb9159dd3c4234265 inherit pub_methods_classopen3d_1_1core_1_1_is_device"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_is_device.36f.delaye#ac8a6c234c0f58bedb9159dd3c4234265">IsDevice</a> ()=default</td></tr>
<tr class="separator:ac8a6c234c0f58bedb9159dd3c4234265 inherit pub_methods_classopen3d_1_1core_1_1_is_device"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af2c84a4d0808e4c7c2cbf0412097fc7c inherit pub_methods_classopen3d_1_1core_1_1_is_device"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_is_device.36f.delaye#af2c84a4d0808e4c7c2cbf0412097fc7c">~IsDevice</a> ()=default</td></tr>
<tr class="separator:af2c84a4d0808e4c7c2cbf0412097fc7c inherit pub_methods_classopen3d_1_1core_1_1_is_device"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad123cbf1de3a6b6946af444fa1fc5b39 inherit pub_methods_classopen3d_1_1core_1_1_is_device"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_is_device.36f.delaye#ad123cbf1de3a6b6946af444fa1fc5b39">IsCPU</a> () const</td></tr>
<tr class="separator:ad123cbf1de3a6b6946af444fa1fc5b39 inherit pub_methods_classopen3d_1_1core_1_1_is_device"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0c611931dafc12b6a40c22799e2316b6 inherit pub_methods_classopen3d_1_1core_1_1_is_device"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_is_device.36f.delaye#a0c611931dafc12b6a40c22799e2316b6">IsCUDA</a> () const</td></tr>
<tr class="separator:a0c611931dafc12b6a40c22799e2316b6 inherit pub_methods_classopen3d_1_1core_1_1_is_device"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Data Fields</h2></td></tr>
<tr class="memitem:a01572fd967681eacf7aa7d7f38fd522a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_image.34e.d">Image</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_r_g_b_d_ima#a01572fd967681eacf7aa7d7f38fd522a">color_</a></td></tr>
<tr class="memdesc:a01572fd967681eacf7aa7d7f38fd522a"><td class="mdescLeft">&#160;</td><td class="mdescRight">The color image.  <a href="classopen3d_1_1t_1_1geometry_1_1_r_g_b_d_ima#a01572fd967681eacf7aa7d7f38fd522a">More...</a><br /></td></tr>
<tr class="separator:a01572fd967681eacf7aa7d7f38fd522a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a12b1a26c0d490cda0db37cecabb2f820"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_image.34e.d">Image</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_r_g_b_d_ima#a12b1a26c0d490cda0db37cecabb2f820">depth_</a></td></tr>
<tr class="memdesc:a12b1a26c0d490cda0db37cecabb2f820"><td class="mdescLeft">&#160;</td><td class="mdescRight">The depth image.  <a href="classopen3d_1_1t_1_1geometry_1_1_r_g_b_d_ima#a12b1a26c0d490cda0db37cecabb2f820">More...</a><br /></td></tr>
<tr class="separator:a12b1a26c0d490cda0db37cecabb2f820"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab31222964e6894c24c8ab8962012a3bf"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_r_g_b_d_ima#ab31222964e6894c24c8ab8962012a3bf">aligned_</a> = true</td></tr>
<tr class="memdesc:ab31222964e6894c24c8ab8962012a3bf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Are the depth and color images aligned (same viewpoint and resolution)?  <a href="classopen3d_1_1t_1_1geometry_1_1_r_g_b_d_ima#ab31222964e6894c24c8ab8962012a3bf">More...</a><br /></td></tr>
<tr class="separator:ab31222964e6894c24c8ab8962012a3bf"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_types_classopen3d_1_1t_1_1geometry_1_1_geometry"><td colspan="2" onclick="javascript:toggleInherit('pub_types_classopen3d_1_1t_1_1geometry_1_1_geometry')"><img src="closed.png" alt="-"/>&#160;Public Types inherited from <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36">open3d::t::geometry::Geometry</a></td></tr>
<tr class="memitem:a2058abb1036dfbfb2a9c13fbb7e2a88d inherit pub_types_classopen3d_1_1t_1_1geometry_1_1_geometry"><td class="memItemLeft" align="right" valign="top">enum class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#a2058abb1036dfbfb2a9c13fbb7e2a88d">GeometryType</a> { <br />
&#160;&#160;<a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#a2058abb1036dfbfb2a9c13fbb7e2a88da6fcdc090caeade09d0efd6253932b6f5">Unspecified</a> = 0
, <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#a2058abb1036dfbfb2a9c13fbb7e2a88daee9349b5cdfd717c7e1234edce6b72fa">PointCloud</a> = 1
, <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#a2058abb1036dfbfb2a9c13fbb7e2a88da7fe2447f30c8de08b433c3631d7d78ff">VoxelGrid</a> = 2
, <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#a2058abb1036dfbfb2a9c13fbb7e2a88da3d33fe96c4d284d37a6ee296db5e33ac">Octree</a> = 3
, <br />
&#160;&#160;<a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#a2058abb1036dfbfb2a9c13fbb7e2a88dae3e5995e4fc46bdc12e733558dd3120a">LineSet</a> = 4
, <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#a2058abb1036dfbfb2a9c13fbb7e2a88da2ad6a25f1ccff1433467bae74193446e">MeshBase</a> = 5
, <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#a2058abb1036dfbfb2a9c13fbb7e2a88da70be243de75004a602f012fece7c0fad">TriangleMesh</a> = 6
, <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#a2058abb1036dfbfb2a9c13fbb7e2a88daa79a2e14e35ed8368058ad93d3d39dc3">HalfEdgeTriangleMesh</a> = 7
, <br />
&#160;&#160;<a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#a2058abb1036dfbfb2a9c13fbb7e2a88dabe53a0541a6d36f6ecb879fa2c584b08">Image</a> = 8
, <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#a2058abb1036dfbfb2a9c13fbb7e2a88da7d64b6deb2cbf0f1712bd6e93b5755ba">RGBDImage</a> = 9
, <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#a2058abb1036dfbfb2a9c13fbb7e2a88da48e9695b4242a3a90ea76c7cc87162de">TetraMesh</a> = 10
, <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#a2058abb1036dfbfb2a9c13fbb7e2a88daff8b20067506aaf814f1e5df2494c2f1">OrientedBoundingBox</a> = 11
, <br />
&#160;&#160;<a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#a2058abb1036dfbfb2a9c13fbb7e2a88da0446516d578c6abaae2f3adc7239fa61">AxisAlignedBoundingBox</a> = 12
<br />
 }</td></tr>
<tr class="memdesc:a2058abb1036dfbfb2a9c13fbb7e2a88d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Specifies possible geometry types.  <a href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#a2058abb1036dfbfb2a9c13fbb7e2a88d">More...</a><br /></td></tr>
<tr class="separator:a2058abb1036dfbfb2a9c13fbb7e2a88d inherit pub_types_classopen3d_1_1t_1_1geometry_1_1_geometry"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_classopen3d_1_1t_1_1geometry_1_1_geometry"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_classopen3d_1_1t_1_1geometry_1_1_geometry')"><img src="closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36">open3d::t::geometry::Geometry</a></td></tr>
<tr class="memitem:a940a78b9e256dbca68764761a4706bcf inherit pro_methods_classopen3d_1_1t_1_1geometry_1_1_geometry"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#a940a78b9e256dbca68764761a4706bcf">Geometry</a> (<a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#a2058abb1036dfbfb2a9c13fbb7e2a88d">GeometryType</a> <a class="el" href="io_2file__format_2_file_p_c_d_8cpp.375.delay#aff17911edc8208aa8ddb1c7c52c78389">type</a>, int dimension)</td></tr>
<tr class="memdesc:a940a78b9e256dbca68764761a4706bcf inherit pro_methods_classopen3d_1_1t_1_1geometry_1_1_geometry"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parameterized Constructor.  <a href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#a940a78b9e256dbca68764761a4706bcf">More...</a><br /></td></tr>
<tr class="separator:a940a78b9e256dbca68764761a4706bcf inherit pro_methods_classopen3d_1_1t_1_1geometry_1_1_geometry"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_r_g_b_d_ima" title="RGBDImage A pair of color and depth images.">RGBDImage</a> A pair of color and depth images. </p>
<p>For most processing, the image pair should be aligned (same viewpoint and resolution). </p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a159e5f29fef36c27a1258d8b18e37f92"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a159e5f29fef36c27a1258d8b18e37f92">&#9670;&nbsp;</a></span>RGBDImage() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">open3d::t::geometry::RGBDImage::RGBDImage </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Default Comnstructor. </p>

</div>
</div>
<a id="a85f534b1301944dc926ddeb0b0e3ebcb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a85f534b1301944dc926ddeb0b0e3ebcb">&#9670;&nbsp;</a></span>RGBDImage() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">open3d::t::geometry::RGBDImage::RGBDImage </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_image.34e.d">Image</a> &amp;&#160;</td>
          <td class="paramname"><em>color</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_image.34e.d">Image</a> &amp;&#160;</td>
          <td class="paramname"><em>depth</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>aligned</em> = <code>true</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Parameterized Constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">color</td><td>The color image. </td></tr>
    <tr><td class="paramname">depth</td><td>The depth image. </td></tr>
    <tr><td class="paramname">aligned</td><td>Are the two images aligned (same viewpoint and resolution)? </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a6969569f54bba4371f76f80a1a141090"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6969569f54bba4371f76f80a1a141090">&#9670;&nbsp;</a></span>~RGBDImage()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">open3d::t::geometry::RGBDImage::~RGBDImage </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a80382c3b36fdbd36bcb8157977908330"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a80382c3b36fdbd36bcb8157977908330">&#9670;&nbsp;</a></span>AreAligned()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool open3d::t::geometry::RGBDImage::AreAligned </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Are the depth and color images aligned (same viewpoint and resolution)? </p>

</div>
</div>
<a id="a67c6663c10582ba401937683dfb8469a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a67c6663c10582ba401937683dfb8469a">&#9670;&nbsp;</a></span>Clear()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_r_g_b_d_ima">RGBDImage</a> &amp; open3d::t::geometry::RGBDImage::Clear </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Clear stored data. </p>

<p>Implements <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#adc2716f5911ea8a88501ce9d2f029a56">open3d::t::geometry::Geometry</a>.</p>

</div>
</div>
<a id="a2b3f56d9ec458ae1be93fcde4819b12d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2b3f56d9ec458ae1be93fcde4819b12d">&#9670;&nbsp;</a></span>Clone()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_r_g_b_d_ima">RGBDImage</a> open3d::t::geometry::RGBDImage::Clone </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns copy of the RGBD image on the same device. </p>

</div>
</div>
<a id="ad3cf8cbc134e9f759b3030ec70142e40"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad3cf8cbc134e9f759b3030ec70142e40">&#9670;&nbsp;</a></span>GetDevice()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1core_1_1_device.html">core::Device</a> open3d::t::geometry::RGBDImage::GetDevice </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the device of the geometry. </p>

<p>Implements <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#a409482298c1e3140f1b06f2410c86dee">open3d::t::geometry::Geometry</a>.</p>

</div>
</div>
<a id="a2de277fa81e5f23dc3bd526342bbf0b9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2de277fa81e5f23dc3bd526342bbf0b9">&#9670;&nbsp;</a></span>GetMaxBound()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> open3d::t::geometry::RGBDImage::GetMaxBound </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Compute max 2D coordinates for the data. </p>

</div>
</div>
<a id="ab6655a5d2835f5bd99c4a3b1e75e12ba"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab6655a5d2835f5bd99c4a3b1e75e12ba">&#9670;&nbsp;</a></span>GetMinBound()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> open3d::t::geometry::RGBDImage::GetMinBound </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Compute min 2D coordinates for the data (always {0,0}). </p>

</div>
</div>
<a id="ac9c50d60ea568e5069c17761799addda"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac9c50d60ea568e5069c17761799addda">&#9670;&nbsp;</a></span>IsEmpty()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool open3d::t::geometry::RGBDImage::IsEmpty </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Is any data stored? </p>

<p>Implements <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#a96fee92f85f6aa6ea262c38459a85f2d">open3d::t::geometry::Geometry</a>.</p>

</div>
</div>
<a id="a9e5816085957525a572d77763771c3fe"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9e5816085957525a572d77763771c3fe">&#9670;&nbsp;</a></span>To()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_r_g_b_d_ima">RGBDImage</a> open3d::t::geometry::RGBDImage::To </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_device.html">core::Device</a> &amp;&#160;</td>
          <td class="paramname"><em>device</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>copy</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Transfer the RGBD image to a specified device. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">device</td><td>The targeted device to convert to. </td></tr>
    <tr><td class="paramname">copy</td><td>If true, a new image is always created; if false, the copy is avoided when the original image is already on the target device. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a821d39d1133b16c38df0b39a21f11693"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a821d39d1133b16c38df0b39a21f11693">&#9670;&nbsp;</a></span>ToLegacy()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1geometry_1_1_r_g_b_d_image.37">open3d::geometry::RGBDImage</a> open3d::t::geometry::RGBDImage::ToLegacy </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Convert to the legacy <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_r_g_b_d_ima" title="RGBDImage A pair of color and depth images.">RGBDImage</a> format. </p>

</div>
</div>
<a id="a018b6ceef03e54405ab732642258d1bd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a018b6ceef03e54405ab732642258d1bd">&#9670;&nbsp;</a></span>ToString()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string open3d::t::geometry::RGBDImage::ToString </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Text description. </p>

</div>
</div>
<h2 class="groupheader">Field Documentation</h2>
<a id="ab31222964e6894c24c8ab8962012a3bf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab31222964e6894c24c8ab8962012a3bf">&#9670;&nbsp;</a></span>aligned_</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool open3d::t::geometry::RGBDImage::aligned_ = true</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Are the depth and color images aligned (same viewpoint and resolution)? </p>

</div>
</div>
<a id="a01572fd967681eacf7aa7d7f38fd522a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a01572fd967681eacf7aa7d7f38fd522a">&#9670;&nbsp;</a></span>color_</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_image.34e.d">Image</a> open3d::t::geometry::RGBDImage::color_</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>The color image. </p>

</div>
</div>
<a id="a12b1a26c0d490cda0db37cecabb2f820"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a12b1a26c0d490cda0db37cecabb2f820">&#9670;&nbsp;</a></span>depth_</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_image.34e.d">Image</a> open3d::t::geometry::RGBDImage::depth_</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>The depth image. </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/runner/work/Open3D/Open3D/cpp/open3d/t/geometry/<a class="el" href="t_2geometry_2_r_g_b_d_image_8h_source.36c.de">RGBDImage.h (9238339 (Tue Mar 14 18:49:09 2023 -0700))</a></li>
<li>/home/runner/work/Open3D/Open3D/cpp/open3d/t/geometry/<a class="el" href="t_2geometry_2_r_g_b_d_image_8cpp.html">RGBDImage.cpp (9238339 (Tue Mar 14 18:49:09 2023 -0700))</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1
</small></address>
</body>

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/classopen3d_1_1t_1_1geometry_1_1_r_g_b_d_image.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 10:53:09 GMT -->
</html>
