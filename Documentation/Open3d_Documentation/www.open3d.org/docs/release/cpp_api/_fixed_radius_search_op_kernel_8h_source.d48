<!-- HTML header for doxygen 1.8.20-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/_fixed_radius_search_op_kernel_8h_source.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 11:05:02 GMT -->
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Open3D (C++ API): /home/runner/work/Open3D/Open3D/cpp/open3d/ml/tensorflow/misc/FixedRadiusSearchOpKernel.h (9238339 (Tue Mar 14 18:49:09 2023 -0700)) Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js", "TeX/AMSmath.html", "TeX/AMSsymbols.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="../../../../cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-3TQPKGV6Z3"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());
  gtag('config', 'G-3TQPKGV6Z3');
</script>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="open3d_logo.ico"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Open3D (C++ API)
   &#160;<span id="projectnumber">0.17.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.html');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.html','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_df511e5bd85cec96854b39d5e1c27aa8.357.del">cpp</a></li><li class="navelem"><a class="el" href="dir_f8cc15b2217ff526bd336cf17635da2a.358.del">open3d</a></li><li class="navelem"><a class="el" href="dir_b383250e6a9804e003b118f7109c729e.4d9.del">ml</a></li><li class="navelem"><a class="el" href="dir_f019fdef81c7c1754b4aa3df09a80766.8ea.del">tensorflow</a></li><li class="navelem"><a class="el" href="dir_664ea2142e48ba49a24311f1c4edea25.c1b.del">misc</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">FixedRadiusSearchOpKernel.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_fixed_radius_search_op_kernel_8h.d47.delaye">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">// ----------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// -                        Open3D: www.open3d.org                            -</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// ----------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">// Copyright (c) 2018-2023 www.open3d.org</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">// SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">// ----------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160; </div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160; </div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &quot;../TensorFlowHelper.h&quot;</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_fixed_radius_search_impl_8h.html">open3d/core/nns/FixedRadiusSearchImpl.h</a>&quot;</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="core_2nns_2_neighbor_search_common_8h.b9b.de">open3d/core/nns/NeighborSearchCommon.h</a>&quot;</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor">#include &quot;tensorflow/core/framework/op.h&quot;</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="preprocessor">#include &quot;tensorflow/core/framework/op_kernel.h&quot;</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="preprocessor">#include &quot;tensorflow/core/lib/core/errors.h&quot;</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160; </div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">// namespace for code that is common for all kernels</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="keyword">namespace </span>fixed_radius_search_opkernel {</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160; </div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment">// class for the allocator object</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> T, <span class="keyword">class</span> TIndex&gt;</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="keyword">class </span>OutputAllocator {</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;    OutputAllocator(tensorflow::OpKernelContext* <a class="code" href="_window_8cpp.html#a0fc46c2cc73ed5bf25b870a781a2d18e">context</a>) : <a class="code" href="_window_8cpp.html#a0fc46c2cc73ed5bf25b870a781a2d18e">context</a>(<a class="code" href="_window_8cpp.html#a0fc46c2cc73ed5bf25b870a781a2d18e">context</a>) {}</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160; </div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;    <span class="keywordtype">void</span> AllocIndices(TIndex** ptr, <span class="keywordtype">size_t</span> num) {</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;        <span class="keyword">using namespace </span>tensorflow;</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;        *ptr = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;        Tensor* tensor = 0;</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;        TensorShape shape({int64_t(num)});</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;        OP_REQUIRES_OK(<a class="code" href="_window_8cpp.html#a0fc46c2cc73ed5bf25b870a781a2d18e">context</a>, <a class="code" href="_window_8cpp.html#a0fc46c2cc73ed5bf25b870a781a2d18e">context</a>-&gt;allocate_output(0, shape, &amp;tensor));</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160; </div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;        <span class="keyword">auto</span> flat_tensor = tensor-&gt;flat&lt;TIndex&gt;();</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;        *ptr = (TIndex*)flat_tensor.data();</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    }</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160; </div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    <span class="keywordtype">void</span> AllocDistances(T** ptr, <span class="keywordtype">size_t</span> num) {</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;        <span class="keyword">using namespace </span>tensorflow;</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;        *ptr = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;        Tensor* tensor = 0;</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;        TensorShape shape({int64_t(num)});</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;        OP_REQUIRES_OK(<a class="code" href="_window_8cpp.html#a0fc46c2cc73ed5bf25b870a781a2d18e">context</a>, <a class="code" href="_window_8cpp.html#a0fc46c2cc73ed5bf25b870a781a2d18e">context</a>-&gt;allocate_output(2, shape, &amp;tensor));</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;        <span class="keyword">auto</span> flat_tensor = tensor-&gt;flat&lt;T&gt;();</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;        *ptr = flat_tensor.data();</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    }</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160; </div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    tensorflow::OpKernelContext* <a class="code" href="_window_8cpp.html#a0fc46c2cc73ed5bf25b870a781a2d18e">context</a>;</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;};</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160; </div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="keyword">class </span>FixedRadiusSearchOpKernel : <span class="keyword">public</span> tensorflow::OpKernel {</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <span class="keyword">explicit</span> FixedRadiusSearchOpKernel(</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;            tensorflow::OpKernelConstruction* construction)</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        : OpKernel(construction) {</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        <span class="keyword">using namespace </span>tensorflow;</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;        <span class="keyword">using namespace </span><a class="code" href="namespaceopen3d_1_1core_1_1nns.html">open3d::core::nns</a>;</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160; </div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;        std::string metric_str;</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        OP_REQUIRES_OK(construction,</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;                       construction-&gt;GetAttr(<span class="stringliteral">&quot;metric&quot;</span>, &amp;metric_str));</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        <span class="keywordflow">if</span> (metric_str == <span class="stringliteral">&quot;L1&quot;</span>)</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;            metric = <a class="code" href="namespaceopen3d_1_1core_1_1nns.html#a1ee06f6e576842e4122fded5bab8b074ac47d80fd9e42d63aa6172795dab5d82b">L1</a>;</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span> (metric_str == <span class="stringliteral">&quot;L2&quot;</span>)</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;            metric = <a class="code" href="namespaceopen3d_1_1core_1_1nns.html#a1ee06f6e576842e4122fded5bab8b074af7368ab818cbd217d118514e15f74be2">L2</a>;</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;            metric = <a class="code" href="namespaceopen3d_1_1core_1_1nns.html#a1ee06f6e576842e4122fded5bab8b074a1d4a8da3abdf942e9ae6ad37deb5493c">Linf</a>;</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160; </div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        OP_REQUIRES_OK(construction,</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;                       construction-&gt;GetAttr(<span class="stringliteral">&quot;ignore_query_point&quot;</span>,</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;                                             &amp;ignore_query_point));</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160; </div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        OP_REQUIRES_OK(construction, construction-&gt;GetAttr(<span class="stringliteral">&quot;return_distances&quot;</span>,</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;                                                           &amp;return_distances));</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    }</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160; </div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="keywordtype">void</span> Compute(tensorflow::OpKernelContext* <a class="code" href="_window_8cpp.html#a0fc46c2cc73ed5bf25b870a781a2d18e">context</a>)<span class="keyword"> override </span>{</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        <span class="keyword">using namespace </span>tensorflow;</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        static_assert(<span class="keyword">sizeof</span>(int64) == <span class="keyword">sizeof</span>(int64_t),</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;                      <span class="stringliteral">&quot;int64 type is not compatible&quot;</span>);</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160; </div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        <span class="keyword">const</span> Tensor&amp; <a class="code" href="io_2file__format_2_file_p_c_d_8cpp.375.delay#af7f8f4a4e39e09fdb5e9f02330ecabef">points</a> = <a class="code" href="_window_8cpp.html#a0fc46c2cc73ed5bf25b870a781a2d18e">context</a>-&gt;input(0);</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        <span class="keyword">const</span> Tensor&amp; queries = <a class="code" href="_window_8cpp.html#a0fc46c2cc73ed5bf25b870a781a2d18e">context</a>-&gt;input(1);</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160; </div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        <span class="keyword">const</span> Tensor&amp; radius = <a class="code" href="_window_8cpp.html#a0fc46c2cc73ed5bf25b870a781a2d18e">context</a>-&gt;input(2);</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;        OP_REQUIRES(<a class="code" href="_window_8cpp.html#a0fc46c2cc73ed5bf25b870a781a2d18e">context</a>, TensorShapeUtils::IsScalar(radius.shape()),</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;                    errors::InvalidArgument(<span class="stringliteral">&quot;radius must be scalar, got shape &quot;</span>,</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;                                            radius.shape().DebugString()));</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160; </div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        <span class="keyword">const</span> Tensor&amp; points_row_splits = <a class="code" href="_window_8cpp.html#a0fc46c2cc73ed5bf25b870a781a2d18e">context</a>-&gt;input(3);</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        <span class="keyword">const</span> Tensor&amp; queries_row_splits = <a class="code" href="_window_8cpp.html#a0fc46c2cc73ed5bf25b870a781a2d18e">context</a>-&gt;input(4);</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160; </div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        <span class="keyword">const</span> Tensor&amp; hash_table_splits = <a class="code" href="_window_8cpp.html#a0fc46c2cc73ed5bf25b870a781a2d18e">context</a>-&gt;input(5);</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        <span class="keyword">const</span> Tensor&amp; hash_table_index = <a class="code" href="_window_8cpp.html#a0fc46c2cc73ed5bf25b870a781a2d18e">context</a>-&gt;input(6);</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        <span class="keyword">const</span> Tensor&amp; hash_table_cell_splits = <a class="code" href="_window_8cpp.html#a0fc46c2cc73ed5bf25b870a781a2d18e">context</a>-&gt;input(7);</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160; </div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        {</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;            <span class="keyword">using namespace </span><a class="code" href="namespaceopen3d_1_1ml_1_1op__util.43e.delaye">open3d::ml::op_util</a>;</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160; </div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;            <a class="code" href="classopen3d_1_1ml_1_1op__util_1_1_dim.689.de">Dim</a> num_points(<span class="stringliteral">&quot;num_points&quot;</span>);</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;            <a class="code" href="classopen3d_1_1ml_1_1op__util_1_1_dim.689.de">Dim</a> num_queries(<span class="stringliteral">&quot;num_queries&quot;</span>);</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;            <a class="code" href="classopen3d_1_1ml_1_1op__util_1_1_dim.689.de">Dim</a> batch_size(<span class="stringliteral">&quot;batch_size&quot;</span>);</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;            <a class="code" href="classopen3d_1_1ml_1_1op__util_1_1_dim.689.de">Dim</a> num_cells(<span class="stringliteral">&quot;num_cells&quot;</span>);</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;            <a class="code" href="_torch_helper_8h.html#ad1788305badc4ff022d112068d4b442d">CHECK_SHAPE</a>(<a class="code" href="_window_8cpp.html#a0fc46c2cc73ed5bf25b870a781a2d18e">context</a>, <a class="code" href="io_2file__format_2_file_p_c_d_8cpp.375.delay#af7f8f4a4e39e09fdb5e9f02330ecabef">points</a>, num_points, 3);</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;            <a class="code" href="_torch_helper_8h.html#ad1788305badc4ff022d112068d4b442d">CHECK_SHAPE</a>(<a class="code" href="_window_8cpp.html#a0fc46c2cc73ed5bf25b870a781a2d18e">context</a>, hash_table_index, num_points);</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;            <a class="code" href="_torch_helper_8h.html#ad1788305badc4ff022d112068d4b442d">CHECK_SHAPE</a>(<a class="code" href="_window_8cpp.html#a0fc46c2cc73ed5bf25b870a781a2d18e">context</a>, queries, num_queries, 3);</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;            <a class="code" href="_torch_helper_8h.html#ad1788305badc4ff022d112068d4b442d">CHECK_SHAPE</a>(<a class="code" href="_window_8cpp.html#a0fc46c2cc73ed5bf25b870a781a2d18e">context</a>, points_row_splits, batch_size + 1);</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;            <a class="code" href="_torch_helper_8h.html#ad1788305badc4ff022d112068d4b442d">CHECK_SHAPE</a>(<a class="code" href="_window_8cpp.html#a0fc46c2cc73ed5bf25b870a781a2d18e">context</a>, queries_row_splits, batch_size + 1);</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;            <a class="code" href="_torch_helper_8h.html#ad1788305badc4ff022d112068d4b442d">CHECK_SHAPE</a>(<a class="code" href="_window_8cpp.html#a0fc46c2cc73ed5bf25b870a781a2d18e">context</a>, hash_table_splits, batch_size + 1);</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;            <a class="code" href="_torch_helper_8h.html#ad1788305badc4ff022d112068d4b442d">CHECK_SHAPE</a>(<a class="code" href="_window_8cpp.html#a0fc46c2cc73ed5bf25b870a781a2d18e">context</a>, hash_table_cell_splits, num_cells + 1);</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;        }</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        Tensor* query_neighbors_row_splits = 0;</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        TensorShape query_neighbors_row_splits_shape(</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;                {queries.shape().dim_size(0) + 1});</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        OP_REQUIRES_OK(<a class="code" href="_window_8cpp.html#a0fc46c2cc73ed5bf25b870a781a2d18e">context</a>, <a class="code" href="_window_8cpp.html#a0fc46c2cc73ed5bf25b870a781a2d18e">context</a>-&gt;allocate_output(</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                                        1, query_neighbors_row_splits_shape,</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;                                        &amp;query_neighbors_row_splits));</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160; </div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        Kernel(<a class="code" href="_window_8cpp.html#a0fc46c2cc73ed5bf25b870a781a2d18e">context</a>, <a class="code" href="io_2file__format_2_file_p_c_d_8cpp.375.delay#af7f8f4a4e39e09fdb5e9f02330ecabef">points</a>, queries, radius, points_row_splits,</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;               queries_row_splits, hash_table_splits, hash_table_index,</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;               hash_table_cell_splits, *query_neighbors_row_splits);</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    }</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160; </div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">void</span> Kernel(tensorflow::OpKernelContext* <a class="code" href="_window_8cpp.html#a0fc46c2cc73ed5bf25b870a781a2d18e">context</a>,</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;                        <span class="keyword">const</span> tensorflow::Tensor&amp; <a class="code" href="io_2file__format_2_file_p_c_d_8cpp.375.delay#af7f8f4a4e39e09fdb5e9f02330ecabef">points</a>,</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;                        <span class="keyword">const</span> tensorflow::Tensor&amp; queries,</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;                        <span class="keyword">const</span> tensorflow::Tensor&amp; radius,</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;                        <span class="keyword">const</span> tensorflow::Tensor&amp; points_row_splits,</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;                        <span class="keyword">const</span> tensorflow::Tensor&amp; queries_row_splits,</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;                        <span class="keyword">const</span> tensorflow::Tensor&amp; hash_table_splits,</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;                        <span class="keyword">const</span> tensorflow::Tensor&amp; hash_table_index,</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;                        <span class="keyword">const</span> tensorflow::Tensor&amp; hash_table_cell_splits,</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;                        tensorflow::Tensor&amp; query_neighbors_row_splits) = 0;</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160; </div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="keyword">protected</span>:</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    <a class="code" href="namespaceopen3d_1_1core_1_1nns.html#a1ee06f6e576842e4122fded5bab8b074">open3d::core::nns::Metric</a> metric;</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <span class="keywordtype">bool</span> ignore_query_point;</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    <span class="keywordtype">bool</span> return_distances;</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;};</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;}  <span class="comment">// namespace fixed_radius_search_opkernel</span></div>
<div class="ttc" id="a_fixed_radius_search_impl_8h_html"><div class="ttname"><a href="_fixed_radius_search_impl_8h.html">FixedRadiusSearchImpl.h</a></div></div>
<div class="ttc" id="a_torch_helper_8h_html_ad1788305badc4ff022d112068d4b442d"><div class="ttname"><a href="_torch_helper_8h.html#ad1788305badc4ff022d112068d4b442d">CHECK_SHAPE</a></div><div class="ttdeci">#define CHECK_SHAPE(tensor,...)</div><div class="ttdef"><b>Definition:</b> TorchHelper.h:186</div></div>
<div class="ttc" id="a_window_8cpp_html_a0fc46c2cc73ed5bf25b870a781a2d18e"><div class="ttname"><a href="_window_8cpp.html#a0fc46c2cc73ed5bf25b870a781a2d18e">context</a></div><div class="ttdeci">ImGuiContext * context</div><div class="ttdef"><b>Definition:</b> Window.cpp:76</div></div>
<div class="ttc" id="aclassopen3d_1_1ml_1_1op__util_1_1_dim_html"><div class="ttname"><a href="classopen3d_1_1ml_1_1op__util_1_1_dim.689.de">open3d::ml::op_util::Dim</a></div><div class="ttdoc">Class for dimensions for which the value should be inferred.</div><div class="ttdef"><b>Definition:</b> ShapeChecking.h:50</div></div>
<div class="ttc" id="acore_2nns_2_neighbor_search_common_8h_html"><div class="ttname"><a href="core_2nns_2_neighbor_search_common_8h.b9b.de">NeighborSearchCommon.h</a></div></div>
<div class="ttc" id="aio_2file__format_2_file_p_c_d_8cpp_html_af7f8f4a4e39e09fdb5e9f02330ecabef"><div class="ttname"><a href="io_2file__format_2_file_p_c_d_8cpp.375.delay#af7f8f4a4e39e09fdb5e9f02330ecabef">points</a></div><div class="ttdeci">int points</div><div class="ttdef"><b>Definition:</b> FilePCD.cpp:54</div></div>
<div class="ttc" id="anamespaceopen3d_1_1core_1_1nns_html"><div class="ttname"><a href="namespaceopen3d_1_1core_1_1nns.html">open3d::core::nns</a></div><div class="ttdef"><b>Definition:</b> FixedRadiusIndex.cpp:16</div></div>
<div class="ttc" id="anamespaceopen3d_1_1core_1_1nns_html_a1ee06f6e576842e4122fded5bab8b074"><div class="ttname"><a href="namespaceopen3d_1_1core_1_1nns.html#a1ee06f6e576842e4122fded5bab8b074">open3d::core::nns::Metric</a></div><div class="ttdeci">Metric</div><div class="ttdoc">Supported metrics.</div><div class="ttdef"><b>Definition:</b> NeighborSearchCommon.h:19</div></div>
<div class="ttc" id="anamespaceopen3d_1_1core_1_1nns_html_a1ee06f6e576842e4122fded5bab8b074a1d4a8da3abdf942e9ae6ad37deb5493c"><div class="ttname"><a href="namespaceopen3d_1_1core_1_1nns.html#a1ee06f6e576842e4122fded5bab8b074a1d4a8da3abdf942e9ae6ad37deb5493c">open3d::core::nns::Linf</a></div><div class="ttdeci">@ Linf</div><div class="ttdef"><b>Definition:</b> NeighborSearchCommon.h:19</div></div>
<div class="ttc" id="anamespaceopen3d_1_1core_1_1nns_html_a1ee06f6e576842e4122fded5bab8b074ac47d80fd9e42d63aa6172795dab5d82b"><div class="ttname"><a href="namespaceopen3d_1_1core_1_1nns.html#a1ee06f6e576842e4122fded5bab8b074ac47d80fd9e42d63aa6172795dab5d82b">open3d::core::nns::L1</a></div><div class="ttdeci">@ L1</div><div class="ttdef"><b>Definition:</b> NeighborSearchCommon.h:19</div></div>
<div class="ttc" id="anamespaceopen3d_1_1core_1_1nns_html_a1ee06f6e576842e4122fded5bab8b074af7368ab818cbd217d118514e15f74be2"><div class="ttname"><a href="namespaceopen3d_1_1core_1_1nns.html#a1ee06f6e576842e4122fded5bab8b074af7368ab818cbd217d118514e15f74be2">open3d::core::nns::L2</a></div><div class="ttdeci">@ L2</div><div class="ttdef"><b>Definition:</b> NeighborSearchCommon.h:19</div></div>
<div class="ttc" id="anamespaceopen3d_1_1ml_1_1op__util_html"><div class="ttname"><a href="namespaceopen3d_1_1ml_1_1op__util.43e.delaye">open3d::ml::op_util</a></div><div class="ttdef"><b>Definition:</b> ShapeChecking.h:16</div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1
</small></address>
</body>

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/_fixed_radius_search_op_kernel_8h_source.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 11:05:02 GMT -->
</html>
