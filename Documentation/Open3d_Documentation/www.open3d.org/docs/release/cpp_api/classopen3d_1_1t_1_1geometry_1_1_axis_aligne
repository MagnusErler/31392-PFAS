<!-- HTML header for doxygen 1.8.20-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/classopen3d_1_1t_1_1geometry_1_1_axis_aligned_bounding_box.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 10:57:48 GMT -->
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Open3D (C++ API): open3d::t::geometry::AxisAlignedBoundingBox Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js", "TeX/AMSmath.html", "TeX/AMSsymbols.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="../../../../cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-3TQPKGV6Z3"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());
  gtag('config', 'G-3TQPKGV6Z3');
</script>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="open3d_logo.ico"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Open3D (C++ API)
   &#160;<span id="projectnumber">0.17.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.html');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.html','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceopen3d.html">open3d</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1t.html">t</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1t_1_1geometry.html">geometry</a></li><li class="navelem"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne">AxisAlignedBoundingBox</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a>  </div>
  <div class="headertitle">
<div class="title">open3d::t::geometry::AxisAlignedBoundingBox Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>A bounding box that is aligned along the coordinate axes and defined by the min_bound and max_bound.  
 <a href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="t_2geometry_2_bounding_volume_8h_source.811">BoundingVolume.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for open3d::t::geometry::AxisAlignedBoundingBox:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classopen3d_1_1t_1_1geometry_1_1_axis_aligne-2" usemap="#open3d::t::geometry::AxisAlignedBoundingBox_map" alt=""/>
  <map id="open3d::t::geometry::AxisAlignedBoundingBox_map" name="open3d::t::geometry::AxisAlignedBoundingBox_map">
<area href="classopen3d_1_1t_1_1geometry_1_1_geometry.36" title="The base geometry class." alt="open3d::t::geometry::Geometry" shape="rect" coords="0,56,268,80"/>
<area href="classopen3d_1_1t_1_1geometry_1_1_drawable_ge" title="Mix-in class for geometry types that can be visualized." alt="open3d::t::geometry::DrawableGeometry" shape="rect" coords="278,56,546,80"/>
<area href="classopen3d_1_1core_1_1_is_device.36f.delaye" alt="open3d::core::IsDevice" shape="rect" coords="0,0,268,24"/>
  </map>
</div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a8e9a1391a56cf530f283b7f13d5097f3"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne#a8e9a1391a56cf530f283b7f13d5097f3">AxisAlignedBoundingBox</a> (const <a class="el" href="classopen3d_1_1core_1_1_device.html">core::Device</a> &amp;device=<a class="el" href="classopen3d_1_1core_1_1_device.html">core::Device</a>(&quot;CPU:0&quot;))</td></tr>
<tr class="memdesc:a8e9a1391a56cf530f283b7f13d5097f3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Construct an empty <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne" title="A bounding box that is aligned along the coordinate axes and defined by the min_bound and max_bound.">AxisAlignedBoundingBox</a> on the provided device.  <a href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne#a8e9a1391a56cf530f283b7f13d5097f3">More...</a><br /></td></tr>
<tr class="separator:a8e9a1391a56cf530f283b7f13d5097f3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a914299e240dfd53f570364a6b3dd7fee"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne#a914299e240dfd53f570364a6b3dd7fee">AxisAlignedBoundingBox</a> (const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;min_bound, const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;max_bound)</td></tr>
<tr class="memdesc:a914299e240dfd53f570364a6b3dd7fee"><td class="mdescLeft">&#160;</td><td class="mdescRight">Construct an <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne" title="A bounding box that is aligned along the coordinate axes and defined by the min_bound and max_bound.">AxisAlignedBoundingBox</a> from min/max bound.  <a href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne#a914299e240dfd53f570364a6b3dd7fee">More...</a><br /></td></tr>
<tr class="separator:a914299e240dfd53f570364a6b3dd7fee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a46538148dd1afc993b9dbc4474e74b58"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne#a46538148dd1afc993b9dbc4474e74b58">~AxisAlignedBoundingBox</a> () override</td></tr>
<tr class="separator:a46538148dd1afc993b9dbc4474e74b58"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac709fd4501dc8e78476c314c5d20bd0b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1core_1_1_device.html">core::Device</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne#ac709fd4501dc8e78476c314c5d20bd0b">GetDevice</a> () const override</td></tr>
<tr class="memdesc:ac709fd4501dc8e78476c314c5d20bd0b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the device attribute of this <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne" title="A bounding box that is aligned along the coordinate axes and defined by the min_bound and max_bound.">AxisAlignedBoundingBox</a>.  <a href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne#ac709fd4501dc8e78476c314c5d20bd0b">More...</a><br /></td></tr>
<tr class="separator:ac709fd4501dc8e78476c314c5d20bd0b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0f3086805dd3caf103a7753929416697"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1core_1_1_dtype.html">core::Dtype</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne#a0f3086805dd3caf103a7753929416697">GetDtype</a> () const</td></tr>
<tr class="memdesc:a0f3086805dd3caf103a7753929416697"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the data type attribute of this <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne" title="A bounding box that is aligned along the coordinate axes and defined by the min_bound and max_bound.">AxisAlignedBoundingBox</a>.  <a href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne#a0f3086805dd3caf103a7753929416697">More...</a><br /></td></tr>
<tr class="separator:a0f3086805dd3caf103a7753929416697"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae7a99b54be7ffed2d9254dd04275635b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne">AxisAlignedBoundingBox</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne#ae7a99b54be7ffed2d9254dd04275635b">To</a> (const <a class="el" href="classopen3d_1_1core_1_1_device.html">core::Device</a> &amp;device, bool <a class="el" href="_vtk_utils_8cpp.html#acad86cc31af25e3d02b6d43041d0c6e9">copy</a>=false) const</td></tr>
<tr class="memdesc:ae7a99b54be7ffed2d9254dd04275635b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Transfer the <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne" title="A bounding box that is aligned along the coordinate axes and defined by the min_bound and max_bound.">AxisAlignedBoundingBox</a> to a specified device.  <a href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne#ae7a99b54be7ffed2d9254dd04275635b">More...</a><br /></td></tr>
<tr class="separator:ae7a99b54be7ffed2d9254dd04275635b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a474ab64810dd9ce9ffabcaa7f4760b1a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne">AxisAlignedBoundingBox</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne#a474ab64810dd9ce9ffabcaa7f4760b1a">Clone</a> () const</td></tr>
<tr class="memdesc:a474ab64810dd9ce9ffabcaa7f4760b1a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns copy of the <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne" title="A bounding box that is aligned along the coordinate axes and defined by the min_bound and max_bound.">AxisAlignedBoundingBox</a> on the same device.  <a href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne#a474ab64810dd9ce9ffabcaa7f4760b1a">More...</a><br /></td></tr>
<tr class="separator:a474ab64810dd9ce9ffabcaa7f4760b1a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5dcd6d3d1a18b715ef3311c73de6e656"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne">AxisAlignedBoundingBox</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne#a5dcd6d3d1a18b715ef3311c73de6e656">Clear</a> () override</td></tr>
<tr class="memdesc:a5dcd6d3d1a18b715ef3311c73de6e656"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clear all elements in the geometry.  <a href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne#a5dcd6d3d1a18b715ef3311c73de6e656">More...</a><br /></td></tr>
<tr class="separator:a5dcd6d3d1a18b715ef3311c73de6e656"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afc36fd956d406cac46b88be9ef2a9e55"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne#afc36fd956d406cac46b88be9ef2a9e55">IsEmpty</a> () const override</td></tr>
<tr class="memdesc:afc36fd956d406cac46b88be9ef2a9e55"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true iff the geometry is empty.  <a href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne#afc36fd956d406cac46b88be9ef2a9e55">More...</a><br /></td></tr>
<tr class="separator:afc36fd956d406cac46b88be9ef2a9e55"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1188a36b4193fa5b5ad11a71a0c5d700"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne#a1188a36b4193fa5b5ad11a71a0c5d700">SetMinBound</a> (const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;min_bound)</td></tr>
<tr class="memdesc:a1188a36b4193fa5b5ad11a71a0c5d700"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the min bound of the box. If the data type of the given tensor differs from the data type of the box, an exception will be thrown.  <a href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne#a1188a36b4193fa5b5ad11a71a0c5d700">More...</a><br /></td></tr>
<tr class="separator:a1188a36b4193fa5b5ad11a71a0c5d700"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7af54825ed6ee1df80ce6b077b2b4bc4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne#a7af54825ed6ee1df80ce6b077b2b4bc4">SetMaxBound</a> (const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;max_bound)</td></tr>
<tr class="memdesc:a7af54825ed6ee1df80ce6b077b2b4bc4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the max boundof the box. If the data type of the given tensor differs from the data type of the box, an exception will be thrown.  <a href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne#a7af54825ed6ee1df80ce6b077b2b4bc4">More...</a><br /></td></tr>
<tr class="separator:a7af54825ed6ee1df80ce6b077b2b4bc4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2a07835646e2201845369472e590ead9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne#a2a07835646e2201845369472e590ead9">SetColor</a> (const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;<a class="el" href="_triangle_mesh_buffers_8cpp.html#aa332976d803be75beb81e81af320bfcb">color</a>)</td></tr>
<tr class="memdesc:a2a07835646e2201845369472e590ead9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the color of the box. If the data type of the given tensor differs from the data type of the box, an exception will be thrown.  <a href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne#a2a07835646e2201845369472e590ead9">More...</a><br /></td></tr>
<tr class="separator:a2a07835646e2201845369472e590ead9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a07d9d2bd111c03a0329fa85bb7385890"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne#a07d9d2bd111c03a0329fa85bb7385890">GetMinBound</a> () const</td></tr>
<tr class="separator:a07d9d2bd111c03a0329fa85bb7385890"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa5467489064c095c9de0cdec07a6195d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne#aa5467489064c095c9de0cdec07a6195d">GetMaxBound</a> () const</td></tr>
<tr class="separator:aa5467489064c095c9de0cdec07a6195d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a79d57f21a99c0db18e98e13bd089a84a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne#a79d57f21a99c0db18e98e13bd089a84a">GetColor</a> () const</td></tr>
<tr class="separator:a79d57f21a99c0db18e98e13bd089a84a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7c668e33031814d5a311470b427b3ce4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne#a7c668e33031814d5a311470b427b3ce4">GetCenter</a> () const</td></tr>
<tr class="separator:a7c668e33031814d5a311470b427b3ce4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa625409d48853e07917085fcd999da35"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne">AxisAlignedBoundingBox</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne#aa625409d48853e07917085fcd999da35">Translate</a> (const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;translation, bool relative=true)</td></tr>
<tr class="memdesc:aa625409d48853e07917085fcd999da35"><td class="mdescLeft">&#160;</td><td class="mdescRight">Translate the axis-aligned box by the given translation.  <a href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne#aa625409d48853e07917085fcd999da35">More...</a><br /></td></tr>
<tr class="separator:aa625409d48853e07917085fcd999da35"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a66e3c225b52ea0356920bce09663c926"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne">AxisAlignedBoundingBox</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne#a66e3c225b52ea0356920bce09663c926">Scale</a> (double scale, const <a class="el" href="classopen3d_1_1utility_1_1optional.3c6.delay">utility::optional</a>&lt; <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &gt; &amp;center=<a class="el" href="namespaceopen3d_1_1utility.html#aecfc2255664b95bf9a25f06442b978e2">utility::nullopt</a>)</td></tr>
<tr class="memdesc:a66e3c225b52ea0356920bce09663c926"><td class="mdescLeft">&#160;</td><td class="mdescRight">Scale the axis-aligned box. If \(mi\) is the min_bound and \(ma\) is the max_bound of the axis aligned bounding box, and \(s\) and \(c\) are the provided scaling factor and center respectively, then the new min_bound and max_bound are given by \(mi = c + s (mi - c)\) and \(ma = c + s (ma - c)\). The scaling center will be the box center if it is not specified.  <a href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne#a66e3c225b52ea0356920bce09663c926">More...</a><br /></td></tr>
<tr class="separator:a66e3c225b52ea0356920bce09663c926"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4c868651c78541a8335803ce8bfa4788"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne">AxisAlignedBoundingBox</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne#a4c868651c78541a8335803ce8bfa4788">operator+=</a> (const <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne">AxisAlignedBoundingBox</a> &amp;other)</td></tr>
<tr class="memdesc:a4c868651c78541a8335803ce8bfa4788"><td class="mdescLeft">&#160;</td><td class="mdescRight">Add operation for axis-aligned bounding box. The device of ohter box must be the same as the device of the current box.  <a href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne#a4c868651c78541a8335803ce8bfa4788">More...</a><br /></td></tr>
<tr class="separator:a4c868651c78541a8335803ce8bfa4788"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4b33e0bcd1e51277b4b5fac409959310"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne#a4b33e0bcd1e51277b4b5fac409959310">GetExtent</a> () const</td></tr>
<tr class="memdesc:a4b33e0bcd1e51277b4b5fac409959310"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the extent/length of the bounding box in x, y, and z dimension.  <a href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne#a4b33e0bcd1e51277b4b5fac409959310">More...</a><br /></td></tr>
<tr class="separator:a4b33e0bcd1e51277b4b5fac409959310"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab71563f33269f0c99930417c2c8f2eec"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne#ab71563f33269f0c99930417c2c8f2eec">GetHalfExtent</a> () const</td></tr>
<tr class="memdesc:ab71563f33269f0c99930417c2c8f2eec"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the half extent of the bounding box.  <a href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne#ab71563f33269f0c99930417c2c8f2eec">More...</a><br /></td></tr>
<tr class="separator:ab71563f33269f0c99930417c2c8f2eec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a34e457d04862a2112ec59e609318fd76"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne#a34e457d04862a2112ec59e609318fd76">GetMaxExtent</a> () const</td></tr>
<tr class="separator:a34e457d04862a2112ec59e609318fd76"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad75217b1c188bfd54183887eeaea31fe"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne#ad75217b1c188bfd54183887eeaea31fe">GetXPercentage</a> (double x) const</td></tr>
<tr class="separator:ad75217b1c188bfd54183887eeaea31fe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2b06d03a704d5080722b9298dc590bd7"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne#a2b06d03a704d5080722b9298dc590bd7">GetYPercentage</a> (double y) const</td></tr>
<tr class="separator:a2b06d03a704d5080722b9298dc590bd7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a00c8e50702837b131ec1f82b5ebaa01b"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne#a00c8e50702837b131ec1f82b5ebaa01b">GetZPercentage</a> (double z) const</td></tr>
<tr class="separator:a00c8e50702837b131ec1f82b5ebaa01b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a050c96e4b1bb561665ff8adda1f53846"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne#a050c96e4b1bb561665ff8adda1f53846">Volume</a> () const</td></tr>
<tr class="memdesc:a050c96e4b1bb561665ff8adda1f53846"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the volume of the bounding box.  <a href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne#a050c96e4b1bb561665ff8adda1f53846">More...</a><br /></td></tr>
<tr class="separator:a050c96e4b1bb561665ff8adda1f53846"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a18aa6e76dd288e4640bfb6f70eaccfe4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne#a18aa6e76dd288e4640bfb6f70eaccfe4">GetBoxPoints</a> () const</td></tr>
<tr class="separator:a18aa6e76dd288e4640bfb6f70eaccfe4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeb2260ccd30e5bb40e261ebea6e05c9c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne#aeb2260ccd30e5bb40e261ebea6e05c9c">GetPointIndicesWithinBoundingBox</a> (const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;<a class="el" href="io_2file__format_2_file_p_c_d_8cpp.375.delay#af7f8f4a4e39e09fdb5e9f02330ecabef">points</a>) const</td></tr>
<tr class="memdesc:aeb2260ccd30e5bb40e261ebea6e05c9c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Indices to points that are within the bounding box.  <a href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne#aeb2260ccd30e5bb40e261ebea6e05c9c">More...</a><br /></td></tr>
<tr class="separator:aeb2260ccd30e5bb40e261ebea6e05c9c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a47ca23799c4bc3d3f4095af14387c0d3"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne#a47ca23799c4bc3d3f4095af14387c0d3">ToString</a> () const</td></tr>
<tr class="memdesc:a47ca23799c4bc3d3f4095af14387c0d3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Text description.  <a href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne#a47ca23799c4bc3d3f4095af14387c0d3">More...</a><br /></td></tr>
<tr class="separator:a47ca23799c4bc3d3f4095af14387c0d3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4733ab848aaae18bf034b95d7d3b4ef2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1geometry_1_1_axis_aligned_bou">open3d::geometry::AxisAlignedBoundingBox</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne#a4733ab848aaae18bf034b95d7d3b4ef2">ToLegacy</a> () const</td></tr>
<tr class="memdesc:a4733ab848aaae18bf034b95d7d3b4ef2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convert to a legacy Open3D axis-aligned box.  <a href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne#a4733ab848aaae18bf034b95d7d3b4ef2">More...</a><br /></td></tr>
<tr class="separator:a4733ab848aaae18bf034b95d7d3b4ef2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1f0a73700c9f2f5898bb5ef5ad40fe39"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_oriented_bo">OrientedBoundingBox</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne#a1f0a73700c9f2f5898bb5ef5ad40fe39">GetOrientedBoundingBox</a> () const</td></tr>
<tr class="memdesc:a1f0a73700c9f2f5898bb5ef5ad40fe39"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convert to an oriented box.  <a href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne#a1f0a73700c9f2f5898bb5ef5ad40fe39">More...</a><br /></td></tr>
<tr class="separator:a1f0a73700c9f2f5898bb5ef5ad40fe39"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classopen3d_1_1t_1_1geometry_1_1_geometry"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classopen3d_1_1t_1_1geometry_1_1_geometry')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36">open3d::t::geometry::Geometry</a></td></tr>
<tr class="memitem:aae3fa46ae2c36a9245da717db105a049 inherit pub_methods_classopen3d_1_1t_1_1geometry_1_1_geometry"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#aae3fa46ae2c36a9245da717db105a049">~Geometry</a> ()</td></tr>
<tr class="separator:aae3fa46ae2c36a9245da717db105a049 inherit pub_methods_classopen3d_1_1t_1_1geometry_1_1_geometry"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1c02f58e26d56a742001b61d5ddb3aee inherit pub_methods_classopen3d_1_1t_1_1geometry_1_1_geometry"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#a2058abb1036dfbfb2a9c13fbb7e2a88d">GeometryType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#a1c02f58e26d56a742001b61d5ddb3aee">GetGeometryType</a> () const</td></tr>
<tr class="memdesc:a1c02f58e26d56a742001b61d5ddb3aee inherit pub_methods_classopen3d_1_1t_1_1geometry_1_1_geometry"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns one of registered geometry types.  <a href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#a1c02f58e26d56a742001b61d5ddb3aee">More...</a><br /></td></tr>
<tr class="separator:a1c02f58e26d56a742001b61d5ddb3aee inherit pub_methods_classopen3d_1_1t_1_1geometry_1_1_geometry"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a54d95d1e8e1a279d554140a507d0ece0 inherit pub_methods_classopen3d_1_1t_1_1geometry_1_1_geometry"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#a54d95d1e8e1a279d554140a507d0ece0">Dimension</a> () const</td></tr>
<tr class="memdesc:a54d95d1e8e1a279d554140a507d0ece0 inherit pub_methods_classopen3d_1_1t_1_1geometry_1_1_geometry"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the geometry is 2D or 3D.  <a href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#a54d95d1e8e1a279d554140a507d0ece0">More...</a><br /></td></tr>
<tr class="separator:a54d95d1e8e1a279d554140a507d0ece0 inherit pub_methods_classopen3d_1_1t_1_1geometry_1_1_geometry"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f2d0f2491f0f14b3edc14a6eb458732 inherit pub_methods_classopen3d_1_1t_1_1geometry_1_1_geometry"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#a5f2d0f2491f0f14b3edc14a6eb458732">GetName</a> () const</td></tr>
<tr class="separator:a5f2d0f2491f0f14b3edc14a6eb458732 inherit pub_methods_classopen3d_1_1t_1_1geometry_1_1_geometry"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0f41994b219be5601876f12fe76974de inherit pub_methods_classopen3d_1_1t_1_1geometry_1_1_geometry"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#a0f41994b219be5601876f12fe76974de">SetName</a> (const std::string &amp;<a class="el" href="_o3_d_visualizer_8cpp.html#a9b45b3e13bd9167aab02e17e08916231">name</a>)</td></tr>
<tr class="separator:a0f41994b219be5601876f12fe76974de inherit pub_methods_classopen3d_1_1t_1_1geometry_1_1_geometry"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classopen3d_1_1core_1_1_is_device"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classopen3d_1_1core_1_1_is_device')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classopen3d_1_1core_1_1_is_device.36f.delaye">open3d::core::IsDevice</a></td></tr>
<tr class="memitem:ac8a6c234c0f58bedb9159dd3c4234265 inherit pub_methods_classopen3d_1_1core_1_1_is_device"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_is_device.36f.delaye#ac8a6c234c0f58bedb9159dd3c4234265">IsDevice</a> ()=default</td></tr>
<tr class="separator:ac8a6c234c0f58bedb9159dd3c4234265 inherit pub_methods_classopen3d_1_1core_1_1_is_device"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af2c84a4d0808e4c7c2cbf0412097fc7c inherit pub_methods_classopen3d_1_1core_1_1_is_device"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_is_device.36f.delaye#af2c84a4d0808e4c7c2cbf0412097fc7c">~IsDevice</a> ()=default</td></tr>
<tr class="separator:af2c84a4d0808e4c7c2cbf0412097fc7c inherit pub_methods_classopen3d_1_1core_1_1_is_device"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad123cbf1de3a6b6946af444fa1fc5b39 inherit pub_methods_classopen3d_1_1core_1_1_is_device"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_is_device.36f.delaye#ad123cbf1de3a6b6946af444fa1fc5b39">IsCPU</a> () const</td></tr>
<tr class="separator:ad123cbf1de3a6b6946af444fa1fc5b39 inherit pub_methods_classopen3d_1_1core_1_1_is_device"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0c611931dafc12b6a40c22799e2316b6 inherit pub_methods_classopen3d_1_1core_1_1_is_device"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_is_device.36f.delaye#a0c611931dafc12b6a40c22799e2316b6">IsCUDA</a> () const</td></tr>
<tr class="separator:a0c611931dafc12b6a40c22799e2316b6 inherit pub_methods_classopen3d_1_1core_1_1_is_device"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classopen3d_1_1t_1_1geometry_1_1_drawable_geometry"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classopen3d_1_1t_1_1geometry_1_1_drawable_geometry')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_drawable_ge">open3d::t::geometry::DrawableGeometry</a></td></tr>
<tr class="memitem:a72987c98386c0a92919cdd2c945af2a2 inherit pub_methods_classopen3d_1_1t_1_1geometry_1_1_drawable_geometry"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_drawable_ge#a72987c98386c0a92919cdd2c945af2a2">DrawableGeometry</a> ()</td></tr>
<tr class="separator:a72987c98386c0a92919cdd2c945af2a2 inherit pub_methods_classopen3d_1_1t_1_1geometry_1_1_drawable_geometry"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a212ff1f5ddbe6d15294176f3e1a74fe9 inherit pub_methods_classopen3d_1_1t_1_1geometry_1_1_drawable_geometry"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_drawable_ge#a212ff1f5ddbe6d15294176f3e1a74fe9">~DrawableGeometry</a> ()</td></tr>
<tr class="separator:a212ff1f5ddbe6d15294176f3e1a74fe9 inherit pub_methods_classopen3d_1_1t_1_1geometry_1_1_drawable_geometry"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acabee211f04815b00ceb40719359383b inherit pub_methods_classopen3d_1_1t_1_1geometry_1_1_drawable_geometry"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_drawable_ge#acabee211f04815b00ceb40719359383b">HasMaterial</a> () const</td></tr>
<tr class="memdesc:acabee211f04815b00ceb40719359383b inherit pub_methods_classopen3d_1_1t_1_1geometry_1_1_drawable_geometry"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if a material has been applied to this <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36" title="The base geometry class.">Geometry</a> with SetMaterial.  <a href="classopen3d_1_1t_1_1geometry_1_1_drawable_ge#acabee211f04815b00ceb40719359383b">More...</a><br /></td></tr>
<tr class="separator:acabee211f04815b00ceb40719359383b inherit pub_methods_classopen3d_1_1t_1_1geometry_1_1_drawable_geometry"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aea8e535253dcc2e15fef36f065b68585 inherit pub_methods_classopen3d_1_1t_1_1geometry_1_1_drawable_geometry"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_">visualization::rendering::Material</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_drawable_ge#aea8e535253dcc2e15fef36f065b68585">GetMaterial</a> ()</td></tr>
<tr class="memdesc:aea8e535253dcc2e15fef36f065b68585 inherit pub_methods_classopen3d_1_1t_1_1geometry_1_1_drawable_geometry"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get material associated with this <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36" title="The base geometry class.">Geometry</a>.  <a href="classopen3d_1_1t_1_1geometry_1_1_drawable_ge#aea8e535253dcc2e15fef36f065b68585">More...</a><br /></td></tr>
<tr class="separator:aea8e535253dcc2e15fef36f065b68585 inherit pub_methods_classopen3d_1_1t_1_1geometry_1_1_drawable_geometry"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2e0d741c69411327df29f4b1701219ce inherit pub_methods_classopen3d_1_1t_1_1geometry_1_1_drawable_geometry"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_">visualization::rendering::Material</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_drawable_ge#a2e0d741c69411327df29f4b1701219ce">GetMaterial</a> () const</td></tr>
<tr class="memdesc:a2e0d741c69411327df29f4b1701219ce inherit pub_methods_classopen3d_1_1t_1_1geometry_1_1_drawable_geometry"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get const reference to material associated with this <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36" title="The base geometry class.">Geometry</a>.  <a href="classopen3d_1_1t_1_1geometry_1_1_drawable_ge#a2e0d741c69411327df29f4b1701219ce">More...</a><br /></td></tr>
<tr class="separator:a2e0d741c69411327df29f4b1701219ce inherit pub_methods_classopen3d_1_1t_1_1geometry_1_1_drawable_geometry"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acf79ffa4c2bff4e4c4ca97131bef1288 inherit pub_methods_classopen3d_1_1t_1_1geometry_1_1_drawable_geometry"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_drawable_ge#acf79ffa4c2bff4e4c4ca97131bef1288">SetMaterial</a> (const <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_">visualization::rendering::Material</a> &amp;material)</td></tr>
<tr class="memdesc:acf79ffa4c2bff4e4c4ca97131bef1288 inherit pub_methods_classopen3d_1_1t_1_1geometry_1_1_drawable_geometry"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the material properties associate with this <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36" title="The base geometry class.">Geometry</a>.  <a href="classopen3d_1_1t_1_1geometry_1_1_drawable_ge#acf79ffa4c2bff4e4c4ca97131bef1288">More...</a><br /></td></tr>
<tr class="separator:acf79ffa4c2bff4e4c4ca97131bef1288 inherit pub_methods_classopen3d_1_1t_1_1geometry_1_1_drawable_geometry"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a0f49f997add07fc3e8a25c02cbb1a7d0"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne">AxisAlignedBoundingBox</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne#a0f49f997add07fc3e8a25c02cbb1a7d0">FromLegacy</a> (const <a class="el" href="classopen3d_1_1geometry_1_1_axis_aligned_bou">open3d::geometry::AxisAlignedBoundingBox</a> &amp;box, const <a class="el" href="classopen3d_1_1core_1_1_dtype.html">core::Dtype</a> &amp;dtype=<a class="el" href="namespaceopen3d_1_1core.html#af1357e9a6250eaf326a9dc7069c02789">core::Float32</a>, const <a class="el" href="classopen3d_1_1core_1_1_device.html">core::Device</a> &amp;device=<a class="el" href="classopen3d_1_1core_1_1_device.html">core::Device</a>(&quot;CPU:0&quot;))</td></tr>
<tr class="separator:a0f49f997add07fc3e8a25c02cbb1a7d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe3d756c766b424ee9082f55bb746bd0"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne">AxisAlignedBoundingBox</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne#afe3d756c766b424ee9082f55bb746bd0">CreateFromPoints</a> (const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;<a class="el" href="io_2file__format_2_file_p_c_d_8cpp.375.delay#af7f8f4a4e39e09fdb5e9f02330ecabef">points</a>)</td></tr>
<tr class="separator:afe3d756c766b424ee9082f55bb746bd0"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:a941d9b904863cc9cd7e0d87462b745e7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1core_1_1_device.html">core::Device</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne#a941d9b904863cc9cd7e0d87462b745e7">device_</a> = <a class="el" href="classopen3d_1_1core_1_1_device.html">core::Device</a>(&quot;CPU:0&quot;)</td></tr>
<tr class="separator:a941d9b904863cc9cd7e0d87462b745e7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3fd16e3b992ad9b89735cfbbf1e7a32b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1core_1_1_dtype.html">core::Dtype</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne#a3fd16e3b992ad9b89735cfbbf1e7a32b">dtype_</a> = <a class="el" href="namespaceopen3d_1_1core.html#af1357e9a6250eaf326a9dc7069c02789">core::Float32</a></td></tr>
<tr class="separator:a3fd16e3b992ad9b89735cfbbf1e7a32b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa981a1c496008764c714fc74fec243f2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne#aa981a1c496008764c714fc74fec243f2">min_bound_</a></td></tr>
<tr class="separator:aa981a1c496008764c714fc74fec243f2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a59d38dfb10319640a7ac8f49fb9c32d3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne#a59d38dfb10319640a7ac8f49fb9c32d3">max_bound_</a></td></tr>
<tr class="separator:a59d38dfb10319640a7ac8f49fb9c32d3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aafcea14409adf45a33abd9e96343be52"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne#aafcea14409adf45a33abd9e96343be52">color_</a></td></tr>
<tr class="separator:aafcea14409adf45a33abd9e96343be52"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_types_classopen3d_1_1t_1_1geometry_1_1_geometry"><td colspan="2" onclick="javascript:toggleInherit('pub_types_classopen3d_1_1t_1_1geometry_1_1_geometry')"><img src="closed.png" alt="-"/>&#160;Public Types inherited from <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36">open3d::t::geometry::Geometry</a></td></tr>
<tr class="memitem:a2058abb1036dfbfb2a9c13fbb7e2a88d inherit pub_types_classopen3d_1_1t_1_1geometry_1_1_geometry"><td class="memItemLeft" align="right" valign="top">enum class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#a2058abb1036dfbfb2a9c13fbb7e2a88d">GeometryType</a> { <br />
&#160;&#160;<a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#a2058abb1036dfbfb2a9c13fbb7e2a88da6fcdc090caeade09d0efd6253932b6f5">Unspecified</a> = 0
, <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#a2058abb1036dfbfb2a9c13fbb7e2a88daee9349b5cdfd717c7e1234edce6b72fa">PointCloud</a> = 1
, <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#a2058abb1036dfbfb2a9c13fbb7e2a88da7fe2447f30c8de08b433c3631d7d78ff">VoxelGrid</a> = 2
, <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#a2058abb1036dfbfb2a9c13fbb7e2a88da3d33fe96c4d284d37a6ee296db5e33ac">Octree</a> = 3
, <br />
&#160;&#160;<a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#a2058abb1036dfbfb2a9c13fbb7e2a88dae3e5995e4fc46bdc12e733558dd3120a">LineSet</a> = 4
, <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#a2058abb1036dfbfb2a9c13fbb7e2a88da2ad6a25f1ccff1433467bae74193446e">MeshBase</a> = 5
, <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#a2058abb1036dfbfb2a9c13fbb7e2a88da70be243de75004a602f012fece7c0fad">TriangleMesh</a> = 6
, <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#a2058abb1036dfbfb2a9c13fbb7e2a88daa79a2e14e35ed8368058ad93d3d39dc3">HalfEdgeTriangleMesh</a> = 7
, <br />
&#160;&#160;<a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#a2058abb1036dfbfb2a9c13fbb7e2a88dabe53a0541a6d36f6ecb879fa2c584b08">Image</a> = 8
, <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#a2058abb1036dfbfb2a9c13fbb7e2a88da7d64b6deb2cbf0f1712bd6e93b5755ba">RGBDImage</a> = 9
, <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#a2058abb1036dfbfb2a9c13fbb7e2a88da48e9695b4242a3a90ea76c7cc87162de">TetraMesh</a> = 10
, <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#a2058abb1036dfbfb2a9c13fbb7e2a88daff8b20067506aaf814f1e5df2494c2f1">OrientedBoundingBox</a> = 11
, <br />
&#160;&#160;<a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#a2058abb1036dfbfb2a9c13fbb7e2a88da0446516d578c6abaae2f3adc7239fa61">AxisAlignedBoundingBox</a> = 12
<br />
 }</td></tr>
<tr class="memdesc:a2058abb1036dfbfb2a9c13fbb7e2a88d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Specifies possible geometry types.  <a href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#a2058abb1036dfbfb2a9c13fbb7e2a88d">More...</a><br /></td></tr>
<tr class="separator:a2058abb1036dfbfb2a9c13fbb7e2a88d inherit pub_types_classopen3d_1_1t_1_1geometry_1_1_geometry"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_classopen3d_1_1t_1_1geometry_1_1_geometry"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_classopen3d_1_1t_1_1geometry_1_1_geometry')"><img src="closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36">open3d::t::geometry::Geometry</a></td></tr>
<tr class="memitem:a940a78b9e256dbca68764761a4706bcf inherit pro_methods_classopen3d_1_1t_1_1geometry_1_1_geometry"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#a940a78b9e256dbca68764761a4706bcf">Geometry</a> (<a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#a2058abb1036dfbfb2a9c13fbb7e2a88d">GeometryType</a> <a class="el" href="io_2file__format_2_file_p_c_d_8cpp.375.delay#aff17911edc8208aa8ddb1c7c52c78389">type</a>, int dimension)</td></tr>
<tr class="memdesc:a940a78b9e256dbca68764761a4706bcf inherit pro_methods_classopen3d_1_1t_1_1geometry_1_1_geometry"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parameterized Constructor.  <a href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#a940a78b9e256dbca68764761a4706bcf">More...</a><br /></td></tr>
<tr class="separator:a940a78b9e256dbca68764761a4706bcf inherit pro_methods_classopen3d_1_1t_1_1geometry_1_1_geometry"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>A bounding box that is aligned along the coordinate axes and defined by the min_bound and max_bound. </p>
<ul>
<li>(min_bound, max_bound): Lower and upper bounds of the bounding box for all axes.<ul>
<li>Usage<ul>
<li><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne#a07d9d2bd111c03a0329fa85bb7385890">AxisAlignedBoundingBox::GetMinBound()</a></li>
<li><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne#a1188a36b4193fa5b5ad11a71a0c5d700" title="Set the min bound of the box. If the data type of the given tensor differs from the data type of the ...">AxisAlignedBoundingBox::SetMinBound(const core::Tensor &amp;min_bound)</a></li>
<li><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne#aa5467489064c095c9de0cdec07a6195d">AxisAlignedBoundingBox::GetMaxBound()</a></li>
<li><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne#a7af54825ed6ee1df80ce6b077b2b4bc4" title="Set the max boundof the box. If the data type of the given tensor differs from the data type of the b...">AxisAlignedBoundingBox::SetMaxBound(const core::Tensor &amp;max_bound)</a></li>
</ul>
</li>
<li>Value tensor must have shape {3,}.</li>
<li>Value tensor must have the same data type and device.</li>
<li>Value tensor can only be float32 (default) or float64.</li>
<li>The device of the tensor determines the device of the box.</li>
</ul>
</li>
<li>color: Color of the bounding box.<ul>
<li>Usage<ul>
<li><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne#a79d57f21a99c0db18e98e13bd089a84a">AxisAlignedBoundingBox::GetColor()</a></li>
<li><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne#a2a07835646e2201845369472e590ead9" title="Set the color of the box. If the data type of the given tensor differs from the data type of the box,...">AxisAlignedBoundingBox::SetColor(const core::Tensor &amp;color)</a></li>
</ul>
</li>
<li>Value tensor must have shape {3,}.</li>
<li>Value tensor can only be float32 (default) or float64.</li>
<li>Value tensor can only be range [0.0, 1.0]. </li>
</ul>
</li>
</ul>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a8e9a1391a56cf530f283b7f13d5097f3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8e9a1391a56cf530f283b7f13d5097f3">&#9670;&nbsp;</a></span>AxisAlignedBoundingBox() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">open3d::t::geometry::AxisAlignedBoundingBox::AxisAlignedBoundingBox </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_device.html">core::Device</a> &amp;&#160;</td>
          <td class="paramname"><em>device</em> = <code><a class="el" href="classopen3d_1_1core_1_1_device.html">core::Device</a>(&quot;CPU:0&quot;)</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Construct an empty <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne" title="A bounding box that is aligned along the coordinate axes and defined by the min_bound and max_bound.">AxisAlignedBoundingBox</a> on the provided device. </p>

</div>
</div>
<a id="a914299e240dfd53f570364a6b3dd7fee"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a914299e240dfd53f570364a6b3dd7fee">&#9670;&nbsp;</a></span>AxisAlignedBoundingBox() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">open3d::t::geometry::AxisAlignedBoundingBox::AxisAlignedBoundingBox </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>min_bound</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>max_bound</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Construct an <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne" title="A bounding box that is aligned along the coordinate axes and defined by the min_bound and max_bound.">AxisAlignedBoundingBox</a> from min/max bound. </p>
<p>The <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne" title="A bounding box that is aligned along the coordinate axes and defined by the min_bound and max_bound.">AxisAlignedBoundingBox</a> will be created on the device of the given bound tensor, which must be on the same device and have the same data type. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">min_bound</td><td>Lower bounds of the bounding box for all axes. Tensor of shape {3,}, and type float32 or float64. </td></tr>
    <tr><td class="paramname">max_bound</td><td>Upper bounds of the bounding box for all axes. Tensor of shape {3,}, and type float32 or float64. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a46538148dd1afc993b9dbc4474e74b58"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a46538148dd1afc993b9dbc4474e74b58">&#9670;&nbsp;</a></span>~AxisAlignedBoundingBox()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual open3d::t::geometry::AxisAlignedBoundingBox::~AxisAlignedBoundingBox </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a5dcd6d3d1a18b715ef3311c73de6e656"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5dcd6d3d1a18b715ef3311c73de6e656">&#9670;&nbsp;</a></span>Clear()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne">AxisAlignedBoundingBox</a> &amp; open3d::t::geometry::AxisAlignedBoundingBox::Clear </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Clear all elements in the geometry. </p>

<p>Implements <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#adc2716f5911ea8a88501ce9d2f029a56">open3d::t::geometry::Geometry</a>.</p>

</div>
</div>
<a id="a474ab64810dd9ce9ffabcaa7f4760b1a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a474ab64810dd9ce9ffabcaa7f4760b1a">&#9670;&nbsp;</a></span>Clone()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne">AxisAlignedBoundingBox</a> open3d::t::geometry::AxisAlignedBoundingBox::Clone </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns copy of the <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne" title="A bounding box that is aligned along the coordinate axes and defined by the min_bound and max_bound.">AxisAlignedBoundingBox</a> on the same device. </p>

</div>
</div>
<a id="afe3d756c766b424ee9082f55bb746bd0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afe3d756c766b424ee9082f55bb746bd0">&#9670;&nbsp;</a></span>CreateFromPoints()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne">AxisAlignedBoundingBox</a> open3d::t::geometry::AxisAlignedBoundingBox::CreateFromPoints </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>points</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Creates the axis-aligned box that encloses the set of points. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">points</td><td>A list of points with data type of float32 or float64 (N x 3 tensor, where N must be larger than 3). </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne" title="A bounding box that is aligned along the coordinate axes and defined by the min_bound and max_bound.">AxisAlignedBoundingBox</a> with same data type and device as input points. </dd></dl>

</div>
</div>
<a id="a0f49f997add07fc3e8a25c02cbb1a7d0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0f49f997add07fc3e8a25c02cbb1a7d0">&#9670;&nbsp;</a></span>FromLegacy()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne">AxisAlignedBoundingBox</a> open3d::t::geometry::AxisAlignedBoundingBox::FromLegacy </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1geometry_1_1_axis_aligned_bou">open3d::geometry::AxisAlignedBoundingBox</a> &amp;&#160;</td>
          <td class="paramname"><em>box</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_dtype.html">core::Dtype</a> &amp;&#160;</td>
          <td class="paramname"><em>dtype</em> = <code><a class="el" href="namespaceopen3d_1_1core.html#af1357e9a6250eaf326a9dc7069c02789">core::Float32</a></code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_device.html">core::Device</a> &amp;&#160;</td>
          <td class="paramname"><em>device</em> = <code><a class="el" href="classopen3d_1_1core_1_1_device.html">core::Device</a>(&quot;CPU:0&quot;)</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Create an <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne" title="A bounding box that is aligned along the coordinate axes and defined by the min_bound and max_bound.">AxisAlignedBoundingBox</a> from a legacy Open3D axis-aligned box.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">box</td><td>Legacy <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne" title="A bounding box that is aligned along the coordinate axes and defined by the min_bound and max_bound.">AxisAlignedBoundingBox</a>. </td></tr>
    <tr><td class="paramname">dtype</td><td>The data type of the box for min_bound, max_bound and color. The default is float32. </td></tr>
    <tr><td class="paramname">device</td><td>The device of the box. The default is CPU:0. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a18aa6e76dd288e4640bfb6f70eaccfe4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a18aa6e76dd288e4640bfb6f70eaccfe4">&#9670;&nbsp;</a></span>GetBoxPoints()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> open3d::t::geometry::AxisAlignedBoundingBox::GetBoxPoints </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Returns the eight points that define the bounding box. The Return tensor has shape {8, 3} and data type same as the box. </p>

</div>
</div>
<a id="a7c668e33031814d5a311470b427b3ce4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7c668e33031814d5a311470b427b3ce4">&#9670;&nbsp;</a></span>GetCenter()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> open3d::t::geometry::AxisAlignedBoundingBox::GetCenter </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a79d57f21a99c0db18e98e13bd089a84a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a79d57f21a99c0db18e98e13bd089a84a">&#9670;&nbsp;</a></span>GetColor()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> open3d::t::geometry::AxisAlignedBoundingBox::GetColor </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ac709fd4501dc8e78476c314c5d20bd0b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac709fd4501dc8e78476c314c5d20bd0b">&#9670;&nbsp;</a></span>GetDevice()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1core_1_1_device.html">core::Device</a> open3d::t::geometry::AxisAlignedBoundingBox::GetDevice </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the device attribute of this <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne" title="A bounding box that is aligned along the coordinate axes and defined by the min_bound and max_bound.">AxisAlignedBoundingBox</a>. </p>

<p>Implements <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#a409482298c1e3140f1b06f2410c86dee">open3d::t::geometry::Geometry</a>.</p>

</div>
</div>
<a id="a0f3086805dd3caf103a7753929416697"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0f3086805dd3caf103a7753929416697">&#9670;&nbsp;</a></span>GetDtype()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1core_1_1_dtype.html">core::Dtype</a> open3d::t::geometry::AxisAlignedBoundingBox::GetDtype </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the data type attribute of this <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne" title="A bounding box that is aligned along the coordinate axes and defined by the min_bound and max_bound.">AxisAlignedBoundingBox</a>. </p>

</div>
</div>
<a id="a4b33e0bcd1e51277b4b5fac409959310"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4b33e0bcd1e51277b4b5fac409959310">&#9670;&nbsp;</a></span>GetExtent()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> open3d::t::geometry::AxisAlignedBoundingBox::GetExtent </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the extent/length of the bounding box in x, y, and z dimension. </p>

</div>
</div>
<a id="ab71563f33269f0c99930417c2c8f2eec"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab71563f33269f0c99930417c2c8f2eec">&#9670;&nbsp;</a></span>GetHalfExtent()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> open3d::t::geometry::AxisAlignedBoundingBox::GetHalfExtent </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the half extent of the bounding box. </p>

</div>
</div>
<a id="aa5467489064c095c9de0cdec07a6195d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa5467489064c095c9de0cdec07a6195d">&#9670;&nbsp;</a></span>GetMaxBound()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> open3d::t::geometry::AxisAlignedBoundingBox::GetMaxBound </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a34e457d04862a2112ec59e609318fd76"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a34e457d04862a2112ec59e609318fd76">&#9670;&nbsp;</a></span>GetMaxExtent()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">double open3d::t::geometry::AxisAlignedBoundingBox::GetMaxExtent </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Returns the maximum extent, i.e. the maximum of X, Y and Z axis' extents. </p>

</div>
</div>
<a id="a07d9d2bd111c03a0329fa85bb7385890"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a07d9d2bd111c03a0329fa85bb7385890">&#9670;&nbsp;</a></span>GetMinBound()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> open3d::t::geometry::AxisAlignedBoundingBox::GetMinBound </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a1f0a73700c9f2f5898bb5ef5ad40fe39"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1f0a73700c9f2f5898bb5ef5ad40fe39">&#9670;&nbsp;</a></span>GetOrientedBoundingBox()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_oriented_bo">OrientedBoundingBox</a> open3d::t::geometry::AxisAlignedBoundingBox::GetOrientedBoundingBox </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Convert to an oriented box. </p>

</div>
</div>
<a id="aeb2260ccd30e5bb40e261ebea6e05c9c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeb2260ccd30e5bb40e261ebea6e05c9c">&#9670;&nbsp;</a></span>GetPointIndicesWithinBoundingBox()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> open3d::t::geometry::AxisAlignedBoundingBox::GetPointIndicesWithinBoundingBox </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>points</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Indices to points that are within the bounding box. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">points</td><td>Tensor with {N, 3} shape, and type float32 or float64. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ad75217b1c188bfd54183887eeaea31fe"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad75217b1c188bfd54183887eeaea31fe">&#9670;&nbsp;</a></span>GetXPercentage()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double open3d::t::geometry::AxisAlignedBoundingBox::GetXPercentage </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>x</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a2b06d03a704d5080722b9298dc590bd7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2b06d03a704d5080722b9298dc590bd7">&#9670;&nbsp;</a></span>GetYPercentage()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double open3d::t::geometry::AxisAlignedBoundingBox::GetYPercentage </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>y</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a00c8e50702837b131ec1f82b5ebaa01b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a00c8e50702837b131ec1f82b5ebaa01b">&#9670;&nbsp;</a></span>GetZPercentage()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double open3d::t::geometry::AxisAlignedBoundingBox::GetZPercentage </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>z</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="afc36fd956d406cac46b88be9ef2a9e55"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afc36fd956d406cac46b88be9ef2a9e55">&#9670;&nbsp;</a></span>IsEmpty()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool open3d::t::geometry::AxisAlignedBoundingBox::IsEmpty </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns true iff the geometry is empty. </p>

<p>Implements <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#a96fee92f85f6aa6ea262c38459a85f2d">open3d::t::geometry::Geometry</a>.</p>

</div>
</div>
<a id="a4c868651c78541a8335803ce8bfa4788"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4c868651c78541a8335803ce8bfa4788">&#9670;&nbsp;</a></span>operator+=()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne">AxisAlignedBoundingBox</a> &amp; open3d::t::geometry::AxisAlignedBoundingBox::operator+= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne">AxisAlignedBoundingBox</a> &amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Add operation for axis-aligned bounding box. The device of ohter box must be the same as the device of the current box. </p>

</div>
</div>
<a id="a66e3c225b52ea0356920bce09663c926"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a66e3c225b52ea0356920bce09663c926">&#9670;&nbsp;</a></span>Scale()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne">AxisAlignedBoundingBox</a> &amp; open3d::t::geometry::AxisAlignedBoundingBox::Scale </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>scale</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1utility_1_1optional.3c6.delay">utility::optional</a>&lt; <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>center</em> = <code><a class="el" href="namespaceopen3d_1_1utility.html#aecfc2255664b95bf9a25f06442b978e2">utility::nullopt</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Scale the axis-aligned box. If \(mi\) is the min_bound and \(ma\) is the max_bound of the axis aligned bounding box, and \(s\) and \(c\) are the provided scaling factor and center respectively, then the new min_bound and max_bound are given by \(mi = c + s (mi - c)\) and \(ma = c + s (ma - c)\). The scaling center will be the box center if it is not specified. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">scale</td><td>The scale parameter. </td></tr>
    <tr><td class="paramname">center</td><td>Center used for the scaling operation. Tensor of shape {3,}, type float32 or float64, device same as the box. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a2a07835646e2201845369472e590ead9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2a07835646e2201845369472e590ead9">&#9670;&nbsp;</a></span>SetColor()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::t::geometry::AxisAlignedBoundingBox::SetColor </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>color</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set the color of the box. If the data type of the given tensor differs from the data type of the box, an exception will be thrown. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">color</td><td>Tensor with {3,} shape, and type float32 or float64, with values in range [0.0, 1.0]. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a7af54825ed6ee1df80ce6b077b2b4bc4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7af54825ed6ee1df80ce6b077b2b4bc4">&#9670;&nbsp;</a></span>SetMaxBound()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::t::geometry::AxisAlignedBoundingBox::SetMaxBound </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>max_bound</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set the max boundof the box. If the data type of the given tensor differs from the data type of the box, an exception will be thrown. </p>
<p>If the max bound makes the box invalid, it will not be set to the box. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">min_bound</td><td>Tensor with {3,} shape, and type float32 or float64. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a1188a36b4193fa5b5ad11a71a0c5d700"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1188a36b4193fa5b5ad11a71a0c5d700">&#9670;&nbsp;</a></span>SetMinBound()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::t::geometry::AxisAlignedBoundingBox::SetMinBound </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>min_bound</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set the min bound of the box. If the data type of the given tensor differs from the data type of the box, an exception will be thrown. </p>
<p>If the min bound makes the box invalid, it will not be set to the box. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">min_bound</td><td>Tensor with {3,} shape, and type float32 or float64. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ae7a99b54be7ffed2d9254dd04275635b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae7a99b54be7ffed2d9254dd04275635b">&#9670;&nbsp;</a></span>To()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne">AxisAlignedBoundingBox</a> open3d::t::geometry::AxisAlignedBoundingBox::To </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_device.html">core::Device</a> &amp;&#160;</td>
          <td class="paramname"><em>device</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>copy</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Transfer the <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne" title="A bounding box that is aligned along the coordinate axes and defined by the min_bound and max_bound.">AxisAlignedBoundingBox</a> to a specified device. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">device</td><td>The targeted device to convert to. </td></tr>
    <tr><td class="paramname">copy</td><td>If true, a new <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne" title="A bounding box that is aligned along the coordinate axes and defined by the min_bound and max_bound.">AxisAlignedBoundingBox</a> is always created; If false, the copy is avoided when the original <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne" title="A bounding box that is aligned along the coordinate axes and defined by the min_bound and max_bound.">AxisAlignedBoundingBox</a> is already on the targeted device. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a4733ab848aaae18bf034b95d7d3b4ef2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4733ab848aaae18bf034b95d7d3b4ef2">&#9670;&nbsp;</a></span>ToLegacy()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1geometry_1_1_axis_aligned_bou">open3d::geometry::AxisAlignedBoundingBox</a> open3d::t::geometry::AxisAlignedBoundingBox::ToLegacy </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Convert to a legacy Open3D axis-aligned box. </p>

</div>
</div>
<a id="a47ca23799c4bc3d3f4095af14387c0d3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a47ca23799c4bc3d3f4095af14387c0d3">&#9670;&nbsp;</a></span>ToString()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string open3d::t::geometry::AxisAlignedBoundingBox::ToString </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Text description. </p>

</div>
</div>
<a id="aa625409d48853e07917085fcd999da35"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa625409d48853e07917085fcd999da35">&#9670;&nbsp;</a></span>Translate()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne">AxisAlignedBoundingBox</a> &amp; open3d::t::geometry::AxisAlignedBoundingBox::Translate </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>translation</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>relative</em> = <code>true</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Translate the axis-aligned box by the given translation. </p>
<p>If relative is true, the translation is applied to the current min and max bound. If relative is false, the translation is applied to make the box's center at the given translation.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">translation</td><td>Translation tensor of shape (3,), type float32 or float64, device same as the box. </td></tr>
    <tr><td class="paramname">relative</td><td>Whether to perform relative translation. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a050c96e4b1bb561665ff8adda1f53846"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a050c96e4b1bb561665ff8adda1f53846">&#9670;&nbsp;</a></span>Volume()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">double open3d::t::geometry::AxisAlignedBoundingBox::Volume </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the volume of the bounding box. </p>

</div>
</div>
<h2 class="groupheader">Field Documentation</h2>
<a id="aafcea14409adf45a33abd9e96343be52"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aafcea14409adf45a33abd9e96343be52">&#9670;&nbsp;</a></span>color_</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> open3d::t::geometry::AxisAlignedBoundingBox::color_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a941d9b904863cc9cd7e0d87462b745e7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a941d9b904863cc9cd7e0d87462b745e7">&#9670;&nbsp;</a></span>device_</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1core_1_1_device.html">core::Device</a> open3d::t::geometry::AxisAlignedBoundingBox::device_ = <a class="el" href="classopen3d_1_1core_1_1_device.html">core::Device</a>(&quot;CPU:0&quot;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a3fd16e3b992ad9b89735cfbbf1e7a32b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3fd16e3b992ad9b89735cfbbf1e7a32b">&#9670;&nbsp;</a></span>dtype_</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1core_1_1_dtype.html">core::Dtype</a> open3d::t::geometry::AxisAlignedBoundingBox::dtype_ = <a class="el" href="namespaceopen3d_1_1core.html#af1357e9a6250eaf326a9dc7069c02789">core::Float32</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a59d38dfb10319640a7ac8f49fb9c32d3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a59d38dfb10319640a7ac8f49fb9c32d3">&#9670;&nbsp;</a></span>max_bound_</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> open3d::t::geometry::AxisAlignedBoundingBox::max_bound_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aa981a1c496008764c714fc74fec243f2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa981a1c496008764c714fc74fec243f2">&#9670;&nbsp;</a></span>min_bound_</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> open3d::t::geometry::AxisAlignedBoundingBox::min_bound_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/runner/work/Open3D/Open3D/cpp/open3d/t/geometry/<a class="el" href="t_2geometry_2_bounding_volume_8h_source.811">BoundingVolume.h (9238339 (Tue Mar 14 18:49:09 2023 -0700))</a></li>
<li>/home/runner/work/Open3D/Open3D/cpp/open3d/t/geometry/<a class="el" href="t_2geometry_2_bounding_volume_8cpp.813.delay">BoundingVolume.cpp (9238339 (Tue Mar 14 18:49:09 2023 -0700))</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1
</small></address>
</body>

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/classopen3d_1_1t_1_1geometry_1_1_axis_aligned_bounding_box.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 10:57:48 GMT -->
</html>
