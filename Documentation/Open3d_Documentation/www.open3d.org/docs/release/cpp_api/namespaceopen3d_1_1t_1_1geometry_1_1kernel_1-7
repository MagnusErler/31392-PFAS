<!-- HTML header for doxygen 1.8.20-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/namespaceopen3d_1_1t_1_1geometry_1_1kernel_1_1voxel__grid.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 11:02:13 GMT -->
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Open3D (C++ API): open3d::t::geometry::kernel::voxel_grid Namespace Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js", "TeX/AMSmath.html", "TeX/AMSsymbols.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="../../../../cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-3TQPKGV6Z3"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());
  gtag('config', 'G-3TQPKGV6Z3');
</script>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="open3d_logo.ico"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Open3D (C++ API)
   &#160;<span id="projectnumber">0.17.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.html');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.html','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceopen3d.html">open3d</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1t.html">t</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1t_1_1geometry.html">geometry</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel.4">kernel</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7">voxel_grid</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">open3d::t::geometry::kernel::voxel_grid Namespace Reference</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structopen3d_1_1t_1_1geometry_1_1kernel_1_1v">Coord3i</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structopen3d_1_1t_1_1geometry_1_1kernel_1_1v-2">Coord3iHash</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structopen3d_1_1t_1_1geometry_1_1kernel_1_1v-3">MiniVecCache</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:adc304bcd8040c9a29d7ab3b6fe581d1c"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#adc304bcd8040c9a29d7ab3b6fe581d1c">index_t</a> = int</td></tr>
<tr class="separator:adc304bcd8040c9a29d7ab3b6fe581d1c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aad9ea56afd8a9f92cb0bbd7db122a451"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#aad9ea56afd8a9f92cb0bbd7db122a451">ArrayIndexer</a> = <a class="el" href="classopen3d_1_1t_1_1geometry_1_1kernel_1_1_t-2">TArrayIndexer</a>&lt; <a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#adc304bcd8040c9a29d7ab3b6fe581d1c">index_t</a> &gt;</td></tr>
<tr class="separator:aad9ea56afd8a9f92cb0bbd7db122a451"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a05922900fbfb49cfb699b4feb92c19a1"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#a05922900fbfb49cfb699b4feb92c19a1">PointCloudTouch</a> (std::shared_ptr&lt; <a class="el" href="classopen3d_1_1core_1_1_hash_map.html">core::HashMap</a> &gt; &amp;hashmap, const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;<a class="el" href="io_2file__format_2_file_p_c_d_8cpp.375.delay#af7f8f4a4e39e09fdb5e9f02330ecabef">points</a>, <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;voxel_block_coords, <a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#adc304bcd8040c9a29d7ab3b6fe581d1c">index_t</a> voxel_grid_resolution, float voxel_size, float sdf_trunc)</td></tr>
<tr class="separator:a05922900fbfb49cfb699b4feb92c19a1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad86e541615291ec4f93257e3738779e8"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#ad86e541615291ec4f93257e3738779e8">DepthTouch</a> (std::shared_ptr&lt; <a class="el" href="classopen3d_1_1core_1_1_hash_map.html">core::HashMap</a> &gt; &amp;hashmap, const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;depth, const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;intrinsic, const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;extrinsic, <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;voxel_block_coords, <a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#adc304bcd8040c9a29d7ab3b6fe581d1c">index_t</a> voxel_grid_resolution, float voxel_size, float sdf_trunc, float depth_scale, float depth_max, <a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#adc304bcd8040c9a29d7ab3b6fe581d1c">index_t</a> <a class="el" href="_triangle_mesh_buffers_8cpp.html#a3f19cd85df5258a38e4618a89bd5ff46">stride</a>)</td></tr>
<tr class="separator:ad86e541615291ec4f93257e3738779e8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a57f91a1331bbac82bf20ac00361bd275"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#a57f91a1331bbac82bf20ac00361bd275">GetVoxelCoordinatesAndFlattenedIndices</a> (const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;buf_indices, const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;block_keys, <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;voxel_coords, <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;flattened_indices, <a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#adc304bcd8040c9a29d7ab3b6fe581d1c">index_t</a> block_resolution, float voxel_size)</td></tr>
<tr class="separator:a57f91a1331bbac82bf20ac00361bd275"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0f28ac1e07c7d18a55b1a37d374d4596"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#a0f28ac1e07c7d18a55b1a37d374d4596">Integrate</a> (const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;depth, const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;<a class="el" href="_triangle_mesh_buffers_8cpp.html#aa332976d803be75beb81e81af320bfcb">color</a>, const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;block_indices, const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;block_keys, <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_tensor_map">TensorMap</a> &amp;block_value_map, const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;depth_intrinsic, const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;color_intrinsic, const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;extrinsic, <a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#adc304bcd8040c9a29d7ab3b6fe581d1c">index_t</a> resolution, float voxel_size, float sdf_trunc, float depth_scale, float depth_max)</td></tr>
<tr class="separator:a0f28ac1e07c7d18a55b1a37d374d4596"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5d3febe9c1adef0a03d2ec055006305d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#a5d3febe9c1adef0a03d2ec055006305d">EstimateRange</a> (const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;block_keys, <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;range_minmax_map, const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;intrinsics, const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;extrinsics, int h, int w, int down_factor, int64_t block_resolution, float voxel_size, float depth_min, float depth_max, <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;fragment_buffer)</td></tr>
<tr class="separator:a5d3febe9c1adef0a03d2ec055006305d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4d2a6b13191e3c12fa38623a5a6f61c3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#a4d2a6b13191e3c12fa38623a5a6f61c3">RayCast</a> (std::shared_ptr&lt; <a class="el" href="classopen3d_1_1core_1_1_hash_map.html">core::HashMap</a> &gt; &amp;hashmap, const <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_tensor_map">TensorMap</a> &amp;block_value_map, const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;range_map, <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_tensor_map">TensorMap</a> &amp;renderings_map, const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;intrinsic, const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;extrinsic, <a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#adc304bcd8040c9a29d7ab3b6fe581d1c">index_t</a> h, <a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#adc304bcd8040c9a29d7ab3b6fe581d1c">index_t</a> w, <a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#adc304bcd8040c9a29d7ab3b6fe581d1c">index_t</a> block_resolution, float voxel_size, float depth_scale, float depth_min, float depth_max, float weight_threshold, float trunc_voxel_multiplier, int range_map_down_factor)</td></tr>
<tr class="separator:a4d2a6b13191e3c12fa38623a5a6f61c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a27c6484942fbbadb461758464b1500c3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#a27c6484942fbbadb461758464b1500c3">ExtractPointCloud</a> (const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;block_indices, const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;nb_block_indices, const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;nb_block_masks, const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;block_keys, const <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_tensor_map">TensorMap</a> &amp;block_value_map, <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;<a class="el" href="io_2file__format_2_file_p_c_d_8cpp.375.delay#af7f8f4a4e39e09fdb5e9f02330ecabef">points</a>, <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;normals, <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;colors, <a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#adc304bcd8040c9a29d7ab3b6fe581d1c">index_t</a> block_resolution, float voxel_size, float weight_threshold, int &amp;valid_size)</td></tr>
<tr class="separator:a27c6484942fbbadb461758464b1500c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a11c99863326cd396fa5f3e23424df9e8"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#a11c99863326cd396fa5f3e23424df9e8">ExtractTriangleMesh</a> (const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;block_indices, const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;inv_block_indices, const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;nb_block_indices, const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;nb_block_masks, const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;block_keys, const <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_tensor_map">TensorMap</a> &amp;block_value_map, <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;vertices, <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;triangles, <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;vertex_normals, <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;vertex_colors, <a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#adc304bcd8040c9a29d7ab3b6fe581d1c">index_t</a> block_resolution, float voxel_size, float weight_threshold, int &amp;vertex_count)</td></tr>
<tr class="separator:a11c99863326cd396fa5f3e23424df9e8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a82eb7e97595aa4cff023dcbda5613815"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#a82eb7e97595aa4cff023dcbda5613815">PointCloudTouchCPU</a> (std::shared_ptr&lt; <a class="el" href="classopen3d_1_1core_1_1_hash_map.html">core::HashMap</a> &gt; &amp;hashmap, const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;<a class="el" href="io_2file__format_2_file_p_c_d_8cpp.375.delay#af7f8f4a4e39e09fdb5e9f02330ecabef">points</a>, <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;voxel_block_coords, <a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#adc304bcd8040c9a29d7ab3b6fe581d1c">index_t</a> voxel_grid_resolution, float voxel_size, float sdf_trunc)</td></tr>
<tr class="memdesc:a82eb7e97595aa4cff023dcbda5613815"><td class="mdescLeft">&#160;</td><td class="mdescRight">CPU.  <a href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#a82eb7e97595aa4cff023dcbda5613815">More...</a><br /></td></tr>
<tr class="separator:a82eb7e97595aa4cff023dcbda5613815"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aed57853f2c85dbf5cf59af5258de9059"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#aed57853f2c85dbf5cf59af5258de9059">DepthTouchCPU</a> (std::shared_ptr&lt; <a class="el" href="classopen3d_1_1core_1_1_hash_map.html">core::HashMap</a> &gt; &amp;hashmap, const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;depth, const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;intrinsic, const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;extrinsic, <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;voxel_block_coords, <a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#adc304bcd8040c9a29d7ab3b6fe581d1c">index_t</a> voxel_grid_resolution, float voxel_size, float sdf_trunc, float depth_scale, float depth_max, <a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#adc304bcd8040c9a29d7ab3b6fe581d1c">index_t</a> <a class="el" href="_triangle_mesh_buffers_8cpp.html#a3f19cd85df5258a38e4618a89bd5ff46">stride</a>)</td></tr>
<tr class="separator:aed57853f2c85dbf5cf59af5258de9059"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0d30100aa2b4a079a3bc5ecf7a873da7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#a0d30100aa2b4a079a3bc5ecf7a873da7">GetVoxelCoordinatesAndFlattenedIndicesCPU</a> (const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;buf_indices, const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;block_keys, <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;voxel_coords, <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;flattened_indices, <a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#adc304bcd8040c9a29d7ab3b6fe581d1c">index_t</a> block_resolution, float voxel_size)</td></tr>
<tr class="separator:a0d30100aa2b4a079a3bc5ecf7a873da7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a63aa23d64bcdcce1f4ecfb5b40d721f7"><td class="memTemplParams" colspan="2">template&lt;typename input_depth_t , typename input_color_t , typename tsdf_t , typename weight_t , typename color_t &gt; </td></tr>
<tr class="memitem:a63aa23d64bcdcce1f4ecfb5b40d721f7"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#a63aa23d64bcdcce1f4ecfb5b40d721f7">IntegrateCPU</a> (const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;depth, const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;<a class="el" href="_triangle_mesh_buffers_8cpp.html#aa332976d803be75beb81e81af320bfcb">color</a>, const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;block_indices, const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;block_keys, <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_tensor_map">TensorMap</a> &amp;block_value_map, const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;depth_intrinsic, const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;color_intrinsic, const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;extrinsic, <a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#adc304bcd8040c9a29d7ab3b6fe581d1c">index_t</a> resolution, float voxel_size, float sdf_trunc, float depth_scale, float depth_max)</td></tr>
<tr class="separator:a63aa23d64bcdcce1f4ecfb5b40d721f7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae16eb45b2d8b26ed9f3200d9ca0f2f06"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#ae16eb45b2d8b26ed9f3200d9ca0f2f06">EstimateRangeCPU</a> (const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;block_keys, <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;range_minmax_map, const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;intrinsics, const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;extrinsics, int h, int w, int down_factor, int64_t block_resolution, float voxel_size, float depth_min, float depth_max, <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;fragment_buffer)</td></tr>
<tr class="separator:ae16eb45b2d8b26ed9f3200d9ca0f2f06"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adae72f66621afad4b571b04f66da2409"><td class="memTemplParams" colspan="2">template&lt;typename tsdf_t , typename weight_t , typename color_t &gt; </td></tr>
<tr class="memitem:adae72f66621afad4b571b04f66da2409"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#adae72f66621afad4b571b04f66da2409">RayCastCPU</a> (std::shared_ptr&lt; <a class="el" href="classopen3d_1_1core_1_1_hash_map.html">core::HashMap</a> &gt; &amp;hashmap, const <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_tensor_map">TensorMap</a> &amp;block_value_map, const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;range_map, <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_tensor_map">TensorMap</a> &amp;renderings_map, const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;intrinsic, const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;extrinsic, <a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#adc304bcd8040c9a29d7ab3b6fe581d1c">index_t</a> h, <a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#adc304bcd8040c9a29d7ab3b6fe581d1c">index_t</a> w, <a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#adc304bcd8040c9a29d7ab3b6fe581d1c">index_t</a> block_resolution, float voxel_size, float depth_scale, float depth_min, float depth_max, float weight_threshold, float trunc_voxel_multiplier, int range_map_down_factor)</td></tr>
<tr class="separator:adae72f66621afad4b571b04f66da2409"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a03cf1d86d3e5929ef35796d1099efe27"><td class="memTemplParams" colspan="2">template&lt;typename tsdf_t , typename weight_t , typename color_t &gt; </td></tr>
<tr class="memitem:a03cf1d86d3e5929ef35796d1099efe27"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#a03cf1d86d3e5929ef35796d1099efe27">ExtractPointCloudCPU</a> (const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;block_indices, const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;nb_block_indices, const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;nb_block_masks, const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;block_keys, const <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_tensor_map">TensorMap</a> &amp;block_value_map, <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;<a class="el" href="io_2file__format_2_file_p_c_d_8cpp.375.delay#af7f8f4a4e39e09fdb5e9f02330ecabef">points</a>, <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;normals, <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;colors, <a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#adc304bcd8040c9a29d7ab3b6fe581d1c">index_t</a> block_resolution, float voxel_size, float weight_threshold, <a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#adc304bcd8040c9a29d7ab3b6fe581d1c">index_t</a> &amp;valid_size)</td></tr>
<tr class="separator:a03cf1d86d3e5929ef35796d1099efe27"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab9ae71c9b15bc5282939dae33545e2a8"><td class="memTemplParams" colspan="2">template&lt;typename tsdf_t , typename weight_t , typename color_t &gt; </td></tr>
<tr class="memitem:ab9ae71c9b15bc5282939dae33545e2a8"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#ab9ae71c9b15bc5282939dae33545e2a8">ExtractTriangleMeshCPU</a> (const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;block_indices, const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;inv_block_indices, const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;nb_block_indices, const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;nb_block_masks, const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;block_keys, const <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_tensor_map">TensorMap</a> &amp;block_value_map, <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;vertices, <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;triangles, <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;vertex_normals, <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;vertex_colors, <a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#adc304bcd8040c9a29d7ab3b6fe581d1c">index_t</a> block_resolution, float voxel_size, float weight_threshold, <a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#adc304bcd8040c9a29d7ab3b6fe581d1c">index_t</a> &amp;vertex_count)</td></tr>
<tr class="separator:ab9ae71c9b15bc5282939dae33545e2a8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a050cc0d0e7b8f4a58acb5477a3f247c3"><td class="memItemLeft" align="right" valign="top">template void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#a050cc0d0e7b8f4a58acb5477a3f247c3">IntegrateCPU&lt; uint16_t, uint8_t, float, uint16_t, uint16_t &gt;</a> (<a class="el" href="_voxel_block_grid_c_p_u_8cpp.html#a0ccb6862c9411b810fd21eb2c398537b">FN_ARGUMENTS</a>)</td></tr>
<tr class="separator:a050cc0d0e7b8f4a58acb5477a3f247c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6fd5382eefc491be2429f87a05cba25a"><td class="memItemLeft" align="right" valign="top">template void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#a6fd5382eefc491be2429f87a05cba25a">IntegrateCPU&lt; uint16_t, uint8_t, float, float, float &gt;</a> (<a class="el" href="_voxel_block_grid_c_p_u_8cpp.html#a0ccb6862c9411b810fd21eb2c398537b">FN_ARGUMENTS</a>)</td></tr>
<tr class="separator:a6fd5382eefc491be2429f87a05cba25a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7bcd6600fcf533641c7ec2d00c1bc286"><td class="memItemLeft" align="right" valign="top">template void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#a7bcd6600fcf533641c7ec2d00c1bc286">IntegrateCPU&lt; float, float, float, uint16_t, uint16_t &gt;</a> (<a class="el" href="_voxel_block_grid_c_p_u_8cpp.html#a0ccb6862c9411b810fd21eb2c398537b">FN_ARGUMENTS</a>)</td></tr>
<tr class="separator:a7bcd6600fcf533641c7ec2d00c1bc286"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2631b45f250679923e0613b573337117"><td class="memItemLeft" align="right" valign="top">template void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#a2631b45f250679923e0613b573337117">IntegrateCPU&lt; float, float, float, float, float &gt;</a> (<a class="el" href="_voxel_block_grid_c_p_u_8cpp.html#a0ccb6862c9411b810fd21eb2c398537b">FN_ARGUMENTS</a>)</td></tr>
<tr class="separator:a2631b45f250679923e0613b573337117"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a88ec7948aee50d1b877ba0ccb7c3ff35"><td class="memItemLeft" align="right" valign="top">template void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#a88ec7948aee50d1b877ba0ccb7c3ff35">RayCastCPU&lt; float, uint16_t, uint16_t &gt;</a> (<a class="el" href="_voxel_block_grid_c_p_u_8cpp.html#a0ccb6862c9411b810fd21eb2c398537b">FN_ARGUMENTS</a>)</td></tr>
<tr class="separator:a88ec7948aee50d1b877ba0ccb7c3ff35"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6d8b457f6b0ff2bdde99761f09ebc139"><td class="memItemLeft" align="right" valign="top">template void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#a6d8b457f6b0ff2bdde99761f09ebc139">RayCastCPU&lt; float, float, float &gt;</a> (<a class="el" href="_voxel_block_grid_c_p_u_8cpp.html#a0ccb6862c9411b810fd21eb2c398537b">FN_ARGUMENTS</a>)</td></tr>
<tr class="separator:a6d8b457f6b0ff2bdde99761f09ebc139"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7301d17c36beb29bcdf7bb735818f996"><td class="memItemLeft" align="right" valign="top">template void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#a7301d17c36beb29bcdf7bb735818f996">ExtractPointCloudCPU&lt; float, uint16_t, uint16_t &gt;</a> (<a class="el" href="_voxel_block_grid_c_p_u_8cpp.html#a0ccb6862c9411b810fd21eb2c398537b">FN_ARGUMENTS</a>)</td></tr>
<tr class="separator:a7301d17c36beb29bcdf7bb735818f996"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab0cb37ea61cbe165ebd8e0e4e3d10d7c"><td class="memItemLeft" align="right" valign="top">template void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#ab0cb37ea61cbe165ebd8e0e4e3d10d7c">ExtractPointCloudCPU&lt; float, float, float &gt;</a> (<a class="el" href="_voxel_block_grid_c_p_u_8cpp.html#a0ccb6862c9411b810fd21eb2c398537b">FN_ARGUMENTS</a>)</td></tr>
<tr class="separator:ab0cb37ea61cbe165ebd8e0e4e3d10d7c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab9891875612aade47079d4134569b816"><td class="memItemLeft" align="right" valign="top">template void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#ab9891875612aade47079d4134569b816">ExtractTriangleMeshCPU&lt; float, uint16_t, uint16_t &gt;</a> (<a class="el" href="_voxel_block_grid_c_p_u_8cpp.html#a0ccb6862c9411b810fd21eb2c398537b">FN_ARGUMENTS</a>)</td></tr>
<tr class="separator:ab9891875612aade47079d4134569b816"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7e5c83632f010cec8691844f1123791b"><td class="memItemLeft" align="right" valign="top">template void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#a7e5c83632f010cec8691844f1123791b">ExtractTriangleMeshCPU&lt; float, float, float &gt;</a> (<a class="el" href="_voxel_block_grid_c_p_u_8cpp.html#a0ccb6862c9411b810fd21eb2c398537b">FN_ARGUMENTS</a>)</td></tr>
<tr class="separator:a7e5c83632f010cec8691844f1123791b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1273e7270ce034740522ad87b710b8fd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_c_u_d_a_utils_8h.html#a36245af68b6d012935c0de2cec6abd2d">OPEN3D_DEVICE</a> <a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#adc304bcd8040c9a29d7ab3b6fe581d1c">index_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#a1273e7270ce034740522ad87b710b8fd">DeviceGetLinearIdx</a> (<a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#adc304bcd8040c9a29d7ab3b6fe581d1c">index_t</a> xo, <a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#adc304bcd8040c9a29d7ab3b6fe581d1c">index_t</a> yo, <a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#adc304bcd8040c9a29d7ab3b6fe581d1c">index_t</a> zo, <a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#adc304bcd8040c9a29d7ab3b6fe581d1c">index_t</a> curr_block_idx, <a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#adc304bcd8040c9a29d7ab3b6fe581d1c">index_t</a> resolution, const <a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#aad9ea56afd8a9f92cb0bbd7db122a451">ArrayIndexer</a> &amp;nb_block_masks_indexer, const <a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#aad9ea56afd8a9f92cb0bbd7db122a451">ArrayIndexer</a> &amp;nb_block_indices_indexer)</td></tr>
<tr class="separator:a1273e7270ce034740522ad87b710b8fd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acc51887e5b397daae6f2f8951c91b7e1"><td class="memTemplParams" colspan="2">template&lt;typename tsdf_t &gt; </td></tr>
<tr class="memitem:acc51887e5b397daae6f2f8951c91b7e1"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="_c_u_d_a_utils_8h.html#a36245af68b6d012935c0de2cec6abd2d">OPEN3D_DEVICE</a> void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#acc51887e5b397daae6f2f8951c91b7e1">DeviceGetNormal</a> (const tsdf_t *tsdf_base_ptr, <a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#adc304bcd8040c9a29d7ab3b6fe581d1c">index_t</a> xo, <a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#adc304bcd8040c9a29d7ab3b6fe581d1c">index_t</a> yo, <a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#adc304bcd8040c9a29d7ab3b6fe581d1c">index_t</a> zo, <a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#adc304bcd8040c9a29d7ab3b6fe581d1c">index_t</a> curr_block_idx, float *n, <a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#adc304bcd8040c9a29d7ab3b6fe581d1c">index_t</a> resolution, const <a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#aad9ea56afd8a9f92cb0bbd7db122a451">ArrayIndexer</a> &amp;nb_block_masks_indexer, const <a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#aad9ea56afd8a9f92cb0bbd7db122a451">ArrayIndexer</a> &amp;nb_block_indices_indexer)</td></tr>
<tr class="separator:acc51887e5b397daae6f2f8951c91b7e1"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Typedef Documentation</h2>
<a id="aad9ea56afd8a9f92cb0bbd7db122a451"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aad9ea56afd8a9f92cb0bbd7db122a451">&#9670;&nbsp;</a></span>ArrayIndexer</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#aad9ea56afd8a9f92cb0bbd7db122a451">open3d::t::geometry::kernel::voxel_grid::ArrayIndexer</a> = typedef <a class="el" href="classopen3d_1_1t_1_1geometry_1_1kernel_1_1_t-2">TArrayIndexer</a>&lt;<a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#adc304bcd8040c9a29d7ab3b6fe581d1c">index_t</a>&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="adc304bcd8040c9a29d7ab3b6fe581d1c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adc304bcd8040c9a29d7ab3b6fe581d1c">&#9670;&nbsp;</a></span>index_t</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef int <a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#adc304bcd8040c9a29d7ab3b6fe581d1c">open3d::t::geometry::kernel::voxel_grid::index_t</a></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a id="ad86e541615291ec4f93257e3738779e8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad86e541615291ec4f93257e3738779e8">&#9670;&nbsp;</a></span>DepthTouch()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::t::geometry::kernel::voxel_grid::DepthTouch </td>
          <td>(</td>
          <td class="paramtype">std::shared_ptr&lt; <a class="el" href="classopen3d_1_1core_1_1_hash_map.html">core::HashMap</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>hashmap</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>depth</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>intrinsic</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>extrinsic</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>voxel_block_coords</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#adc304bcd8040c9a29d7ab3b6fe581d1c">index_t</a>&#160;</td>
          <td class="paramname"><em>voxel_grid_resolution</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>voxel_size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>sdf_trunc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>depth_scale</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>depth_max</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#adc304bcd8040c9a29d7ab3b6fe581d1c">index_t</a>&#160;</td>
          <td class="paramname"><em>stride</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="aed57853f2c85dbf5cf59af5258de9059"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aed57853f2c85dbf5cf59af5258de9059">&#9670;&nbsp;</a></span>DepthTouchCPU()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::t::geometry::kernel::voxel_grid::DepthTouchCPU </td>
          <td>(</td>
          <td class="paramtype">std::shared_ptr&lt; <a class="el" href="classopen3d_1_1core_1_1_hash_map.html">core::HashMap</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>hashmap</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>depth</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>intrinsic</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>extrinsic</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>voxel_block_coords</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#adc304bcd8040c9a29d7ab3b6fe581d1c">index_t</a>&#160;</td>
          <td class="paramname"><em>voxel_grid_resolution</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>voxel_size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>sdf_trunc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>depth_scale</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>depth_max</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#adc304bcd8040c9a29d7ab3b6fe581d1c">index_t</a>&#160;</td>
          <td class="paramname"><em>stride</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a1273e7270ce034740522ad87b710b8fd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1273e7270ce034740522ad87b710b8fd">&#9670;&nbsp;</a></span>DeviceGetLinearIdx()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="_c_u_d_a_utils_8h.html#a36245af68b6d012935c0de2cec6abd2d">OPEN3D_DEVICE</a> <a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#adc304bcd8040c9a29d7ab3b6fe581d1c">index_t</a> open3d::t::geometry::kernel::voxel_grid::DeviceGetLinearIdx </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#adc304bcd8040c9a29d7ab3b6fe581d1c">index_t</a>&#160;</td>
          <td class="paramname"><em>xo</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#adc304bcd8040c9a29d7ab3b6fe581d1c">index_t</a>&#160;</td>
          <td class="paramname"><em>yo</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#adc304bcd8040c9a29d7ab3b6fe581d1c">index_t</a>&#160;</td>
          <td class="paramname"><em>zo</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#adc304bcd8040c9a29d7ab3b6fe581d1c">index_t</a>&#160;</td>
          <td class="paramname"><em>curr_block_idx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#adc304bcd8040c9a29d7ab3b6fe581d1c">index_t</a>&#160;</td>
          <td class="paramname"><em>resolution</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#aad9ea56afd8a9f92cb0bbd7db122a451">ArrayIndexer</a> &amp;&#160;</td>
          <td class="paramname"><em>nb_block_masks_indexer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#aad9ea56afd8a9f92cb0bbd7db122a451">ArrayIndexer</a> &amp;&#160;</td>
          <td class="paramname"><em>nb_block_indices_indexer</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="acc51887e5b397daae6f2f8951c91b7e1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acc51887e5b397daae6f2f8951c91b7e1">&#9670;&nbsp;</a></span>DeviceGetNormal()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename tsdf_t &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="_c_u_d_a_utils_8h.html#a36245af68b6d012935c0de2cec6abd2d">OPEN3D_DEVICE</a> void open3d::t::geometry::kernel::voxel_grid::DeviceGetNormal </td>
          <td>(</td>
          <td class="paramtype">const tsdf_t *&#160;</td>
          <td class="paramname"><em>tsdf_base_ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#adc304bcd8040c9a29d7ab3b6fe581d1c">index_t</a>&#160;</td>
          <td class="paramname"><em>xo</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#adc304bcd8040c9a29d7ab3b6fe581d1c">index_t</a>&#160;</td>
          <td class="paramname"><em>yo</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#adc304bcd8040c9a29d7ab3b6fe581d1c">index_t</a>&#160;</td>
          <td class="paramname"><em>zo</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#adc304bcd8040c9a29d7ab3b6fe581d1c">index_t</a>&#160;</td>
          <td class="paramname"><em>curr_block_idx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>n</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#adc304bcd8040c9a29d7ab3b6fe581d1c">index_t</a>&#160;</td>
          <td class="paramname"><em>resolution</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#aad9ea56afd8a9f92cb0bbd7db122a451">ArrayIndexer</a> &amp;&#160;</td>
          <td class="paramname"><em>nb_block_masks_indexer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#aad9ea56afd8a9f92cb0bbd7db122a451">ArrayIndexer</a> &amp;&#160;</td>
          <td class="paramname"><em>nb_block_indices_indexer</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a5d3febe9c1adef0a03d2ec055006305d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5d3febe9c1adef0a03d2ec055006305d">&#9670;&nbsp;</a></span>EstimateRange()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::t::geometry::kernel::voxel_grid::EstimateRange </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>block_keys</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>range_minmax_map</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>intrinsics</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>extrinsics</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>h</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>w</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>down_factor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int64_t&#160;</td>
          <td class="paramname"><em>block_resolution</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>voxel_size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>depth_min</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>depth_max</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>fragment_buffer</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ae16eb45b2d8b26ed9f3200d9ca0f2f06"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae16eb45b2d8b26ed9f3200d9ca0f2f06">&#9670;&nbsp;</a></span>EstimateRangeCPU()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::t::geometry::kernel::voxel_grid::EstimateRangeCPU </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>block_keys</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>range_minmax_map</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>intrinsics</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>extrinsics</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>h</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>w</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>down_factor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int64_t&#160;</td>
          <td class="paramname"><em>block_resolution</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>voxel_size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>depth_min</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>depth_max</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>fragment_buffer</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a27c6484942fbbadb461758464b1500c3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a27c6484942fbbadb461758464b1500c3">&#9670;&nbsp;</a></span>ExtractPointCloud()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::t::geometry::kernel::voxel_grid::ExtractPointCloud </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>block_indices</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>nb_block_indices</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>nb_block_masks</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>block_keys</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_tensor_map">TensorMap</a> &amp;&#160;</td>
          <td class="paramname"><em>block_value_map</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>points</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>normals</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>colors</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#adc304bcd8040c9a29d7ab3b6fe581d1c">index_t</a>&#160;</td>
          <td class="paramname"><em>block_resolution</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>voxel_size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>weight_threshold</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int &amp;&#160;</td>
          <td class="paramname"><em>valid_size</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a03cf1d86d3e5929ef35796d1099efe27"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a03cf1d86d3e5929ef35796d1099efe27">&#9670;&nbsp;</a></span>ExtractPointCloudCPU()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename tsdf_t , typename weight_t , typename color_t &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void open3d::t::geometry::kernel::voxel_grid::ExtractPointCloudCPU </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>block_indices</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>nb_block_indices</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>nb_block_masks</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>block_keys</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_tensor_map">TensorMap</a> &amp;&#160;</td>
          <td class="paramname"><em>block_value_map</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>points</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>normals</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>colors</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#adc304bcd8040c9a29d7ab3b6fe581d1c">index_t</a>&#160;</td>
          <td class="paramname"><em>block_resolution</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>voxel_size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>weight_threshold</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#adc304bcd8040c9a29d7ab3b6fe581d1c">index_t</a> &amp;&#160;</td>
          <td class="paramname"><em>valid_size</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Coordinate transform</p>
<p>Coordinate transform</p>

</div>
</div>
<a id="ab0cb37ea61cbe165ebd8e0e4e3d10d7c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab0cb37ea61cbe165ebd8e0e4e3d10d7c">&#9670;&nbsp;</a></span>ExtractPointCloudCPU&lt; float, float, float &gt;()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">template void <a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#a03cf1d86d3e5929ef35796d1099efe27">open3d::t::geometry::kernel::voxel_grid::ExtractPointCloudCPU</a>&lt; float, float, float &gt; </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="_voxel_block_grid_c_p_u_8cpp.html#a0ccb6862c9411b810fd21eb2c398537b">FN_ARGUMENTS</a>&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a7301d17c36beb29bcdf7bb735818f996"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7301d17c36beb29bcdf7bb735818f996">&#9670;&nbsp;</a></span>ExtractPointCloudCPU&lt; float, uint16_t, uint16_t &gt;()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">template void <a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#a03cf1d86d3e5929ef35796d1099efe27">open3d::t::geometry::kernel::voxel_grid::ExtractPointCloudCPU</a>&lt; float, uint16_t, uint16_t &gt; </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="_voxel_block_grid_c_p_u_8cpp.html#a0ccb6862c9411b810fd21eb2c398537b">FN_ARGUMENTS</a>&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a11c99863326cd396fa5f3e23424df9e8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a11c99863326cd396fa5f3e23424df9e8">&#9670;&nbsp;</a></span>ExtractTriangleMesh()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::t::geometry::kernel::voxel_grid::ExtractTriangleMesh </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>block_indices</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>inv_block_indices</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>nb_block_indices</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>nb_block_masks</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>block_keys</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_tensor_map">TensorMap</a> &amp;&#160;</td>
          <td class="paramname"><em>block_value_map</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>vertices</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>triangles</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>vertex_normals</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>vertex_colors</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#adc304bcd8040c9a29d7ab3b6fe581d1c">index_t</a>&#160;</td>
          <td class="paramname"><em>block_resolution</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>voxel_size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>weight_threshold</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int &amp;&#160;</td>
          <td class="paramname"><em>vertex_count</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ab9ae71c9b15bc5282939dae33545e2a8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab9ae71c9b15bc5282939dae33545e2a8">&#9670;&nbsp;</a></span>ExtractTriangleMeshCPU()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename tsdf_t , typename weight_t , typename color_t &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void open3d::t::geometry::kernel::voxel_grid::ExtractTriangleMeshCPU </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>block_indices</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>inv_block_indices</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>nb_block_indices</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>nb_block_masks</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>block_keys</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_tensor_map">TensorMap</a> &amp;&#160;</td>
          <td class="paramname"><em>block_value_map</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>vertices</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>triangles</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>vertex_normals</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>vertex_colors</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#adc304bcd8040c9a29d7ab3b6fe581d1c">index_t</a>&#160;</td>
          <td class="paramname"><em>block_resolution</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>voxel_size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>weight_threshold</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#adc304bcd8040c9a29d7ab3b6fe581d1c">index_t</a> &amp;&#160;</td>
          <td class="paramname"><em>vertex_count</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a7e5c83632f010cec8691844f1123791b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7e5c83632f010cec8691844f1123791b">&#9670;&nbsp;</a></span>ExtractTriangleMeshCPU&lt; float, float, float &gt;()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">template void <a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#ab9ae71c9b15bc5282939dae33545e2a8">open3d::t::geometry::kernel::voxel_grid::ExtractTriangleMeshCPU</a>&lt; float, float, float &gt; </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="_voxel_block_grid_c_p_u_8cpp.html#a0ccb6862c9411b810fd21eb2c398537b">FN_ARGUMENTS</a>&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ab9891875612aade47079d4134569b816"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab9891875612aade47079d4134569b816">&#9670;&nbsp;</a></span>ExtractTriangleMeshCPU&lt; float, uint16_t, uint16_t &gt;()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">template void <a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#ab9ae71c9b15bc5282939dae33545e2a8">open3d::t::geometry::kernel::voxel_grid::ExtractTriangleMeshCPU</a>&lt; float, uint16_t, uint16_t &gt; </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="_voxel_block_grid_c_p_u_8cpp.html#a0ccb6862c9411b810fd21eb2c398537b">FN_ARGUMENTS</a>&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a57f91a1331bbac82bf20ac00361bd275"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a57f91a1331bbac82bf20ac00361bd275">&#9670;&nbsp;</a></span>GetVoxelCoordinatesAndFlattenedIndices()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::t::geometry::kernel::voxel_grid::GetVoxelCoordinatesAndFlattenedIndices </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>buf_indices</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>block_keys</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>voxel_coords</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>flattened_indices</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#adc304bcd8040c9a29d7ab3b6fe581d1c">index_t</a>&#160;</td>
          <td class="paramname"><em>block_resolution</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>voxel_size</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a0d30100aa2b4a079a3bc5ecf7a873da7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0d30100aa2b4a079a3bc5ecf7a873da7">&#9670;&nbsp;</a></span>GetVoxelCoordinatesAndFlattenedIndicesCPU()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::t::geometry::kernel::voxel_grid::GetVoxelCoordinatesAndFlattenedIndicesCPU </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>buf_indices</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>block_keys</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>voxel_coords</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>flattened_indices</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#adc304bcd8040c9a29d7ab3b6fe581d1c">index_t</a>&#160;</td>
          <td class="paramname"><em>block_resolution</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>voxel_size</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a0f28ac1e07c7d18a55b1a37d374d4596"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0f28ac1e07c7d18a55b1a37d374d4596">&#9670;&nbsp;</a></span>Integrate()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::t::geometry::kernel::voxel_grid::Integrate </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>depth</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>color</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>block_indices</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>block_keys</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_tensor_map">TensorMap</a> &amp;&#160;</td>
          <td class="paramname"><em>block_value_map</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>depth_intrinsic</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>color_intrinsic</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>extrinsic</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#adc304bcd8040c9a29d7ab3b6fe581d1c">index_t</a>&#160;</td>
          <td class="paramname"><em>resolution</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>voxel_size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>sdf_trunc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>depth_scale</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>depth_max</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a63aa23d64bcdcce1f4ecfb5b40d721f7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a63aa23d64bcdcce1f4ecfb5b40d721f7">&#9670;&nbsp;</a></span>IntegrateCPU()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename input_depth_t , typename input_color_t , typename tsdf_t , typename weight_t , typename color_t &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void open3d::t::geometry::kernel::voxel_grid::IntegrateCPU </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>depth</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>color</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>block_indices</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>block_keys</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_tensor_map">TensorMap</a> &amp;&#160;</td>
          <td class="paramname"><em>block_value_map</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>depth_intrinsic</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>color_intrinsic</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>extrinsic</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#adc304bcd8040c9a29d7ab3b6fe581d1c">index_t</a>&#160;</td>
          <td class="paramname"><em>resolution</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>voxel_size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>sdf_trunc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>depth_scale</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>depth_max</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Coordinate transform</p>
<p>Coordinate transform</p>

</div>
</div>
<a id="a2631b45f250679923e0613b573337117"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2631b45f250679923e0613b573337117">&#9670;&nbsp;</a></span>IntegrateCPU&lt; float, float, float, float, float &gt;()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">template void <a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#a63aa23d64bcdcce1f4ecfb5b40d721f7">open3d::t::geometry::kernel::voxel_grid::IntegrateCPU</a>&lt; float, float, float, float, float &gt; </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="_voxel_block_grid_c_p_u_8cpp.html#a0ccb6862c9411b810fd21eb2c398537b">FN_ARGUMENTS</a>&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a7bcd6600fcf533641c7ec2d00c1bc286"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7bcd6600fcf533641c7ec2d00c1bc286">&#9670;&nbsp;</a></span>IntegrateCPU&lt; float, float, float, uint16_t, uint16_t &gt;()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">template void <a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#a63aa23d64bcdcce1f4ecfb5b40d721f7">open3d::t::geometry::kernel::voxel_grid::IntegrateCPU</a>&lt; float, float, float, uint16_t, uint16_t &gt; </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="_voxel_block_grid_c_p_u_8cpp.html#a0ccb6862c9411b810fd21eb2c398537b">FN_ARGUMENTS</a>&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a6fd5382eefc491be2429f87a05cba25a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6fd5382eefc491be2429f87a05cba25a">&#9670;&nbsp;</a></span>IntegrateCPU&lt; uint16_t, uint8_t, float, float, float &gt;()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">template void <a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#a63aa23d64bcdcce1f4ecfb5b40d721f7">open3d::t::geometry::kernel::voxel_grid::IntegrateCPU</a>&lt; uint16_t, uint8_t, float, float, float &gt; </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="_voxel_block_grid_c_p_u_8cpp.html#a0ccb6862c9411b810fd21eb2c398537b">FN_ARGUMENTS</a>&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a050cc0d0e7b8f4a58acb5477a3f247c3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a050cc0d0e7b8f4a58acb5477a3f247c3">&#9670;&nbsp;</a></span>IntegrateCPU&lt; uint16_t, uint8_t, float, uint16_t, uint16_t &gt;()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">template void <a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#a63aa23d64bcdcce1f4ecfb5b40d721f7">open3d::t::geometry::kernel::voxel_grid::IntegrateCPU</a>&lt; uint16_t, uint8_t, float, uint16_t, uint16_t &gt; </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="_voxel_block_grid_c_p_u_8cpp.html#a0ccb6862c9411b810fd21eb2c398537b">FN_ARGUMENTS</a>&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a05922900fbfb49cfb699b4feb92c19a1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a05922900fbfb49cfb699b4feb92c19a1">&#9670;&nbsp;</a></span>PointCloudTouch()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::t::geometry::kernel::voxel_grid::PointCloudTouch </td>
          <td>(</td>
          <td class="paramtype">std::shared_ptr&lt; <a class="el" href="classopen3d_1_1core_1_1_hash_map.html">core::HashMap</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>hashmap</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>points</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>voxel_block_coords</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#adc304bcd8040c9a29d7ab3b6fe581d1c">index_t</a>&#160;</td>
          <td class="paramname"><em>voxel_grid_resolution</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>voxel_size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>sdf_trunc</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a82eb7e97595aa4cff023dcbda5613815"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a82eb7e97595aa4cff023dcbda5613815">&#9670;&nbsp;</a></span>PointCloudTouchCPU()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::t::geometry::kernel::voxel_grid::PointCloudTouchCPU </td>
          <td>(</td>
          <td class="paramtype">std::shared_ptr&lt; <a class="el" href="classopen3d_1_1core_1_1_hash_map.html">core::HashMap</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>hashmap</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>points</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>voxel_block_coords</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#adc304bcd8040c9a29d7ab3b6fe581d1c">index_t</a>&#160;</td>
          <td class="paramname"><em>voxel_grid_resolution</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>voxel_size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>sdf_trunc</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>CPU. </p>

</div>
</div>
<a id="a4d2a6b13191e3c12fa38623a5a6f61c3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4d2a6b13191e3c12fa38623a5a6f61c3">&#9670;&nbsp;</a></span>RayCast()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::t::geometry::kernel::voxel_grid::RayCast </td>
          <td>(</td>
          <td class="paramtype">std::shared_ptr&lt; <a class="el" href="classopen3d_1_1core_1_1_hash_map.html">core::HashMap</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>hashmap</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_tensor_map">TensorMap</a> &amp;&#160;</td>
          <td class="paramname"><em>block_value_map</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>range_map</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_tensor_map">TensorMap</a> &amp;&#160;</td>
          <td class="paramname"><em>renderings_map</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>intrinsic</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>extrinsic</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#adc304bcd8040c9a29d7ab3b6fe581d1c">index_t</a>&#160;</td>
          <td class="paramname"><em>h</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#adc304bcd8040c9a29d7ab3b6fe581d1c">index_t</a>&#160;</td>
          <td class="paramname"><em>w</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#adc304bcd8040c9a29d7ab3b6fe581d1c">index_t</a>&#160;</td>
          <td class="paramname"><em>block_resolution</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>voxel_size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>depth_scale</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>depth_min</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>depth_max</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>weight_threshold</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>trunc_voxel_multiplier</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>range_map_down_factor</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="adae72f66621afad4b571b04f66da2409"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adae72f66621afad4b571b04f66da2409">&#9670;&nbsp;</a></span>RayCastCPU()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename tsdf_t , typename weight_t , typename color_t &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void open3d::t::geometry::kernel::voxel_grid::RayCastCPU </td>
          <td>(</td>
          <td class="paramtype">std::shared_ptr&lt; <a class="el" href="classopen3d_1_1core_1_1_hash_map.html">core::HashMap</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>hashmap</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_tensor_map">TensorMap</a> &amp;&#160;</td>
          <td class="paramname"><em>block_value_map</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>range_map</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_tensor_map">TensorMap</a> &amp;&#160;</td>
          <td class="paramname"><em>renderings_map</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>intrinsic</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>extrinsic</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#adc304bcd8040c9a29d7ab3b6fe581d1c">index_t</a>&#160;</td>
          <td class="paramname"><em>h</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#adc304bcd8040c9a29d7ab3b6fe581d1c">index_t</a>&#160;</td>
          <td class="paramname"><em>w</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#adc304bcd8040c9a29d7ab3b6fe581d1c">index_t</a>&#160;</td>
          <td class="paramname"><em>block_resolution</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>voxel_size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>depth_scale</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>depth_min</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>depth_max</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>weight_threshold</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>trunc_voxel_multiplier</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>range_map_down_factor</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a6d8b457f6b0ff2bdde99761f09ebc139"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6d8b457f6b0ff2bdde99761f09ebc139">&#9670;&nbsp;</a></span>RayCastCPU&lt; float, float, float &gt;()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">template void <a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#adae72f66621afad4b571b04f66da2409">open3d::t::geometry::kernel::voxel_grid::RayCastCPU</a>&lt; float, float, float &gt; </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="_voxel_block_grid_c_p_u_8cpp.html#a0ccb6862c9411b810fd21eb2c398537b">FN_ARGUMENTS</a>&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a88ec7948aee50d1b877ba0ccb7c3ff35"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a88ec7948aee50d1b877ba0ccb7c3ff35">&#9670;&nbsp;</a></span>RayCastCPU&lt; float, uint16_t, uint16_t &gt;()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">template void <a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-7#adae72f66621afad4b571b04f66da2409">open3d::t::geometry::kernel::voxel_grid::RayCastCPU</a>&lt; float, uint16_t, uint16_t &gt; </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="_voxel_block_grid_c_p_u_8cpp.html#a0ccb6862c9411b810fd21eb2c398537b">FN_ARGUMENTS</a>&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1
</small></address>
</body>

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/namespaceopen3d_1_1t_1_1geometry_1_1kernel_1_1voxel__grid.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 11:02:14 GMT -->
</html>
