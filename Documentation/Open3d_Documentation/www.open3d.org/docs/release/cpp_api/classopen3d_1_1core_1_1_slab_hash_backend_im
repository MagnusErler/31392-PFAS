<!-- HTML header for doxygen 1.8.20-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/classopen3d_1_1core_1_1_slab_hash_backend_impl.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 10:55:12 GMT -->
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Open3D (C++ API): open3d::core::SlabHashBackendImpl&lt; Key, Hash, Eq &gt; Class Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js", "TeX/AMSmath.html", "TeX/AMSsymbols.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="../../../../cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-3TQPKGV6Z3"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());
  gtag('config', 'G-3TQPKGV6Z3');
</script>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="open3d_logo.ico"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Open3D (C++ API)
   &#160;<span id="projectnumber">0.17.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.html');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.html','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceopen3d.html">open3d</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1core.html">core</a></li><li class="navelem"><a class="el" href="classopen3d_1_1core_1_1_slab_hash_backend_im">SlabHashBackendImpl</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Data Fields</a>  </div>
  <div class="headertitle">
<div class="title">open3d::core::SlabHashBackendImpl&lt; Key, Hash, Eq &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_slab_hash_backend_impl_8h_source.56a.delaye">SlabHashBackendImpl.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ad01188604152b803a2c41dbd1995aabf"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_slab_hash_backend_im#ad01188604152b803a2c41dbd1995aabf">SlabHashBackendImpl</a> ()</td></tr>
<tr class="separator:ad01188604152b803a2c41dbd1995aabf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a53c3636b02f0afef9816e31df606a80d"><td class="memItemLeft" align="right" valign="top">__host__ void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_slab_hash_backend_im#a53c3636b02f0afef9816e31df606a80d">Setup</a> (int64_t init_buckets, const <a class="el" href="classopen3d_1_1core_1_1_slab_node_manager_im">SlabNodeManagerImpl</a> &amp;node_mgr_impl, const <a class="el" href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend">CUDAHashBackendBufferAccessor</a> &amp;buffer_accessor)</td></tr>
<tr class="separator:a53c3636b02f0afef9816e31df606a80d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3022fa2a68f02e5ca7138a0f2f2eaffa"><td class="memItemLeft" align="right" valign="top">__device__ bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_slab_hash_backend_im#a3022fa2a68f02e5ca7138a0f2f2eaffa">Insert</a> (bool lane_active, uint32_t lane_id, uint32_t bucket_id, const Key &amp;key, <a class="el" href="namespaceopen3d_1_1core.html#a2e24567ecd0819b60fcd901703289eec">buf_index_t</a> buf_index)</td></tr>
<tr class="memdesc:a3022fa2a68f02e5ca7138a0f2f2eaffa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Warp-insert a pre-allocated buf_index at key.  <a href="classopen3d_1_1core_1_1_slab_hash_backend_im#a3022fa2a68f02e5ca7138a0f2f2eaffa">More...</a><br /></td></tr>
<tr class="separator:a3022fa2a68f02e5ca7138a0f2f2eaffa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a19f51417c56a22ad3166f26e7e04570d"><td class="memItemLeft" align="right" valign="top">__device__ <a class="el" href="structopen3d_1_1core_1_1_pair.html">Pair</a>&lt; <a class="el" href="namespaceopen3d_1_1core.html#a2e24567ecd0819b60fcd901703289eec">buf_index_t</a>, bool &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_slab_hash_backend_im#a19f51417c56a22ad3166f26e7e04570d">Find</a> (bool lane_active, uint32_t lane_id, uint32_t bucket_id, const Key &amp;key)</td></tr>
<tr class="memdesc:a19f51417c56a22ad3166f26e7e04570d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Warp-find a buf_index and its mask at key.  <a href="classopen3d_1_1core_1_1_slab_hash_backend_im#a19f51417c56a22ad3166f26e7e04570d">More...</a><br /></td></tr>
<tr class="separator:a19f51417c56a22ad3166f26e7e04570d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a04f95c5edf672fba9bf2a5b68c785970"><td class="memItemLeft" align="right" valign="top">__device__ <a class="el" href="structopen3d_1_1core_1_1_pair.html">Pair</a>&lt; <a class="el" href="namespaceopen3d_1_1core.html#a2e24567ecd0819b60fcd901703289eec">buf_index_t</a>, bool &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_slab_hash_backend_im#a04f95c5edf672fba9bf2a5b68c785970">Erase</a> (bool lane_active, uint32_t lane_id, uint32_t bucket_id, const Key &amp;key)</td></tr>
<tr class="memdesc:a04f95c5edf672fba9bf2a5b68c785970"><td class="mdescLeft">&#160;</td><td class="mdescRight">Warp-erase an entry at key.  <a href="classopen3d_1_1core_1_1_slab_hash_backend_im#a04f95c5edf672fba9bf2a5b68c785970">More...</a><br /></td></tr>
<tr class="separator:a04f95c5edf672fba9bf2a5b68c785970"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa4813d79b03635fb5042416eb0a321d3"><td class="memItemLeft" align="right" valign="top">__device__ void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_slab_hash_backend_im#aa4813d79b03635fb5042416eb0a321d3">WarpSyncKey</a> (const Key &amp;key, uint32_t lane_id, Key &amp;ret_key)</td></tr>
<tr class="memdesc:aa4813d79b03635fb5042416eb0a321d3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Warp-synchronize a key in a slab.  <a href="classopen3d_1_1core_1_1_slab_hash_backend_im#aa4813d79b03635fb5042416eb0a321d3">More...</a><br /></td></tr>
<tr class="separator:aa4813d79b03635fb5042416eb0a321d3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab95be48c2281510dac92214202903b49"><td class="memItemLeft" align="right" valign="top">__device__ int32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_slab_hash_backend_im#ab95be48c2281510dac92214202903b49">WarpFindKey</a> (const Key &amp;src_key, uint32_t lane_id, uint32_t slab_entry)</td></tr>
<tr class="memdesc:ab95be48c2281510dac92214202903b49"><td class="mdescLeft">&#160;</td><td class="mdescRight">Warp-find a key in a slab.  <a href="classopen3d_1_1core_1_1_slab_hash_backend_im#ab95be48c2281510dac92214202903b49">More...</a><br /></td></tr>
<tr class="separator:ab95be48c2281510dac92214202903b49"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:addf655c201b1d65cb84e421278ada240"><td class="memItemLeft" align="right" valign="top">__device__ int32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_slab_hash_backend_im#addf655c201b1d65cb84e421278ada240">WarpFindEmpty</a> (uint32_t slab_entry)</td></tr>
<tr class="memdesc:addf655c201b1d65cb84e421278ada240"><td class="mdescLeft">&#160;</td><td class="mdescRight">Warp-find the first empty slot in a slab.  <a href="classopen3d_1_1core_1_1_slab_hash_backend_im#addf655c201b1d65cb84e421278ada240">More...</a><br /></td></tr>
<tr class="separator:addf655c201b1d65cb84e421278ada240"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abf5de92c8fc666cc03ed263c8ce9d899"><td class="memItemLeft" align="right" valign="top">__device__ int64_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_slab_hash_backend_im#abf5de92c8fc666cc03ed263c8ce9d899">ComputeBucket</a> (const Key &amp;key) const</td></tr>
<tr class="separator:abf5de92c8fc666cc03ed263c8ce9d899"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a34f14ba2c522b9e10c5ca2ab276869ea"><td class="memItemLeft" align="right" valign="top">__device__ uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_slab_hash_backend_im#a34f14ba2c522b9e10c5ca2ab276869ea">AllocateSlab</a> (uint32_t lane_id)</td></tr>
<tr class="separator:a34f14ba2c522b9e10c5ca2ab276869ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3631a3c2f00d245ee2ef7acf4f9ed59a"><td class="memItemLeft" align="right" valign="top">__device__ void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_slab_hash_backend_im#a3631a3c2f00d245ee2ef7acf4f9ed59a">FreeSlab</a> (uint32_t slab_ptr)</td></tr>
<tr class="separator:a3631a3c2f00d245ee2ef7acf4f9ed59a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a87d5886e988c36da4b851a884f2a4298"><td class="memItemLeft" align="right" valign="top">__device__ uint32_t *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_slab_hash_backend_im#a87d5886e988c36da4b851a884f2a4298">SlabEntryPtr</a> (uint32_t bucket_id, uint32_t lane_id, uint32_t slab_ptr)</td></tr>
<tr class="separator:a87d5886e988c36da4b851a884f2a4298"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a02c205d7f76d5141edae4b31ca0ee0af"><td class="memItemLeft" align="right" valign="top">__device__ uint32_t *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_slab_hash_backend_im#a02c205d7f76d5141edae4b31ca0ee0af">SlabEntryPtrFromNodes</a> (uint32_t slab_ptr, uint32_t lane_id)</td></tr>
<tr class="separator:a02c205d7f76d5141edae4b31ca0ee0af"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af5b1fc408317a719cae28d347923b88d"><td class="memItemLeft" align="right" valign="top">__device__ uint32_t *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_slab_hash_backend_im#af5b1fc408317a719cae28d347923b88d">SlabEntryPtrFromHead</a> (uint32_t bucket_id, uint32_t lane_id)</td></tr>
<tr class="separator:af5b1fc408317a719cae28d347923b88d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Data Fields</h2></td></tr>
<tr class="memitem:a97e39b35154d17774c3df98067a77ecc"><td class="memItemLeft" align="right" valign="top">Hash&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_slab_hash_backend_im#a97e39b35154d17774c3df98067a77ecc">hash_fn_</a></td></tr>
<tr class="separator:a97e39b35154d17774c3df98067a77ecc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adf49281dd9db5d838c5fd277f185746d"><td class="memItemLeft" align="right" valign="top">Eq&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_slab_hash_backend_im#adf49281dd9db5d838c5fd277f185746d">eq_fn_</a></td></tr>
<tr class="separator:adf49281dd9db5d838c5fd277f185746d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a563819a2567e2ec9cf70131e9807f228"><td class="memItemLeft" align="right" valign="top">int64_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_slab_hash_backend_im#a563819a2567e2ec9cf70131e9807f228">bucket_count_</a></td></tr>
<tr class="separator:a563819a2567e2ec9cf70131e9807f228"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a65a9ccff9eee1e3597c8429cfc33d900"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1core_1_1_slab.html">Slab</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_slab_hash_backend_im#a65a9ccff9eee1e3597c8429cfc33d900">bucket_list_head_</a></td></tr>
<tr class="separator:a65a9ccff9eee1e3597c8429cfc33d900"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeaf6cb8835aa6f9e697b32b8e08b6328"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1core_1_1_slab_node_manager_im">SlabNodeManagerImpl</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_slab_hash_backend_im#aeaf6cb8835aa6f9e697b32b8e08b6328">node_mgr_impl_</a></td></tr>
<tr class="separator:aeaf6cb8835aa6f9e697b32b8e08b6328"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afa859b2dd1ec9362276c725699ad9fd1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend">CUDAHashBackendBufferAccessor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_slab_hash_backend_im#afa859b2dd1ec9362276c725699ad9fd1">buffer_accessor_</a></td></tr>
<tr class="separator:afa859b2dd1ec9362276c725699ad9fd1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad79af2b2dadd72a5ccec3681885620c7"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_slab_hash_backend_im#ad79af2b2dadd72a5ccec3681885620c7">key_size_in_int_</a> = sizeof(Key) / sizeof(int)</td></tr>
<tr class="separator:ad79af2b2dadd72a5ccec3681885620c7"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="ad01188604152b803a2c41dbd1995aabf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad01188604152b803a2c41dbd1995aabf">&#9670;&nbsp;</a></span>SlabHashBackendImpl()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Key , typename Hash , typename Eq &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1core_1_1_slab_hash_backend_im">open3d::core::SlabHashBackendImpl</a>&lt; Key, Hash, Eq &gt;::<a class="el" href="classopen3d_1_1core_1_1_slab_hash_backend_im">SlabHashBackendImpl</a></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a34f14ba2c522b9e10c5ca2ab276869ea"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a34f14ba2c522b9e10c5ca2ab276869ea">&#9670;&nbsp;</a></span>AllocateSlab()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Key , typename Hash , typename Eq &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">__device__ uint32_t <a class="el" href="classopen3d_1_1core_1_1_slab_hash_backend_im">open3d::core::SlabHashBackendImpl</a>&lt; Key, Hash, Eq &gt;::AllocateSlab </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>lane_id</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="abf5de92c8fc666cc03ed263c8ce9d899"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abf5de92c8fc666cc03ed263c8ce9d899">&#9670;&nbsp;</a></span>ComputeBucket()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Key , typename Hash , typename Eq &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">__device__ int64_t <a class="el" href="classopen3d_1_1core_1_1_slab_hash_backend_im">open3d::core::SlabHashBackendImpl</a>&lt; Key, Hash, Eq &gt;::ComputeBucket </td>
          <td>(</td>
          <td class="paramtype">const Key &amp;&#160;</td>
          <td class="paramname"><em>key</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a04f95c5edf672fba9bf2a5b68c785970"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a04f95c5edf672fba9bf2a5b68c785970">&#9670;&nbsp;</a></span>Erase()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Key , typename Hash , typename Eq &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">__device__ <a class="el" href="structopen3d_1_1core_1_1_pair.html">Pair</a>&lt; <a class="el" href="namespaceopen3d_1_1core.html#a2e24567ecd0819b60fcd901703289eec">buf_index_t</a>, bool &gt; <a class="el" href="classopen3d_1_1core_1_1_slab_hash_backend_im">open3d::core::SlabHashBackendImpl</a>&lt; Key, Hash, Eq &gt;::Erase </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>lane_active</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>lane_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>bucket_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const Key &amp;&#160;</td>
          <td class="paramname"><em>key</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Warp-erase an entry at key. </p>

</div>
</div>
<a id="a19f51417c56a22ad3166f26e7e04570d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a19f51417c56a22ad3166f26e7e04570d">&#9670;&nbsp;</a></span>Find()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Key , typename Hash , typename Eq &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">__device__ <a class="el" href="structopen3d_1_1core_1_1_pair.html">Pair</a>&lt; <a class="el" href="namespaceopen3d_1_1core.html#a2e24567ecd0819b60fcd901703289eec">buf_index_t</a>, bool &gt; <a class="el" href="classopen3d_1_1core_1_1_slab_hash_backend_im">open3d::core::SlabHashBackendImpl</a>&lt; Key, Hash, Eq &gt;::Find </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>lane_active</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>lane_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>bucket_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const Key &amp;&#160;</td>
          <td class="paramname"><em>key</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Warp-find a buf_index and its mask at key. </p>

</div>
</div>
<a id="a3631a3c2f00d245ee2ef7acf4f9ed59a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3631a3c2f00d245ee2ef7acf4f9ed59a">&#9670;&nbsp;</a></span>FreeSlab()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Key , typename Hash , typename Eq &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">__device__ __forceinline__ void <a class="el" href="classopen3d_1_1core_1_1_slab_hash_backend_im">open3d::core::SlabHashBackendImpl</a>&lt; Key, Hash, Eq &gt;::FreeSlab </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>slab_ptr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a3022fa2a68f02e5ca7138a0f2f2eaffa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3022fa2a68f02e5ca7138a0f2f2eaffa">&#9670;&nbsp;</a></span>Insert()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Key , typename Hash , typename Eq &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">__device__ bool <a class="el" href="classopen3d_1_1core_1_1_slab_hash_backend_im">open3d::core::SlabHashBackendImpl</a>&lt; Key, Hash, Eq &gt;::Insert </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>lane_active</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>lane_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>bucket_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const Key &amp;&#160;</td>
          <td class="paramname"><em>key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceopen3d_1_1core.html#a2e24567ecd0819b60fcd901703289eec">buf_index_t</a>&#160;</td>
          <td class="paramname"><em>buf_index</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Warp-insert a pre-allocated buf_index at key. </p>

</div>
</div>
<a id="a53c3636b02f0afef9816e31df606a80d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a53c3636b02f0afef9816e31df606a80d">&#9670;&nbsp;</a></span>Setup()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Key , typename Hash , typename Eq &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classopen3d_1_1core_1_1_slab_hash_backend_im">open3d::core::SlabHashBackendImpl</a>&lt; Key, Hash, Eq &gt;::Setup </td>
          <td>(</td>
          <td class="paramtype">int64_t&#160;</td>
          <td class="paramname"><em>init_buckets</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_slab_node_manager_im">SlabNodeManagerImpl</a> &amp;&#160;</td>
          <td class="paramname"><em>node_mgr_impl</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend">CUDAHashBackendBufferAccessor</a> &amp;&#160;</td>
          <td class="paramname"><em>buffer_accessor</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a87d5886e988c36da4b851a884f2a4298"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a87d5886e988c36da4b851a884f2a4298">&#9670;&nbsp;</a></span>SlabEntryPtr()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Key , typename Hash , typename Eq &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">__device__ uint32_t* <a class="el" href="classopen3d_1_1core_1_1_slab_hash_backend_im">open3d::core::SlabHashBackendImpl</a>&lt; Key, Hash, Eq &gt;::SlabEntryPtr </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>bucket_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>lane_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>slab_ptr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="af5b1fc408317a719cae28d347923b88d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af5b1fc408317a719cae28d347923b88d">&#9670;&nbsp;</a></span>SlabEntryPtrFromHead()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Key , typename Hash , typename Eq &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">__device__ uint32_t* <a class="el" href="classopen3d_1_1core_1_1_slab_hash_backend_im">open3d::core::SlabHashBackendImpl</a>&lt; Key, Hash, Eq &gt;::SlabEntryPtrFromHead </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>bucket_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>lane_id</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a02c205d7f76d5141edae4b31ca0ee0af"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a02c205d7f76d5141edae4b31ca0ee0af">&#9670;&nbsp;</a></span>SlabEntryPtrFromNodes()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Key , typename Hash , typename Eq &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">__device__ uint32_t* <a class="el" href="classopen3d_1_1core_1_1_slab_hash_backend_im">open3d::core::SlabHashBackendImpl</a>&lt; Key, Hash, Eq &gt;::SlabEntryPtrFromNodes </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>slab_ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>lane_id</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="addf655c201b1d65cb84e421278ada240"></a>
<h2 class="memtitle"><span class="permalink"><a href="#addf655c201b1d65cb84e421278ada240">&#9670;&nbsp;</a></span>WarpFindEmpty()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Key , typename Hash , typename Eq &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">__device__ int32_t <a class="el" href="classopen3d_1_1core_1_1_slab_hash_backend_im">open3d::core::SlabHashBackendImpl</a>&lt; Key, Hash, Eq &gt;::WarpFindEmpty </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>slab_entry</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Warp-find the first empty slot in a slab. </p>

</div>
</div>
<a id="ab95be48c2281510dac92214202903b49"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab95be48c2281510dac92214202903b49">&#9670;&nbsp;</a></span>WarpFindKey()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Key , typename Hash , typename Eq &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">__device__ int32_t <a class="el" href="classopen3d_1_1core_1_1_slab_hash_backend_im">open3d::core::SlabHashBackendImpl</a>&lt; Key, Hash, Eq &gt;::WarpFindKey </td>
          <td>(</td>
          <td class="paramtype">const Key &amp;&#160;</td>
          <td class="paramname"><em>src_key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>lane_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>slab_entry</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Warp-find a key in a slab. </p>

</div>
</div>
<a id="aa4813d79b03635fb5042416eb0a321d3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa4813d79b03635fb5042416eb0a321d3">&#9670;&nbsp;</a></span>WarpSyncKey()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Key , typename Hash , typename Eq &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">__device__ void <a class="el" href="classopen3d_1_1core_1_1_slab_hash_backend_im">open3d::core::SlabHashBackendImpl</a>&lt; Key, Hash, Eq &gt;::WarpSyncKey </td>
          <td>(</td>
          <td class="paramtype">const Key &amp;&#160;</td>
          <td class="paramname"><em>key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>lane_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Key &amp;&#160;</td>
          <td class="paramname"><em>ret_key</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Warp-synchronize a key in a slab. </p>

</div>
</div>
<h2 class="groupheader">Field Documentation</h2>
<a id="a563819a2567e2ec9cf70131e9807f228"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a563819a2567e2ec9cf70131e9807f228">&#9670;&nbsp;</a></span>bucket_count_</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Key , typename Hash , typename Eq &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">int64_t <a class="el" href="classopen3d_1_1core_1_1_slab_hash_backend_im">open3d::core::SlabHashBackendImpl</a>&lt; Key, Hash, Eq &gt;::bucket_count_</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a65a9ccff9eee1e3597c8429cfc33d900"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a65a9ccff9eee1e3597c8429cfc33d900">&#9670;&nbsp;</a></span>bucket_list_head_</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Key , typename Hash , typename Eq &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1core_1_1_slab.html">Slab</a>* <a class="el" href="classopen3d_1_1core_1_1_slab_hash_backend_im">open3d::core::SlabHashBackendImpl</a>&lt; Key, Hash, Eq &gt;::bucket_list_head_</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="afa859b2dd1ec9362276c725699ad9fd1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afa859b2dd1ec9362276c725699ad9fd1">&#9670;&nbsp;</a></span>buffer_accessor_</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Key , typename Hash , typename Eq &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1core_1_1_c_u_d_a_hash_backend">CUDAHashBackendBufferAccessor</a> <a class="el" href="classopen3d_1_1core_1_1_slab_hash_backend_im">open3d::core::SlabHashBackendImpl</a>&lt; Key, Hash, Eq &gt;::buffer_accessor_</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="adf49281dd9db5d838c5fd277f185746d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adf49281dd9db5d838c5fd277f185746d">&#9670;&nbsp;</a></span>eq_fn_</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Key , typename Hash , typename Eq &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">Eq <a class="el" href="classopen3d_1_1core_1_1_slab_hash_backend_im">open3d::core::SlabHashBackendImpl</a>&lt; Key, Hash, Eq &gt;::eq_fn_</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a97e39b35154d17774c3df98067a77ecc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a97e39b35154d17774c3df98067a77ecc">&#9670;&nbsp;</a></span>hash_fn_</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Key , typename Hash , typename Eq &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">Hash <a class="el" href="classopen3d_1_1core_1_1_slab_hash_backend_im">open3d::core::SlabHashBackendImpl</a>&lt; Key, Hash, Eq &gt;::hash_fn_</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ad79af2b2dadd72a5ccec3681885620c7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad79af2b2dadd72a5ccec3681885620c7">&#9670;&nbsp;</a></span>key_size_in_int_</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Key , typename Hash , typename Eq &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">int <a class="el" href="classopen3d_1_1core_1_1_slab_hash_backend_im">open3d::core::SlabHashBackendImpl</a>&lt; Key, Hash, Eq &gt;::key_size_in_int_ = sizeof(Key) / sizeof(int)</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="aeaf6cb8835aa6f9e697b32b8e08b6328"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeaf6cb8835aa6f9e697b32b8e08b6328">&#9670;&nbsp;</a></span>node_mgr_impl_</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Key , typename Hash , typename Eq &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1core_1_1_slab_node_manager_im">SlabNodeManagerImpl</a> <a class="el" href="classopen3d_1_1core_1_1_slab_hash_backend_im">open3d::core::SlabHashBackendImpl</a>&lt; Key, Hash, Eq &gt;::node_mgr_impl_</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>/home/runner/work/Open3D/Open3D/cpp/open3d/core/hashmap/CUDA/<a class="el" href="_slab_hash_backend_impl_8h_source.56a.delaye">SlabHashBackendImpl.h (9238339 (Tue Mar 14 18:49:09 2023 -0700))</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1
</small></address>
</body>

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/classopen3d_1_1core_1_1_slab_hash_backend_impl.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 10:55:12 GMT -->
</html>
