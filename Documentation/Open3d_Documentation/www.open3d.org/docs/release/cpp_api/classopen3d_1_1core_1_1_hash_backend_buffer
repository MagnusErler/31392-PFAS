<!-- HTML header for doxygen 1.8.20-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/classopen3d_1_1core_1_1_hash_backend_buffer.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 10:55:14 GMT -->
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Open3D (C++ API): open3d::core::HashBackendBuffer Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js", "TeX/AMSmath.html", "TeX/AMSsymbols.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="../../../../cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-3TQPKGV6Z3"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());
  gtag('config', 'G-3TQPKGV6Z3');
</script>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="open3d_logo.ico"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Open3D (C++ API)
   &#160;<span id="projectnumber">0.17.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.html');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.html','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceopen3d.html">open3d</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1core.html">core</a></li><li class="navelem"><a class="el" href="classopen3d_1_1core_1_1_hash_backend_buffer">HashBackendBuffer</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a>  </div>
  <div class="headertitle">
<div class="title">open3d::core::HashBackendBuffer Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_hash_backend_buffer_8h_source.html">HashBackendBuffer.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structopen3d_1_1core_1_1_hash_backend_buffer">HeapTop</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ac5f1477e51a57436de63be2216512b7a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_hash_backend_buffer#ac5f1477e51a57436de63be2216512b7a">HashBackendBuffer</a> (int64_t capacity, int64_t key_dsize, std::vector&lt; int64_t &gt; value_dsizes, const <a class="el" href="classopen3d_1_1core_1_1_device.html">Device</a> &amp;device)</td></tr>
<tr class="separator:ac5f1477e51a57436de63be2216512b7a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2be1b5c98022255fe7fb8e3de7c3a7b5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_hash_backend_buffer#a2be1b5c98022255fe7fb8e3de7c3a7b5">ResetHeap</a> ()</td></tr>
<tr class="memdesc:a2be1b5c98022255fe7fb8e3de7c3a7b5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reset the heap and heap top.  <a href="classopen3d_1_1core_1_1_hash_backend_buffer#a2be1b5c98022255fe7fb8e3de7c3a7b5">More...</a><br /></td></tr>
<tr class="separator:a2be1b5c98022255fe7fb8e3de7c3a7b5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a50da0f977cb5805a3431f2c2682a5ff4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1core_1_1_device.html">Device</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_hash_backend_buffer#a50da0f977cb5805a3431f2c2682a5ff4">GetDevice</a> () const</td></tr>
<tr class="memdesc:a50da0f977cb5805a3431f2c2682a5ff4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return device of the buffer.  <a href="classopen3d_1_1core_1_1_hash_backend_buffer#a50da0f977cb5805a3431f2c2682a5ff4">More...</a><br /></td></tr>
<tr class="separator:a50da0f977cb5805a3431f2c2682a5ff4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7db23b4b5b58b71312b28b37dbb1e995"><td class="memItemLeft" align="right" valign="top">int64_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_hash_backend_buffer#a7db23b4b5b58b71312b28b37dbb1e995">GetCapacity</a> () const</td></tr>
<tr class="memdesc:a7db23b4b5b58b71312b28b37dbb1e995"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return capacity of the buffer.  <a href="classopen3d_1_1core_1_1_hash_backend_buffer#a7db23b4b5b58b71312b28b37dbb1e995">More...</a><br /></td></tr>
<tr class="separator:a7db23b4b5b58b71312b28b37dbb1e995"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0518809dff593acf813dd699af43b546"><td class="memItemLeft" align="right" valign="top">int64_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_hash_backend_buffer#a0518809dff593acf813dd699af43b546">GetKeyDsize</a> () const</td></tr>
<tr class="memdesc:a0518809dff593acf813dd699af43b546"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return key's data size in bytes.  <a href="classopen3d_1_1core_1_1_hash_backend_buffer#a0518809dff593acf813dd699af43b546">More...</a><br /></td></tr>
<tr class="separator:a0518809dff593acf813dd699af43b546"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abc16f2025a8d169b53d7bdc62b8dea48"><td class="memItemLeft" align="right" valign="top">std::vector&lt; int64_t &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_hash_backend_buffer#abc16f2025a8d169b53d7bdc62b8dea48">GetValueDsizes</a> () const</td></tr>
<tr class="memdesc:abc16f2025a8d169b53d7bdc62b8dea48"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return value's data sizes in bytes.  <a href="classopen3d_1_1core_1_1_hash_backend_buffer#abc16f2025a8d169b53d7bdc62b8dea48">More...</a><br /></td></tr>
<tr class="separator:abc16f2025a8d169b53d7bdc62b8dea48"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad830fa0c8911ef42e727be5909d4601f"><td class="memItemLeft" align="right" valign="top">int64_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_hash_backend_buffer#ad830fa0c8911ef42e727be5909d4601f">GetCommonBlockSize</a> () const</td></tr>
<tr class="memdesc:ad830fa0c8911ef42e727be5909d4601f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the common block size divisor of all values types.  <a href="classopen3d_1_1core_1_1_hash_backend_buffer#ad830fa0c8911ef42e727be5909d4601f">More...</a><br /></td></tr>
<tr class="separator:ad830fa0c8911ef42e727be5909d4601f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afef8871eabb9bce55272004f987ba3cf"><td class="memItemLeft" align="right" valign="top">std::vector&lt; int64_t &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_hash_backend_buffer#afef8871eabb9bce55272004f987ba3cf">GetValueBlocksPerElement</a> () const</td></tr>
<tr class="memdesc:afef8871eabb9bce55272004f987ba3cf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return value's data sizes in the unit of common block size divisor.  <a href="classopen3d_1_1core_1_1_hash_backend_buffer#afef8871eabb9bce55272004f987ba3cf">More...</a><br /></td></tr>
<tr class="separator:afef8871eabb9bce55272004f987ba3cf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a68f9a3df65330632e9dbf1854c1cdaa6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_hash_backend_buffer#a68f9a3df65330632e9dbf1854c1cdaa6">GetIndexHeap</a> () const</td></tr>
<tr class="memdesc:a68f9a3df65330632e9dbf1854c1cdaa6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the index heap tensor.  <a href="classopen3d_1_1core_1_1_hash_backend_buffer#a68f9a3df65330632e9dbf1854c1cdaa6">More...</a><br /></td></tr>
<tr class="separator:a68f9a3df65330632e9dbf1854c1cdaa6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9a0d900079ee04414f15d7a143d0389a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structopen3d_1_1core_1_1_hash_backend_buffer">HeapTop</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_hash_backend_buffer#a9a0d900079ee04414f15d7a143d0389a">GetHeapTop</a> ()</td></tr>
<tr class="separator:a9a0d900079ee04414f15d7a143d0389a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a86e69a07be4e6de71b6aa6d87d079591"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_hash_backend_buffer#a86e69a07be4e6de71b6aa6d87d079591">GetHeapTopIndex</a> () const</td></tr>
<tr class="memdesc:a86e69a07be4e6de71b6aa6d87d079591"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the current heap top.  <a href="classopen3d_1_1core_1_1_hash_backend_buffer#a86e69a07be4e6de71b6aa6d87d079591">More...</a><br /></td></tr>
<tr class="separator:a86e69a07be4e6de71b6aa6d87d079591"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab559bf4c57ed8e593885ed9093007462"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_hash_backend_buffer#ab559bf4c57ed8e593885ed9093007462">GetKeyBuffer</a> () const</td></tr>
<tr class="memdesc:ab559bf4c57ed8e593885ed9093007462"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the key buffer tensor.  <a href="classopen3d_1_1core_1_1_hash_backend_buffer#ab559bf4c57ed8e593885ed9093007462">More...</a><br /></td></tr>
<tr class="separator:ab559bf4c57ed8e593885ed9093007462"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afeaa58a31883621fe9e260973cacfee4"><td class="memItemLeft" align="right" valign="top">std::vector&lt; <a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_hash_backend_buffer#afeaa58a31883621fe9e260973cacfee4">GetValueBuffers</a> () const</td></tr>
<tr class="memdesc:afeaa58a31883621fe9e260973cacfee4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the value buffer tensors.  <a href="classopen3d_1_1core_1_1_hash_backend_buffer#afeaa58a31883621fe9e260973cacfee4">More...</a><br /></td></tr>
<tr class="separator:afeaa58a31883621fe9e260973cacfee4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abc4d9346da06d64836cf8be2c7f0110b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_hash_backend_buffer#abc4d9346da06d64836cf8be2c7f0110b">GetValueBuffer</a> (size_t i=0) const</td></tr>
<tr class="memdesc:abc4d9346da06d64836cf8be2c7f0110b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the selected value buffer tensor at index i.  <a href="classopen3d_1_1core_1_1_hash_backend_buffer#abc4d9346da06d64836cf8be2c7f0110b">More...</a><br /></td></tr>
<tr class="separator:abc4d9346da06d64836cf8be2c7f0110b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:a4e1eb50c3451edb76b6201f5cd7915ad"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_hash_backend_buffer#a4e1eb50c3451edb76b6201f5cd7915ad">heap_</a></td></tr>
<tr class="separator:a4e1eb50c3451edb76b6201f5cd7915ad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a868d8cd07f785bc53849e815edf6b7d0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structopen3d_1_1core_1_1_hash_backend_buffer">HeapTop</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_hash_backend_buffer#a868d8cd07f785bc53849e815edf6b7d0">heap_top_</a></td></tr>
<tr class="separator:a868d8cd07f785bc53849e815edf6b7d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a29927759c06645f17e4623f98ad2d01f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_hash_backend_buffer#a29927759c06645f17e4623f98ad2d01f">key_buffer_</a></td></tr>
<tr class="separator:a29927759c06645f17e4623f98ad2d01f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2ed52d4aed5a2f3c28e43d756a620977"><td class="memItemLeft" align="right" valign="top">std::vector&lt; <a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_hash_backend_buffer#a2ed52d4aed5a2f3c28e43d756a620977">value_buffers_</a></td></tr>
<tr class="separator:a2ed52d4aed5a2f3c28e43d756a620977"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a893a77b466403bc2941ec182cf1dd662"><td class="memItemLeft" align="right" valign="top">int64_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_hash_backend_buffer#a893a77b466403bc2941ec182cf1dd662">common_block_size_</a></td></tr>
<tr class="separator:a893a77b466403bc2941ec182cf1dd662"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aabad64c7001abc7e134349ef1c0fcc17"><td class="memItemLeft" align="right" valign="top">std::vector&lt; int64_t &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_hash_backend_buffer#aabad64c7001abc7e134349ef1c0fcc17">blocks_per_element_</a></td></tr>
<tr class="separator:aabad64c7001abc7e134349ef1c0fcc17"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="ac5f1477e51a57436de63be2216512b7a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac5f1477e51a57436de63be2216512b7a">&#9670;&nbsp;</a></span>HashBackendBuffer()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">open3d::core::HashBackendBuffer::HashBackendBuffer </td>
          <td>(</td>
          <td class="paramtype">int64_t&#160;</td>
          <td class="paramname"><em>capacity</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int64_t&#160;</td>
          <td class="paramname"><em>key_dsize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::vector&lt; int64_t &gt;&#160;</td>
          <td class="paramname"><em>value_dsizes</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_device.html">Device</a> &amp;&#160;</td>
          <td class="paramname"><em>device</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a7db23b4b5b58b71312b28b37dbb1e995"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7db23b4b5b58b71312b28b37dbb1e995">&#9670;&nbsp;</a></span>GetCapacity()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int64_t open3d::core::HashBackendBuffer::GetCapacity </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return capacity of the buffer. </p>

</div>
</div>
<a id="ad830fa0c8911ef42e727be5909d4601f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad830fa0c8911ef42e727be5909d4601f">&#9670;&nbsp;</a></span>GetCommonBlockSize()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int64_t open3d::core::HashBackendBuffer::GetCommonBlockSize </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the common block size divisor of all values types. </p>

</div>
</div>
<a id="a50da0f977cb5805a3431f2c2682a5ff4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a50da0f977cb5805a3431f2c2682a5ff4">&#9670;&nbsp;</a></span>GetDevice()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1core_1_1_device.html">Device</a> open3d::core::HashBackendBuffer::GetDevice </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return device of the buffer. </p>

</div>
</div>
<a id="a9a0d900079ee04414f15d7a143d0389a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9a0d900079ee04414f15d7a143d0389a">&#9670;&nbsp;</a></span>GetHeapTop()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structopen3d_1_1core_1_1_hash_backend_buffer">HashBackendBuffer::HeapTop</a> &amp; open3d::core::HashBackendBuffer::GetHeapTop </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Return the heap top structure. To be dispatched accordingly in C++/CUDA accessors. </p>

</div>
</div>
<a id="a86e69a07be4e6de71b6aa6d87d079591"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a86e69a07be4e6de71b6aa6d87d079591">&#9670;&nbsp;</a></span>GetHeapTopIndex()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int open3d::core::HashBackendBuffer::GetHeapTopIndex </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return the current heap top. </p>

</div>
</div>
<a id="a68f9a3df65330632e9dbf1854c1cdaa6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a68f9a3df65330632e9dbf1854c1cdaa6">&#9670;&nbsp;</a></span>GetIndexHeap()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a> open3d::core::HashBackendBuffer::GetIndexHeap </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return the index heap tensor. </p>

</div>
</div>
<a id="ab559bf4c57ed8e593885ed9093007462"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab559bf4c57ed8e593885ed9093007462">&#9670;&nbsp;</a></span>GetKeyBuffer()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a> open3d::core::HashBackendBuffer::GetKeyBuffer </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return the key buffer tensor. </p>

</div>
</div>
<a id="a0518809dff593acf813dd699af43b546"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0518809dff593acf813dd699af43b546">&#9670;&nbsp;</a></span>GetKeyDsize()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int64_t open3d::core::HashBackendBuffer::GetKeyDsize </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return key's data size in bytes. </p>

</div>
</div>
<a id="afef8871eabb9bce55272004f987ba3cf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afef8871eabb9bce55272004f987ba3cf">&#9670;&nbsp;</a></span>GetValueBlocksPerElement()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt; int64_t &gt; open3d::core::HashBackendBuffer::GetValueBlocksPerElement </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return value's data sizes in the unit of common block size divisor. </p>

</div>
</div>
<a id="abc4d9346da06d64836cf8be2c7f0110b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abc4d9346da06d64836cf8be2c7f0110b">&#9670;&nbsp;</a></span>GetValueBuffer()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a> open3d::core::HashBackendBuffer::GetValueBuffer </td>
          <td>(</td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>i</em> = <code>0</code></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return the selected value buffer tensor at index i. </p>

</div>
</div>
<a id="afeaa58a31883621fe9e260973cacfee4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afeaa58a31883621fe9e260973cacfee4">&#9670;&nbsp;</a></span>GetValueBuffers()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt; <a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a> &gt; open3d::core::HashBackendBuffer::GetValueBuffers </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return the value buffer tensors. </p>

</div>
</div>
<a id="abc16f2025a8d169b53d7bdc62b8dea48"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abc16f2025a8d169b53d7bdc62b8dea48">&#9670;&nbsp;</a></span>GetValueDsizes()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt; int64_t &gt; open3d::core::HashBackendBuffer::GetValueDsizes </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return value's data sizes in bytes. </p>

</div>
</div>
<a id="a2be1b5c98022255fe7fb8e3de7c3a7b5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2be1b5c98022255fe7fb8e3de7c3a7b5">&#9670;&nbsp;</a></span>ResetHeap()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::core::HashBackendBuffer::ResetHeap </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Reset the heap and heap top. </p>

</div>
</div>
<h2 class="groupheader">Field Documentation</h2>
<a id="aabad64c7001abc7e134349ef1c0fcc17"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aabad64c7001abc7e134349ef1c0fcc17">&#9670;&nbsp;</a></span>blocks_per_element_</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;int64_t&gt; open3d::core::HashBackendBuffer::blocks_per_element_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a893a77b466403bc2941ec182cf1dd662"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a893a77b466403bc2941ec182cf1dd662">&#9670;&nbsp;</a></span>common_block_size_</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int64_t open3d::core::HashBackendBuffer::common_block_size_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a4e1eb50c3451edb76b6201f5cd7915ad"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4e1eb50c3451edb76b6201f5cd7915ad">&#9670;&nbsp;</a></span>heap_</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a> open3d::core::HashBackendBuffer::heap_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a868d8cd07f785bc53849e815edf6b7d0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a868d8cd07f785bc53849e815edf6b7d0">&#9670;&nbsp;</a></span>heap_top_</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structopen3d_1_1core_1_1_hash_backend_buffer">HeapTop</a> open3d::core::HashBackendBuffer::heap_top_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a29927759c06645f17e4623f98ad2d01f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a29927759c06645f17e4623f98ad2d01f">&#9670;&nbsp;</a></span>key_buffer_</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a> open3d::core::HashBackendBuffer::key_buffer_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a2ed52d4aed5a2f3c28e43d756a620977"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2ed52d4aed5a2f3c28e43d756a620977">&#9670;&nbsp;</a></span>value_buffers_</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;<a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a>&gt; open3d::core::HashBackendBuffer::value_buffers_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/runner/work/Open3D/Open3D/cpp/open3d/core/hashmap/<a class="el" href="_hash_backend_buffer_8h_source.html">HashBackendBuffer.h (9238339 (Tue Mar 14 18:49:09 2023 -0700))</a></li>
<li>/home/runner/work/Open3D/Open3D/cpp/open3d/core/hashmap/<a class="el" href="_hash_backend_buffer_8cpp.html">HashBackendBuffer.cpp (9238339 (Tue Mar 14 18:49:09 2023 -0700))</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1
</small></address>
</body>

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/classopen3d_1_1core_1_1_hash_backend_buffer.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 10:55:14 GMT -->
</html>
