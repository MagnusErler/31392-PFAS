<!-- HTML header for doxygen 1.8.20-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/classopen3d_1_1visualization_1_1gui_1_1_window_system.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 11:01:37 GMT -->
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Open3D (C++ API): open3d::visualization::gui::WindowSystem Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js", "TeX/AMSmath.html", "TeX/AMSsymbols.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="../../../../cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-3TQPKGV6Z3"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());
  gtag('config', 'G-3TQPKGV6Z3');
</script>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="open3d_logo.ico"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Open3D (C++ API)
   &#160;<span id="projectnumber">0.17.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.html');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.html','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceopen3d.html">open3d</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1visualization.html">visualization</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1visualization_1_1gui.46a">gui</a></li><li class="navelem"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2">WindowSystem</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-attribs">Static Public Attributes</a>  </div>
  <div class="headertitle">
<div class="title">open3d::visualization::gui::WindowSystem Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_window_system_8h_source.html">WindowSystem.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for open3d::visualization::gui::WindowSystem:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classopen3d_1_1visualization_1_1gui_1_1_wind-4" usemap="#open3d::visualization::gui::WindowSystem_map" alt=""/>
  <map id="open3d::visualization::gui::WindowSystem_map" name="open3d::visualization::gui::WindowSystem_map">
<area href="classopen3d_1_1visualization_1_1gui_1_1_bitm" alt="open3d::visualization::gui::BitmapWindowSystem" shape="rect" coords="0,56,356,80"/>
<area href="classopen3d_1_1visualization_1_1gui_1_1_g_l_" alt="open3d::visualization::gui::GLFWWindowSystem" shape="rect" coords="366,56,722,80"/>
<area href="classopen3d_1_1visualization_1_1webrtc__serv-10" title="WebRTCWindowSystem is a BitmapWindowSystem with a WebRTC server that sends video frames to remote cli..." alt="open3d::visualization::webrtc_server::WebRTCWindowSystem" shape="rect" coords="0,112,356,136"/>
  </map>
</div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a7cc99ba75236df4f5d2a815a77e7a27b"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">OSWindow</a> = void *</td></tr>
<tr class="separator:a7cc99ba75236df4f5d2a815a77e7a27b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a27d44dee8f562e760d0f23442c84ff82"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a27d44dee8f562e760d0f23442c84ff82">~WindowSystem</a> ()</td></tr>
<tr class="separator:a27d44dee8f562e760d0f23442c84ff82"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adcc6b7d34062533db0f22a14cbc5711e"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#adcc6b7d34062533db0f22a14cbc5711e">Initialize</a> ()=0</td></tr>
<tr class="separator:adcc6b7d34062533db0f22a14cbc5711e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a35472e70ff567ea96ac200ce5e6e796b"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a35472e70ff567ea96ac200ce5e6e796b">Uninitialize</a> ()=0</td></tr>
<tr class="separator:a35472e70ff567ea96ac200ce5e6e796b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8a670dd3ae93457e9a8080959c14c25f"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a8a670dd3ae93457e9a8080959c14c25f">WaitEventsTimeout</a> (double timeout_secs)=0</td></tr>
<tr class="separator:a8a670dd3ae93457e9a8080959c14c25f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1ca31c98299de1fb9511bfcb8da07951"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="structopen3d_1_1visualization_1_1gui_1_1_siz">Size</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a1ca31c98299de1fb9511bfcb8da07951">GetScreenSize</a> (<a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">OSWindow</a> w)=0</td></tr>
<tr class="separator:a1ca31c98299de1fb9511bfcb8da07951"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a705a1b6df6927fb8dc58b3999481ba72"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">OSWindow</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a705a1b6df6927fb8dc58b3999481ba72">CreateOSWindow</a> (<a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind">Window</a> *<a class="el" href="_bitmap_window_system_8cpp.html#a5362a314787f250a6bdba91e8fcfecf2">o3d_window</a>, int <a class="el" href="io_2file__format_2_file_p_c_d_8cpp.375.delay#a2474a5474cbff19523a51eb1de01cda4">width</a>, int <a class="el" href="io_2file__format_2_file_p_c_d_8cpp.375.delay#ad12fc34ce789bce6c8a05d8a17138534">height</a>, const char *title, int flags)=0</td></tr>
<tr class="separator:a705a1b6df6927fb8dc58b3999481ba72"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a60ff194dc8a8c6c3d0952f58b7d2153c"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a60ff194dc8a8c6c3d0952f58b7d2153c">DestroyWindow</a> (<a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">OSWindow</a> w)=0</td></tr>
<tr class="separator:a60ff194dc8a8c6c3d0952f58b7d2153c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae597560964237b05c967af59735e0f25"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#ae597560964237b05c967af59735e0f25">PostRedrawEvent</a> (<a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">OSWindow</a> w)=0</td></tr>
<tr class="separator:ae597560964237b05c967af59735e0f25"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a315c491871912290f01769781ce498a6"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a315c491871912290f01769781ce498a6">GetWindowIsVisible</a> (<a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">OSWindow</a> w) const =0</td></tr>
<tr class="separator:a315c491871912290f01769781ce498a6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab23c13ed9fba49e1fc855407165d39af"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#ab23c13ed9fba49e1fc855407165d39af">ShowWindow</a> (<a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">OSWindow</a> w, bool show)=0</td></tr>
<tr class="separator:ab23c13ed9fba49e1fc855407165d39af"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a656ac27ee2f88b4b52a29ea2e546b70a"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a656ac27ee2f88b4b52a29ea2e546b70a">RaiseWindowToTop</a> (<a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">OSWindow</a> w)=0</td></tr>
<tr class="separator:a656ac27ee2f88b4b52a29ea2e546b70a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0c9eb064561d86e0682a959998c5c1ea"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a0c9eb064561d86e0682a959998c5c1ea">IsActiveWindow</a> (<a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">OSWindow</a> w) const =0</td></tr>
<tr class="separator:a0c9eb064561d86e0682a959998c5c1ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acc1cf468c08ed1b77175cbdefa260185"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="structopen3d_1_1visualization_1_1gui_1_1_poi">Point</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#acc1cf468c08ed1b77175cbdefa260185">GetWindowPos</a> (<a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">OSWindow</a> w) const =0</td></tr>
<tr class="separator:acc1cf468c08ed1b77175cbdefa260185"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a70ddb0d00cfe0aaa76db7b5ac3260b7e"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a70ddb0d00cfe0aaa76db7b5ac3260b7e">SetWindowPos</a> (<a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">OSWindow</a> w, int x, int y)=0</td></tr>
<tr class="separator:a70ddb0d00cfe0aaa76db7b5ac3260b7e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2530c7577314c8daedb785da3c9ac83f"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="structopen3d_1_1visualization_1_1gui_1_1_siz">Size</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a2530c7577314c8daedb785da3c9ac83f">GetWindowSize</a> (<a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">OSWindow</a> w) const =0</td></tr>
<tr class="separator:a2530c7577314c8daedb785da3c9ac83f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:add5aefd6ad0c3e548657b6a285254e5f"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#add5aefd6ad0c3e548657b6a285254e5f">SetWindowSize</a> (<a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">OSWindow</a> w, int <a class="el" href="io_2file__format_2_file_p_c_d_8cpp.375.delay#a2474a5474cbff19523a51eb1de01cda4">width</a>, int <a class="el" href="io_2file__format_2_file_p_c_d_8cpp.375.delay#ad12fc34ce789bce6c8a05d8a17138534">height</a>)=0</td></tr>
<tr class="separator:add5aefd6ad0c3e548657b6a285254e5f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afa8abe21fa4667b821c813be1069636a"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="structopen3d_1_1visualization_1_1gui_1_1_siz">Size</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#afa8abe21fa4667b821c813be1069636a">GetWindowSizePixels</a> (<a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">OSWindow</a> w) const =0</td></tr>
<tr class="separator:afa8abe21fa4667b821c813be1069636a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a54fbe5c025d569303a2cc8dd120230e7"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a54fbe5c025d569303a2cc8dd120230e7">SetWindowSizePixels</a> (<a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">OSWindow</a> w, const <a class="el" href="structopen3d_1_1visualization_1_1gui_1_1_siz">Size</a> &amp;<a class="el" href="io_2file__format_2_file_p_c_d_8cpp.375.delay#a439227feff9d7f55384e8780cfc2eb82">size</a>)=0</td></tr>
<tr class="separator:a54fbe5c025d569303a2cc8dd120230e7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afac9f08ee1c4d554bd8f57551e1655a3"><td class="memItemLeft" align="right" valign="top">virtual float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#afac9f08ee1c4d554bd8f57551e1655a3">GetWindowScaleFactor</a> (<a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">OSWindow</a> w) const =0</td></tr>
<tr class="separator:afac9f08ee1c4d554bd8f57551e1655a3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd57d5142d631f098ceeda4fa1a7f0d2"><td class="memItemLeft" align="right" valign="top">virtual float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#acd57d5142d631f098ceeda4fa1a7f0d2">GetUIScaleFactor</a> (<a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">OSWindow</a> w) const =0</td></tr>
<tr class="separator:acd57d5142d631f098ceeda4fa1a7f0d2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3076135b4d7fab88857d8b553b4c25ee"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a3076135b4d7fab88857d8b553b4c25ee">SetWindowTitle</a> (<a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">OSWindow</a> w, const char *title)=0</td></tr>
<tr class="separator:a3076135b4d7fab88857d8b553b4c25ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a04b7c97f852ae316abf56b2beb30bda9"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="structopen3d_1_1visualization_1_1gui_1_1_poi">Point</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a04b7c97f852ae316abf56b2beb30bda9">GetMousePosInWindow</a> (<a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">OSWindow</a> w) const =0</td></tr>
<tr class="separator:a04b7c97f852ae316abf56b2beb30bda9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afc5e143078344fadf9caabdf0d08dea6"><td class="memItemLeft" align="right" valign="top">virtual int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#afc5e143078344fadf9caabdf0d08dea6">GetMouseButtons</a> (<a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">OSWindow</a> w) const =0</td></tr>
<tr class="separator:afc5e143078344fadf9caabdf0d08dea6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acc3288f2791a8c071fa5e04de736dc95"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#acc3288f2791a8c071fa5e04de736dc95">CancelUserClose</a> (<a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">OSWindow</a> w)=0</td></tr>
<tr class="separator:acc3288f2791a8c071fa5e04de736dc95"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac0eaebe722fdea58428a789ad72784e3"><td class="memItemLeft" align="right" valign="top">virtual void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#ac0eaebe722fdea58428a789ad72784e3">GetNativeDrawable</a> (<a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">OSWindow</a> w)=0</td></tr>
<tr class="separator:ac0eaebe722fdea58428a789ad72784e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a875c83cf9131cb040585d95d6ace3fa6"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-19">rendering::FilamentRenderer</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a875c83cf9131cb040585d95d6ace3fa6">CreateRenderer</a> (<a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">OSWindow</a> w)=0</td></tr>
<tr class="separator:a875c83cf9131cb040585d95d6ace3fa6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f4b42a9b8b2f0e22b9fb17d51ebf5d6"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a5f4b42a9b8b2f0e22b9fb17d51ebf5d6">ResizeRenderer</a> (<a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">OSWindow</a> w, <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-19">rendering::FilamentRenderer</a> *renderer)=0</td></tr>
<tr class="separator:a5f4b42a9b8b2f0e22b9fb17d51ebf5d6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a34cc869b091985497415f4d971257f6d"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_menu-2">MenuBase</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a34cc869b091985497415f4d971257f6d">CreateOSMenu</a> ()=0</td></tr>
<tr class="separator:a34cc869b091985497415f4d971257f6d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-attribs"></a>
Static Public Attributes</h2></td></tr>
<tr class="memitem:aec5141ae677f8cd297c19c9ca152791f"><td class="memItemLeft" align="right" valign="top">static constexpr int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#aec5141ae677f8cd297c19c9ca152791f">FLAG_VISIBLE</a> = 0</td></tr>
<tr class="separator:aec5141ae677f8cd297c19c9ca152791f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a9bdea49f94b5ab46d43a8aeea3feb9"><td class="memItemLeft" align="right" valign="top">static constexpr int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a6a9bdea49f94b5ab46d43a8aeea3feb9">FLAG_HIDDEN</a> = (1 &lt;&lt; 0)</td></tr>
<tr class="separator:a6a9bdea49f94b5ab46d43a8aeea3feb9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a207eccd6e23e4098fff16d02a1a0d0c6"><td class="memItemLeft" align="right" valign="top">static constexpr int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a207eccd6e23e4098fff16d02a1a0d0c6">FLAG_TOPMOST</a> = (1 &lt;&lt; 1)</td></tr>
<tr class="separator:a207eccd6e23e4098fff16d02a1a0d0c6"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2">WindowSystem</a> (and its derived classes) are internal to Open3D and not intended to be used directly. Internal users should get the <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2">WindowSystem</a> object using <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_appl#ade352525c81890891c171ae16f9f163d">Application::GetInstance()</a>.GetWindowSystem(). </p>
</div><h2 class="groupheader">Member Typedef Documentation</h2>
<a id="a7cc99ba75236df4f5d2a815a77e7a27b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7cc99ba75236df4f5d2a815a77e7a27b">&#9670;&nbsp;</a></span>OSWindow</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">open3d::visualization::gui::WindowSystem::OSWindow</a> =  void*</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a27d44dee8f562e760d0f23442c84ff82"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a27d44dee8f562e760d0f23442c84ff82">&#9670;&nbsp;</a></span>~WindowSystem()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual open3d::visualization::gui::WindowSystem::~WindowSystem </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="acc3288f2791a8c071fa5e04de736dc95"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acc3288f2791a8c071fa5e04de736dc95">&#9670;&nbsp;</a></span>CancelUserClose()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void open3d::visualization::gui::WindowSystem::CancelUserClose </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">OSWindow</a>&#160;</td>
          <td class="paramname"><em>w</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_g_l_#a620d75e00cb88a0699805b24d9acff7d">open3d::visualization::gui::GLFWWindowSystem</a>, and <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_bitm#aeda1f8bc55855749c5c4ca531ce13660">open3d::visualization::gui::BitmapWindowSystem</a>.</p>

</div>
</div>
<a id="a34cc869b091985497415f4d971257f6d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a34cc869b091985497415f4d971257f6d">&#9670;&nbsp;</a></span>CreateOSMenu()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_menu-2">MenuBase</a>* open3d::visualization::gui::WindowSystem::CreateOSMenu </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_g_l_#aeb8f37699ad431ccba2a9c7ccebf3ae3">open3d::visualization::gui::GLFWWindowSystem</a>, and <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_bitm#ace8d80b05828b3d28c4aa145963e6c50">open3d::visualization::gui::BitmapWindowSystem</a>.</p>

</div>
</div>
<a id="a705a1b6df6927fb8dc58b3999481ba72"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a705a1b6df6927fb8dc58b3999481ba72">&#9670;&nbsp;</a></span>CreateOSWindow()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">OSWindow</a> open3d::visualization::gui::WindowSystem::CreateOSWindow </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind">Window</a> *&#160;</td>
          <td class="paramname"><em>o3d_window</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>width</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>height</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>title</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>flags</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_g_l_#af487773edc7f4a35640d54894279c14e">open3d::visualization::gui::GLFWWindowSystem</a>, <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_bitm#a64fa2bff897f1d0c67d3a68f2545d35f">open3d::visualization::gui::BitmapWindowSystem</a>, and <a class="el" href="classopen3d_1_1visualization_1_1webrtc__serv-10#a334f76c500eb1390bf69a93867581a48">open3d::visualization::webrtc_server::WebRTCWindowSystem</a>.</p>

</div>
</div>
<a id="a875c83cf9131cb040585d95d6ace3fa6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a875c83cf9131cb040585d95d6ace3fa6">&#9670;&nbsp;</a></span>CreateRenderer()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-19">rendering::FilamentRenderer</a>* open3d::visualization::gui::WindowSystem::CreateRenderer </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">OSWindow</a>&#160;</td>
          <td class="paramname"><em>w</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_g_l_#a84652692af10d303e76395f22aedd9ef">open3d::visualization::gui::GLFWWindowSystem</a>, and <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_bitm#a1b94624dfcaf6bc29419379fddece4ad">open3d::visualization::gui::BitmapWindowSystem</a>.</p>

</div>
</div>
<a id="a60ff194dc8a8c6c3d0952f58b7d2153c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a60ff194dc8a8c6c3d0952f58b7d2153c">&#9670;&nbsp;</a></span>DestroyWindow()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void open3d::visualization::gui::WindowSystem::DestroyWindow </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">OSWindow</a>&#160;</td>
          <td class="paramname"><em>w</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classopen3d_1_1visualization_1_1webrtc__serv-10#a1d37bbf4e883b33d1b25b439d81998eb">open3d::visualization::webrtc_server::WebRTCWindowSystem</a>, <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_g_l_#af7128813f8768372aaece19185c21ef9">open3d::visualization::gui::GLFWWindowSystem</a>, and <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_bitm#a7fd5688ed18baf77ef6963eafafd945d">open3d::visualization::gui::BitmapWindowSystem</a>.</p>

</div>
</div>
<a id="afc5e143078344fadf9caabdf0d08dea6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afc5e143078344fadf9caabdf0d08dea6">&#9670;&nbsp;</a></span>GetMouseButtons()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual int open3d::visualization::gui::WindowSystem::GetMouseButtons </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">OSWindow</a>&#160;</td>
          <td class="paramname"><em>w</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_g_l_#ab9c5f0a29e11797c8fade9645295dfef">open3d::visualization::gui::GLFWWindowSystem</a>, and <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_bitm#a6d37d71863b316b652aafb9858b54b20">open3d::visualization::gui::BitmapWindowSystem</a>.</p>

</div>
</div>
<a id="a04b7c97f852ae316abf56b2beb30bda9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a04b7c97f852ae316abf56b2beb30bda9">&#9670;&nbsp;</a></span>GetMousePosInWindow()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="structopen3d_1_1visualization_1_1gui_1_1_poi">Point</a> open3d::visualization::gui::WindowSystem::GetMousePosInWindow </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">OSWindow</a>&#160;</td>
          <td class="paramname"><em>w</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_g_l_#a2ef6479fad9908657aefe94da0ab6ab5">open3d::visualization::gui::GLFWWindowSystem</a>, and <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_bitm#aa72784b7ce6b23932be15c172f6ca6b0">open3d::visualization::gui::BitmapWindowSystem</a>.</p>

</div>
</div>
<a id="ac0eaebe722fdea58428a789ad72784e3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac0eaebe722fdea58428a789ad72784e3">&#9670;&nbsp;</a></span>GetNativeDrawable()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void* open3d::visualization::gui::WindowSystem::GetNativeDrawable </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">OSWindow</a>&#160;</td>
          <td class="paramname"><em>w</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_g_l_#a67c9c6305b77234c8c0974282a43cbbe">open3d::visualization::gui::GLFWWindowSystem</a>, and <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_bitm#a8ec8372165d75fe95763a9d59142c3c0">open3d::visualization::gui::BitmapWindowSystem</a>.</p>

</div>
</div>
<a id="a1ca31c98299de1fb9511bfcb8da07951"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1ca31c98299de1fb9511bfcb8da07951">&#9670;&nbsp;</a></span>GetScreenSize()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="structopen3d_1_1visualization_1_1gui_1_1_siz">Size</a> open3d::visualization::gui::WindowSystem::GetScreenSize </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">OSWindow</a>&#160;</td>
          <td class="paramname"><em>w</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_g_l_#a88dc3db4f72d8106cce5230cc2972848">open3d::visualization::gui::GLFWWindowSystem</a>, and <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_bitm#a5c66ff095c399c7d046d5465f23e1788">open3d::visualization::gui::BitmapWindowSystem</a>.</p>

</div>
</div>
<a id="acd57d5142d631f098ceeda4fa1a7f0d2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acd57d5142d631f098ceeda4fa1a7f0d2">&#9670;&nbsp;</a></span>GetUIScaleFactor()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual float open3d::visualization::gui::WindowSystem::GetUIScaleFactor </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">OSWindow</a>&#160;</td>
          <td class="paramname"><em>w</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_g_l_#abeae8f666435d60d06e9c27f1c78f878">open3d::visualization::gui::GLFWWindowSystem</a>, and <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_bitm#a2f6849064a996ec9b3385700d6821f81">open3d::visualization::gui::BitmapWindowSystem</a>.</p>

</div>
</div>
<a id="a315c491871912290f01769781ce498a6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a315c491871912290f01769781ce498a6">&#9670;&nbsp;</a></span>GetWindowIsVisible()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool open3d::visualization::gui::WindowSystem::GetWindowIsVisible </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">OSWindow</a>&#160;</td>
          <td class="paramname"><em>w</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_g_l_#a86a96afb049a48fcd4a1f75efe012f3a">open3d::visualization::gui::GLFWWindowSystem</a>, and <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_bitm#a399c213c703052f94b48fb480b8b55a8">open3d::visualization::gui::BitmapWindowSystem</a>.</p>

</div>
</div>
<a id="acc1cf468c08ed1b77175cbdefa260185"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acc1cf468c08ed1b77175cbdefa260185">&#9670;&nbsp;</a></span>GetWindowPos()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="structopen3d_1_1visualization_1_1gui_1_1_poi">Point</a> open3d::visualization::gui::WindowSystem::GetWindowPos </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">OSWindow</a>&#160;</td>
          <td class="paramname"><em>w</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_g_l_#a0fe28e1457264b77153b2ba3ca0e947a">open3d::visualization::gui::GLFWWindowSystem</a>, and <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_bitm#a8c4cbfbc1cb221ae241451ba460b0045">open3d::visualization::gui::BitmapWindowSystem</a>.</p>

</div>
</div>
<a id="afac9f08ee1c4d554bd8f57551e1655a3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afac9f08ee1c4d554bd8f57551e1655a3">&#9670;&nbsp;</a></span>GetWindowScaleFactor()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual float open3d::visualization::gui::WindowSystem::GetWindowScaleFactor </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">OSWindow</a>&#160;</td>
          <td class="paramname"><em>w</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_g_l_#ae83df9e827b05baf996bf984af8145bf">open3d::visualization::gui::GLFWWindowSystem</a>, and <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_bitm#ab6ebd23d5e16e38616fd6bcb33a16a05">open3d::visualization::gui::BitmapWindowSystem</a>.</p>

</div>
</div>
<a id="a2530c7577314c8daedb785da3c9ac83f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2530c7577314c8daedb785da3c9ac83f">&#9670;&nbsp;</a></span>GetWindowSize()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="structopen3d_1_1visualization_1_1gui_1_1_siz">Size</a> open3d::visualization::gui::WindowSystem::GetWindowSize </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">OSWindow</a>&#160;</td>
          <td class="paramname"><em>w</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_g_l_#a696a29340c0db048fa28c09eae1cac90">open3d::visualization::gui::GLFWWindowSystem</a>, and <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_bitm#acfbec4f8cf98f30e18b85a22b067a838">open3d::visualization::gui::BitmapWindowSystem</a>.</p>

</div>
</div>
<a id="afa8abe21fa4667b821c813be1069636a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afa8abe21fa4667b821c813be1069636a">&#9670;&nbsp;</a></span>GetWindowSizePixels()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="structopen3d_1_1visualization_1_1gui_1_1_siz">Size</a> open3d::visualization::gui::WindowSystem::GetWindowSizePixels </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">OSWindow</a>&#160;</td>
          <td class="paramname"><em>w</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_g_l_#abc5436bbfeec397e80855ccbfd6b9439">open3d::visualization::gui::GLFWWindowSystem</a>, and <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_bitm#a829df60178fbb0bf3b0b523439f22cb7">open3d::visualization::gui::BitmapWindowSystem</a>.</p>

</div>
</div>
<a id="adcc6b7d34062533db0f22a14cbc5711e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adcc6b7d34062533db0f22a14cbc5711e">&#9670;&nbsp;</a></span>Initialize()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void open3d::visualization::gui::WindowSystem::Initialize </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_g_l_#abcb183a9665f49d5e37f505cea2c43d5">open3d::visualization::gui::GLFWWindowSystem</a>, and <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_bitm#ac720e9bde01996c8b4a67434ea3b9844">open3d::visualization::gui::BitmapWindowSystem</a>.</p>

</div>
</div>
<a id="a0c9eb064561d86e0682a959998c5c1ea"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0c9eb064561d86e0682a959998c5c1ea">&#9670;&nbsp;</a></span>IsActiveWindow()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool open3d::visualization::gui::WindowSystem::IsActiveWindow </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">OSWindow</a>&#160;</td>
          <td class="paramname"><em>w</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_g_l_#a378661b29afb91ab9f955734583d3de3">open3d::visualization::gui::GLFWWindowSystem</a>, and <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_bitm#a3f1408da1fc0c27fb9ece0576159ba15">open3d::visualization::gui::BitmapWindowSystem</a>.</p>

</div>
</div>
<a id="ae597560964237b05c967af59735e0f25"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae597560964237b05c967af59735e0f25">&#9670;&nbsp;</a></span>PostRedrawEvent()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void open3d::visualization::gui::WindowSystem::PostRedrawEvent </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">OSWindow</a>&#160;</td>
          <td class="paramname"><em>w</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_g_l_#ad905894120afcf647553d785c10c6c54">open3d::visualization::gui::GLFWWindowSystem</a>, and <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_bitm#af83e19e6045baf1504a3f4fc36410c03">open3d::visualization::gui::BitmapWindowSystem</a>.</p>

</div>
</div>
<a id="a656ac27ee2f88b4b52a29ea2e546b70a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a656ac27ee2f88b4b52a29ea2e546b70a">&#9670;&nbsp;</a></span>RaiseWindowToTop()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void open3d::visualization::gui::WindowSystem::RaiseWindowToTop </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">OSWindow</a>&#160;</td>
          <td class="paramname"><em>w</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_g_l_#aad75cd09023d89b967ee32ef08e72db4">open3d::visualization::gui::GLFWWindowSystem</a>, and <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_bitm#a73676e93c82066bffa2b0cd0a621c36a">open3d::visualization::gui::BitmapWindowSystem</a>.</p>

</div>
</div>
<a id="a5f4b42a9b8b2f0e22b9fb17d51ebf5d6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5f4b42a9b8b2f0e22b9fb17d51ebf5d6">&#9670;&nbsp;</a></span>ResizeRenderer()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void open3d::visualization::gui::WindowSystem::ResizeRenderer </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">OSWindow</a>&#160;</td>
          <td class="paramname"><em>w</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-19">rendering::FilamentRenderer</a> *&#160;</td>
          <td class="paramname"><em>renderer</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_g_l_#ac515dd4fa49dda9f658cd4d7935f460a">open3d::visualization::gui::GLFWWindowSystem</a>, and <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_bitm#a38acbcc2b4bfe90e7cb95072698b6792">open3d::visualization::gui::BitmapWindowSystem</a>.</p>

</div>
</div>
<a id="a70ddb0d00cfe0aaa76db7b5ac3260b7e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a70ddb0d00cfe0aaa76db7b5ac3260b7e">&#9670;&nbsp;</a></span>SetWindowPos()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void open3d::visualization::gui::WindowSystem::SetWindowPos </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">OSWindow</a>&#160;</td>
          <td class="paramname"><em>w</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>y</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_g_l_#ab221c467189bdfa482be3cf9ec661d17">open3d::visualization::gui::GLFWWindowSystem</a>, and <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_bitm#a8e15fc9dec0cb57038edadb92d2590fb">open3d::visualization::gui::BitmapWindowSystem</a>.</p>

</div>
</div>
<a id="add5aefd6ad0c3e548657b6a285254e5f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#add5aefd6ad0c3e548657b6a285254e5f">&#9670;&nbsp;</a></span>SetWindowSize()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void open3d::visualization::gui::WindowSystem::SetWindowSize </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">OSWindow</a>&#160;</td>
          <td class="paramname"><em>w</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>width</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>height</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_g_l_#a40ad026e60715bd91a8f4e608af1fb0d">open3d::visualization::gui::GLFWWindowSystem</a>, and <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_bitm#a419e444ed0c466af84362051ff5dfb4d">open3d::visualization::gui::BitmapWindowSystem</a>.</p>

</div>
</div>
<a id="a54fbe5c025d569303a2cc8dd120230e7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a54fbe5c025d569303a2cc8dd120230e7">&#9670;&nbsp;</a></span>SetWindowSizePixels()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void open3d::visualization::gui::WindowSystem::SetWindowSizePixels </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">OSWindow</a>&#160;</td>
          <td class="paramname"><em>w</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structopen3d_1_1visualization_1_1gui_1_1_siz">Size</a> &amp;&#160;</td>
          <td class="paramname"><em>size</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_g_l_#a9f62d30bbe6e52eeef975423d4101a01">open3d::visualization::gui::GLFWWindowSystem</a>, and <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_bitm#a13afffa81ff00fb0ddb5643889487c9f">open3d::visualization::gui::BitmapWindowSystem</a>.</p>

</div>
</div>
<a id="a3076135b4d7fab88857d8b553b4c25ee"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3076135b4d7fab88857d8b553b4c25ee">&#9670;&nbsp;</a></span>SetWindowTitle()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void open3d::visualization::gui::WindowSystem::SetWindowTitle </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">OSWindow</a>&#160;</td>
          <td class="paramname"><em>w</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>title</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_g_l_#a344050e13058c37f25b6ce65e5bdd77b">open3d::visualization::gui::GLFWWindowSystem</a>, and <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_bitm#a2e38a720ded991233ab7f31829235558">open3d::visualization::gui::BitmapWindowSystem</a>.</p>

</div>
</div>
<a id="ab23c13ed9fba49e1fc855407165d39af"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab23c13ed9fba49e1fc855407165d39af">&#9670;&nbsp;</a></span>ShowWindow()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void open3d::visualization::gui::WindowSystem::ShowWindow </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">OSWindow</a>&#160;</td>
          <td class="paramname"><em>w</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>show</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_g_l_#a975057229a75203debb8cd9b4640e3b9">open3d::visualization::gui::GLFWWindowSystem</a>, and <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_bitm#a5efe8e9c21f4fec5519832957d3d364b">open3d::visualization::gui::BitmapWindowSystem</a>.</p>

</div>
</div>
<a id="a35472e70ff567ea96ac200ce5e6e796b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a35472e70ff567ea96ac200ce5e6e796b">&#9670;&nbsp;</a></span>Uninitialize()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void open3d::visualization::gui::WindowSystem::Uninitialize </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_g_l_#ac85d6d879a364dce2efcaf593ffb7abc">open3d::visualization::gui::GLFWWindowSystem</a>, and <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_bitm#a2f62ffc4cc7ac97d0d7711849e8c1517">open3d::visualization::gui::BitmapWindowSystem</a>.</p>

</div>
</div>
<a id="a8a670dd3ae93457e9a8080959c14c25f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8a670dd3ae93457e9a8080959c14c25f">&#9670;&nbsp;</a></span>WaitEventsTimeout()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void open3d::visualization::gui::WindowSystem::WaitEventsTimeout </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>timeout_secs</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_g_l_#a2ca9af844ed63795aa166f2a0b85cc23">open3d::visualization::gui::GLFWWindowSystem</a>, and <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_bitm#a8a4265beec129ad81add39f03502e859">open3d::visualization::gui::BitmapWindowSystem</a>.</p>

</div>
</div>
<h2 class="groupheader">Field Documentation</h2>
<a id="a6a9bdea49f94b5ab46d43a8aeea3feb9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6a9bdea49f94b5ab46d43a8aeea3feb9">&#9670;&nbsp;</a></span>FLAG_HIDDEN</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr int open3d::visualization::gui::WindowSystem::FLAG_HIDDEN = (1 &lt;&lt; 0)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a207eccd6e23e4098fff16d02a1a0d0c6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a207eccd6e23e4098fff16d02a1a0d0c6">&#9670;&nbsp;</a></span>FLAG_TOPMOST</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr int open3d::visualization::gui::WindowSystem::FLAG_TOPMOST = (1 &lt;&lt; 1)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aec5141ae677f8cd297c19c9ca152791f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aec5141ae677f8cd297c19c9ca152791f">&#9670;&nbsp;</a></span>FLAG_VISIBLE</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr int open3d::visualization::gui::WindowSystem::FLAG_VISIBLE = 0</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>/home/runner/work/Open3D/Open3D/cpp/open3d/visualization/gui/<a class="el" href="_window_system_8h_source.html">WindowSystem.h (9238339 (Tue Mar 14 18:49:09 2023 -0700))</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1
</small></address>
</body>

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/classopen3d_1_1visualization_1_1gui_1_1_window_system.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 11:01:38 GMT -->
</html>
