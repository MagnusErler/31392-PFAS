<!-- HTML header for doxygen 1.8.20-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/classopen3d_1_1t_1_1geometry_1_1_line_set.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 10:57:50 GMT -->
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Open3D (C++ API): open3d::t::geometry::LineSet Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js", "TeX/AMSmath.html", "TeX/AMSsymbols.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="../../../../cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-3TQPKGV6Z3"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());
  gtag('config', 'G-3TQPKGV6Z3');
</script>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="open3d_logo.ico"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Open3D (C++ API)
   &#160;<span id="projectnumber">0.17.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.html');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.html','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceopen3d.html">open3d</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1t.html">t</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1t_1_1geometry.html">geometry</a></li><li class="navelem"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49">LineSet</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a>  </div>
  <div class="headertitle">
<div class="title">open3d::t::geometry::LineSet Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>A <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49" title="A LineSet contains points and lines joining them and optionally attributes on the points and lines.">LineSet</a> contains points and lines joining them and optionally attributes on the points and lines.  
 <a href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="t_2geometry_2_line_set_8h_source.html">LineSet.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for open3d::t::geometry::LineSet:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classopen3d_1_1t_1_1geometry_1_1_line_set.81" usemap="#open3d::t::geometry::LineSet_map" alt=""/>
  <map id="open3d::t::geometry::LineSet_map" name="open3d::t::geometry::LineSet_map">
<area href="classopen3d_1_1t_1_1geometry_1_1_geometry.36" title="The base geometry class." alt="open3d::t::geometry::Geometry" shape="rect" coords="0,56,235,80"/>
<area href="classopen3d_1_1t_1_1geometry_1_1_drawable_ge" title="Mix-in class for geometry types that can be visualized." alt="open3d::t::geometry::DrawableGeometry" shape="rect" coords="245,56,480,80"/>
<area href="classopen3d_1_1core_1_1_is_device.36f.delaye" alt="open3d::core::IsDevice" shape="rect" coords="0,0,235,24"/>
  </map>
</div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a40bbe21151ade8a308836cad50d422e0"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#a40bbe21151ade8a308836cad50d422e0">LineSet</a> (const <a class="el" href="classopen3d_1_1core_1_1_device.html">core::Device</a> &amp;device=<a class="el" href="classopen3d_1_1core_1_1_device.html">core::Device</a>(&quot;CPU:0&quot;))</td></tr>
<tr class="memdesc:a40bbe21151ade8a308836cad50d422e0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Construct an empty <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49" title="A LineSet contains points and lines joining them and optionally attributes on the points and lines.">LineSet</a> on the provided device.  <a href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#a40bbe21151ade8a308836cad50d422e0">More...</a><br /></td></tr>
<tr class="separator:a40bbe21151ade8a308836cad50d422e0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a103ff5a362dd8be954b3ad358a572e7f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#a103ff5a362dd8be954b3ad358a572e7f">LineSet</a> (const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;point_positions, const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;line_indices)</td></tr>
<tr class="separator:a103ff5a362dd8be954b3ad358a572e7f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3395e72b41f79c4521143d5cf6bde702"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#a3395e72b41f79c4521143d5cf6bde702">~LineSet</a> () override</td></tr>
<tr class="separator:a3395e72b41f79c4521143d5cf6bde702"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8bdfd07fb67677d651fdf2b0a0d07bec"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49">LineSet</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#a8bdfd07fb67677d651fdf2b0a0d07bec">To</a> (const <a class="el" href="classopen3d_1_1core_1_1_device.html">core::Device</a> &amp;device, bool <a class="el" href="_vtk_utils_8cpp.html#acad86cc31af25e3d02b6d43041d0c6e9">copy</a>=false) const</td></tr>
<tr class="separator:a8bdfd07fb67677d651fdf2b0a0d07bec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5e67e183a9893e399755374022afe770"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49">LineSet</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#a5e67e183a9893e399755374022afe770">Clone</a> () const</td></tr>
<tr class="memdesc:a5e67e183a9893e399755374022afe770"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns copy of the line set on the same device.  <a href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#a5e67e183a9893e399755374022afe770">More...</a><br /></td></tr>
<tr class="separator:a5e67e183a9893e399755374022afe770"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a00daac9ea049abf83e88583ce6dc17db"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#a00daac9ea049abf83e88583ce6dc17db">ToString</a> () const</td></tr>
<tr class="memdesc:a00daac9ea049abf83e88583ce6dc17db"><td class="mdescLeft">&#160;</td><td class="mdescRight">Text description.  <a href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#a00daac9ea049abf83e88583ce6dc17db">More...</a><br /></td></tr>
<tr class="separator:a00daac9ea049abf83e88583ce6dc17db"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af3e1893cd523b56a4565ead24ba0b6a2"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_tensor_map">TensorMap</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#af3e1893cd523b56a4565ead24ba0b6a2">GetPointAttr</a> () const</td></tr>
<tr class="memdesc:af3e1893cd523b56a4565ead24ba0b6a2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Getter for point_attr_ <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_tensor_map">TensorMap</a>. Used in Pybind.  <a href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#af3e1893cd523b56a4565ead24ba0b6a2">More...</a><br /></td></tr>
<tr class="separator:af3e1893cd523b56a4565ead24ba0b6a2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac2eeb558fcc72dd8b43ef2fc3d255fff"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_tensor_map">TensorMap</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#ac2eeb558fcc72dd8b43ef2fc3d255fff">GetPointAttr</a> ()</td></tr>
<tr class="memdesc:ac2eeb558fcc72dd8b43ef2fc3d255fff"><td class="mdescLeft">&#160;</td><td class="mdescRight">Getter for point_attr_ <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_tensor_map">TensorMap</a>.  <a href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#ac2eeb558fcc72dd8b43ef2fc3d255fff">More...</a><br /></td></tr>
<tr class="separator:ac2eeb558fcc72dd8b43ef2fc3d255fff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2f8e72125079adcde594e70baac1d92e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#a2f8e72125079adcde594e70baac1d92e">GetPointAttr</a> (const std::string &amp;key)</td></tr>
<tr class="separator:a2f8e72125079adcde594e70baac1d92e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9c5fd477027e98acdd8198f7fbeb8d07"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#a9c5fd477027e98acdd8198f7fbeb8d07">GetPointPositions</a> ()</td></tr>
<tr class="separator:a9c5fd477027e98acdd8198f7fbeb8d07"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a49580c01ebe13403812c2b1b4ac928ce"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_tensor_map">TensorMap</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#a49580c01ebe13403812c2b1b4ac928ce">GetLineAttr</a> () const</td></tr>
<tr class="memdesc:a49580c01ebe13403812c2b1b4ac928ce"><td class="mdescLeft">&#160;</td><td class="mdescRight">Getter for line_attr_ <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_tensor_map">TensorMap</a>. Used in Pybind.  <a href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#a49580c01ebe13403812c2b1b4ac928ce">More...</a><br /></td></tr>
<tr class="separator:a49580c01ebe13403812c2b1b4ac928ce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a68a8b57785c7b509114e22a507cc3439"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_tensor_map">TensorMap</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#a68a8b57785c7b509114e22a507cc3439">GetLineAttr</a> ()</td></tr>
<tr class="memdesc:a68a8b57785c7b509114e22a507cc3439"><td class="mdescLeft">&#160;</td><td class="mdescRight">Getter for line_attr_ <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_tensor_map">TensorMap</a>.  <a href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#a68a8b57785c7b509114e22a507cc3439">More...</a><br /></td></tr>
<tr class="separator:a68a8b57785c7b509114e22a507cc3439"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3e9f1f13636763488b16c6cf158cc052"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#a3e9f1f13636763488b16c6cf158cc052">GetLineAttr</a> (const std::string &amp;key)</td></tr>
<tr class="separator:a3e9f1f13636763488b16c6cf158cc052"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a316dbdfaeaa74aa046c517b303fee3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#a6a316dbdfaeaa74aa046c517b303fee3">GetLineIndices</a> ()</td></tr>
<tr class="separator:a6a316dbdfaeaa74aa046c517b303fee3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8f2a06832bd95cc0c648d40e5c25ca9b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#a8f2a06832bd95cc0c648d40e5c25ca9b">GetLineColors</a> ()</td></tr>
<tr class="separator:a8f2a06832bd95cc0c648d40e5c25ca9b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5b73347c8d0ae5eff4289a7a19ff3047"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#a5b73347c8d0ae5eff4289a7a19ff3047">GetPointAttr</a> (const std::string &amp;key) const</td></tr>
<tr class="separator:a5b73347c8d0ae5eff4289a7a19ff3047"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa53d3f782c3f1608f58cb67637e63641"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#aa53d3f782c3f1608f58cb67637e63641">RemovePointAttr</a> (const std::string &amp;key)</td></tr>
<tr class="separator:aa53d3f782c3f1608f58cb67637e63641"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adaf92c8d1c49dc0d0ddc1b6aec830f7e"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#adaf92c8d1c49dc0d0ddc1b6aec830f7e">GetPointPositions</a> () const</td></tr>
<tr class="separator:adaf92c8d1c49dc0d0ddc1b6aec830f7e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a768ba660d93bba39b9b2ab90261ba217"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#a768ba660d93bba39b9b2ab90261ba217">GetLineAttr</a> (const std::string &amp;key) const</td></tr>
<tr class="separator:a768ba660d93bba39b9b2ab90261ba217"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2a2041636b27cfd92ff24996edef2292"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#a2a2041636b27cfd92ff24996edef2292">RemoveLineAttr</a> (const std::string &amp;key)</td></tr>
<tr class="separator:a2a2041636b27cfd92ff24996edef2292"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0f37d99ffbf1db09a00d5147c5e98085"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#a0f37d99ffbf1db09a00d5147c5e98085">GetLineIndices</a> () const</td></tr>
<tr class="separator:a0f37d99ffbf1db09a00d5147c5e98085"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adea96cae6c8f02e5587c5590602f971d"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#adea96cae6c8f02e5587c5590602f971d">GetLineColors</a> () const</td></tr>
<tr class="separator:adea96cae6c8f02e5587c5590602f971d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5a4b2773bfce16ace7be0e81e7f26da9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#a5a4b2773bfce16ace7be0e81e7f26da9">SetPointAttr</a> (const std::string &amp;key, const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;value)</td></tr>
<tr class="separator:a5a4b2773bfce16ace7be0e81e7f26da9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab5845e9ecfb70f709fc7316dfa917681"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#ab5845e9ecfb70f709fc7316dfa917681">SetPointPositions</a> (const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;value)</td></tr>
<tr class="separator:ab5845e9ecfb70f709fc7316dfa917681"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a34671942ba02f1f6138fa64faab10e09"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#a34671942ba02f1f6138fa64faab10e09">SetLineAttr</a> (const std::string &amp;key, const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;value)</td></tr>
<tr class="separator:a34671942ba02f1f6138fa64faab10e09"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa8058ef23fa83e15ca2d16776c956e24"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#aa8058ef23fa83e15ca2d16776c956e24">SetLineIndices</a> (const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;value)</td></tr>
<tr class="memdesc:aa8058ef23fa83e15ca2d16776c956e24"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the value of the "indices" attribute in line_attr_.  <a href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#aa8058ef23fa83e15ca2d16776c956e24">More...</a><br /></td></tr>
<tr class="separator:aa8058ef23fa83e15ca2d16776c956e24"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2348c1af8cbbd241a538aa3e28966c33"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#a2348c1af8cbbd241a538aa3e28966c33">SetLineColors</a> (const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;value)</td></tr>
<tr class="separator:a2348c1af8cbbd241a538aa3e28966c33"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1f9ae61fc1f3b774afec87eab57dfcc9"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#a1f9ae61fc1f3b774afec87eab57dfcc9">HasPointAttr</a> (const std::string &amp;key) const</td></tr>
<tr class="separator:a1f9ae61fc1f3b774afec87eab57dfcc9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a592303bf88527d1c0d7b25ce6bdd6685"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#a592303bf88527d1c0d7b25ce6bdd6685">HasPointPositions</a> () const</td></tr>
<tr class="separator:a592303bf88527d1c0d7b25ce6bdd6685"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5c308909d4046cb0bacddb2a890f8e3e"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#a5c308909d4046cb0bacddb2a890f8e3e">HasLineAttr</a> (const std::string &amp;key) const</td></tr>
<tr class="separator:a5c308909d4046cb0bacddb2a890f8e3e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a822f3a017106bdfd0857a5594fb82dc7"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#a822f3a017106bdfd0857a5594fb82dc7">HasLineIndices</a> () const</td></tr>
<tr class="separator:a822f3a017106bdfd0857a5594fb82dc7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1ed724df9e2eba1e1b251b629c4a38d7"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#a1ed724df9e2eba1e1b251b629c4a38d7">HasLineColors</a> () const</td></tr>
<tr class="separator:a1ed724df9e2eba1e1b251b629c4a38d7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a944be34eb6f9fb565d4c5c35885ff0e8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49">LineSet</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#a944be34eb6f9fb565d4c5c35885ff0e8">Clear</a> () override</td></tr>
<tr class="memdesc:a944be34eb6f9fb565d4c5c35885ff0e8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clear all data in the line set.  <a href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#a944be34eb6f9fb565d4c5c35885ff0e8">More...</a><br /></td></tr>
<tr class="separator:a944be34eb6f9fb565d4c5c35885ff0e8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af4fc7291a682c8924f3e570b829c4dcf"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#af4fc7291a682c8924f3e570b829c4dcf">IsEmpty</a> () const override</td></tr>
<tr class="memdesc:af4fc7291a682c8924f3e570b829c4dcf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns !HasPointPositions(), line indices are ignored.  <a href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#af4fc7291a682c8924f3e570b829c4dcf">More...</a><br /></td></tr>
<tr class="separator:af4fc7291a682c8924f3e570b829c4dcf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa89dd5ffcb7ab0911bc372dd59689f2a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#aa89dd5ffcb7ab0911bc372dd59689f2a">GetMinBound</a> () const</td></tr>
<tr class="memdesc:aa89dd5ffcb7ab0911bc372dd59689f2a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the max bound for point coordinates.  <a href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#aa89dd5ffcb7ab0911bc372dd59689f2a">More...</a><br /></td></tr>
<tr class="separator:aa89dd5ffcb7ab0911bc372dd59689f2a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a22c2f6a0c59f77f9621f0aa9882a5e0a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#a22c2f6a0c59f77f9621f0aa9882a5e0a">GetMaxBound</a> () const</td></tr>
<tr class="memdesc:a22c2f6a0c59f77f9621f0aa9882a5e0a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the max bound for point coordinates.  <a href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#a22c2f6a0c59f77f9621f0aa9882a5e0a">More...</a><br /></td></tr>
<tr class="separator:a22c2f6a0c59f77f9621f0aa9882a5e0a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a54f43711e6a5d40ba8ed9659558d87d0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#a54f43711e6a5d40ba8ed9659558d87d0">GetCenter</a> () const</td></tr>
<tr class="memdesc:a54f43711e6a5d40ba8ed9659558d87d0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the center for point coordinates.  <a href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#a54f43711e6a5d40ba8ed9659558d87d0">More...</a><br /></td></tr>
<tr class="separator:a54f43711e6a5d40ba8ed9659558d87d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8ab6c499205cf8ea69c6a095b05e65b0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49">LineSet</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#a8ab6c499205cf8ea69c6a095b05e65b0">Transform</a> (const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;transformation)</td></tr>
<tr class="memdesc:a8ab6c499205cf8ea69c6a095b05e65b0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Transforms the points and lines of the <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49" title="A LineSet contains points and lines joining them and optionally attributes on the points and lines.">LineSet</a>.  <a href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#a8ab6c499205cf8ea69c6a095b05e65b0">More...</a><br /></td></tr>
<tr class="separator:a8ab6c499205cf8ea69c6a095b05e65b0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac3e5880d36d0c63669c8e06d049f264d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49">LineSet</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#ac3e5880d36d0c63669c8e06d049f264d">Translate</a> (const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;translation, bool relative=true)</td></tr>
<tr class="memdesc:ac3e5880d36d0c63669c8e06d049f264d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Translates the points and lines of the <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49" title="A LineSet contains points and lines joining them and optionally attributes on the points and lines.">LineSet</a>.  <a href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#ac3e5880d36d0c63669c8e06d049f264d">More...</a><br /></td></tr>
<tr class="separator:ac3e5880d36d0c63669c8e06d049f264d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a77bfe5d249bf52315f4d9e0fca9dedab"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49">LineSet</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#a77bfe5d249bf52315f4d9e0fca9dedab">Scale</a> (double scale, const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;center)</td></tr>
<tr class="memdesc:a77bfe5d249bf52315f4d9e0fca9dedab"><td class="mdescLeft">&#160;</td><td class="mdescRight">Scales the points and lines of the <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49" title="A LineSet contains points and lines joining them and optionally attributes on the points and lines.">LineSet</a>.  <a href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#a77bfe5d249bf52315f4d9e0fca9dedab">More...</a><br /></td></tr>
<tr class="separator:a77bfe5d249bf52315f4d9e0fca9dedab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0596b163d3b7cc9008b73632f2661afa"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49">LineSet</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#a0596b163d3b7cc9008b73632f2661afa">Rotate</a> (const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;R, const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;center)</td></tr>
<tr class="memdesc:a0596b163d3b7cc9008b73632f2661afa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Rotates the points and lines of the line set. Custom attributes (e.g.: point or line normals) are not transformed.  <a href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#a0596b163d3b7cc9008b73632f2661afa">More...</a><br /></td></tr>
<tr class="separator:a0596b163d3b7cc9008b73632f2661afa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a75c905334d5ceee21cd5aea01cbe8f1c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1core_1_1_device.html">core::Device</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#a75c905334d5ceee21cd5aea01cbe8f1c">GetDevice</a> () const override</td></tr>
<tr class="memdesc:a75c905334d5ceee21cd5aea01cbe8f1c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the device attribute of this <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49" title="A LineSet contains points and lines joining them and optionally attributes on the points and lines.">LineSet</a>.  <a href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#a75c905334d5ceee21cd5aea01cbe8f1c">More...</a><br /></td></tr>
<tr class="separator:a75c905334d5ceee21cd5aea01cbe8f1c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4d471cd76d097eb728920ac86c47312e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1geometry_1_1_line_set.411.del">open3d::geometry::LineSet</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#a4d471cd76d097eb728920ac86c47312e">ToLegacy</a> () const</td></tr>
<tr class="memdesc:a4d471cd76d097eb728920ac86c47312e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convert to a legacy Open3D <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49" title="A LineSet contains points and lines joining them and optionally attributes on the points and lines.">LineSet</a>.  <a href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#a4d471cd76d097eb728920ac86c47312e">More...</a><br /></td></tr>
<tr class="separator:a4d471cd76d097eb728920ac86c47312e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4b0182dbed49f1d8ea240a6ce5e4cee4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne">AxisAlignedBoundingBox</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#a4b0182dbed49f1d8ea240a6ce5e4cee4">GetAxisAlignedBoundingBox</a> () const</td></tr>
<tr class="memdesc:a4b0182dbed49f1d8ea240a6ce5e4cee4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create an axis-aligned bounding box from point attribute "positions".  <a href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#a4b0182dbed49f1d8ea240a6ce5e4cee4">More...</a><br /></td></tr>
<tr class="separator:a4b0182dbed49f1d8ea240a6ce5e4cee4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad9b93a96362823143f75afdb37a67ef7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_oriented_bo">OrientedBoundingBox</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#ad9b93a96362823143f75afdb37a67ef7">GetOrientedBoundingBox</a> () const</td></tr>
<tr class="memdesc:ad9b93a96362823143f75afdb37a67ef7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create an oriented bounding box from point attribute "positions".  <a href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#ad9b93a96362823143f75afdb37a67ef7">More...</a><br /></td></tr>
<tr class="separator:ad9b93a96362823143f75afdb37a67ef7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae0f708dbdf43076c1a1be40c46faa181"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_triangle_me">TriangleMesh</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#ae0f708dbdf43076c1a1be40c46faa181">ExtrudeRotation</a> (double angle, const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;axis, int resolution=16, double translation=0.0, bool capping=true) const</td></tr>
<tr class="separator:ae0f708dbdf43076c1a1be40c46faa181"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a534fa97509b553052ff82e8399b9e3a4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_triangle_me">TriangleMesh</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#a534fa97509b553052ff82e8399b9e3a4">ExtrudeLinear</a> (const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;vector, double scale=1.0, bool capping=true) const</td></tr>
<tr class="separator:a534fa97509b553052ff82e8399b9e3a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classopen3d_1_1t_1_1geometry_1_1_geometry"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classopen3d_1_1t_1_1geometry_1_1_geometry')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36">open3d::t::geometry::Geometry</a></td></tr>
<tr class="memitem:aae3fa46ae2c36a9245da717db105a049 inherit pub_methods_classopen3d_1_1t_1_1geometry_1_1_geometry"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#aae3fa46ae2c36a9245da717db105a049">~Geometry</a> ()</td></tr>
<tr class="separator:aae3fa46ae2c36a9245da717db105a049 inherit pub_methods_classopen3d_1_1t_1_1geometry_1_1_geometry"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1c02f58e26d56a742001b61d5ddb3aee inherit pub_methods_classopen3d_1_1t_1_1geometry_1_1_geometry"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#a2058abb1036dfbfb2a9c13fbb7e2a88d">GeometryType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#a1c02f58e26d56a742001b61d5ddb3aee">GetGeometryType</a> () const</td></tr>
<tr class="memdesc:a1c02f58e26d56a742001b61d5ddb3aee inherit pub_methods_classopen3d_1_1t_1_1geometry_1_1_geometry"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns one of registered geometry types.  <a href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#a1c02f58e26d56a742001b61d5ddb3aee">More...</a><br /></td></tr>
<tr class="separator:a1c02f58e26d56a742001b61d5ddb3aee inherit pub_methods_classopen3d_1_1t_1_1geometry_1_1_geometry"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a54d95d1e8e1a279d554140a507d0ece0 inherit pub_methods_classopen3d_1_1t_1_1geometry_1_1_geometry"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#a54d95d1e8e1a279d554140a507d0ece0">Dimension</a> () const</td></tr>
<tr class="memdesc:a54d95d1e8e1a279d554140a507d0ece0 inherit pub_methods_classopen3d_1_1t_1_1geometry_1_1_geometry"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the geometry is 2D or 3D.  <a href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#a54d95d1e8e1a279d554140a507d0ece0">More...</a><br /></td></tr>
<tr class="separator:a54d95d1e8e1a279d554140a507d0ece0 inherit pub_methods_classopen3d_1_1t_1_1geometry_1_1_geometry"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f2d0f2491f0f14b3edc14a6eb458732 inherit pub_methods_classopen3d_1_1t_1_1geometry_1_1_geometry"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#a5f2d0f2491f0f14b3edc14a6eb458732">GetName</a> () const</td></tr>
<tr class="separator:a5f2d0f2491f0f14b3edc14a6eb458732 inherit pub_methods_classopen3d_1_1t_1_1geometry_1_1_geometry"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0f41994b219be5601876f12fe76974de inherit pub_methods_classopen3d_1_1t_1_1geometry_1_1_geometry"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#a0f41994b219be5601876f12fe76974de">SetName</a> (const std::string &amp;<a class="el" href="_o3_d_visualizer_8cpp.html#a9b45b3e13bd9167aab02e17e08916231">name</a>)</td></tr>
<tr class="separator:a0f41994b219be5601876f12fe76974de inherit pub_methods_classopen3d_1_1t_1_1geometry_1_1_geometry"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classopen3d_1_1core_1_1_is_device"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classopen3d_1_1core_1_1_is_device')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classopen3d_1_1core_1_1_is_device.36f.delaye">open3d::core::IsDevice</a></td></tr>
<tr class="memitem:ac8a6c234c0f58bedb9159dd3c4234265 inherit pub_methods_classopen3d_1_1core_1_1_is_device"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_is_device.36f.delaye#ac8a6c234c0f58bedb9159dd3c4234265">IsDevice</a> ()=default</td></tr>
<tr class="separator:ac8a6c234c0f58bedb9159dd3c4234265 inherit pub_methods_classopen3d_1_1core_1_1_is_device"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af2c84a4d0808e4c7c2cbf0412097fc7c inherit pub_methods_classopen3d_1_1core_1_1_is_device"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_is_device.36f.delaye#af2c84a4d0808e4c7c2cbf0412097fc7c">~IsDevice</a> ()=default</td></tr>
<tr class="separator:af2c84a4d0808e4c7c2cbf0412097fc7c inherit pub_methods_classopen3d_1_1core_1_1_is_device"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad123cbf1de3a6b6946af444fa1fc5b39 inherit pub_methods_classopen3d_1_1core_1_1_is_device"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_is_device.36f.delaye#ad123cbf1de3a6b6946af444fa1fc5b39">IsCPU</a> () const</td></tr>
<tr class="separator:ad123cbf1de3a6b6946af444fa1fc5b39 inherit pub_methods_classopen3d_1_1core_1_1_is_device"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0c611931dafc12b6a40c22799e2316b6 inherit pub_methods_classopen3d_1_1core_1_1_is_device"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_is_device.36f.delaye#a0c611931dafc12b6a40c22799e2316b6">IsCUDA</a> () const</td></tr>
<tr class="separator:a0c611931dafc12b6a40c22799e2316b6 inherit pub_methods_classopen3d_1_1core_1_1_is_device"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classopen3d_1_1t_1_1geometry_1_1_drawable_geometry"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classopen3d_1_1t_1_1geometry_1_1_drawable_geometry')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_drawable_ge">open3d::t::geometry::DrawableGeometry</a></td></tr>
<tr class="memitem:a72987c98386c0a92919cdd2c945af2a2 inherit pub_methods_classopen3d_1_1t_1_1geometry_1_1_drawable_geometry"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_drawable_ge#a72987c98386c0a92919cdd2c945af2a2">DrawableGeometry</a> ()</td></tr>
<tr class="separator:a72987c98386c0a92919cdd2c945af2a2 inherit pub_methods_classopen3d_1_1t_1_1geometry_1_1_drawable_geometry"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a212ff1f5ddbe6d15294176f3e1a74fe9 inherit pub_methods_classopen3d_1_1t_1_1geometry_1_1_drawable_geometry"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_drawable_ge#a212ff1f5ddbe6d15294176f3e1a74fe9">~DrawableGeometry</a> ()</td></tr>
<tr class="separator:a212ff1f5ddbe6d15294176f3e1a74fe9 inherit pub_methods_classopen3d_1_1t_1_1geometry_1_1_drawable_geometry"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acabee211f04815b00ceb40719359383b inherit pub_methods_classopen3d_1_1t_1_1geometry_1_1_drawable_geometry"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_drawable_ge#acabee211f04815b00ceb40719359383b">HasMaterial</a> () const</td></tr>
<tr class="memdesc:acabee211f04815b00ceb40719359383b inherit pub_methods_classopen3d_1_1t_1_1geometry_1_1_drawable_geometry"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if a material has been applied to this <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36" title="The base geometry class.">Geometry</a> with SetMaterial.  <a href="classopen3d_1_1t_1_1geometry_1_1_drawable_ge#acabee211f04815b00ceb40719359383b">More...</a><br /></td></tr>
<tr class="separator:acabee211f04815b00ceb40719359383b inherit pub_methods_classopen3d_1_1t_1_1geometry_1_1_drawable_geometry"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aea8e535253dcc2e15fef36f065b68585 inherit pub_methods_classopen3d_1_1t_1_1geometry_1_1_drawable_geometry"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_">visualization::rendering::Material</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_drawable_ge#aea8e535253dcc2e15fef36f065b68585">GetMaterial</a> ()</td></tr>
<tr class="memdesc:aea8e535253dcc2e15fef36f065b68585 inherit pub_methods_classopen3d_1_1t_1_1geometry_1_1_drawable_geometry"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get material associated with this <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36" title="The base geometry class.">Geometry</a>.  <a href="classopen3d_1_1t_1_1geometry_1_1_drawable_ge#aea8e535253dcc2e15fef36f065b68585">More...</a><br /></td></tr>
<tr class="separator:aea8e535253dcc2e15fef36f065b68585 inherit pub_methods_classopen3d_1_1t_1_1geometry_1_1_drawable_geometry"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2e0d741c69411327df29f4b1701219ce inherit pub_methods_classopen3d_1_1t_1_1geometry_1_1_drawable_geometry"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_">visualization::rendering::Material</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_drawable_ge#a2e0d741c69411327df29f4b1701219ce">GetMaterial</a> () const</td></tr>
<tr class="memdesc:a2e0d741c69411327df29f4b1701219ce inherit pub_methods_classopen3d_1_1t_1_1geometry_1_1_drawable_geometry"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get const reference to material associated with this <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36" title="The base geometry class.">Geometry</a>.  <a href="classopen3d_1_1t_1_1geometry_1_1_drawable_ge#a2e0d741c69411327df29f4b1701219ce">More...</a><br /></td></tr>
<tr class="separator:a2e0d741c69411327df29f4b1701219ce inherit pub_methods_classopen3d_1_1t_1_1geometry_1_1_drawable_geometry"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acf79ffa4c2bff4e4c4ca97131bef1288 inherit pub_methods_classopen3d_1_1t_1_1geometry_1_1_drawable_geometry"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_drawable_ge#acf79ffa4c2bff4e4c4ca97131bef1288">SetMaterial</a> (const <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_">visualization::rendering::Material</a> &amp;material)</td></tr>
<tr class="memdesc:acf79ffa4c2bff4e4c4ca97131bef1288 inherit pub_methods_classopen3d_1_1t_1_1geometry_1_1_drawable_geometry"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the material properties associate with this <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36" title="The base geometry class.">Geometry</a>.  <a href="classopen3d_1_1t_1_1geometry_1_1_drawable_ge#acf79ffa4c2bff4e4c4ca97131bef1288">More...</a><br /></td></tr>
<tr class="separator:acf79ffa4c2bff4e4c4ca97131bef1288 inherit pub_methods_classopen3d_1_1t_1_1geometry_1_1_drawable_geometry"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:ac73d95434919364a5ccc2afb0bdda893"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49">geometry::LineSet</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#ac73d95434919364a5ccc2afb0bdda893">FromLegacy</a> (const <a class="el" href="classopen3d_1_1geometry_1_1_line_set.411.del">open3d::geometry::LineSet</a> &amp;lineset_legacy, <a class="el" href="classopen3d_1_1core_1_1_dtype.html">core::Dtype</a> float_dtype=<a class="el" href="namespaceopen3d_1_1core.html#af1357e9a6250eaf326a9dc7069c02789">core::Float32</a>, <a class="el" href="classopen3d_1_1core_1_1_dtype.html">core::Dtype</a> int_dtype=<a class="el" href="namespaceopen3d_1_1core.html#a4433666ee214f5f3d9d688bb519fb852">core::Int64</a>, const <a class="el" href="classopen3d_1_1core_1_1_device.html">core::Device</a> &amp;device=<a class="el" href="classopen3d_1_1core_1_1_device.html">core::Device</a>(&quot;CPU:0&quot;))</td></tr>
<tr class="separator:ac73d95434919364a5ccc2afb0bdda893"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:a12cb8fd41d20afeb5657ca112f795fbc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1core_1_1_device.html">core::Device</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#a12cb8fd41d20afeb5657ca112f795fbc">device_</a> = <a class="el" href="classopen3d_1_1core_1_1_device.html">core::Device</a>(&quot;CPU:0&quot;)</td></tr>
<tr class="separator:a12cb8fd41d20afeb5657ca112f795fbc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac17ac87e9cf317b9360529384a9cbd0b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_tensor_map">TensorMap</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#ac17ac87e9cf317b9360529384a9cbd0b">point_attr_</a></td></tr>
<tr class="separator:ac17ac87e9cf317b9360529384a9cbd0b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa8f8d4bdf5047b88a32f2fb772805ee6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_tensor_map">TensorMap</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#aa8f8d4bdf5047b88a32f2fb772805ee6">line_attr_</a></td></tr>
<tr class="separator:aa8f8d4bdf5047b88a32f2fb772805ee6"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_types_classopen3d_1_1t_1_1geometry_1_1_geometry"><td colspan="2" onclick="javascript:toggleInherit('pub_types_classopen3d_1_1t_1_1geometry_1_1_geometry')"><img src="closed.png" alt="-"/>&#160;Public Types inherited from <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36">open3d::t::geometry::Geometry</a></td></tr>
<tr class="memitem:a2058abb1036dfbfb2a9c13fbb7e2a88d inherit pub_types_classopen3d_1_1t_1_1geometry_1_1_geometry"><td class="memItemLeft" align="right" valign="top">enum class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#a2058abb1036dfbfb2a9c13fbb7e2a88d">GeometryType</a> { <br />
&#160;&#160;<a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#a2058abb1036dfbfb2a9c13fbb7e2a88da6fcdc090caeade09d0efd6253932b6f5">Unspecified</a> = 0
, <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#a2058abb1036dfbfb2a9c13fbb7e2a88daee9349b5cdfd717c7e1234edce6b72fa">PointCloud</a> = 1
, <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#a2058abb1036dfbfb2a9c13fbb7e2a88da7fe2447f30c8de08b433c3631d7d78ff">VoxelGrid</a> = 2
, <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#a2058abb1036dfbfb2a9c13fbb7e2a88da3d33fe96c4d284d37a6ee296db5e33ac">Octree</a> = 3
, <br />
&#160;&#160;<a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#a2058abb1036dfbfb2a9c13fbb7e2a88dae3e5995e4fc46bdc12e733558dd3120a">LineSet</a> = 4
, <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#a2058abb1036dfbfb2a9c13fbb7e2a88da2ad6a25f1ccff1433467bae74193446e">MeshBase</a> = 5
, <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#a2058abb1036dfbfb2a9c13fbb7e2a88da70be243de75004a602f012fece7c0fad">TriangleMesh</a> = 6
, <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#a2058abb1036dfbfb2a9c13fbb7e2a88daa79a2e14e35ed8368058ad93d3d39dc3">HalfEdgeTriangleMesh</a> = 7
, <br />
&#160;&#160;<a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#a2058abb1036dfbfb2a9c13fbb7e2a88dabe53a0541a6d36f6ecb879fa2c584b08">Image</a> = 8
, <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#a2058abb1036dfbfb2a9c13fbb7e2a88da7d64b6deb2cbf0f1712bd6e93b5755ba">RGBDImage</a> = 9
, <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#a2058abb1036dfbfb2a9c13fbb7e2a88da48e9695b4242a3a90ea76c7cc87162de">TetraMesh</a> = 10
, <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#a2058abb1036dfbfb2a9c13fbb7e2a88daff8b20067506aaf814f1e5df2494c2f1">OrientedBoundingBox</a> = 11
, <br />
&#160;&#160;<a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#a2058abb1036dfbfb2a9c13fbb7e2a88da0446516d578c6abaae2f3adc7239fa61">AxisAlignedBoundingBox</a> = 12
<br />
 }</td></tr>
<tr class="memdesc:a2058abb1036dfbfb2a9c13fbb7e2a88d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Specifies possible geometry types.  <a href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#a2058abb1036dfbfb2a9c13fbb7e2a88d">More...</a><br /></td></tr>
<tr class="separator:a2058abb1036dfbfb2a9c13fbb7e2a88d inherit pub_types_classopen3d_1_1t_1_1geometry_1_1_geometry"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_classopen3d_1_1t_1_1geometry_1_1_geometry"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_classopen3d_1_1t_1_1geometry_1_1_geometry')"><img src="closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36">open3d::t::geometry::Geometry</a></td></tr>
<tr class="memitem:a940a78b9e256dbca68764761a4706bcf inherit pro_methods_classopen3d_1_1t_1_1geometry_1_1_geometry"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#a940a78b9e256dbca68764761a4706bcf">Geometry</a> (<a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#a2058abb1036dfbfb2a9c13fbb7e2a88d">GeometryType</a> <a class="el" href="io_2file__format_2_file_p_c_d_8cpp.375.delay#aff17911edc8208aa8ddb1c7c52c78389">type</a>, int dimension)</td></tr>
<tr class="memdesc:a940a78b9e256dbca68764761a4706bcf inherit pro_methods_classopen3d_1_1t_1_1geometry_1_1_geometry"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parameterized Constructor.  <a href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#a940a78b9e256dbca68764761a4706bcf">More...</a><br /></td></tr>
<tr class="separator:a940a78b9e256dbca68764761a4706bcf inherit pro_methods_classopen3d_1_1t_1_1geometry_1_1_geometry"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>A <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49" title="A LineSet contains points and lines joining them and optionally attributes on the points and lines.">LineSet</a> contains points and lines joining them and optionally attributes on the points and lines. </p>
<p>The <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49" title="A LineSet contains points and lines joining them and optionally attributes on the points and lines.">LineSet</a> class stores the attribute data in key-value pairs for flexibility, where the key is a string representing the attribute name and value is a Tensor containing the attribute data.</p>
<p>By default, there are two sets of dictionaries: <code>point_attr_</code> and <code>line_attr_</code>. In most cases, the length of an attribute should be equal to the length of the data corresponding to the primary key. For instance, <code>point_attr_["colors"]</code> should have the same length as <code>point_attr_["positions"]</code>.</p>
<p>Although the attributes are all stored in a key-value pair dictionary, the attributes have different levels:</p>
<ul>
<li>Default attributes {"positions", "indices"}.<ul>
<li>Created by default, required for all LineSets.</li>
<li>The "positions" tensor must have shape {N,3} while the "indices" tensor must have shape {N,2} and DtypeCode Int.</li>
<li>The device of "positions" and "indices" must be consistent and they determine the device of the <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49" title="A LineSet contains points and lines joining them and optionally attributes on the points and lines.">LineSet</a>.</li>
<li>Usage:<ul>
<li><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#a9c5fd477027e98acdd8198f7fbeb8d07">LineSet::GetPointPositions()</a></li>
<li><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#ab5845e9ecfb70f709fc7316dfa917681">LineSet::SetPointPositions(const core::Tensor &amp;positions)</a></li>
<li><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#a592303bf88527d1c0d7b25ce6bdd6685">LineSet::HasPointPositions()</a></li>
<li><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#a6a316dbdfaeaa74aa046c517b303fee3">LineSet::GetLineIndices()</a></li>
<li><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#aa8058ef23fa83e15ca2d16776c956e24" title="Set the value of the &quot;indices&quot; attribute in line_attr_.">LineSet::SetLineIndices(const core::Tensor &amp;indices)</a></li>
<li><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#a822f3a017106bdfd0857a5594fb82dc7">LineSet::HasLineIndices()</a></li>
</ul>
</li>
</ul>
</li>
<li>Commonly used attributes: line colors.<ul>
<li>Not created by default.</li>
<li>The tensor must be of shape {N,3}.</li>
<li>For all attributes, the device must be consistent with the device of the <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49" title="A LineSet contains points and lines joining them and optionally attributes on the points and lines.">LineSet</a>.</li>
<li>Value tensors can have any Dtype.</li>
<li>Usage:<ul>
<li>Line colors (stored at line_attr_["colors"])<ul>
<li><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#a8f2a06832bd95cc0c648d40e5c25ca9b">LineSet::GetLineColors()</a></li>
<li><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#a2348c1af8cbbd241a538aa3e28966c33">LineSet::SetLineColors(const core::Tensor &amp;line_colors)</a></li>
<li><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#a1ed724df9e2eba1e1b251b629c4a38d7">LineSet::HasLineColors()</a></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>Custom attributes, e.g. {"labels"}.<ul>
<li>Not created by default. Users can add their own custom attributes.</li>
<li>For all attributes, the device must be consistent with the device of the <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49" title="A LineSet contains points and lines joining them and optionally attributes on the points and lines.">LineSet</a>.</li>
<li>Value tensors can have any Dtype.</li>
<li>Usage:<ul>
<li><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#af3e1893cd523b56a4565ead24ba0b6a2" title="Getter for point_attr_ TensorMap. Used in Pybind.">LineSet::GetPointAttr</a>("labels")</li>
<li><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#a5a4b2773bfce16ace7be0e81e7f26da9">LineSet::SetPointAttr</a>("labels", point_labels_tensor)</li>
<li><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#a1f9ae61fc1f3b774afec87eab57dfcc9">LineSet::HasPointAttr</a>("labels")</li>
<li><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#a49580c01ebe13403812c2b1b4ac928ce" title="Getter for line_attr_ TensorMap. Used in Pybind.">LineSet::GetLineAttr</a>("labels")</li>
<li><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#a34671942ba02f1f6138fa64faab10e09">LineSet::SetLineAttr</a>("labels", line_labels_tensor)</li>
<li><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49#a5c308909d4046cb0bacddb2a890f8e3e">LineSet::HasLineAttr</a>("labels")</li>
</ul>
</li>
</ul>
</li>
</ul>
<p>Note that <code>{Get|Set|Has}{Point|Line}<a class="el" href="_continuous_conv_backprop_filter_ops_8cpp.81#add13646b3b9eff66ead492101036d620">Attr()</a></code> functions also work "positions" and "indices". </p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a40bbe21151ade8a308836cad50d422e0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a40bbe21151ade8a308836cad50d422e0">&#9670;&nbsp;</a></span>LineSet() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">open3d::t::geometry::LineSet::LineSet </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_device.html">core::Device</a> &amp;&#160;</td>
          <td class="paramname"><em>device</em> = <code><a class="el" href="classopen3d_1_1core_1_1_device.html">core::Device</a>(&quot;CPU:0&quot;)</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Construct an empty <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49" title="A LineSet contains points and lines joining them and optionally attributes on the points and lines.">LineSet</a> on the provided device. </p>

</div>
</div>
<a id="a103ff5a362dd8be954b3ad358a572e7f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a103ff5a362dd8be954b3ad358a572e7f">&#9670;&nbsp;</a></span>LineSet() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">open3d::t::geometry::LineSet::LineSet </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>point_positions</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>line_indices</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Construct a <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49" title="A LineSet contains points and lines joining them and optionally attributes on the points and lines.">LineSet</a> from points and lines.</p>
<p>The input tensors will be directly used as the underlying storage of the line set (no memory copy). If the tensor is created in-place from a pre-allocated buffer, the tensor has a fixed size and thus the resulting <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49" title="A LineSet contains points and lines joining them and optionally attributes on the points and lines.">LineSet</a> will have a fixed size and calling to functions like <code>SynchronizedPushBack</code> will raise an exception.</p>
<p>The resulting <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49" title="A LineSet contains points and lines joining them and optionally attributes on the points and lines.">LineSet</a> will have the same dtype and device as the tensor. The device for <code>points</code> must be consistent with <code>lines</code>.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">point_positions</td><td>A tensor with element shape {3}. </td></tr>
    <tr><td class="paramname">line_indices</td><td>A tensor with element shape {2} and Int DtypeCode. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a3395e72b41f79c4521143d5cf6bde702"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3395e72b41f79c4521143d5cf6bde702">&#9670;&nbsp;</a></span>~LineSet()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual open3d::t::geometry::LineSet::~LineSet </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a944be34eb6f9fb565d4c5c35885ff0e8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a944be34eb6f9fb565d4c5c35885ff0e8">&#9670;&nbsp;</a></span>Clear()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49">LineSet</a>&amp; open3d::t::geometry::LineSet::Clear </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Clear all data in the line set. </p>

<p>Implements <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#adc2716f5911ea8a88501ce9d2f029a56">open3d::t::geometry::Geometry</a>.</p>

</div>
</div>
<a id="a5e67e183a9893e399755374022afe770"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5e67e183a9893e399755374022afe770">&#9670;&nbsp;</a></span>Clone()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49">LineSet</a> open3d::t::geometry::LineSet::Clone </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns copy of the line set on the same device. </p>

</div>
</div>
<a id="a534fa97509b553052ff82e8399b9e3a4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a534fa97509b553052ff82e8399b9e3a4">&#9670;&nbsp;</a></span>ExtrudeLinear()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_triangle_me">TriangleMesh</a> open3d::t::geometry::LineSet::ExtrudeLinear </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>vector</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>scale</em> = <code>1.0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>capping</em> = <code>true</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Sweeps the line set along a direction vector. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">vector</td><td>The direction vector. </td></tr>
    <tr><td class="paramname">scale</td><td>Scalar factor which essentially scales the direction vector.</td></tr>
    <tr><td class="paramname">capping</td><td>If true adds caps to the mesh. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A triangle mesh with the result of the sweep operation. </dd></dl>

</div>
</div>
<a id="ae0f708dbdf43076c1a1be40c46faa181"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae0f708dbdf43076c1a1be40c46faa181">&#9670;&nbsp;</a></span>ExtrudeRotation()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_triangle_me">TriangleMesh</a> open3d::t::geometry::LineSet::ExtrudeRotation </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>angle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>axis</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>resolution</em> = <code>16</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>translation</em> = <code>0.0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>capping</em> = <code>true</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Sweeps the line set rotationally about an axis. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">angle</td><td>The rotation angle in degree. </td></tr>
    <tr><td class="paramname">axis</td><td>The rotation axis. </td></tr>
    <tr><td class="paramname">resolution</td><td>The resolution defines the number of intermediate sweeps about the rotation axis. </td></tr>
    <tr><td class="paramname">translation</td><td>The translation along the rotation axis. </td></tr>
    <tr><td class="paramname">capping</td><td>If true adds caps to the mesh. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A triangle mesh with the result of the sweep operation. </dd></dl>

</div>
</div>
<a id="ac73d95434919364a5ccc2afb0bdda893"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac73d95434919364a5ccc2afb0bdda893">&#9670;&nbsp;</a></span>FromLegacy()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49">geometry::LineSet</a> open3d::t::geometry::LineSet::FromLegacy </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1geometry_1_1_line_set.411.del">open3d::geometry::LineSet</a> &amp;&#160;</td>
          <td class="paramname"><em>lineset_legacy</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1core_1_1_dtype.html">core::Dtype</a>&#160;</td>
          <td class="paramname"><em>float_dtype</em> = <code><a class="el" href="namespaceopen3d_1_1core.html#af1357e9a6250eaf326a9dc7069c02789">core::Float32</a></code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1core_1_1_dtype.html">core::Dtype</a>&#160;</td>
          <td class="paramname"><em>int_dtype</em> = <code><a class="el" href="namespaceopen3d_1_1core.html#a4433666ee214f5f3d9d688bb519fb852">core::Int64</a></code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_device.html">core::Device</a> &amp;&#160;</td>
          <td class="paramname"><em>device</em> = <code><a class="el" href="classopen3d_1_1core_1_1_device.html">core::Device</a>(&quot;CPU:0&quot;)</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Create a <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49" title="A LineSet contains points and lines joining them and optionally attributes on the points and lines.">LineSet</a> from a legacy Open3D <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49" title="A LineSet contains points and lines joining them and optionally attributes on the points and lines.">LineSet</a>. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">lineset_legacy</td><td>Legacy Open3D <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49" title="A LineSet contains points and lines joining them and optionally attributes on the points and lines.">LineSet</a>. </td></tr>
    <tr><td class="paramname">float_dtype</td><td>Float32 or Float64, used to store floating point values, e.g. points, normals, colors. </td></tr>
    <tr><td class="paramname">int_dtype</td><td>Int32 or Int64, used to store index values, e.g. line indices. </td></tr>
    <tr><td class="paramname">device</td><td>The device where the resulting <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49" title="A LineSet contains points and lines joining them and optionally attributes on the points and lines.">LineSet</a> resides. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a4b0182dbed49f1d8ea240a6ce5e4cee4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4b0182dbed49f1d8ea240a6ce5e4cee4">&#9670;&nbsp;</a></span>GetAxisAlignedBoundingBox()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_axis_aligne">AxisAlignedBoundingBox</a> open3d::t::geometry::LineSet::GetAxisAlignedBoundingBox </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Create an axis-aligned bounding box from point attribute "positions". </p>

</div>
</div>
<a id="a54f43711e6a5d40ba8ed9659558d87d0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a54f43711e6a5d40ba8ed9659558d87d0">&#9670;&nbsp;</a></span>GetCenter()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> open3d::t::geometry::LineSet::GetCenter </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the center for point coordinates. </p>

</div>
</div>
<a id="a75c905334d5ceee21cd5aea01cbe8f1c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a75c905334d5ceee21cd5aea01cbe8f1c">&#9670;&nbsp;</a></span>GetDevice()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1core_1_1_device.html">core::Device</a> open3d::t::geometry::LineSet::GetDevice </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the device attribute of this <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49" title="A LineSet contains points and lines joining them and optionally attributes on the points and lines.">LineSet</a>. </p>

<p>Implements <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#a409482298c1e3140f1b06f2410c86dee">open3d::t::geometry::Geometry</a>.</p>

</div>
</div>
<a id="a68a8b57785c7b509114e22a507cc3439"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a68a8b57785c7b509114e22a507cc3439">&#9670;&nbsp;</a></span>GetLineAttr() <span class="overload">[1/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_tensor_map">TensorMap</a>&amp; open3d::t::geometry::LineSet::GetLineAttr </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Getter for line_attr_ <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_tensor_map">TensorMap</a>. </p>

</div>
</div>
<a id="a49580c01ebe13403812c2b1b4ac928ce"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a49580c01ebe13403812c2b1b4ac928ce">&#9670;&nbsp;</a></span>GetLineAttr() <span class="overload">[2/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_tensor_map">TensorMap</a>&amp; open3d::t::geometry::LineSet::GetLineAttr </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Getter for line_attr_ <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_tensor_map">TensorMap</a>. Used in Pybind. </p>

</div>
</div>
<a id="a3e9f1f13636763488b16c6cf158cc052"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3e9f1f13636763488b16c6cf158cc052">&#9670;&nbsp;</a></span>GetLineAttr() <span class="overload">[3/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a>&amp; open3d::t::geometry::LineSet::GetLineAttr </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>key</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Get line attributes in line_attr_. Throws exception if the attribute does not exist.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">key</td><td>Attribute name. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a768ba660d93bba39b9b2ab90261ba217"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a768ba660d93bba39b9b2ab90261ba217">&#9670;&nbsp;</a></span>GetLineAttr() <span class="overload">[4/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a>&amp; open3d::t::geometry::LineSet::GetLineAttr </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>key</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Get line attributes in line_attr_. Throws exception if the attribute does not exist.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">key</td><td>Attribute name. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a8f2a06832bd95cc0c648d40e5c25ca9b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8f2a06832bd95cc0c648d40e5c25ca9b">&#9670;&nbsp;</a></span>GetLineColors() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a>&amp; open3d::t::geometry::LineSet::GetLineColors </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Get the value of the "colors" attribute in line_attr_. Convenience function. </p>

</div>
</div>
<a id="adea96cae6c8f02e5587c5590602f971d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adea96cae6c8f02e5587c5590602f971d">&#9670;&nbsp;</a></span>GetLineColors() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a>&amp; open3d::t::geometry::LineSet::GetLineColors </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Get the value of the "colors" attribute in line_attr_. Convenience function. </p>

</div>
</div>
<a id="a6a316dbdfaeaa74aa046c517b303fee3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6a316dbdfaeaa74aa046c517b303fee3">&#9670;&nbsp;</a></span>GetLineIndices() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a>&amp; open3d::t::geometry::LineSet::GetLineIndices </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Get the value of the "indices" attribute in line_attr_. Convenience function. </p>

</div>
</div>
<a id="a0f37d99ffbf1db09a00d5147c5e98085"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0f37d99ffbf1db09a00d5147c5e98085">&#9670;&nbsp;</a></span>GetLineIndices() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a>&amp; open3d::t::geometry::LineSet::GetLineIndices </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Get the value of the "indices" attribute in line_attr_. Convenience function. </p>

</div>
</div>
<a id="a22c2f6a0c59f77f9621f0aa9882a5e0a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a22c2f6a0c59f77f9621f0aa9882a5e0a">&#9670;&nbsp;</a></span>GetMaxBound()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> open3d::t::geometry::LineSet::GetMaxBound </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the max bound for point coordinates. </p>

</div>
</div>
<a id="aa89dd5ffcb7ab0911bc372dd59689f2a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa89dd5ffcb7ab0911bc372dd59689f2a">&#9670;&nbsp;</a></span>GetMinBound()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> open3d::t::geometry::LineSet::GetMinBound </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the max bound for point coordinates. </p>

</div>
</div>
<a id="ad9b93a96362823143f75afdb37a67ef7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad9b93a96362823143f75afdb37a67ef7">&#9670;&nbsp;</a></span>GetOrientedBoundingBox()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_oriented_bo">OrientedBoundingBox</a> open3d::t::geometry::LineSet::GetOrientedBoundingBox </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Create an oriented bounding box from point attribute "positions". </p>

</div>
</div>
<a id="ac2eeb558fcc72dd8b43ef2fc3d255fff"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac2eeb558fcc72dd8b43ef2fc3d255fff">&#9670;&nbsp;</a></span>GetPointAttr() <span class="overload">[1/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_tensor_map">TensorMap</a>&amp; open3d::t::geometry::LineSet::GetPointAttr </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Getter for point_attr_ <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_tensor_map">TensorMap</a>. </p>

</div>
</div>
<a id="af3e1893cd523b56a4565ead24ba0b6a2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af3e1893cd523b56a4565ead24ba0b6a2">&#9670;&nbsp;</a></span>GetPointAttr() <span class="overload">[2/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_tensor_map">TensorMap</a>&amp; open3d::t::geometry::LineSet::GetPointAttr </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Getter for point_attr_ <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_tensor_map">TensorMap</a>. Used in Pybind. </p>

</div>
</div>
<a id="a2f8e72125079adcde594e70baac1d92e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2f8e72125079adcde594e70baac1d92e">&#9670;&nbsp;</a></span>GetPointAttr() <span class="overload">[3/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a>&amp; open3d::t::geometry::LineSet::GetPointAttr </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>key</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Get point attributes in point_attr_. Throws exception if the attribute does not exist.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">key</td><td>Attribute name. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a5b73347c8d0ae5eff4289a7a19ff3047"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5b73347c8d0ae5eff4289a7a19ff3047">&#9670;&nbsp;</a></span>GetPointAttr() <span class="overload">[4/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a>&amp; open3d::t::geometry::LineSet::GetPointAttr </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>key</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Get point attributes. Throws exception if the attribute does not exist.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">key</td><td>Attribute name. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a9c5fd477027e98acdd8198f7fbeb8d07"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9c5fd477027e98acdd8198f7fbeb8d07">&#9670;&nbsp;</a></span>GetPointPositions() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a>&amp; open3d::t::geometry::LineSet::GetPointPositions </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Get the value of the "positions" attribute in point_attr_. Convenience function. </p>

</div>
</div>
<a id="adaf92c8d1c49dc0d0ddc1b6aec830f7e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adaf92c8d1c49dc0d0ddc1b6aec830f7e">&#9670;&nbsp;</a></span>GetPointPositions() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a>&amp; open3d::t::geometry::LineSet::GetPointPositions </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Get the value of the "positions" attribute in point_attr_. Convenience function. </p>

</div>
</div>
<a id="a5c308909d4046cb0bacddb2a890f8e3e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5c308909d4046cb0bacddb2a890f8e3e">&#9670;&nbsp;</a></span>HasLineAttr()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool open3d::t::geometry::LineSet::HasLineAttr </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>key</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Returns true if all of the following are true in line_attr_: 1) attribute key exist 2) attribute's length as "indices"'s length 3) attribute's length &gt; 0 </p>

</div>
</div>
<a id="a1ed724df9e2eba1e1b251b629c4a38d7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1ed724df9e2eba1e1b251b629c4a38d7">&#9670;&nbsp;</a></span>HasLineColors()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool open3d::t::geometry::LineSet::HasLineColors </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Returns true if all of the following are true in line_attr_: 1) attribute "colors" exist 2) attribute "colors"'s length as "indices"'s length 3) attribute "colors"'s length &gt; 0 Convenience function. </p>

</div>
</div>
<a id="a822f3a017106bdfd0857a5594fb82dc7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a822f3a017106bdfd0857a5594fb82dc7">&#9670;&nbsp;</a></span>HasLineIndices()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool open3d::t::geometry::LineSet::HasLineIndices </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Check if the "indices" attribute's value in line_attr_ has length &gt; 0. Convenience function. </p>

</div>
</div>
<a id="a1f9ae61fc1f3b774afec87eab57dfcc9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1f9ae61fc1f3b774afec87eab57dfcc9">&#9670;&nbsp;</a></span>HasPointAttr()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool open3d::t::geometry::LineSet::HasPointAttr </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>key</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Returns true if all of the following are true in point_attr_: 1) attribute key exist 2) attribute's length as "points"'s length 3) attribute's length &gt; 0 </p>

</div>
</div>
<a id="a592303bf88527d1c0d7b25ce6bdd6685"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a592303bf88527d1c0d7b25ce6bdd6685">&#9670;&nbsp;</a></span>HasPointPositions()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool open3d::t::geometry::LineSet::HasPointPositions </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Check if the "positions" attribute's value in point_attr_ has length &gt; 0. Convenience function. </p>

</div>
</div>
<a id="af4fc7291a682c8924f3e570b829c4dcf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af4fc7291a682c8924f3e570b829c4dcf">&#9670;&nbsp;</a></span>IsEmpty()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool open3d::t::geometry::LineSet::IsEmpty </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns !HasPointPositions(), line indices are ignored. </p>

<p>Implements <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36#a96fee92f85f6aa6ea262c38459a85f2d">open3d::t::geometry::Geometry</a>.</p>

</div>
</div>
<a id="a2a2041636b27cfd92ff24996edef2292"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2a2041636b27cfd92ff24996edef2292">&#9670;&nbsp;</a></span>RemoveLineAttr()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::t::geometry::LineSet::RemoveLineAttr </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>key</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Removes line attribute by key value. Primary attribute "indices" cannot be removed. Throws warning if attribute key does not exists.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">key</td><td>Attribute name. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="aa53d3f782c3f1608f58cb67637e63641"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa53d3f782c3f1608f58cb67637e63641">&#9670;&nbsp;</a></span>RemovePointAttr()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::t::geometry::LineSet::RemovePointAttr </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>key</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Removes point attribute by key value. Primary attribute "positions" cannot be removed. Throws warning if attribute key does not exists.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">key</td><td>Attribute name. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a0596b163d3b7cc9008b73632f2661afa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0596b163d3b7cc9008b73632f2661afa">&#9670;&nbsp;</a></span>Rotate()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49">LineSet</a> &amp; open3d::t::geometry::LineSet::Rotate </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>R</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>center</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Rotates the points and lines of the line set. Custom attributes (e.g.: point or line normals) are not transformed. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">R</td><td>Rotation [Tensor of shape {3,3}]. </td></tr>
    <tr><td class="paramname">center</td><td>Center [Tensor of shape {3}] about which the <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49" title="A LineSet contains points and lines joining them and optionally attributes on the points and lines.">LineSet</a> is to be scaled. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Rotated line set. </dd></dl>

</div>
</div>
<a id="a77bfe5d249bf52315f4d9e0fca9dedab"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a77bfe5d249bf52315f4d9e0fca9dedab">&#9670;&nbsp;</a></span>Scale()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49">LineSet</a> &amp; open3d::t::geometry::LineSet::Scale </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>scale</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>center</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Scales the points and lines of the <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49" title="A LineSet contains points and lines joining them and optionally attributes on the points and lines.">LineSet</a>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">scale</td><td>Scale magnitude. </td></tr>
    <tr><td class="paramname">center</td><td>Center [Tensor of shape {3}] about which the <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49" title="A LineSet contains points and lines joining them and optionally attributes on the points and lines.">LineSet</a> is </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Scaled line set. </dd></dl>

</div>
</div>
<a id="a34671942ba02f1f6138fa64faab10e09"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a34671942ba02f1f6138fa64faab10e09">&#9670;&nbsp;</a></span>SetLineAttr()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::t::geometry::LineSet::SetLineAttr </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Set line attributes. If the attribute key already exists, its value will be overwritten, otherwise, the new key will be created.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">key</td><td>Attribute name. </td></tr>
    <tr><td class="paramname">value</td><td>A tensor. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a2348c1af8cbbd241a538aa3e28966c33"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2348c1af8cbbd241a538aa3e28966c33">&#9670;&nbsp;</a></span>SetLineColors()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::t::geometry::LineSet::SetLineColors </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Set the value of the "colors" attribute in line_attr_. This is a convenience function. </p>

</div>
</div>
<a id="aa8058ef23fa83e15ca2d16776c956e24"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa8058ef23fa83e15ca2d16776c956e24">&#9670;&nbsp;</a></span>SetLineIndices()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::t::geometry::LineSet::SetLineIndices </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Set the value of the "indices" attribute in line_attr_. </p>

</div>
</div>
<a id="a5a4b2773bfce16ace7be0e81e7f26da9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5a4b2773bfce16ace7be0e81e7f26da9">&#9670;&nbsp;</a></span>SetPointAttr()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::t::geometry::LineSet::SetPointAttr </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Set point attributes. If the attribute key already exists, its value will be overwritten, otherwise, the new key will be created.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">key</td><td>Attribute name. </td></tr>
    <tr><td class="paramname">value</td><td>A tensor. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ab5845e9ecfb70f709fc7316dfa917681"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab5845e9ecfb70f709fc7316dfa917681">&#9670;&nbsp;</a></span>SetPointPositions()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::t::geometry::LineSet::SetPointPositions </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Set the value of the "positions" attribute in point_attr_. Convenience function. </p>

</div>
</div>
<a id="a8bdfd07fb67677d651fdf2b0a0d07bec"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8bdfd07fb67677d651fdf2b0a0d07bec">&#9670;&nbsp;</a></span>To()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49">LineSet</a> open3d::t::geometry::LineSet::To </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_device.html">core::Device</a> &amp;&#160;</td>
          <td class="paramname"><em>device</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>copy</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Transfer the line set to a specified device. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">device</td><td>The targeted device to convert to. </td></tr>
    <tr><td class="paramname">copy</td><td>If true, a new line set is always created; if false, the copy is avoided when the original line set is already on the targeted device. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a4d471cd76d097eb728920ac86c47312e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4d471cd76d097eb728920ac86c47312e">&#9670;&nbsp;</a></span>ToLegacy()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1geometry_1_1_line_set.411.del">open3d::geometry::LineSet</a> open3d::t::geometry::LineSet::ToLegacy </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Convert to a legacy Open3D <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49" title="A LineSet contains points and lines joining them and optionally attributes on the points and lines.">LineSet</a>. </p>

</div>
</div>
<a id="a00daac9ea049abf83e88583ce6dc17db"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a00daac9ea049abf83e88583ce6dc17db">&#9670;&nbsp;</a></span>ToString()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string open3d::t::geometry::LineSet::ToString </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Text description. </p>

</div>
</div>
<a id="a8ab6c499205cf8ea69c6a095b05e65b0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8ab6c499205cf8ea69c6a095b05e65b0">&#9670;&nbsp;</a></span>Transform()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49">LineSet</a> &amp; open3d::t::geometry::LineSet::Transform </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>transformation</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Transforms the points and lines of the <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49" title="A LineSet contains points and lines joining them and optionally attributes on the points and lines.">LineSet</a>. </p>
<p>Custom attributes (e.g.: point or line normals) are not transformed.</p>
<p>Transformation matrix is a 4x4 matrix. T (4x4) = [[ R(3x3) t(3x1) ], [ O(1x3) s(1x1) ]] (s = 1 for Transformation without scaling)</p>
<p>It applies the following general transform to each <code>positions</code> and <code>normals</code>. |x'| | R(0,0) R(0,1) R(0,2) t(0)| |x| |y'| = | R(1,0) R(1,1) R(1,2) t(1)| @ |y| |z'| | R(2,0) R(2,1) R(2,2) t(2)| |z| |w'| | O(0,0) O(0,1) O(0,2) s | |1|</p>
<p>[x, y, z] = [x', y', z'] / w'</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">transformation</td><td>Transformation [Tensor of shape {4,4}]. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Transformed line set. </dd></dl>

</div>
</div>
<a id="ac3e5880d36d0c63669c8e06d049f264d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac3e5880d36d0c63669c8e06d049f264d">&#9670;&nbsp;</a></span>Translate()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49">LineSet</a> &amp; open3d::t::geometry::LineSet::Translate </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>translation</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>relative</em> = <code>true</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Translates the points and lines of the <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49" title="A LineSet contains points and lines joining them and optionally attributes on the points and lines.">LineSet</a>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">translation</td><td>Translation tensor of shape {3} </td></tr>
    <tr><td class="paramname">relative</td><td>If true (default) translates relative to center of <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_line_set.49" title="A LineSet contains points and lines joining them and optionally attributes on the points and lines.">LineSet</a>. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Translated line set. </dd></dl>

</div>
</div>
<h2 class="groupheader">Field Documentation</h2>
<a id="a12cb8fd41d20afeb5657ca112f795fbc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a12cb8fd41d20afeb5657ca112f795fbc">&#9670;&nbsp;</a></span>device_</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1core_1_1_device.html">core::Device</a> open3d::t::geometry::LineSet::device_ = <a class="el" href="classopen3d_1_1core_1_1_device.html">core::Device</a>(&quot;CPU:0&quot;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aa8f8d4bdf5047b88a32f2fb772805ee6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa8f8d4bdf5047b88a32f2fb772805ee6">&#9670;&nbsp;</a></span>line_attr_</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_tensor_map">TensorMap</a> open3d::t::geometry::LineSet::line_attr_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ac17ac87e9cf317b9360529384a9cbd0b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac17ac87e9cf317b9360529384a9cbd0b">&#9670;&nbsp;</a></span>point_attr_</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_tensor_map">TensorMap</a> open3d::t::geometry::LineSet::point_attr_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/runner/work/Open3D/Open3D/cpp/open3d/t/geometry/<a class="el" href="t_2geometry_2_line_set_8h_source.html">LineSet.h (9238339 (Tue Mar 14 18:49:09 2023 -0700))</a></li>
<li>/home/runner/work/Open3D/Open3D/cpp/open3d/t/geometry/<a class="el" href="t_2geometry_2_line_set_8cpp.html">LineSet.cpp (9238339 (Tue Mar 14 18:49:09 2023 -0700))</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1
</small></address>
</body>

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/classopen3d_1_1t_1_1geometry_1_1_line_set.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 10:57:51 GMT -->
</html>
