<!-- HTML header for doxygen 1.8.20-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/classopen3d_1_1utility_1_1optional_3_01_t_01_6_01_4.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 10:56:39 GMT -->
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Open3D (C++ API): open3d::utility::optional&lt; T &amp; &gt; Class Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js", "TeX/AMSmath.html", "TeX/AMSsymbols.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="../../../../cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-3TQPKGV6Z3"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());
  gtag('config', 'G-3TQPKGV6Z3');
</script>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="open3d_logo.ico"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Open3D (C++ API)
   &#160;<span id="projectnumber">0.17.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.html');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.html','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceopen3d.html">open3d</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1utility.html">utility</a></li><li class="navelem"><a class="el" href="classopen3d_1_1utility_1_1optional_3_01_t_01">optional&lt; T &amp; &gt;</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">open3d::utility::optional&lt; T &amp; &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_optional_8h_source.html">Optional.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a1464e483352b2a56a19bbdd01faeb6b3"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1utility_1_1optional_3_01_t_01#a1464e483352b2a56a19bbdd01faeb6b3">optional</a> () noexcept</td></tr>
<tr class="separator:a1464e483352b2a56a19bbdd01faeb6b3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9541a624ccd7ba4ad947940564887095"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1utility_1_1optional_3_01_t_01#a9541a624ccd7ba4ad947940564887095">optional</a> (<a class="el" href="structopen3d_1_1utility_1_1nullopt__t.3c8.de">nullopt_t</a>) noexcept</td></tr>
<tr class="separator:a9541a624ccd7ba4ad947940564887095"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0fa461c558c979aa811e7aec882c0be4"><td class="memTemplParams" colspan="2">template&lt;typename U  = T&gt; </td></tr>
<tr class="memitem:a0fa461c558c979aa811e7aec882c0be4"><td class="memTemplItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classopen3d_1_1utility_1_1optional_3_01_t_01#a0fa461c558c979aa811e7aec882c0be4">optional</a> (U &amp;u) noexcept</td></tr>
<tr class="separator:a0fa461c558c979aa811e7aec882c0be4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adde01718f10f0d1529ceaf5a7a4d9e7d"><td class="memTemplParams" colspan="2">template&lt;typename U  = T&gt; </td></tr>
<tr class="memitem:adde01718f10f0d1529ceaf5a7a4d9e7d"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classopen3d_1_1utility_1_1optional_3_01_t_01#adde01718f10f0d1529ceaf5a7a4d9e7d">optional</a> (U &amp;&amp;)=delete</td></tr>
<tr class="separator:adde01718f10f0d1529ceaf5a7a4d9e7d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af52906227bb15db067f94d12b38d00ca"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1utility_1_1optional_3_01_t_01#af52906227bb15db067f94d12b38d00ca">optional</a> (const <a class="el" href="classopen3d_1_1utility_1_1optional.3c6.delay">optional</a> &amp;rhs) noexcept</td></tr>
<tr class="separator:af52906227bb15db067f94d12b38d00ca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad2ed5c207dc63da8e0d34b6ab5c32a19"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1utility_1_1optional_3_01_t_01#ad2ed5c207dc63da8e0d34b6ab5c32a19">optional</a> (<a class="el" href="structopen3d_1_1utility_1_1in__place__t.452">in_place_t</a>, T &amp;v) noexcept</td></tr>
<tr class="separator:ad2ed5c207dc63da8e0d34b6ab5c32a19"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac13f09487ccb6cd36a87ed6e61973c2f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1utility_1_1optional_3_01_t_01#ac13f09487ccb6cd36a87ed6e61973c2f">optional</a> (<a class="el" href="structopen3d_1_1utility_1_1in__place__t.452">in_place_t</a>, T &amp;&amp;)=delete</td></tr>
<tr class="separator:ac13f09487ccb6cd36a87ed6e61973c2f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a836e7cacbf8385ca8c0b82d7f3995dfb"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1utility_1_1optional_3_01_t_01#a836e7cacbf8385ca8c0b82d7f3995dfb">~optional</a> ()=default</td></tr>
<tr class="separator:a836e7cacbf8385ca8c0b82d7f3995dfb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae059de280e058c068222251c5d17135b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1utility_1_1optional.3c6.delay">optional</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1utility_1_1optional_3_01_t_01#ae059de280e058c068222251c5d17135b">operator=</a> (<a class="el" href="structopen3d_1_1utility_1_1nullopt__t.3c8.de">nullopt_t</a>) noexcept</td></tr>
<tr class="separator:ae059de280e058c068222251c5d17135b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a42e899c878cc537032138c27db654408"><td class="memTemplParams" colspan="2">template&lt;typename U &gt; </td></tr>
<tr class="memitem:a42e899c878cc537032138c27db654408"><td class="memTemplItemLeft" align="right" valign="top">auto&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classopen3d_1_1utility_1_1optional_3_01_t_01#a42e899c878cc537032138c27db654408">operator=</a> (U &amp;&amp;rhs) noexcept -&gt; typename std::enable_if&lt; std::is_same&lt; typename std::decay&lt; U &gt;::<a class="el" href="io_2file__format_2_file_p_c_d_8cpp.375.delay#aff17911edc8208aa8ddb1c7c52c78389">type</a>, <a class="el" href="classopen3d_1_1utility_1_1optional.3c6.delay">optional</a>&lt; T &amp; &gt;&gt;::<a class="el" href="classopen3d_1_1utility_1_1optional_3_01_t_01#a0b7bde5bcc4a3fa6e25eb8068bbee009">value</a>, <a class="el" href="classopen3d_1_1utility_1_1optional.3c6.delay">optional</a> &amp; &gt;::<a class="el" href="io_2file__format_2_file_p_c_d_8cpp.375.delay#aff17911edc8208aa8ddb1c7c52c78389">type</a></td></tr>
<tr class="separator:a42e899c878cc537032138c27db654408"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab5f8eae28d9f3fa79e6d516dd071e113"><td class="memTemplParams" colspan="2">template&lt;typename U &gt; </td></tr>
<tr class="memitem:ab5f8eae28d9f3fa79e6d516dd071e113"><td class="memTemplItemLeft" align="right" valign="top">auto&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classopen3d_1_1utility_1_1optional_3_01_t_01#ab5f8eae28d9f3fa79e6d516dd071e113">operator=</a> (U &amp;&amp;rhs) noexcept -&gt; typename std::enable_if&lt; !std::is_same&lt; typename std::decay&lt; U &gt;::<a class="el" href="io_2file__format_2_file_p_c_d_8cpp.375.delay#aff17911edc8208aa8ddb1c7c52c78389">type</a>, <a class="el" href="classopen3d_1_1utility_1_1optional.3c6.delay">optional</a>&lt; T &amp; &gt;&gt;::<a class="el" href="classopen3d_1_1utility_1_1optional_3_01_t_01#a0b7bde5bcc4a3fa6e25eb8068bbee009">value</a>, <a class="el" href="classopen3d_1_1utility_1_1optional.3c6.delay">optional</a> &amp; &gt;::<a class="el" href="io_2file__format_2_file_p_c_d_8cpp.375.delay#aff17911edc8208aa8ddb1c7c52c78389">type</a>=delete</td></tr>
<tr class="separator:ab5f8eae28d9f3fa79e6d516dd071e113"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9b5609ebf70f58aeda96f585d6bb0b4a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1utility_1_1optional_3_01_t_01#a9b5609ebf70f58aeda96f585d6bb0b4a">emplace</a> (T &amp;v) noexcept</td></tr>
<tr class="separator:a9b5609ebf70f58aeda96f585d6bb0b4a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac4313416d45eb1b2da73dc278e41fef6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1utility_1_1optional_3_01_t_01#ac4313416d45eb1b2da73dc278e41fef6">emplace</a> (T &amp;&amp;)=delete</td></tr>
<tr class="separator:ac4313416d45eb1b2da73dc278e41fef6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acbd6489263a52661b9d0e780dcbfe688"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1utility_1_1optional_3_01_t_01#acbd6489263a52661b9d0e780dcbfe688">swap</a> (<a class="el" href="classopen3d_1_1utility_1_1optional.3c6.delay">optional</a>&lt; T &amp; &gt; &amp;rhs) noexcept</td></tr>
<tr class="separator:acbd6489263a52661b9d0e780dcbfe688"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a74ae85133e4cb0d871d1170f51292c94"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_optional_8h.html#a8df785cb8c5588e7ac8b1cf377f419c5">TR2_OPTIONAL_HOST_CONSTEXPR</a> T *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1utility_1_1optional_3_01_t_01#a74ae85133e4cb0d871d1170f51292c94">operator-&gt;</a> () const</td></tr>
<tr class="separator:a74ae85133e4cb0d871d1170f51292c94"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a877e8e0516c49827fddeb016c1284e7f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_optional_8h.html#a8df785cb8c5588e7ac8b1cf377f419c5">TR2_OPTIONAL_HOST_CONSTEXPR</a> T &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1utility_1_1optional_3_01_t_01#a877e8e0516c49827fddeb016c1284e7f">operator*</a> () const</td></tr>
<tr class="separator:a877e8e0516c49827fddeb016c1284e7f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0b7bde5bcc4a3fa6e25eb8068bbee009"><td class="memItemLeft" align="right" valign="top">constexpr T &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1utility_1_1optional_3_01_t_01#a0b7bde5bcc4a3fa6e25eb8068bbee009">value</a> () const</td></tr>
<tr class="separator:a0b7bde5bcc4a3fa6e25eb8068bbee009"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a45a6d09e706161437e2579bdc2b58007"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1utility_1_1optional_3_01_t_01#a45a6d09e706161437e2579bdc2b58007">operator bool</a> () const noexcept</td></tr>
<tr class="separator:a45a6d09e706161437e2579bdc2b58007"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad44ebfa5f146af3f5238e0ad6cf75113"><td class="memItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1utility_1_1optional_3_01_t_01#ad44ebfa5f146af3f5238e0ad6cf75113">has_value</a> () const noexcept</td></tr>
<tr class="separator:ad44ebfa5f146af3f5238e0ad6cf75113"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9df07943615f50ed93dc55c5f4dcf83a"><td class="memTemplParams" colspan="2">template&lt;class V &gt; </td></tr>
<tr class="memitem:a9df07943615f50ed93dc55c5f4dcf83a"><td class="memTemplItemLeft" align="right" valign="top">constexpr std::decay&lt; T &gt;::<a class="el" href="io_2file__format_2_file_p_c_d_8cpp.375.delay#aff17911edc8208aa8ddb1c7c52c78389">type</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classopen3d_1_1utility_1_1optional_3_01_t_01#a9df07943615f50ed93dc55c5f4dcf83a">value_or</a> (V &amp;&amp;v) const</td></tr>
<tr class="separator:a9df07943615f50ed93dc55c5f4dcf83a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a88020b007a36a91e7095906fadd3cc49"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1utility_1_1optional_3_01_t_01#a88020b007a36a91e7095906fadd3cc49">reset</a> () noexcept</td></tr>
<tr class="separator:a88020b007a36a91e7095906fadd3cc49"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a1464e483352b2a56a19bbdd01faeb6b3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1464e483352b2a56a19bbdd01faeb6b3">&#9670;&nbsp;</a></span>optional() <span class="overload">[1/7]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="classopen3d_1_1utility_1_1optional.3c6.delay">open3d::utility::optional</a>&lt; T &amp; &gt;::<a class="el" href="classopen3d_1_1utility_1_1optional.3c6.delay">optional</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a9541a624ccd7ba4ad947940564887095"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9541a624ccd7ba4ad947940564887095">&#9670;&nbsp;</a></span>optional() <span class="overload">[2/7]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="classopen3d_1_1utility_1_1optional.3c6.delay">open3d::utility::optional</a>&lt; T &amp; &gt;::<a class="el" href="classopen3d_1_1utility_1_1optional.3c6.delay">optional</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structopen3d_1_1utility_1_1nullopt__t.3c8.de">nullopt_t</a>&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a0fa461c558c979aa811e7aec882c0be4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0fa461c558c979aa811e7aec882c0be4">&#9670;&nbsp;</a></span>optional() <span class="overload">[3/7]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<div class="memtemplate">
template&lt;typename U  = T&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="classopen3d_1_1utility_1_1optional.3c6.delay">open3d::utility::optional</a>&lt; T &amp; &gt;::<a class="el" href="classopen3d_1_1utility_1_1optional.3c6.delay">optional</a> </td>
          <td>(</td>
          <td class="paramtype">U &amp;&#160;</td>
          <td class="paramname"><em>u</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="adde01718f10f0d1529ceaf5a7a4d9e7d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adde01718f10f0d1529ceaf5a7a4d9e7d">&#9670;&nbsp;</a></span>optional() <span class="overload">[4/7]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<div class="memtemplate">
template&lt;typename U  = T&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1utility_1_1optional.3c6.delay">open3d::utility::optional</a>&lt; T &amp; &gt;::<a class="el" href="classopen3d_1_1utility_1_1optional.3c6.delay">optional</a> </td>
          <td>(</td>
          <td class="paramtype">U &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="af52906227bb15db067f94d12b38d00ca"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af52906227bb15db067f94d12b38d00ca">&#9670;&nbsp;</a></span>optional() <span class="overload">[5/7]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="classopen3d_1_1utility_1_1optional.3c6.delay">open3d::utility::optional</a>&lt; T &amp; &gt;::<a class="el" href="classopen3d_1_1utility_1_1optional.3c6.delay">optional</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1utility_1_1optional.3c6.delay">optional</a>&lt; T &amp; &gt; &amp;&#160;</td>
          <td class="paramname"><em>rhs</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ad2ed5c207dc63da8e0d34b6ab5c32a19"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad2ed5c207dc63da8e0d34b6ab5c32a19">&#9670;&nbsp;</a></span>optional() <span class="overload">[6/7]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="classopen3d_1_1utility_1_1optional.3c6.delay">open3d::utility::optional</a>&lt; T &amp; &gt;::<a class="el" href="classopen3d_1_1utility_1_1optional.3c6.delay">optional</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structopen3d_1_1utility_1_1in__place__t.452">in_place_t</a>&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">T &amp;&#160;</td>
          <td class="paramname"><em>v</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">explicit</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ac13f09487ccb6cd36a87ed6e61973c2f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac13f09487ccb6cd36a87ed6e61973c2f">&#9670;&nbsp;</a></span>optional() <span class="overload">[7/7]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1utility_1_1optional.3c6.delay">open3d::utility::optional</a>&lt; T &amp; &gt;::<a class="el" href="classopen3d_1_1utility_1_1optional.3c6.delay">optional</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structopen3d_1_1utility_1_1in__place__t.452">in_place_t</a>&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">T &amp;&amp;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">explicit</span><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a836e7cacbf8385ca8c0b82d7f3995dfb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a836e7cacbf8385ca8c0b82d7f3995dfb">&#9670;&nbsp;</a></span>~optional()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1utility_1_1optional.3c6.delay">open3d::utility::optional</a>&lt; T &amp; &gt;::~<a class="el" href="classopen3d_1_1utility_1_1optional.3c6.delay">optional</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="ac4313416d45eb1b2da73dc278e41fef6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac4313416d45eb1b2da73dc278e41fef6">&#9670;&nbsp;</a></span>emplace() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classopen3d_1_1utility_1_1optional.3c6.delay">open3d::utility::optional</a>&lt; T &amp; &gt;::emplace </td>
          <td>(</td>
          <td class="paramtype">T &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a9b5609ebf70f58aeda96f585d6bb0b4a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9b5609ebf70f58aeda96f585d6bb0b4a">&#9670;&nbsp;</a></span>emplace() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classopen3d_1_1utility_1_1optional.3c6.delay">open3d::utility::optional</a>&lt; T &amp; &gt;::emplace </td>
          <td>(</td>
          <td class="paramtype">T &amp;&#160;</td>
          <td class="paramname"><em>v</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ad44ebfa5f146af3f5238e0ad6cf75113"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad44ebfa5f146af3f5238e0ad6cf75113">&#9670;&nbsp;</a></span>has_value()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr bool <a class="el" href="classopen3d_1_1utility_1_1optional.3c6.delay">open3d::utility::optional</a>&lt; T &amp; &gt;::has_value </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a45a6d09e706161437e2579bdc2b58007"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a45a6d09e706161437e2579bdc2b58007">&#9670;&nbsp;</a></span>operator bool()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="classopen3d_1_1utility_1_1optional.3c6.delay">open3d::utility::optional</a>&lt; T &amp; &gt;::operator bool </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">explicit</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a877e8e0516c49827fddeb016c1284e7f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a877e8e0516c49827fddeb016c1284e7f">&#9670;&nbsp;</a></span>operator*()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="_optional_8h.html#a8df785cb8c5588e7ac8b1cf377f419c5">TR2_OPTIONAL_HOST_CONSTEXPR</a> T&amp; <a class="el" href="classopen3d_1_1utility_1_1optional.3c6.delay">open3d::utility::optional</a>&lt; T &amp; &gt;::operator* </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a74ae85133e4cb0d871d1170f51292c94"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a74ae85133e4cb0d871d1170f51292c94">&#9670;&nbsp;</a></span>operator-&gt;()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="_optional_8h.html#a8df785cb8c5588e7ac8b1cf377f419c5">TR2_OPTIONAL_HOST_CONSTEXPR</a> T* <a class="el" href="classopen3d_1_1utility_1_1optional.3c6.delay">open3d::utility::optional</a>&lt; T &amp; &gt;::operator-&gt; </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ae059de280e058c068222251c5d17135b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae059de280e058c068222251c5d17135b">&#9670;&nbsp;</a></span>operator=() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1utility_1_1optional.3c6.delay">optional</a>&amp; <a class="el" href="classopen3d_1_1utility_1_1optional.3c6.delay">open3d::utility::optional</a>&lt; T &amp; &gt;::operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structopen3d_1_1utility_1_1nullopt__t.3c8.de">nullopt_t</a>&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ab5f8eae28d9f3fa79e6d516dd071e113"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab5f8eae28d9f3fa79e6d516dd071e113">&#9670;&nbsp;</a></span>operator=() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<div class="memtemplate">
template&lt;typename U &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">auto <a class="el" href="classopen3d_1_1utility_1_1optional.3c6.delay">open3d::utility::optional</a>&lt; T &amp; &gt;::operator= </td>
          <td>(</td>
          <td class="paramtype">U &amp;&amp;&#160;</td>
          <td class="paramname"><em>rhs</em></td><td>)</td>
          <td> -&gt;  typename std::enable_if&lt; !std::is_same&lt; typename std::decay&lt; U &gt;::<a class="el" href="io_2file__format_2_file_p_c_d_8cpp.375.delay#aff17911edc8208aa8ddb1c7c52c78389">type</a>, <a class="el" href="classopen3d_1_1utility_1_1optional.3c6.delay">optional</a>&lt; T &amp; &gt;&gt;::<a class="el" href="classopen3d_1_1utility_1_1optional_3_01_t_01#a0b7bde5bcc4a3fa6e25eb8068bbee009">value</a>, <a class="el" href="classopen3d_1_1utility_1_1optional.3c6.delay">optional</a> &amp; &gt;::<a class="el" href="io_2file__format_2_file_p_c_d_8cpp.375.delay#aff17911edc8208aa8ddb1c7c52c78389">type</a>=delete</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a42e899c878cc537032138c27db654408"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a42e899c878cc537032138c27db654408">&#9670;&nbsp;</a></span>operator=() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<div class="memtemplate">
template&lt;typename U &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">auto <a class="el" href="classopen3d_1_1utility_1_1optional.3c6.delay">open3d::utility::optional</a>&lt; T &amp; &gt;::operator= </td>
          <td>(</td>
          <td class="paramtype">U &amp;&amp;&#160;</td>
          <td class="paramname"><em>rhs</em></td><td>)</td>
          <td> -&gt; typename std::enable_if&lt;
            std::is_same&lt;typename std::decay&lt;U&gt;::<a class="el" href="io_2file__format_2_file_p_c_d_8cpp.375.delay#aff17911edc8208aa8ddb1c7c52c78389">type</a>, <a class="el" href="classopen3d_1_1utility_1_1optional.3c6.delay">optional</a>&lt;T&amp;&gt;&gt;::<a class="el" href="classopen3d_1_1utility_1_1optional_3_01_t_01#a0b7bde5bcc4a3fa6e25eb8068bbee009">value</a>,
            <a class="el" href="classopen3d_1_1utility_1_1optional.3c6.delay">optional</a>&amp;&gt;::<a class="el" href="io_2file__format_2_file_p_c_d_8cpp.375.delay#aff17911edc8208aa8ddb1c7c52c78389">type</a> </td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a88020b007a36a91e7095906fadd3cc49"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a88020b007a36a91e7095906fadd3cc49">&#9670;&nbsp;</a></span>reset()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classopen3d_1_1utility_1_1optional.3c6.delay">open3d::utility::optional</a>&lt; T &amp; &gt;::reset </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="acbd6489263a52661b9d0e780dcbfe688"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acbd6489263a52661b9d0e780dcbfe688">&#9670;&nbsp;</a></span>swap()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classopen3d_1_1utility_1_1optional.3c6.delay">open3d::utility::optional</a>&lt; T &amp; &gt;::swap </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1utility_1_1optional.3c6.delay">optional</a>&lt; T &amp; &gt; &amp;&#160;</td>
          <td class="paramname"><em>rhs</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a0b7bde5bcc4a3fa6e25eb8068bbee009"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0b7bde5bcc4a3fa6e25eb8068bbee009">&#9670;&nbsp;</a></span>value()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr T&amp; <a class="el" href="classopen3d_1_1utility_1_1optional.3c6.delay">open3d::utility::optional</a>&lt; T &amp; &gt;::value </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a9df07943615f50ed93dc55c5f4dcf83a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9df07943615f50ed93dc55c5f4dcf83a">&#9670;&nbsp;</a></span>value_or()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<div class="memtemplate">
template&lt;class V &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr std::decay&lt;T&gt;::<a class="el" href="io_2file__format_2_file_p_c_d_8cpp.375.delay#aff17911edc8208aa8ddb1c7c52c78389">type</a> <a class="el" href="classopen3d_1_1utility_1_1optional.3c6.delay">open3d::utility::optional</a>&lt; T &amp; &gt;::value_or </td>
          <td>(</td>
          <td class="paramtype">V &amp;&amp;&#160;</td>
          <td class="paramname"><em>v</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>/home/runner/work/Open3D/Open3D/cpp/open3d/utility/<a class="el" href="_optional_8h_source.html">Optional.h (9238339 (Tue Mar 14 18:49:09 2023 -0700))</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1
</small></address>
</body>

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/classopen3d_1_1utility_1_1optional_3_01_t_01_6_01_4.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 10:56:39 GMT -->
</html>
