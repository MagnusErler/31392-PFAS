<!-- HTML header for doxygen 1.8.20-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/namespaceopen3d_1_1pipelines_1_1odometry.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 10:56:26 GMT -->
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Open3D (C++ API): open3d::pipelines::odometry Namespace Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js", "TeX/AMSmath.html", "TeX/AMSsymbols.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="../../../../cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-3TQPKGV6Z3"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());
  gtag('config', 'G-3TQPKGV6Z3');
</script>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="open3d_logo.ico"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Open3D (C++ API)
   &#160;<span id="projectnumber">0.17.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.html');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.html','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceopen3d.html">open3d</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1pipelines.html">pipelines</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1pipelines_1_1odometry.441">odometry</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">open3d::pipelines::odometry Namespace Reference</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1pipelines_1_1odometry_1_1_odo">OdometryOption</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1pipelines_1_1odometry_1_1_r_g">RGBDOdometryJacobian</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Base class that computes Jacobian from two RGB-D images.  <a href="classopen3d_1_1pipelines_1_1odometry_1_1_r_g#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1pipelines_1_1odometry_1_1_r_g-2">RGBDOdometryJacobianFromColorTerm</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class to compute Jacobian using color term.  <a href="classopen3d_1_1pipelines_1_1odometry_1_1_r_g-2#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1pipelines_1_1odometry_1_1_r_g-3">RGBDOdometryJacobianFromHybridTerm</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class to compute Jacobian using hybrid term.  <a href="classopen3d_1_1pipelines_1_1odometry_1_1_r_g-3#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:aedbb209db60f161c67f478b1582de71a"><td class="memItemLeft" align="right" valign="top">typedef std::vector&lt; Eigen::Vector4i, <a class="el" href="namespaceopen3d_1_1utility.html#a45f389dc4f9b98744280e86eeba44f55">utility::Vector4i_allocator</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1pipelines_1_1odometry.441#aedbb209db60f161c67f478b1582de71a">CorrespondenceSetPixelWise</a></td></tr>
<tr class="separator:aedbb209db60f161c67f478b1582de71a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:af1d7304d6e6163abeeb2014342ee5d4e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceopen3d_1_1pipelines_1_1odometry.441#aedbb209db60f161c67f478b1582de71a">CorrespondenceSetPixelWise</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1pipelines_1_1odometry.441#af1d7304d6e6163abeeb2014342ee5d4e">ComputeCorrespondence</a> (const Eigen::Matrix3d &amp;intrinsic_matrix, const Eigen::Matrix4d &amp;extrinsic, const <a class="el" href="classopen3d_1_1geometry_1_1_image.406.delaye">geometry::Image</a> &amp;depth_s, const <a class="el" href="classopen3d_1_1geometry_1_1_image.406.delaye">geometry::Image</a> &amp;depth_t, const <a class="el" href="classopen3d_1_1pipelines_1_1odometry_1_1_odo">OdometryOption</a> &amp;option)</td></tr>
<tr class="memdesc:af1d7304d6e6163abeeb2014342ee5d4e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Function to estimate point to point correspondences from two depth images.  <a href="namespaceopen3d_1_1pipelines_1_1odometry.441#af1d7304d6e6163abeeb2014342ee5d4e">More...</a><br /></td></tr>
<tr class="separator:af1d7304d6e6163abeeb2014342ee5d4e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abdb7e9f47f9dd900a0755829a32f1941"><td class="memItemLeft" align="right" valign="top">std::tuple&lt; bool, Eigen::Matrix4d, Eigen::Matrix6d &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1pipelines_1_1odometry.441#abdb7e9f47f9dd900a0755829a32f1941">ComputeRGBDOdometry</a> (const <a class="el" href="classopen3d_1_1geometry_1_1_r_g_b_d_image.37">geometry::RGBDImage</a> &amp;source, const <a class="el" href="classopen3d_1_1geometry_1_1_r_g_b_d_image.37">geometry::RGBDImage</a> &amp;target, const <a class="el" href="classopen3d_1_1camera_1_1_pinhole_camera_int">camera::PinholeCameraIntrinsic</a> &amp;pinhole_camera_intrinsic=<a class="el" href="classopen3d_1_1camera_1_1_pinhole_camera_int">camera::PinholeCameraIntrinsic</a>(), const Eigen::Matrix4d &amp;odo_init=Eigen::Matrix4d::Identity(), const <a class="el" href="classopen3d_1_1pipelines_1_1odometry_1_1_r_g">RGBDOdometryJacobian</a> &amp;jacobian_method=<a class="el" href="classopen3d_1_1pipelines_1_1odometry_1_1_r_g-3">RGBDOdometryJacobianFromHybridTerm</a>(), const <a class="el" href="classopen3d_1_1pipelines_1_1odometry_1_1_odo">OdometryOption</a> &amp;option=<a class="el" href="classopen3d_1_1pipelines_1_1odometry_1_1_odo">OdometryOption</a>())</td></tr>
<tr class="memdesc:abdb7e9f47f9dd900a0755829a32f1941"><td class="mdescLeft">&#160;</td><td class="mdescRight">Function to estimate 6D rigid motion from two RGBD image pairs.  <a href="namespaceopen3d_1_1pipelines_1_1odometry.441#abdb7e9f47f9dd900a0755829a32f1941">More...</a><br /></td></tr>
<tr class="separator:abdb7e9f47f9dd900a0755829a32f1941"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Typedef Documentation</h2>
<a id="aedbb209db60f161c67f478b1582de71a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aedbb209db60f161c67f478b1582de71a">&#9670;&nbsp;</a></span>CorrespondenceSetPixelWise</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef std::vector&lt;Eigen::Vector4i, <a class="el" href="namespaceopen3d_1_1utility.html#a45f389dc4f9b98744280e86eeba44f55">utility::Vector4i_allocator</a>&gt; <a class="el" href="namespaceopen3d_1_1pipelines_1_1odometry.441#aedbb209db60f161c67f478b1582de71a">open3d::pipelines::odometry::CorrespondenceSetPixelWise</a></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a id="af1d7304d6e6163abeeb2014342ee5d4e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af1d7304d6e6163abeeb2014342ee5d4e">&#9670;&nbsp;</a></span>ComputeCorrespondence()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceopen3d_1_1pipelines_1_1odometry.441#aedbb209db60f161c67f478b1582de71a">CorrespondenceSetPixelWise</a> open3d::pipelines::odometry::ComputeCorrespondence </td>
          <td>(</td>
          <td class="paramtype">const Eigen::Matrix3d &amp;&#160;</td>
          <td class="paramname"><em>intrinsic_matrix</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const Eigen::Matrix4d &amp;&#160;</td>
          <td class="paramname"><em>extrinsic</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1geometry_1_1_image.406.delaye">geometry::Image</a> &amp;&#160;</td>
          <td class="paramname"><em>depth_s</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1geometry_1_1_image.406.delaye">geometry::Image</a> &amp;&#160;</td>
          <td class="paramname"><em>depth_t</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1pipelines_1_1odometry_1_1_odo">OdometryOption</a> &amp;&#160;</td>
          <td class="paramname"><em>option</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Function to estimate point to point correspondences from two depth images. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">intrinsic_matrix</td><td>Camera intrinsic parameters. </td></tr>
    <tr><td class="paramname">extrinsic</td><td>Estimation of transform from source to target. </td></tr>
    <tr><td class="paramname">depth_s</td><td>Source depth image. </td></tr>
    <tr><td class="paramname">depth_t</td><td>Target depth image. </td></tr>
    <tr><td class="paramname">option</td><td>Odometry hyper parameters. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A vector of u_s, v_s, u_t, v_t which maps the 2d coordinates of source to target. </dd></dl>

</div>
</div>
<a id="abdb7e9f47f9dd900a0755829a32f1941"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abdb7e9f47f9dd900a0755829a32f1941">&#9670;&nbsp;</a></span>ComputeRGBDOdometry()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::tuple&lt; bool, Eigen::Matrix4d, Eigen::Matrix6d &gt; open3d::pipelines::odometry::ComputeRGBDOdometry </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1geometry_1_1_r_g_b_d_image.37">geometry::RGBDImage</a> &amp;&#160;</td>
          <td class="paramname"><em>source</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1geometry_1_1_r_g_b_d_image.37">geometry::RGBDImage</a> &amp;&#160;</td>
          <td class="paramname"><em>target</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1camera_1_1_pinhole_camera_int">camera::PinholeCameraIntrinsic</a> &amp;&#160;</td>
          <td class="paramname"><em>pinhole_camera_intrinsic</em> = <code><a class="el" href="classopen3d_1_1camera_1_1_pinhole_camera_int">camera::PinholeCameraIntrinsic</a>()</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const Eigen::Matrix4d &amp;&#160;</td>
          <td class="paramname"><em>odo_init</em> = <code>Eigen::Matrix4d::Identity()</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1pipelines_1_1odometry_1_1_r_g">RGBDOdometryJacobian</a> &amp;&#160;</td>
          <td class="paramname"><em>jacobian_method</em> = <code><a class="el" href="classopen3d_1_1pipelines_1_1odometry_1_1_r_g-3">RGBDOdometryJacobianFromHybridTerm</a>()</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1pipelines_1_1odometry_1_1_odo">OdometryOption</a> &amp;&#160;</td>
          <td class="paramname"><em>option</em> = <code><a class="el" href="classopen3d_1_1pipelines_1_1odometry_1_1_odo">OdometryOption</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Function to estimate 6D rigid motion from two RGBD image pairs. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">source</td><td>Source RGBD image. </td></tr>
    <tr><td class="paramname">target</td><td>Target RGBD image. </td></tr>
    <tr><td class="paramname">pinhole_camera_intrinsic</td><td>Camera intrinsic parameters. </td></tr>
    <tr><td class="paramname">odo_init</td><td>Initial 4x4 motion matrix estimation. </td></tr>
    <tr><td class="paramname">jacobian_method</td><td>The odometry Jacobian method to use. </td></tr>
    <tr><td class="paramname">option</td><td>Odometry hyper parameters. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>is_success, 4x4 motion matrix, 6x6 information matrix. </dd></dl>

</div>
</div>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1
</small></address>
</body>

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/namespaceopen3d_1_1pipelines_1_1odometry.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 10:56:26 GMT -->
</html>
