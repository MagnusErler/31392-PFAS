<!-- HTML header for doxygen 1.8.20-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/structopen3d_1_1utility_1_1optional__base.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 10:56:38 GMT -->
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Open3D (C++ API): open3d::utility::optional_base&lt; T &gt; Struct Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js", "TeX/AMSmath.html", "TeX/AMSsymbols.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="../../../../cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-3TQPKGV6Z3"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());
  gtag('config', 'G-3TQPKGV6Z3');
</script>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="open3d_logo.ico"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Open3D (C++ API)
   &#160;<span id="projectnumber">0.17.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.html');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.html','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceopen3d.html">open3d</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1utility.html">utility</a></li><li class="navelem"><a class="el" href="structopen3d_1_1utility_1_1optional__base.45">optional_base</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Data Fields</a>  </div>
  <div class="headertitle">
<div class="title">open3d::utility::optional_base&lt; T &gt; Struct Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_optional_8h_source.html">Optional.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:aab00b85df8f7cbd1066ba041f95dd8cd"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structopen3d_1_1utility_1_1optional__base.45#aab00b85df8f7cbd1066ba041f95dd8cd">optional_base</a> () noexcept</td></tr>
<tr class="separator:aab00b85df8f7cbd1066ba041f95dd8cd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a75ddeb653ea08f15f3b66fd08220669a"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structopen3d_1_1utility_1_1optional__base.45#a75ddeb653ea08f15f3b66fd08220669a">optional_base</a> (const T &amp;v)</td></tr>
<tr class="separator:a75ddeb653ea08f15f3b66fd08220669a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:affe3365a49daa7d3b99c0109078f365e"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structopen3d_1_1utility_1_1optional__base.45#affe3365a49daa7d3b99c0109078f365e">optional_base</a> (T &amp;&amp;v)</td></tr>
<tr class="separator:affe3365a49daa7d3b99c0109078f365e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a72e3867408e555ccfc19eb0c34658291"><td class="memTemplParams" colspan="2">template&lt;class... Args&gt; </td></tr>
<tr class="memitem:a72e3867408e555ccfc19eb0c34658291"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="structopen3d_1_1utility_1_1optional__base.45#a72e3867408e555ccfc19eb0c34658291">optional_base</a> (<a class="el" href="structopen3d_1_1utility_1_1in__place__t.452">in_place_t</a>, Args &amp;&amp;... args)</td></tr>
<tr class="separator:a72e3867408e555ccfc19eb0c34658291"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0e6a8831a26a16c475dd3193df77660d"><td class="memTemplParams" colspan="2">template&lt;class U , class... Args, TR2_OPTIONAL_REQUIRES( std::is_constructible&lt; T, std::initializer_list&lt; U &gt;&gt;) &gt; </td></tr>
<tr class="memitem:a0e6a8831a26a16c475dd3193df77660d"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="structopen3d_1_1utility_1_1optional__base.45#a0e6a8831a26a16c475dd3193df77660d">optional_base</a> (<a class="el" href="structopen3d_1_1utility_1_1in__place__t.452">in_place_t</a>, std::initializer_list&lt; U &gt; il, Args &amp;&amp;... args)</td></tr>
<tr class="separator:a0e6a8831a26a16c475dd3193df77660d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a06f297ca3ca0108ba884dd0afb934dab"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structopen3d_1_1utility_1_1optional__base.45#a06f297ca3ca0108ba884dd0afb934dab">~optional_base</a> ()</td></tr>
<tr class="separator:a06f297ca3ca0108ba884dd0afb934dab"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Data Fields</h2></td></tr>
<tr class="memitem:a09a2ba56694a88624259babdcff9431f"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structopen3d_1_1utility_1_1optional__base.45#a09a2ba56694a88624259babdcff9431f">init_</a></td></tr>
<tr class="separator:a09a2ba56694a88624259babdcff9431f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a57421e299e986994366f0dc73e2735c0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="unionopen3d_1_1utility_1_1storage__t.455.del">storage_t</a>&lt; T &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structopen3d_1_1utility_1_1optional__base.45#a57421e299e986994366f0dc73e2735c0">storage_</a></td></tr>
<tr class="separator:a57421e299e986994366f0dc73e2735c0"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="aab00b85df8f7cbd1066ba041f95dd8cd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aab00b85df8f7cbd1066ba041f95dd8cd">&#9670;&nbsp;</a></span>optional_base() <span class="overload">[1/5]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="structopen3d_1_1utility_1_1optional__base.45">open3d::utility::optional_base</a>&lt; T &gt;::<a class="el" href="structopen3d_1_1utility_1_1optional__base.45">optional_base</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a75ddeb653ea08f15f3b66fd08220669a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a75ddeb653ea08f15f3b66fd08220669a">&#9670;&nbsp;</a></span>optional_base() <span class="overload">[2/5]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="structopen3d_1_1utility_1_1optional__base.45">open3d::utility::optional_base</a>&lt; T &gt;::<a class="el" href="structopen3d_1_1utility_1_1optional__base.45">optional_base</a> </td>
          <td>(</td>
          <td class="paramtype">const T &amp;&#160;</td>
          <td class="paramname"><em>v</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">explicit</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="affe3365a49daa7d3b99c0109078f365e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#affe3365a49daa7d3b99c0109078f365e">&#9670;&nbsp;</a></span>optional_base() <span class="overload">[3/5]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="structopen3d_1_1utility_1_1optional__base.45">open3d::utility::optional_base</a>&lt; T &gt;::<a class="el" href="structopen3d_1_1utility_1_1optional__base.45">optional_base</a> </td>
          <td>(</td>
          <td class="paramtype">T &amp;&amp;&#160;</td>
          <td class="paramname"><em>v</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">explicit</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a72e3867408e555ccfc19eb0c34658291"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a72e3867408e555ccfc19eb0c34658291">&#9670;&nbsp;</a></span>optional_base() <span class="overload">[4/5]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<div class="memtemplate">
template&lt;class... Args&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structopen3d_1_1utility_1_1optional__base.45">open3d::utility::optional_base</a>&lt; T &gt;::<a class="el" href="structopen3d_1_1utility_1_1optional__base.45">optional_base</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structopen3d_1_1utility_1_1in__place__t.452">in_place_t</a>&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Args &amp;&amp;...&#160;</td>
          <td class="paramname"><em>args</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">explicit</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a0e6a8831a26a16c475dd3193df77660d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0e6a8831a26a16c475dd3193df77660d">&#9670;&nbsp;</a></span>optional_base() <span class="overload">[5/5]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<div class="memtemplate">
template&lt;class U , class... Args, TR2_OPTIONAL_REQUIRES( std::is_constructible&lt; T, std::initializer_list&lt; U &gt;&gt;) &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structopen3d_1_1utility_1_1optional__base.45">open3d::utility::optional_base</a>&lt; T &gt;::<a class="el" href="structopen3d_1_1utility_1_1optional__base.45">optional_base</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structopen3d_1_1utility_1_1in__place__t.452">in_place_t</a>&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::initializer_list&lt; U &gt;&#160;</td>
          <td class="paramname"><em>il</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Args &amp;&amp;...&#160;</td>
          <td class="paramname"><em>args</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">explicit</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a06f297ca3ca0108ba884dd0afb934dab"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a06f297ca3ca0108ba884dd0afb934dab">&#9670;&nbsp;</a></span>~optional_base()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structopen3d_1_1utility_1_1optional__base.45">open3d::utility::optional_base</a>&lt; T &gt;::~<a class="el" href="structopen3d_1_1utility_1_1optional__base.45">optional_base</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Field Documentation</h2>
<a id="a09a2ba56694a88624259babdcff9431f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a09a2ba56694a88624259babdcff9431f">&#9670;&nbsp;</a></span>init_</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="structopen3d_1_1utility_1_1optional__base.45">open3d::utility::optional_base</a>&lt; T &gt;::init_</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a57421e299e986994366f0dc73e2735c0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a57421e299e986994366f0dc73e2735c0">&#9670;&nbsp;</a></span>storage_</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="unionopen3d_1_1utility_1_1storage__t.455.del">storage_t</a>&lt;T&gt; <a class="el" href="structopen3d_1_1utility_1_1optional__base.45">open3d::utility::optional_base</a>&lt; T &gt;::storage_</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<hr/>The documentation for this struct was generated from the following file:<ul>
<li>/home/runner/work/Open3D/Open3D/cpp/open3d/utility/<a class="el" href="_optional_8h_source.html">Optional.h (9238339 (Tue Mar 14 18:49:09 2023 -0700))</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1
</small></address>
</body>

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/structopen3d_1_1utility_1_1optional__base.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 10:56:39 GMT -->
</html>
