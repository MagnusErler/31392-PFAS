<!-- HTML header for doxygen 1.8.20-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/classopen3d_1_1t_1_1io_1_1_char_vector.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 10:53:37 GMT -->
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Open3D (C++ API): open3d::t::io::CharVector Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js", "TeX/AMSmath.html", "TeX/AMSsymbols.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="../../../../cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-3TQPKGV6Z3"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());
  gtag('config', 'G-3TQPKGV6Z3');
</script>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="open3d_logo.ico"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Open3D (C++ API)
   &#160;<span id="projectnumber">0.17.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.html');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.html','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceopen3d.html">open3d</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1t.html">t</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1t_1_1io.html">io</a></li><li class="navelem"><a class="el" href="classopen3d_1_1t_1_1io_1_1_char_vector.346.d">CharVector</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">open3d::t::io::CharVector Class Reference</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:aa8d93b60b8ba8bc0860e807594cb81bb"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1io_1_1_char_vector.346.d#aa8d93b60b8ba8bc0860e807594cb81bb">CharVector</a> ()</td></tr>
<tr class="separator:aa8d93b60b8ba8bc0860e807594cb81bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a315886fea72b1d713443f95e9498c12c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1io_1_1_char_vector.346.d#a315886fea72b1d713443f95e9498c12c">CharVector</a> (size_t <a class="el" href="io_2file__format_2_file_p_c_d_8cpp.375.delay#a439227feff9d7f55384e8780cfc2eb82">size</a>)</td></tr>
<tr class="separator:a315886fea72b1d713443f95e9498c12c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a86c3d19e65e2f7cbaff9797aaaf322df"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1io_1_1_char_vector.346.d#a86c3d19e65e2f7cbaff9797aaaf322df">CharVector</a> (size_t <a class="el" href="io_2file__format_2_file_p_c_d_8cpp.375.delay#a439227feff9d7f55384e8780cfc2eb82">size</a>, const char value)</td></tr>
<tr class="separator:a86c3d19e65e2f7cbaff9797aaaf322df"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a156441f3cd28209bccc7ed78c7aadb8f"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a156441f3cd28209bccc7ed78c7aadb8f"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1t_1_1io_1_1_char_vector.346.d">CharVector</a> &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1io_1_1_char_vector.346.d#a156441f3cd28209bccc7ed78c7aadb8f">Append</a> (const T &amp;rhs)</td></tr>
<tr class="separator:a156441f3cd28209bccc7ed78c7aadb8f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8f1b523e4ec1d28d07fb40a0e248d560"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1t_1_1io_1_1_char_vector.346.d">CharVector</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1io_1_1_char_vector.346.d#a8f1b523e4ec1d28d07fb40a0e248d560">Append</a> (const std::string &amp;rhs)</td></tr>
<tr class="separator:a8f1b523e4ec1d28d07fb40a0e248d560"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a154a4a88fc23198eca6705982764ebc2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1t_1_1io_1_1_char_vector.346.d">CharVector</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1io_1_1_char_vector.346.d#a154a4a88fc23198eca6705982764ebc2">Append</a> (const char *rhs)</td></tr>
<tr class="separator:a154a4a88fc23198eca6705982764ebc2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a76f63f20a1b055e704dbe4e2962191cf"><td class="memTemplParams" colspan="2">template&lt;typename InputIt &gt; </td></tr>
<tr class="memitem:a76f63f20a1b055e704dbe4e2962191cf"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1t_1_1io_1_1_char_vector.346.d">CharVector</a> &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1io_1_1_char_vector.346.d#a76f63f20a1b055e704dbe4e2962191cf">Append</a> (InputIt first, InputIt last)</td></tr>
<tr class="separator:a76f63f20a1b055e704dbe4e2962191cf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a74c992a2bbbe1135e42dfe7f256b716e"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a74c992a2bbbe1135e42dfe7f256b716e"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1t_1_1io_1_1_char_vector.346.d">CharVector</a> &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1io_1_1_char_vector.346.d#a74c992a2bbbe1135e42dfe7f256b716e">Append</a> (size_t <a class="el" href="io_2file__format_2_file_p_c_d_8cpp.375.delay#ad43c3812e6d13e0518d9f8b8f463ffcf">count</a>, const T &amp;value)</td></tr>
<tr class="separator:a74c992a2bbbe1135e42dfe7f256b716e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3e397b3bf4f464c27aca2d4c6b7a2c13"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1t_1_1io_1_1_char_vector.346.d">CharVector</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1io_1_1_char_vector.346.d#a3e397b3bf4f464c27aca2d4c6b7a2c13">Append</a> (const <a class="el" href="classopen3d_1_1t_1_1io_1_1_char_vector.346.d">CharVector</a> &amp;other)</td></tr>
<tr class="separator:a3e397b3bf4f464c27aca2d4c6b7a2c13"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a20a05a6dd47e58c0111921e5170f1927"><td class="memItemLeft" align="right" valign="top">std::vector&lt; char &gt;::iterator&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1io_1_1_char_vector.346.d#a20a05a6dd47e58c0111921e5170f1927">Begin</a> ()</td></tr>
<tr class="separator:a20a05a6dd47e58c0111921e5170f1927"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5688aa3b442947c55bda8051a2860378"><td class="memItemLeft" align="right" valign="top">std::vector&lt; char &gt;::iterator&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1io_1_1_char_vector.346.d#a5688aa3b442947c55bda8051a2860378">End</a> ()</td></tr>
<tr class="separator:a5688aa3b442947c55bda8051a2860378"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3109f796fc5dc6a752659d2edf3a4f1a"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1io_1_1_char_vector.346.d#a3109f796fc5dc6a752659d2edf3a4f1a">Size</a> () const</td></tr>
<tr class="separator:a3109f796fc5dc6a752659d2edf3a4f1a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a86c225058c0232ac850465bed6eb3bf2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1io_1_1_char_vector.346.d#a86c225058c0232ac850465bed6eb3bf2">Resize</a> (size_t <a class="el" href="io_2file__format_2_file_p_c_d_8cpp.375.delay#ad43c3812e6d13e0518d9f8b8f463ffcf">count</a>)</td></tr>
<tr class="separator:a86c225058c0232ac850465bed6eb3bf2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a53d5562a0a15566cbfdd1f511252188e"><td class="memItemLeft" align="right" valign="top">char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1io_1_1_char_vector.346.d#a53d5562a0a15566cbfdd1f511252188e">Data</a> ()</td></tr>
<tr class="separator:a53d5562a0a15566cbfdd1f511252188e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2f171bf8d6ea95581d34bf2fba8f43ba"><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1io_1_1_char_vector.346.d#a2f171bf8d6ea95581d34bf2fba8f43ba">Data</a> () const</td></tr>
<tr class="separator:a2f171bf8d6ea95581d34bf2fba8f43ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0ca76564cd30edc9f828d49e6a7aa699"><td class="memItemLeft" align="right" valign="top">char &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1io_1_1_char_vector.346.d#a0ca76564cd30edc9f828d49e6a7aa699">operator[]</a> (size_t index)</td></tr>
<tr class="separator:a0ca76564cd30edc9f828d49e6a7aa699"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5361a4490e6528535118127d4bcfb572"><td class="memItemLeft" align="right" valign="top">const char &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1io_1_1_char_vector.346.d#a5361a4490e6528535118127d4bcfb572">operator[]</a> (size_t index) const</td></tr>
<tr class="separator:a5361a4490e6528535118127d4bcfb572"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="aa8d93b60b8ba8bc0860e807594cb81bb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa8d93b60b8ba8bc0860e807594cb81bb">&#9670;&nbsp;</a></span>CharVector() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">open3d::t::io::CharVector::CharVector </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a315886fea72b1d713443f95e9498c12c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a315886fea72b1d713443f95e9498c12c">&#9670;&nbsp;</a></span>CharVector() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">open3d::t::io::CharVector::CharVector </td>
          <td>(</td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>size</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a86c3d19e65e2f7cbaff9797aaaf322df"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a86c3d19e65e2f7cbaff9797aaaf322df">&#9670;&nbsp;</a></span>CharVector() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">open3d::t::io::CharVector::CharVector </td>
          <td>(</td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char&#160;</td>
          <td class="paramname"><em>value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a154a4a88fc23198eca6705982764ebc2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a154a4a88fc23198eca6705982764ebc2">&#9670;&nbsp;</a></span>Append() <span class="overload">[1/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1t_1_1io_1_1_char_vector.346.d">CharVector</a>&amp; open3d::t::io::CharVector::Append </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>rhs</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a3e397b3bf4f464c27aca2d4c6b7a2c13"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3e397b3bf4f464c27aca2d4c6b7a2c13">&#9670;&nbsp;</a></span>Append() <span class="overload">[2/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1t_1_1io_1_1_char_vector.346.d">CharVector</a>&amp; open3d::t::io::CharVector::Append </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1t_1_1io_1_1_char_vector.346.d">CharVector</a> &amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a8f1b523e4ec1d28d07fb40a0e248d560"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8f1b523e4ec1d28d07fb40a0e248d560">&#9670;&nbsp;</a></span>Append() <span class="overload">[3/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1t_1_1io_1_1_char_vector.346.d">CharVector</a>&amp; open3d::t::io::CharVector::Append </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>rhs</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a156441f3cd28209bccc7ed78c7aadb8f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a156441f3cd28209bccc7ed78c7aadb8f">&#9670;&nbsp;</a></span>Append() <span class="overload">[4/6]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1t_1_1io_1_1_char_vector.346.d">CharVector</a>&amp; open3d::t::io::CharVector::Append </td>
          <td>(</td>
          <td class="paramtype">const T &amp;&#160;</td>
          <td class="paramname"><em>rhs</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a76f63f20a1b055e704dbe4e2962191cf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a76f63f20a1b055e704dbe4e2962191cf">&#9670;&nbsp;</a></span>Append() <span class="overload">[5/6]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename InputIt &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1t_1_1io_1_1_char_vector.346.d">CharVector</a>&amp; open3d::t::io::CharVector::Append </td>
          <td>(</td>
          <td class="paramtype">InputIt&#160;</td>
          <td class="paramname"><em>first</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">InputIt&#160;</td>
          <td class="paramname"><em>last</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a74c992a2bbbe1135e42dfe7f256b716e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a74c992a2bbbe1135e42dfe7f256b716e">&#9670;&nbsp;</a></span>Append() <span class="overload">[6/6]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1t_1_1io_1_1_char_vector.346.d">CharVector</a>&amp; open3d::t::io::CharVector::Append </td>
          <td>(</td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const T &amp;&#160;</td>
          <td class="paramname"><em>value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a20a05a6dd47e58c0111921e5170f1927"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a20a05a6dd47e58c0111921e5170f1927">&#9670;&nbsp;</a></span>Begin()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;char&gt;::iterator open3d::t::io::CharVector::Begin </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a53d5562a0a15566cbfdd1f511252188e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a53d5562a0a15566cbfdd1f511252188e">&#9670;&nbsp;</a></span>Data() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">char* open3d::t::io::CharVector::Data </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a2f171bf8d6ea95581d34bf2fba8f43ba"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2f171bf8d6ea95581d34bf2fba8f43ba">&#9670;&nbsp;</a></span>Data() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const char* open3d::t::io::CharVector::Data </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a5688aa3b442947c55bda8051a2860378"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5688aa3b442947c55bda8051a2860378">&#9670;&nbsp;</a></span>End()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;char&gt;::iterator open3d::t::io::CharVector::End </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a0ca76564cd30edc9f828d49e6a7aa699"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0ca76564cd30edc9f828d49e6a7aa699">&#9670;&nbsp;</a></span>operator[]() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">char&amp; open3d::t::io::CharVector::operator[] </td>
          <td>(</td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a5361a4490e6528535118127d4bcfb572"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5361a4490e6528535118127d4bcfb572">&#9670;&nbsp;</a></span>operator[]() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const char&amp; open3d::t::io::CharVector::operator[] </td>
          <td>(</td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a86c225058c0232ac850465bed6eb3bf2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a86c225058c0232ac850465bed6eb3bf2">&#9670;&nbsp;</a></span>Resize()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::t::io::CharVector::Resize </td>
          <td>(</td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>count</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a3109f796fc5dc6a752659d2edf3a4f1a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3109f796fc5dc6a752659d2edf3a4f1a">&#9670;&nbsp;</a></span>Size()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t open3d::t::io::CharVector::Size </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>/home/runner/work/Open3D/Open3D/cpp/open3d/t/io/<a class="el" href="_numpy_i_o_8cpp.html">NumpyIO.cpp (9238339 (Tue Mar 14 18:49:09 2023 -0700))</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1
</small></address>
</body>

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/classopen3d_1_1t_1_1io_1_1_char_vector.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 10:53:38 GMT -->
</html>
