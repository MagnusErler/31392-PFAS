<!-- HTML header for doxygen 1.8.20-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/t_2io_2file__format_2_file_p_c_d_8cpp.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 10:57:56 GMT -->
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Open3D (C++ API): /home/runner/work/Open3D/Open3D/cpp/open3d/t/io/file_format/FilePCD.cpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js", "TeX/AMSmath.html", "TeX/AMSsymbols.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="../../../../cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-3TQPKGV6Z3"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());
  gtag('config', 'G-3TQPKGV6Z3');
</script>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="open3d_logo.ico"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Open3D (C++ API)
   &#160;<span id="projectnumber">0.17.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.html');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.html','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_df511e5bd85cec96854b39d5e1c27aa8.357.del">cpp</a></li><li class="navelem"><a class="el" href="dir_f8cc15b2217ff526bd336cf17635da2a.358.del">open3d</a></li><li class="navelem"><a class="el" href="dir_98b8f8b2b857e52342ae5921735ee8da.359.del">t</a></li><li class="navelem"><a class="el" href="dir_304f68f570c07d214c9f1cc4f373dc63.35a.del">io</a></li><li class="navelem"><a class="el" href="dir_401d3f419871646c8baef11a58038bff.4e4.del">file_format</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#namespaces">Namespaces</a> &#124;
<a href="#enum-members">Enumerations</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">FilePCD.cpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<h3 class="version">(9238339 (Tue Mar 14 18:49:09 2023 -0700))</h3><div class="textblock"><code>#include &lt;liblzf/lzf.h&gt;</code><br />
<code>#include &lt;cinttypes&gt;</code><br />
<code>#include &lt;cstdint&gt;</code><br />
<code>#include &lt;cstdio&gt;</code><br />
<code>#include &lt;sstream&gt;</code><br />
<code>#include &quot;<a class="el" href="_dtype_8h_source.html">open3d/core/Dtype.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_parallel_for_8h_source.html">open3d/core/ParallelFor.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_tensor_8h_source.html">open3d/core/Tensor.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_file_format_i_o_8h_source.html">open3d/io/FileFormatIO.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="t_2io_2_point_cloud_i_o_8h_source.4ed.delaye">open3d/t/io/PointCloudIO.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_file_system_8h_source.html">open3d/utility/FileSystem.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="utility_2_helper_8h_source.html">open3d/utility/Helper.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_logging_8h_source.html">open3d/utility/Logging.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_progress_reporters_8h_source.html">open3d/utility/ProgressReporters.h</a>&quot;</code><br />
</div><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structopen3d_1_1t_1_1io_1_1_p_c_l_point_fiel">open3d::t::io::PCLPointField</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structopen3d_1_1t_1_1io_1_1_p_c_d_header.340">open3d::t::io::PCDHeader</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structopen3d_1_1t_1_1io_1_1_read_attribute_p">open3d::t::io::ReadAttributePtr</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structopen3d_1_1t_1_1io_1_1_write_attribute_">open3d::t::io::WriteAttributePtr</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"></a>
Namespaces</h2></td></tr>
<tr class="memitem:namespaceopen3d"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopen3d.html">open3d</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespaceopen3d_1_1t"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t.html">open3d::t</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespaceopen3d_1_1t_1_1io"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1io.html">open3d::t::io</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"></a>
Enumerations</h2></td></tr>
<tr class="memitem:aa86316cd0ba2b17ce60598aa2d617bdd"><td class="memItemLeft" align="right" valign="top">enum class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1io.html#aa86316cd0ba2b17ce60598aa2d617bdd">open3d::t::io::PCDDataType</a> { <a class="el" href="namespaceopen3d_1_1t_1_1io.html#aa86316cd0ba2b17ce60598aa2d617bddad2cd8253361a9c732d21ca1d336599cc">open3d::t::io::ASCII</a> = 0
, <a class="el" href="namespaceopen3d_1_1t_1_1io.html#aa86316cd0ba2b17ce60598aa2d617bdda98ad0e8750ae10ad556ed7a62affb452">open3d::t::io::BINARY</a> = 1
, <a class="el" href="namespaceopen3d_1_1t_1_1io.html#aa86316cd0ba2b17ce60598aa2d617bdda815a7671f914054e7e2e429ed774e0a6">open3d::t::io::BINARY_COMPRESSED</a> = 2
 }</td></tr>
<tr class="separator:aa86316cd0ba2b17ce60598aa2d617bdd"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a18d3b65d2c95a86d4ec8a9b322ed030f"><td class="memItemLeft" align="right" valign="top">template&lt;&gt; </td></tr>
<tr class="memitem:a18d3b65d2c95a86d4ec8a9b322ed030f"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1io.html#a18d3b65d2c95a86d4ec8a9b322ed030f">open3d::t::io::UnpackASCIIPCDElement&lt; float &gt;</a> (float &amp;data, const char *data_ptr)</td></tr>
<tr class="separator:a18d3b65d2c95a86d4ec8a9b322ed030f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adf158f370c21c8546d076699d0f09685"><td class="memItemLeft" align="right" valign="top">template&lt;&gt; </td></tr>
<tr class="memitem:adf158f370c21c8546d076699d0f09685"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1io.html#adf158f370c21c8546d076699d0f09685">open3d::t::io::UnpackASCIIPCDElement&lt; double &gt;</a> (double &amp;data, const char *data_ptr)</td></tr>
<tr class="separator:adf158f370c21c8546d076699d0f09685"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0a3072f86a49b2932da1acba5e1a6082"><td class="memItemLeft" align="right" valign="top">template&lt;&gt; </td></tr>
<tr class="memitem:a0a3072f86a49b2932da1acba5e1a6082"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1io.html#a0a3072f86a49b2932da1acba5e1a6082">open3d::t::io::UnpackASCIIPCDElement&lt; std::int8_t &gt;</a> (std::int8_t &amp;data, const char *data_ptr)</td></tr>
<tr class="separator:a0a3072f86a49b2932da1acba5e1a6082"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0a231272f77af503aa4e720cdfbfaeab"><td class="memItemLeft" align="right" valign="top">template&lt;&gt; </td></tr>
<tr class="memitem:a0a231272f77af503aa4e720cdfbfaeab"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1io.html#a0a231272f77af503aa4e720cdfbfaeab">open3d::t::io::UnpackASCIIPCDElement&lt; std::int16_t &gt;</a> (std::int16_t &amp;data, const char *data_ptr)</td></tr>
<tr class="separator:a0a231272f77af503aa4e720cdfbfaeab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7d4fbaec888dc97a9f86811bb33c88d1"><td class="memItemLeft" align="right" valign="top">template&lt;&gt; </td></tr>
<tr class="memitem:a7d4fbaec888dc97a9f86811bb33c88d1"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1io.html#a7d4fbaec888dc97a9f86811bb33c88d1">open3d::t::io::UnpackASCIIPCDElement&lt; std::int32_t &gt;</a> (std::int32_t &amp;data, const char *data_ptr)</td></tr>
<tr class="separator:a7d4fbaec888dc97a9f86811bb33c88d1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a07d797897151a33cffc6418701a8a3"><td class="memItemLeft" align="right" valign="top">template&lt;&gt; </td></tr>
<tr class="memitem:a6a07d797897151a33cffc6418701a8a3"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1io.html#a6a07d797897151a33cffc6418701a8a3">open3d::t::io::UnpackASCIIPCDElement&lt; std::int64_t &gt;</a> (std::int64_t &amp;data, const char *data_ptr)</td></tr>
<tr class="separator:a6a07d797897151a33cffc6418701a8a3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0bdd7f95ceee29ca7fc587a1e3526296"><td class="memItemLeft" align="right" valign="top">template&lt;&gt; </td></tr>
<tr class="memitem:a0bdd7f95ceee29ca7fc587a1e3526296"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1io.html#a0bdd7f95ceee29ca7fc587a1e3526296">open3d::t::io::UnpackASCIIPCDElement&lt; std::uint8_t &gt;</a> (std::uint8_t &amp;data, const char *data_ptr)</td></tr>
<tr class="separator:a0bdd7f95ceee29ca7fc587a1e3526296"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a228aef6635c25fa888e727230034b916"><td class="memItemLeft" align="right" valign="top">template&lt;&gt; </td></tr>
<tr class="memitem:a228aef6635c25fa888e727230034b916"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1io.html#a228aef6635c25fa888e727230034b916">open3d::t::io::UnpackASCIIPCDElement&lt; std::uint16_t &gt;</a> (std::uint16_t &amp;data, const char *data_ptr)</td></tr>
<tr class="separator:a228aef6635c25fa888e727230034b916"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1df6be0d9533b51426adbef085d64c8d"><td class="memItemLeft" align="right" valign="top">template&lt;&gt; </td></tr>
<tr class="memitem:a1df6be0d9533b51426adbef085d64c8d"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1io.html#a1df6be0d9533b51426adbef085d64c8d">open3d::t::io::UnpackASCIIPCDElement&lt; std::uint32_t &gt;</a> (std::uint32_t &amp;data, const char *data_ptr)</td></tr>
<tr class="separator:a1df6be0d9533b51426adbef085d64c8d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9fa66549f69981c5776645f7833d7f07"><td class="memItemLeft" align="right" valign="top">template&lt;&gt; </td></tr>
<tr class="memitem:a9fa66549f69981c5776645f7833d7f07"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1io.html#a9fa66549f69981c5776645f7833d7f07">open3d::t::io::UnpackASCIIPCDElement&lt; std::uint64_t &gt;</a> (std::uint64_t &amp;data, const char *data_ptr)</td></tr>
<tr class="separator:a9fa66549f69981c5776645f7833d7f07"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6280df6f6c9f2120df2145a4cbf87437"><td class="memItemLeft" align="right" valign="top">template&lt;&gt; </td></tr>
<tr class="memitem:a6280df6f6c9f2120df2145a4cbf87437"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1io.html#a6280df6f6c9f2120df2145a4cbf87437">open3d::t::io::ColorToUint8&lt; float &gt;</a> (const float *input_color, std::uint8_t *output_color)</td></tr>
<tr class="separator:a6280df6f6c9f2120df2145a4cbf87437"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3be35159f92d7974fbb7ff8030e4705d"><td class="memItemLeft" align="right" valign="top">template&lt;&gt; </td></tr>
<tr class="memitem:a3be35159f92d7974fbb7ff8030e4705d"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1io.html#a3be35159f92d7974fbb7ff8030e4705d">open3d::t::io::ColorToUint8&lt; double &gt;</a> (const double *input_color, std::uint8_t *output_color)</td></tr>
<tr class="separator:a3be35159f92d7974fbb7ff8030e4705d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a26416f7f0822262fe2640971c0ad8c5e"><td class="memItemLeft" align="right" valign="top">template&lt;&gt; </td></tr>
<tr class="memitem:a26416f7f0822262fe2640971c0ad8c5e"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1io.html#a26416f7f0822262fe2640971c0ad8c5e">open3d::t::io::ColorToUint8&lt; std::uint8_t &gt;</a> (const std::uint8_t *input_color, std::uint8_t *output_color)</td></tr>
<tr class="separator:a26416f7f0822262fe2640971c0ad8c5e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7a7d170991dc7fc9745a96eb9a072484"><td class="memItemLeft" align="right" valign="top">template&lt;&gt; </td></tr>
<tr class="memitem:a7a7d170991dc7fc9745a96eb9a072484"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1io.html#a7a7d170991dc7fc9745a96eb9a072484">open3d::t::io::ColorToUint8&lt; std::uint16_t &gt;</a> (const std::uint16_t *input_color, std::uint8_t *output_color)</td></tr>
<tr class="separator:a7a7d170991dc7fc9745a96eb9a072484"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab19d2b0fcd29187aeb944f8be5b0ca54"><td class="memItemLeft" align="right" valign="top">template&lt;&gt; </td></tr>
<tr class="memitem:ab19d2b0fcd29187aeb944f8be5b0ca54"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1io.html#ab19d2b0fcd29187aeb944f8be5b0ca54">open3d::t::io::ColorToUint8&lt; std::uint32_t &gt;</a> (const std::uint32_t *input_color, std::uint8_t *output_color)</td></tr>
<tr class="separator:ab19d2b0fcd29187aeb944f8be5b0ca54"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a288f244d022be69a1782fae27e89d9cc"><td class="memItemLeft" align="right" valign="top">template&lt;&gt; </td></tr>
<tr class="memitem:a288f244d022be69a1782fae27e89d9cc"><td class="memTemplItemLeft" align="right" valign="top">int&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1io.html#a288f244d022be69a1782fae27e89d9cc">open3d::t::io::WriteElementDataToFileASCII&lt; float &gt;</a> (const float &amp;data, FILE *file)</td></tr>
<tr class="separator:a288f244d022be69a1782fae27e89d9cc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acccbaae4ecce84d5faae0dbd9d60d9c5"><td class="memItemLeft" align="right" valign="top">template&lt;&gt; </td></tr>
<tr class="memitem:acccbaae4ecce84d5faae0dbd9d60d9c5"><td class="memTemplItemLeft" align="right" valign="top">int&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1io.html#acccbaae4ecce84d5faae0dbd9d60d9c5">open3d::t::io::WriteElementDataToFileASCII&lt; double &gt;</a> (const double &amp;data, FILE *file)</td></tr>
<tr class="separator:acccbaae4ecce84d5faae0dbd9d60d9c5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac31023951a7cf300c470f5605331d442"><td class="memItemLeft" align="right" valign="top">template&lt;&gt; </td></tr>
<tr class="memitem:ac31023951a7cf300c470f5605331d442"><td class="memTemplItemLeft" align="right" valign="top">int&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1io.html#ac31023951a7cf300c470f5605331d442">open3d::t::io::WriteElementDataToFileASCII&lt; std::int8_t &gt;</a> (const std::int8_t &amp;data, FILE *file)</td></tr>
<tr class="separator:ac31023951a7cf300c470f5605331d442"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab024bebee9859c79ede200b8c9f5e497"><td class="memItemLeft" align="right" valign="top">template&lt;&gt; </td></tr>
<tr class="memitem:ab024bebee9859c79ede200b8c9f5e497"><td class="memTemplItemLeft" align="right" valign="top">int&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1io.html#ab024bebee9859c79ede200b8c9f5e497">open3d::t::io::WriteElementDataToFileASCII&lt; std::int16_t &gt;</a> (const std::int16_t &amp;data, FILE *file)</td></tr>
<tr class="separator:ab024bebee9859c79ede200b8c9f5e497"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a93e4da1813f75ccc935e5d883439379b"><td class="memItemLeft" align="right" valign="top">template&lt;&gt; </td></tr>
<tr class="memitem:a93e4da1813f75ccc935e5d883439379b"><td class="memTemplItemLeft" align="right" valign="top">int&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1io.html#a93e4da1813f75ccc935e5d883439379b">open3d::t::io::WriteElementDataToFileASCII&lt; std::int32_t &gt;</a> (const std::int32_t &amp;data, FILE *file)</td></tr>
<tr class="separator:a93e4da1813f75ccc935e5d883439379b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abfd2af8eed15f2b107c6fb43aa36b8ce"><td class="memItemLeft" align="right" valign="top">template&lt;&gt; </td></tr>
<tr class="memitem:abfd2af8eed15f2b107c6fb43aa36b8ce"><td class="memTemplItemLeft" align="right" valign="top">int&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1io.html#abfd2af8eed15f2b107c6fb43aa36b8ce">open3d::t::io::WriteElementDataToFileASCII&lt; std::int64_t &gt;</a> (const std::int64_t &amp;data, FILE *file)</td></tr>
<tr class="separator:abfd2af8eed15f2b107c6fb43aa36b8ce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a34dc66074e467dba84ec4cb385f91397"><td class="memItemLeft" align="right" valign="top">template&lt;&gt; </td></tr>
<tr class="memitem:a34dc66074e467dba84ec4cb385f91397"><td class="memTemplItemLeft" align="right" valign="top">int&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1io.html#a34dc66074e467dba84ec4cb385f91397">open3d::t::io::WriteElementDataToFileASCII&lt; std::uint8_t &gt;</a> (const std::uint8_t &amp;data, FILE *file)</td></tr>
<tr class="separator:a34dc66074e467dba84ec4cb385f91397"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa548be385f9e05932a2e5a4df69bad5f"><td class="memItemLeft" align="right" valign="top">template&lt;&gt; </td></tr>
<tr class="memitem:aa548be385f9e05932a2e5a4df69bad5f"><td class="memTemplItemLeft" align="right" valign="top">int&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1io.html#aa548be385f9e05932a2e5a4df69bad5f">open3d::t::io::WriteElementDataToFileASCII&lt; std::uint16_t &gt;</a> (const std::uint16_t &amp;data, FILE *file)</td></tr>
<tr class="separator:aa548be385f9e05932a2e5a4df69bad5f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a80663feff6154d3829ec1569f7f2298b"><td class="memItemLeft" align="right" valign="top">template&lt;&gt; </td></tr>
<tr class="memitem:a80663feff6154d3829ec1569f7f2298b"><td class="memTemplItemLeft" align="right" valign="top">int&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1io.html#a80663feff6154d3829ec1569f7f2298b">open3d::t::io::WriteElementDataToFileASCII&lt; std::uint32_t &gt;</a> (const std::uint32_t &amp;data, FILE *file)</td></tr>
<tr class="separator:a80663feff6154d3829ec1569f7f2298b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0f63569c43e51e4ba329c5da7f761cb0"><td class="memItemLeft" align="right" valign="top">template&lt;&gt; </td></tr>
<tr class="memitem:a0f63569c43e51e4ba329c5da7f761cb0"><td class="memTemplItemLeft" align="right" valign="top">int&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1io.html#a0f63569c43e51e4ba329c5da7f761cb0">open3d::t::io::WriteElementDataToFileASCII&lt; std::uint64_t &gt;</a> (const std::uint64_t &amp;data, FILE *file)</td></tr>
<tr class="separator:a0f63569c43e51e4ba329c5da7f761cb0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeb8a7cec71090ecde1955290e010440d"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1io.html#aeb8a7cec71090ecde1955290e010440d">open3d::t::io::ReadPointCloudFromPCD</a> (const std::string &amp;filename, t::geometry::PointCloud &amp;pointcloud, const ReadPointCloudOption &amp;params)</td></tr>
<tr class="separator:aeb8a7cec71090ecde1955290e010440d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a66a1a65375f11dc583f5cfb241e0880d"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1io.html#a66a1a65375f11dc583f5cfb241e0880d">open3d::t::io::WritePointCloudToPCD</a> (const std::string &amp;filename, const geometry::PointCloud &amp;pointcloud, const WritePointCloudOption &amp;params)</td></tr>
<tr class="separator:a66a1a65375f11dc583f5cfb241e0880d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1
</small></address>
</body>

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/t_2io_2file__format_2_file_p_c_d_8cpp.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 10:57:56 GMT -->
</html>
