<!-- HTML header for doxygen 1.8.20-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/classopen3d_1_1visualization_1_1rendering_1_1_filament_scene.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 11:01:43 GMT -->
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Open3D (C++ API): open3d::visualization::rendering::FilamentScene Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js", "TeX/AMSmath.html", "TeX/AMSsymbols.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="../../../../cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-3TQPKGV6Z3"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());
  gtag('config', 'G-3TQPKGV6Z3');
</script>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="open3d_logo.ico"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Open3D (C++ API)
   &#160;<span id="projectnumber">0.17.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.html');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.html','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceopen3d.html">open3d</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1visualization.html">visualization</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1visualization_1_1renderin">rendering</a></li><li class="navelem"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-22">FilamentScene</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">open3d::visualization::rendering::FilamentScene Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_filament_scene_8h_source.html">FilamentScene.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for open3d::visualization::rendering::FilamentScene:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classopen3d_1_1visualization_1_1rendering_1_-52" usemap="#open3d::visualization::rendering::FilamentScene_map" alt=""/>
  <map id="open3d::visualization::rendering::FilamentScene_map" name="open3d::visualization::rendering::FilamentScene_map">
<area href="classopen3d_1_1visualization_1_1rendering_1_-34" alt="open3d::visualization::rendering::Scene" shape="rect" coords="0,0,279,24"/>
  </map>
</div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:ae324facc63aed0eb315a2e5ce04d27cc"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-22#ae324facc63aed0eb315a2e5ce04d27cc">Transform</a> = Eigen::Transform&lt; float, 3, Eigen::Affine &gt;</td></tr>
<tr class="separator:ae324facc63aed0eb315a2e5ce04d27cc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_types_classopen3d_1_1visualization_1_1rendering_1_1_scene"><td colspan="2" onclick="javascript:toggleInherit('pub_types_classopen3d_1_1visualization_1_1rendering_1_1_scene')"><img src="closed.png" alt="-"/>&#160;Public Types inherited from <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34">open3d::visualization::rendering::Scene</a></td></tr>
<tr class="memitem:a387adee0ccffd4754260c6809d03f137 inherit pub_types_classopen3d_1_1visualization_1_1rendering_1_1_scene"><td class="memItemLeft" align="right" valign="top">enum class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34#a387adee0ccffd4754260c6809d03f137">GroundPlane</a> { <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34#a387adee0ccffd4754260c6809d03f137a27db3b98d01e664c17a6620b222c6469">XZ</a>
, <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34#a387adee0ccffd4754260c6809d03f137a74c53bcd3dcb2bb79993b2fec37d362a">XY</a>
, <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34#a387adee0ccffd4754260c6809d03f137affa4ba973372c3650fd0881abeca6512">YZ</a>
 }</td></tr>
<tr class="separator:a387adee0ccffd4754260c6809d03f137 inherit pub_types_classopen3d_1_1visualization_1_1rendering_1_1_scene"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adb7ad66c42d322f2fee41424bd42ff95 inherit pub_types_classopen3d_1_1visualization_1_1rendering_1_1_scene"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34#adb7ad66c42d322f2fee41424bd42ff95">Transform</a> = Eigen::Transform&lt; float, 3, Eigen::Affine &gt;</td></tr>
<tr class="separator:adb7ad66c42d322f2fee41424bd42ff95 inherit pub_types_classopen3d_1_1visualization_1_1rendering_1_1_scene"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:abc64f6676c50205024a018ec6e672936"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-22#abc64f6676c50205024a018ec6e672936">FilamentScene</a> (filament::Engine &amp;engine, <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-21">FilamentResourceManager</a> &amp;resource_mgr, <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-31">Renderer</a> &amp;renderer)</td></tr>
<tr class="separator:abc64f6676c50205024a018ec6e672936"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a187426698b8898bf84671491f6ac89f8"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-22#a187426698b8898bf84671491f6ac89f8">~FilamentScene</a> ()</td></tr>
<tr class="separator:a187426698b8898bf84671491f6ac89f8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a99ff8b567bcb967e6c31aac82d01eb2e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34">Scene</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-22#a99ff8b567bcb967e6c31aac82d01eb2e">Copy</a> () override</td></tr>
<tr class="separator:a99ff8b567bcb967e6c31aac82d01eb2e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6db7478a6f699edb6bb1853c9e926d7c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceopen3d_1_1visualization_1_1renderin#ae84c7ee53263cf103c77849661801ca3">ViewHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-22#a6db7478a6f699edb6bb1853c9e926d7c">AddView</a> (std::int32_t x, std::int32_t y, std::uint32_t w, std::uint32_t h) override</td></tr>
<tr class="separator:a6db7478a6f699edb6bb1853c9e926d7c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a941de5f7cba66eb57e78c0178eb3928f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-35">View</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-22#a941de5f7cba66eb57e78c0178eb3928f">GetView</a> (const <a class="el" href="namespaceopen3d_1_1visualization_1_1renderin#ae84c7ee53263cf103c77849661801ca3">ViewHandle</a> &amp;view_id) const override</td></tr>
<tr class="separator:a941de5f7cba66eb57e78c0178eb3928f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ace9c10657b3bbb93f1d742d873c78800"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-22#ace9c10657b3bbb93f1d742d873c78800">SetViewActive</a> (const <a class="el" href="namespaceopen3d_1_1visualization_1_1renderin#ae84c7ee53263cf103c77849661801ca3">ViewHandle</a> &amp;view_id, bool is_active) override</td></tr>
<tr class="separator:ace9c10657b3bbb93f1d742d873c78800"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a99cccfacfe9594c3177697ca886fa2e6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-22#a99cccfacfe9594c3177697ca886fa2e6">SetRenderOnce</a> (const <a class="el" href="namespaceopen3d_1_1visualization_1_1renderin#ae84c7ee53263cf103c77849661801ca3">ViewHandle</a> &amp;view_id) override</td></tr>
<tr class="separator:a99cccfacfe9594c3177697ca886fa2e6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8daae0466af612d5bbbaf200cc747e5a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-22#a8daae0466af612d5bbbaf200cc747e5a">RemoveView</a> (const <a class="el" href="namespaceopen3d_1_1visualization_1_1renderin#ae84c7ee53263cf103c77849661801ca3">ViewHandle</a> &amp;view_id) override</td></tr>
<tr class="separator:a8daae0466af612d5bbbaf200cc747e5a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9b9fd90bc93985a5038a113baf3550dc"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-22#a9b9fd90bc93985a5038a113baf3550dc">AddCamera</a> (const std::string &amp;camera_name, std::shared_ptr&lt; <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-3">Camera</a> &gt; cam) override</td></tr>
<tr class="separator:a9b9fd90bc93985a5038a113baf3550dc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aee4f7f2f2c1ee517b1a0ff3f3103796a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-22#aee4f7f2f2c1ee517b1a0ff3f3103796a">RemoveCamera</a> (const std::string &amp;camera_name) override</td></tr>
<tr class="separator:aee4f7f2f2c1ee517b1a0ff3f3103796a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1ccd7d8473b96ef570d3e2d791b87801"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-22#a1ccd7d8473b96ef570d3e2d791b87801">SetActiveCamera</a> (const std::string &amp;camera_name) override</td></tr>
<tr class="separator:a1ccd7d8473b96ef570d3e2d791b87801"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac54b362ed90298373d7f95ed8dbcaae5"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-22#ac54b362ed90298373d7f95ed8dbcaae5">AddGeometry</a> (const std::string &amp;object_name, const <a class="el" href="classopen3d_1_1geometry_1_1_geometry3_d.402">geometry::Geometry3D</a> &amp;geometry, const <a class="el" href="structopen3d_1_1visualization_1_1rendering_1-3">MaterialRecord</a> &amp;material, const std::string &amp;downsampled_name=&quot;&quot;, size_t downsample_threshold=SIZE_MAX) override</td></tr>
<tr class="separator:ac54b362ed90298373d7f95ed8dbcaae5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad251b58b61e45554d51fcfb6c8f3aab0"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-22#ad251b58b61e45554d51fcfb6c8f3aab0">AddGeometry</a> (const std::string &amp;object_name, const <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36">t::geometry::Geometry</a> &amp;geometry, const <a class="el" href="structopen3d_1_1visualization_1_1rendering_1-3">MaterialRecord</a> &amp;material, const std::string &amp;downsampled_name=&quot;&quot;, size_t downsample_threshold=SIZE_MAX) override</td></tr>
<tr class="separator:ad251b58b61e45554d51fcfb6c8f3aab0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af6968fbfeb7701c17a83e52c6275a76a"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-22#af6968fbfeb7701c17a83e52c6275a76a">AddGeometry</a> (const std::string &amp;object_name, const <a class="el" href="structopen3d_1_1visualization_1_1rendering_1">TriangleMeshModel</a> &amp;model) override</td></tr>
<tr class="separator:af6968fbfeb7701c17a83e52c6275a76a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af4d95fdea4a06f97052576cb1f0f9017"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-22#af4d95fdea4a06f97052576cb1f0f9017">HasGeometry</a> (const std::string &amp;object_name) const override</td></tr>
<tr class="separator:af4d95fdea4a06f97052576cb1f0f9017"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac5dcf22cd541d80f9c98b0f2497f1b78"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-22#ac5dcf22cd541d80f9c98b0f2497f1b78">UpdateGeometry</a> (const std::string &amp;object_name, const <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_point_cloud">t::geometry::PointCloud</a> &amp;point_cloud, uint32_t update_flags) override</td></tr>
<tr class="separator:ac5dcf22cd541d80f9c98b0f2497f1b78"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5fc801273e45d1b2e3558df72612d8f9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-22#a5fc801273e45d1b2e3558df72612d8f9">RemoveGeometry</a> (const std::string &amp;object_name) override</td></tr>
<tr class="separator:a5fc801273e45d1b2e3558df72612d8f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acff5abc18befb4c69d452418d3538cee"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-22#acff5abc18befb4c69d452418d3538cee">ShowGeometry</a> (const std::string &amp;object_name, bool show) override</td></tr>
<tr class="separator:acff5abc18befb4c69d452418d3538cee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a56a142cf8d44f90473e59edf315911"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-22#a6a56a142cf8d44f90473e59edf315911">GeometryIsVisible</a> (const std::string &amp;object_name) override</td></tr>
<tr class="separator:a6a56a142cf8d44f90473e59edf315911"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a256c36cf9d6d3d1f2048ee6b09f74efe"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-22#a256c36cf9d6d3d1f2048ee6b09f74efe">SetGeometryTransform</a> (const std::string &amp;object_name, const <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-22#ae324facc63aed0eb315a2e5ce04d27cc">Transform</a> &amp;transform) override</td></tr>
<tr class="separator:a256c36cf9d6d3d1f2048ee6b09f74efe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a56e288fcd8320577bc89088cc91d99cc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-22#ae324facc63aed0eb315a2e5ce04d27cc">Transform</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-22#a56e288fcd8320577bc89088cc91d99cc">GetGeometryTransform</a> (const std::string &amp;object_name) override</td></tr>
<tr class="separator:a56e288fcd8320577bc89088cc91d99cc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a52c47d710bbb261ea72949eb1c7c0fe9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1geometry_1_1_axis_aligned_bou">geometry::AxisAlignedBoundingBox</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-22#a52c47d710bbb261ea72949eb1c7c0fe9">GetGeometryBoundingBox</a> (const std::string &amp;object_name) override</td></tr>
<tr class="separator:a52c47d710bbb261ea72949eb1c7c0fe9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adf6c9d437fa6adcc3f2920ed7c4d36b8"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-22#adf6c9d437fa6adcc3f2920ed7c4d36b8">GeometryShadows</a> (const std::string &amp;object_name, bool cast_shadows, bool receive_shadows) override</td></tr>
<tr class="separator:adf6c9d437fa6adcc3f2920ed7c4d36b8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9c8519f428865278c5afe2de39488105"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-22#a9c8519f428865278c5afe2de39488105">SetGeometryCulling</a> (const std::string &amp;object_name, bool enable) override</td></tr>
<tr class="separator:a9c8519f428865278c5afe2de39488105"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acc317e305e568da70ed4a1ff5f56362e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-22#acc317e305e568da70ed4a1ff5f56362e">SetGeometryPriority</a> (const std::string &amp;object_name, uint8_t priority) override</td></tr>
<tr class="separator:acc317e305e568da70ed4a1ff5f56362e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afb49a487ff744cbbd7c9eeb5223a0e31"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-22#afb49a487ff744cbbd7c9eeb5223a0e31">OverrideMaterial</a> (const std::string &amp;object_name, const <a class="el" href="structopen3d_1_1visualization_1_1rendering_1-3">MaterialRecord</a> &amp;material) override</td></tr>
<tr class="separator:afb49a487ff744cbbd7c9eeb5223a0e31"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad9e50a75e8193b18b72d4784f1befce3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-22#ad9e50a75e8193b18b72d4784f1befce3">QueryGeometry</a> (std::vector&lt; std::string &gt; &amp;geometry) override</td></tr>
<tr class="separator:ad9e50a75e8193b18b72d4784f1befce3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9667039c2992ed7745db51281fbe45a3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-22#a9667039c2992ed7745db51281fbe45a3">OverrideMaterialAll</a> (const <a class="el" href="structopen3d_1_1visualization_1_1rendering_1-3">MaterialRecord</a> &amp;material, bool shader_only=true) override</td></tr>
<tr class="separator:a9667039c2992ed7745db51281fbe45a3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a296577782cea0517ba9ae0e8df5cc2cd"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-22#a296577782cea0517ba9ae0e8df5cc2cd">AddPointLight</a> (const std::string &amp;light_name, const Eigen::Vector3f &amp;<a class="el" href="_triangle_mesh_buffers_8cpp.html#aa332976d803be75beb81e81af320bfcb">color</a>, const Eigen::Vector3f &amp;<a class="el" href="_triangle_mesh_buffers_8cpp.html#ad0325471d482a632d8854fcc0614b217">position</a>, float intensity, float falloff, bool cast_shadows) override</td></tr>
<tr class="separator:a296577782cea0517ba9ae0e8df5cc2cd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afcb5b5848edb8bb6a2c3b22d9abf16fa"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-22#afcb5b5848edb8bb6a2c3b22d9abf16fa">AddSpotLight</a> (const std::string &amp;light_name, const Eigen::Vector3f &amp;<a class="el" href="_triangle_mesh_buffers_8cpp.html#aa332976d803be75beb81e81af320bfcb">color</a>, const Eigen::Vector3f &amp;<a class="el" href="_triangle_mesh_buffers_8cpp.html#ad0325471d482a632d8854fcc0614b217">position</a>, const Eigen::Vector3f &amp;direction, float intensity, float falloff, float inner_cone_angle, float outer_cone_angle, bool cast_shadows) override</td></tr>
<tr class="separator:afcb5b5848edb8bb6a2c3b22d9abf16fa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4bac0dab7e289d9ca2306c83794b2732"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-22#a4bac0dab7e289d9ca2306c83794b2732">AddDirectionalLight</a> (const std::string &amp;light_name, const Eigen::Vector3f &amp;<a class="el" href="_triangle_mesh_buffers_8cpp.html#aa332976d803be75beb81e81af320bfcb">color</a>, const Eigen::Vector3f &amp;direction, float intensity, bool cast_shadows) override</td></tr>
<tr class="separator:a4bac0dab7e289d9ca2306c83794b2732"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6cf0b8a7c33dd3c7d46e4d48f1cdd963"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structopen3d_1_1visualization_1_1rendering_1-5">Light</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-22#a6cf0b8a7c33dd3c7d46e4d48f1cdd963">GetLight</a> (const std::string &amp;light_name) override</td></tr>
<tr class="separator:a6cf0b8a7c33dd3c7d46e4d48f1cdd963"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad2bcfecc53f14af4a03f3dc088fc6faa"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-22#ad2bcfecc53f14af4a03f3dc088fc6faa">RemoveLight</a> (const std::string &amp;light_name) override</td></tr>
<tr class="separator:ad2bcfecc53f14af4a03f3dc088fc6faa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af6a82adecc4d19e079d4d5bba92314f5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-22#af6a82adecc4d19e079d4d5bba92314f5">UpdateLight</a> (const std::string &amp;light_name, const <a class="el" href="structopen3d_1_1visualization_1_1rendering_1-5">Light</a> &amp;light) override</td></tr>
<tr class="separator:af6a82adecc4d19e079d4d5bba92314f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4213233f4d94e01eed76a7c7a4319fa0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-22#a4213233f4d94e01eed76a7c7a4319fa0">UpdateLightColor</a> (const std::string &amp;light_name, const Eigen::Vector3f &amp;<a class="el" href="_triangle_mesh_buffers_8cpp.html#aa332976d803be75beb81e81af320bfcb">color</a>) override</td></tr>
<tr class="separator:a4213233f4d94e01eed76a7c7a4319fa0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a55e4b21e372de86c9d9f969d92e93a21"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-22#a55e4b21e372de86c9d9f969d92e93a21">UpdateLightPosition</a> (const std::string &amp;light_name, const Eigen::Vector3f &amp;<a class="el" href="_triangle_mesh_buffers_8cpp.html#ad0325471d482a632d8854fcc0614b217">position</a>) override</td></tr>
<tr class="separator:a55e4b21e372de86c9d9f969d92e93a21"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0a23b23ccaac5e1602889b789a107aaf"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-22#a0a23b23ccaac5e1602889b789a107aaf">UpdateLightDirection</a> (const std::string &amp;light_name, const Eigen::Vector3f &amp;direction) override</td></tr>
<tr class="separator:a0a23b23ccaac5e1602889b789a107aaf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a124d7267f9ea5fe0c0327edc37472fc4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-22#a124d7267f9ea5fe0c0327edc37472fc4">UpdateLightIntensity</a> (const std::string &amp;light_name, float intensity) override</td></tr>
<tr class="separator:a124d7267f9ea5fe0c0327edc37472fc4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8688c85e131452dcc0e05bf0b31f77b8"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-22#a8688c85e131452dcc0e05bf0b31f77b8">UpdateLightFalloff</a> (const std::string &amp;light_name, float falloff) override</td></tr>
<tr class="separator:a8688c85e131452dcc0e05bf0b31f77b8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae88f50efd3c15587918356185abd9f41"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-22#ae88f50efd3c15587918356185abd9f41">UpdateLightConeAngles</a> (const std::string &amp;light_name, float inner_cone_angle, float outer_cone_angle) override</td></tr>
<tr class="separator:ae88f50efd3c15587918356185abd9f41"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a485ee35b9ee20da2c2efaa93a932e145"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-22#a485ee35b9ee20da2c2efaa93a932e145">EnableLightShadow</a> (const std::string &amp;light_name, bool cast_shadows) override</td></tr>
<tr class="separator:a485ee35b9ee20da2c2efaa93a932e145"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad9f08639acfc848c211e6dda449aacd7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-22#ad9f08639acfc848c211e6dda449aacd7">SetSunLight</a> (const Eigen::Vector3f &amp;direction, const Eigen::Vector3f &amp;<a class="el" href="_triangle_mesh_buffers_8cpp.html#aa332976d803be75beb81e81af320bfcb">color</a>, float intensity) override</td></tr>
<tr class="separator:ad9f08639acfc848c211e6dda449aacd7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a31c39d00cd24293630b4bf2aa33f0ee2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-22#a31c39d00cd24293630b4bf2aa33f0ee2">EnableSunLight</a> (bool enable) override</td></tr>
<tr class="separator:a31c39d00cd24293630b4bf2aa33f0ee2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8c2cbccab50801aad981a0b597827388"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-22#a8c2cbccab50801aad981a0b597827388">EnableSunLightShadows</a> (bool enable) override</td></tr>
<tr class="separator:a8c2cbccab50801aad981a0b597827388"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a20b465f3003da0ef88a9597f34ce764c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-22#a20b465f3003da0ef88a9597f34ce764c">SetSunLightColor</a> (const Eigen::Vector3f &amp;<a class="el" href="_triangle_mesh_buffers_8cpp.html#aa332976d803be75beb81e81af320bfcb">color</a>) override</td></tr>
<tr class="separator:a20b465f3003da0ef88a9597f34ce764c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0e5f7aa8097001a27557c17d388367df"><td class="memItemLeft" align="right" valign="top">Eigen::Vector3f&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-22#a0e5f7aa8097001a27557c17d388367df">GetSunLightColor</a> () override</td></tr>
<tr class="separator:a0e5f7aa8097001a27557c17d388367df"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5072af29d9c6c2d7dc69a3885b3f968c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-22#a5072af29d9c6c2d7dc69a3885b3f968c">SetSunLightIntensity</a> (float intensity) override</td></tr>
<tr class="separator:a5072af29d9c6c2d7dc69a3885b3f968c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a76720ed054099d9cfc2e5c776d7829ff"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-22#a76720ed054099d9cfc2e5c776d7829ff">GetSunLightIntensity</a> () override</td></tr>
<tr class="separator:a76720ed054099d9cfc2e5c776d7829ff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2a48ad4ee5ec52c5e8bb36d407259034"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-22#a2a48ad4ee5ec52c5e8bb36d407259034">SetSunLightDirection</a> (const Eigen::Vector3f &amp;direction) override</td></tr>
<tr class="separator:a2a48ad4ee5ec52c5e8bb36d407259034"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2921984774bdb98b7082354df32af95d"><td class="memItemLeft" align="right" valign="top">Eigen::Vector3f&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-22#a2921984774bdb98b7082354df32af95d">GetSunLightDirection</a> () override</td></tr>
<tr class="separator:a2921984774bdb98b7082354df32af95d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7245b2ce1117ba7f6a4b01dedbde1976"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-22#a7245b2ce1117ba7f6a4b01dedbde1976">SetSunAngularRadius</a> (float radius) override</td></tr>
<tr class="separator:a7245b2ce1117ba7f6a4b01dedbde1976"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9d251d7c13f3785cd68c78c5c7d8f5f1"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-22#a9d251d7c13f3785cd68c78c5c7d8f5f1">SetSunHaloSize</a> (float <a class="el" href="io_2file__format_2_file_p_c_d_8cpp.375.delay#a439227feff9d7f55384e8780cfc2eb82">size</a>) override</td></tr>
<tr class="separator:a9d251d7c13f3785cd68c78c5c7d8f5f1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad4cf05e4de06af4fb5a9194ae68199ba"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-22#ad4cf05e4de06af4fb5a9194ae68199ba">SetSunHaloFalloff</a> (float falloff) override</td></tr>
<tr class="separator:ad4cf05e4de06af4fb5a9194ae68199ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a63fd0470bbc47a1fa34cbd97edde95ac"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-22#a63fd0470bbc47a1fa34cbd97edde95ac">SetIndirectLight</a> (const std::string &amp;ibl_name) override</td></tr>
<tr class="separator:a63fd0470bbc47a1fa34cbd97edde95ac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a127ae617ebac635ef47bc5b4abed15cc"><td class="memItemLeft" align="right" valign="top">const std::string &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-22#a127ae617ebac635ef47bc5b4abed15cc">GetIndirectLight</a> () override</td></tr>
<tr class="separator:a127ae617ebac635ef47bc5b4abed15cc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1645c501ea791a9b4be08e94e924aa50"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-22#a1645c501ea791a9b4be08e94e924aa50">EnableIndirectLight</a> (bool enable) override</td></tr>
<tr class="separator:a1645c501ea791a9b4be08e94e924aa50"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6db623787a4a18c70a37b581b25a37d8"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-22#a6db623787a4a18c70a37b581b25a37d8">SetIndirectLightIntensity</a> (float intensity) override</td></tr>
<tr class="separator:a6db623787a4a18c70a37b581b25a37d8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adb2a66743b726fabd97872da8207af7c"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-22#adb2a66743b726fabd97872da8207af7c">GetIndirectLightIntensity</a> () override</td></tr>
<tr class="separator:adb2a66743b726fabd97872da8207af7c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adb0f85311ca0511610dd1d6714c57272"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-22#adb0f85311ca0511610dd1d6714c57272">SetIndirectLightRotation</a> (const <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-22#ae324facc63aed0eb315a2e5ce04d27cc">Transform</a> &amp;rotation) override</td></tr>
<tr class="separator:adb0f85311ca0511610dd1d6714c57272"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a47d10113994a981c3bf0e60f8e6646ae"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-22#ae324facc63aed0eb315a2e5ce04d27cc">Transform</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-22#a47d10113994a981c3bf0e60f8e6646ae">GetIndirectLightRotation</a> () override</td></tr>
<tr class="separator:a47d10113994a981c3bf0e60f8e6646ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab47bdc32fae3b632d10821a972742726"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-22#ab47bdc32fae3b632d10821a972742726">ShowSkybox</a> (bool show) override</td></tr>
<tr class="separator:ab47bdc32fae3b632d10821a972742726"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a925fc64c011d18865e659381beddbb9f"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-22#a925fc64c011d18865e659381beddbb9f">GetSkyboxVisible</a> () const override</td></tr>
<tr class="separator:a925fc64c011d18865e659381beddbb9f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a35270e7f31ae9c7abd0321da19614baf"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-22#a35270e7f31ae9c7abd0321da19614baf">SetBackground</a> (const Eigen::Vector4f &amp;<a class="el" href="_triangle_mesh_buffers_8cpp.html#aa332976d803be75beb81e81af320bfcb">color</a>, const std::shared_ptr&lt; <a class="el" href="classopen3d_1_1geometry_1_1_image.406.delaye">geometry::Image</a> &gt; <a class="el" href="_filament_renderer_8cpp.html#a60b0c69b08810766e366c4b90031cd0d">image</a>=nullptr) override</td></tr>
<tr class="separator:a35270e7f31ae9c7abd0321da19614baf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af44932029b0f04d6c29c3e5a498cc836"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-22#af44932029b0f04d6c29c3e5a498cc836">SetBackground</a> (<a class="el" href="namespaceopen3d_1_1visualization_1_1renderin#abe77f5a7fbacbb64e93059aa27873e11">TextureHandle</a> <a class="el" href="_filament_renderer_8cpp.html#a60b0c69b08810766e366c4b90031cd0d">image</a>) override</td></tr>
<tr class="separator:af44932029b0f04d6c29c3e5a498cc836"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9cc68f9cad4a9e8852137eb38b6f2b72"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-22#a9cc68f9cad4a9e8852137eb38b6f2b72">EnableGroundPlane</a> (bool enable, <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34#a387adee0ccffd4754260c6809d03f137">GroundPlane</a> plane) override</td></tr>
<tr class="separator:a9cc68f9cad4a9e8852137eb38b6f2b72"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a67ad4dd3291cd3ca42c8f89e7ec9ff40"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-22#a67ad4dd3291cd3ca42c8f89e7ec9ff40">SetGroundPlaneColor</a> (const Eigen::Vector4f &amp;<a class="el" href="_triangle_mesh_buffers_8cpp.html#aa332976d803be75beb81e81af320bfcb">color</a>) override</td></tr>
<tr class="separator:a67ad4dd3291cd3ca42c8f89e7ec9ff40"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a30b5b6a61275db9c4a17d433c281ce3f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-22#a30b5b6a61275db9c4a17d433c281ce3f">RenderToImage</a> (std::function&lt; void(std::shared_ptr&lt; <a class="el" href="classopen3d_1_1geometry_1_1_image.406.delaye">geometry::Image</a> &gt;)&gt; <a class="el" href="_filament_renderer_8cpp.html#a7a0a25a91d8a936306270fd09f1a64a9">callback</a>) override</td></tr>
<tr class="memdesc:a30b5b6a61275db9c4a17d433c281ce3f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Size of image is the size of the window.  <a href="classopen3d_1_1visualization_1_1rendering_1_-22#a30b5b6a61275db9c4a17d433c281ce3f">More...</a><br /></td></tr>
<tr class="separator:a30b5b6a61275db9c4a17d433c281ce3f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a226be1ddcee3fda009fa5c614dbbd5a6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-22#a226be1ddcee3fda009fa5c614dbbd5a6">RenderToDepthImage</a> (std::function&lt; void(std::shared_ptr&lt; <a class="el" href="classopen3d_1_1geometry_1_1_image.406.delaye">geometry::Image</a> &gt;)&gt; <a class="el" href="_filament_renderer_8cpp.html#a7a0a25a91d8a936306270fd09f1a64a9">callback</a>) override</td></tr>
<tr class="memdesc:a226be1ddcee3fda009fa5c614dbbd5a6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Size of image is the size of the window.  <a href="classopen3d_1_1visualization_1_1rendering_1_-22#a226be1ddcee3fda009fa5c614dbbd5a6">More...</a><br /></td></tr>
<tr class="separator:a226be1ddcee3fda009fa5c614dbbd5a6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2bb2dfc3a8edeeb00b29d6f05aed4514"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-22#a2bb2dfc3a8edeeb00b29d6f05aed4514">Draw</a> (filament::Renderer &amp;renderer)</td></tr>
<tr class="separator:a2bb2dfc3a8edeeb00b29d6f05aed4514"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2c8190184b95c5521ac0f4cb2a618a00"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-22#a2c8190184b95c5521ac0f4cb2a618a00">HideRefractedMaterials</a> (bool hide=true)</td></tr>
<tr class="separator:a2c8190184b95c5521ac0f4cb2a618a00"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa8bf055149db0a1af32ee3c344f10bc1"><td class="memItemLeft" align="right" valign="top">filament::Scene *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-22#aa8bf055149db0a1af32ee3c344f10bc1">GetNativeScene</a> () const</td></tr>
<tr class="separator:aa8bf055149db0a1af32ee3c344f10bc1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classopen3d_1_1visualization_1_1rendering_1_1_scene"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classopen3d_1_1visualization_1_1rendering_1_1_scene')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34">open3d::visualization::rendering::Scene</a></td></tr>
<tr class="memitem:a0e787e84299790c1d8d7a8bc182406f6 inherit pub_methods_classopen3d_1_1visualization_1_1rendering_1_1_scene"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34#a0e787e84299790c1d8d7a8bc182406f6">Scene</a> (<a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-31">Renderer</a> &amp;renderer)</td></tr>
<tr class="separator:a0e787e84299790c1d8d7a8bc182406f6 inherit pub_methods_classopen3d_1_1visualization_1_1rendering_1_1_scene"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3e3f675984689e8cb5a9f465703d3697 inherit pub_methods_classopen3d_1_1visualization_1_1rendering_1_1_scene"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34#a3e3f675984689e8cb5a9f465703d3697">~Scene</a> ()=default</td></tr>
<tr class="separator:a3e3f675984689e8cb5a9f465703d3697 inherit pub_methods_classopen3d_1_1visualization_1_1rendering_1_1_scene"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_static_attribs_classopen3d_1_1visualization_1_1rendering_1_1_scene"><td colspan="2" onclick="javascript:toggleInherit('pub_static_attribs_classopen3d_1_1visualization_1_1rendering_1_1_scene')"><img src="closed.png" alt="-"/>&#160;Static Public Attributes inherited from <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34">open3d::visualization::rendering::Scene</a></td></tr>
<tr class="memitem:a45c6171feb8597f88d0d628ad034dedb inherit pub_static_attribs_classopen3d_1_1visualization_1_1rendering_1_1_scene"><td class="memItemLeft" align="right" valign="top">static const uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34#a45c6171feb8597f88d0d628ad034dedb">kUpdatePointsFlag</a> = (1 &lt;&lt; 0)</td></tr>
<tr class="separator:a45c6171feb8597f88d0d628ad034dedb inherit pub_static_attribs_classopen3d_1_1visualization_1_1rendering_1_1_scene"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9c57a28146a28cc202f704f3036ee4b0 inherit pub_static_attribs_classopen3d_1_1visualization_1_1rendering_1_1_scene"><td class="memItemLeft" align="right" valign="top">static const uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34#a9c57a28146a28cc202f704f3036ee4b0">kUpdateNormalsFlag</a> = (1 &lt;&lt; 1)</td></tr>
<tr class="separator:a9c57a28146a28cc202f704f3036ee4b0 inherit pub_static_attribs_classopen3d_1_1visualization_1_1rendering_1_1_scene"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac86c9b58b7df2b8ac3fa470127cbafb6 inherit pub_static_attribs_classopen3d_1_1visualization_1_1rendering_1_1_scene"><td class="memItemLeft" align="right" valign="top">static const uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34#ac86c9b58b7df2b8ac3fa470127cbafb6">kUpdateColorsFlag</a> = (1 &lt;&lt; 2)</td></tr>
<tr class="separator:ac86c9b58b7df2b8ac3fa470127cbafb6 inherit pub_static_attribs_classopen3d_1_1visualization_1_1rendering_1_1_scene"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa3e98ccad3212bb0bf5c880538544bf6 inherit pub_static_attribs_classopen3d_1_1visualization_1_1rendering_1_1_scene"><td class="memItemLeft" align="right" valign="top">static const uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34#aa3e98ccad3212bb0bf5c880538544bf6">kUpdateUv0Flag</a> = (1 &lt;&lt; 3)</td></tr>
<tr class="separator:aa3e98ccad3212bb0bf5c880538544bf6 inherit pub_static_attribs_classopen3d_1_1visualization_1_1rendering_1_1_scene"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_classopen3d_1_1visualization_1_1rendering_1_1_scene"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_classopen3d_1_1visualization_1_1rendering_1_1_scene')"><img src="closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34">open3d::visualization::rendering::Scene</a></td></tr>
<tr class="memitem:a5781d92b8f71a41cd7580c54ecc0cff8 inherit pro_attribs_classopen3d_1_1visualization_1_1rendering_1_1_scene"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-31">Renderer</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34#a5781d92b8f71a41cd7580c54ecc0cff8">renderer_</a></td></tr>
<tr class="separator:a5781d92b8f71a41cd7580c54ecc0cff8 inherit pro_attribs_classopen3d_1_1visualization_1_1rendering_1_1_scene"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Member Typedef Documentation</h2>
<a id="ae324facc63aed0eb315a2e5ce04d27cc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae324facc63aed0eb315a2e5ce04d27cc">&#9670;&nbsp;</a></span>Transform</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-22#ae324facc63aed0eb315a2e5ce04d27cc">open3d::visualization::rendering::FilamentScene::Transform</a> =  Eigen::Transform&lt;float, 3, Eigen::Affine&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="abc64f6676c50205024a018ec6e672936"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abc64f6676c50205024a018ec6e672936">&#9670;&nbsp;</a></span>FilamentScene()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">open3d::visualization::rendering::FilamentScene::FilamentScene </td>
          <td>(</td>
          <td class="paramtype">filament::Engine &amp;&#160;</td>
          <td class="paramname"><em>engine</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-21">FilamentResourceManager</a> &amp;&#160;</td>
          <td class="paramname"><em>resource_mgr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-31">Renderer</a> &amp;&#160;</td>
          <td class="paramname"><em>renderer</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a187426698b8898bf84671491f6ac89f8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a187426698b8898bf84671491f6ac89f8">&#9670;&nbsp;</a></span>~FilamentScene()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">open3d::visualization::rendering::FilamentScene::~FilamentScene </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a9b9fd90bc93985a5038a113baf3550dc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9b9fd90bc93985a5038a113baf3550dc">&#9670;&nbsp;</a></span>AddCamera()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::rendering::FilamentScene::AddCamera </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>camera_name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::shared_ptr&lt; <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-3">Camera</a> &gt;&#160;</td>
          <td class="paramname"><em>cam</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34#a45bbd5aa78dbf835d964689d1d78a6fb">open3d::visualization::rendering::Scene</a>.</p>

</div>
</div>
<a id="a4bac0dab7e289d9ca2306c83794b2732"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4bac0dab7e289d9ca2306c83794b2732">&#9670;&nbsp;</a></span>AddDirectionalLight()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool open3d::visualization::rendering::FilamentScene::AddDirectionalLight </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>light_name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const Eigen::Vector3f &amp;&#160;</td>
          <td class="paramname"><em>color</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const Eigen::Vector3f &amp;&#160;</td>
          <td class="paramname"><em>direction</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>intensity</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>cast_shadows</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34#a48cf8bf304b1cfc30efb5908d4fa453c">open3d::visualization::rendering::Scene</a>.</p>

</div>
</div>
<a id="ac54b362ed90298373d7f95ed8dbcaae5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac54b362ed90298373d7f95ed8dbcaae5">&#9670;&nbsp;</a></span>AddGeometry() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool open3d::visualization::rendering::FilamentScene::AddGeometry </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>object_name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1geometry_1_1_geometry3_d.402">geometry::Geometry3D</a> &amp;&#160;</td>
          <td class="paramname"><em>geometry</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structopen3d_1_1visualization_1_1rendering_1-3">MaterialRecord</a> &amp;&#160;</td>
          <td class="paramname"><em>material</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>downsampled_name</em> = <code>&quot;&quot;</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>downsample_threshold</em> = <code>SIZE_MAX</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34#af497c956cbe5d796453949a67c3cd525">open3d::visualization::rendering::Scene</a>.</p>

</div>
</div>
<a id="ad251b58b61e45554d51fcfb6c8f3aab0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad251b58b61e45554d51fcfb6c8f3aab0">&#9670;&nbsp;</a></span>AddGeometry() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool open3d::visualization::rendering::FilamentScene::AddGeometry </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>object_name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36">t::geometry::Geometry</a> &amp;&#160;</td>
          <td class="paramname"><em>geometry</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structopen3d_1_1visualization_1_1rendering_1-3">MaterialRecord</a> &amp;&#160;</td>
          <td class="paramname"><em>material</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>downsampled_name</em> = <code>&quot;&quot;</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>downsample_threshold</em> = <code>SIZE_MAX</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34#a1b3eafda6f4b9b3ec2fc0ecd1d5a8731">open3d::visualization::rendering::Scene</a>.</p>

</div>
</div>
<a id="af6968fbfeb7701c17a83e52c6275a76a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af6968fbfeb7701c17a83e52c6275a76a">&#9670;&nbsp;</a></span>AddGeometry() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool open3d::visualization::rendering::FilamentScene::AddGeometry </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>object_name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structopen3d_1_1visualization_1_1rendering_1">TriangleMeshModel</a> &amp;&#160;</td>
          <td class="paramname"><em>model</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34#a835921969e168166cdcad893518ab9f4">open3d::visualization::rendering::Scene</a>.</p>

</div>
</div>
<a id="a296577782cea0517ba9ae0e8df5cc2cd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a296577782cea0517ba9ae0e8df5cc2cd">&#9670;&nbsp;</a></span>AddPointLight()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool open3d::visualization::rendering::FilamentScene::AddPointLight </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>light_name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const Eigen::Vector3f &amp;&#160;</td>
          <td class="paramname"><em>color</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const Eigen::Vector3f &amp;&#160;</td>
          <td class="paramname"><em>position</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>intensity</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>falloff</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>cast_shadows</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34#acff08211012a0d93c7e41e395ae9cc71">open3d::visualization::rendering::Scene</a>.</p>

</div>
</div>
<a id="afcb5b5848edb8bb6a2c3b22d9abf16fa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afcb5b5848edb8bb6a2c3b22d9abf16fa">&#9670;&nbsp;</a></span>AddSpotLight()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool open3d::visualization::rendering::FilamentScene::AddSpotLight </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>light_name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const Eigen::Vector3f &amp;&#160;</td>
          <td class="paramname"><em>color</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const Eigen::Vector3f &amp;&#160;</td>
          <td class="paramname"><em>position</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const Eigen::Vector3f &amp;&#160;</td>
          <td class="paramname"><em>direction</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>intensity</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>falloff</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>inner_cone_angle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>outer_cone_angle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>cast_shadows</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34#ad0d56de781816ee9277373b23b5f5c55">open3d::visualization::rendering::Scene</a>.</p>

</div>
</div>
<a id="a6db7478a6f699edb6bb1853c9e926d7c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6db7478a6f699edb6bb1853c9e926d7c">&#9670;&nbsp;</a></span>AddView()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceopen3d_1_1visualization_1_1renderin#ae84c7ee53263cf103c77849661801ca3">ViewHandle</a> open3d::visualization::rendering::FilamentScene::AddView </td>
          <td>(</td>
          <td class="paramtype">std::int32_t&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::int32_t&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::uint32_t&#160;</td>
          <td class="paramname"><em>w</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::uint32_t&#160;</td>
          <td class="paramname"><em>h</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34#a7d04c1051015b6e0f56c38cc1e662226">open3d::visualization::rendering::Scene</a>.</p>

</div>
</div>
<a id="a99ff8b567bcb967e6c31aac82d01eb2e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a99ff8b567bcb967e6c31aac82d01eb2e">&#9670;&nbsp;</a></span>Copy()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34">Scene</a> * open3d::visualization::rendering::FilamentScene::Copy </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34#a4fb32ffe24526d76b1ca558eee1683dc">open3d::visualization::rendering::Scene</a>.</p>

</div>
</div>
<a id="a2bb2dfc3a8edeeb00b29d6f05aed4514"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2bb2dfc3a8edeeb00b29d6f05aed4514">&#9670;&nbsp;</a></span>Draw()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::rendering::FilamentScene::Draw </td>
          <td>(</td>
          <td class="paramtype">filament::Renderer &amp;&#160;</td>
          <td class="paramname"><em>renderer</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a9cc68f9cad4a9e8852137eb38b6f2b72"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9cc68f9cad4a9e8852137eb38b6f2b72">&#9670;&nbsp;</a></span>EnableGroundPlane()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::rendering::FilamentScene::EnableGroundPlane </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>enable</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34#a387adee0ccffd4754260c6809d03f137">GroundPlane</a>&#160;</td>
          <td class="paramname"><em>plane</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34#a8c131c7c5a3bfa8d11146c991ed747e1">open3d::visualization::rendering::Scene</a>.</p>

</div>
</div>
<a id="a1645c501ea791a9b4be08e94e924aa50"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1645c501ea791a9b4be08e94e924aa50">&#9670;&nbsp;</a></span>EnableIndirectLight()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::rendering::FilamentScene::EnableIndirectLight </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>enable</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34#ad173e5ecfef534e5736b33b3b5e0f7ea">open3d::visualization::rendering::Scene</a>.</p>

</div>
</div>
<a id="a485ee35b9ee20da2c2efaa93a932e145"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a485ee35b9ee20da2c2efaa93a932e145">&#9670;&nbsp;</a></span>EnableLightShadow()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::rendering::FilamentScene::EnableLightShadow </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>light_name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>cast_shadows</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34#a8088a7f16134d522e05227399245b43b">open3d::visualization::rendering::Scene</a>.</p>

</div>
</div>
<a id="a31c39d00cd24293630b4bf2aa33f0ee2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a31c39d00cd24293630b4bf2aa33f0ee2">&#9670;&nbsp;</a></span>EnableSunLight()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::rendering::FilamentScene::EnableSunLight </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>enable</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34#adaa60dada2525f9bc65bbade39f5babc">open3d::visualization::rendering::Scene</a>.</p>

</div>
</div>
<a id="a8c2cbccab50801aad981a0b597827388"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8c2cbccab50801aad981a0b597827388">&#9670;&nbsp;</a></span>EnableSunLightShadows()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::rendering::FilamentScene::EnableSunLightShadows </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>enable</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34#a46005f4c9ec27448e35ebe2f2c9c38d7">open3d::visualization::rendering::Scene</a>.</p>

</div>
</div>
<a id="a6a56a142cf8d44f90473e59edf315911"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6a56a142cf8d44f90473e59edf315911">&#9670;&nbsp;</a></span>GeometryIsVisible()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool open3d::visualization::rendering::FilamentScene::GeometryIsVisible </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>object_name</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34#a231ca52a8c1043ff41df64164a97f688">open3d::visualization::rendering::Scene</a>.</p>

</div>
</div>
<a id="adf6c9d437fa6adcc3f2920ed7c4d36b8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adf6c9d437fa6adcc3f2920ed7c4d36b8">&#9670;&nbsp;</a></span>GeometryShadows()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::rendering::FilamentScene::GeometryShadows </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>object_name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>cast_shadows</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>receive_shadows</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34#a04a6aa3667406b3a722d2450d0cb713b">open3d::visualization::rendering::Scene</a>.</p>

</div>
</div>
<a id="a52c47d710bbb261ea72949eb1c7c0fe9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a52c47d710bbb261ea72949eb1c7c0fe9">&#9670;&nbsp;</a></span>GetGeometryBoundingBox()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1geometry_1_1_axis_aligned_bou">geometry::AxisAlignedBoundingBox</a> open3d::visualization::rendering::FilamentScene::GetGeometryBoundingBox </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>object_name</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34#a933c88be0683411c887953cd9e80a243">open3d::visualization::rendering::Scene</a>.</p>

</div>
</div>
<a id="a56e288fcd8320577bc89088cc91d99cc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a56e288fcd8320577bc89088cc91d99cc">&#9670;&nbsp;</a></span>GetGeometryTransform()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-22#ae324facc63aed0eb315a2e5ce04d27cc">FilamentScene::Transform</a> open3d::visualization::rendering::FilamentScene::GetGeometryTransform </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>object_name</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34#a066d14b371a5bc122abd5dd9a900d496">open3d::visualization::rendering::Scene</a>.</p>

</div>
</div>
<a id="a127ae617ebac635ef47bc5b4abed15cc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a127ae617ebac635ef47bc5b4abed15cc">&#9670;&nbsp;</a></span>GetIndirectLight()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const std::string &amp; open3d::visualization::rendering::FilamentScene::GetIndirectLight </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34#a14374edc8787d135bfa0f4da91cf0c62">open3d::visualization::rendering::Scene</a>.</p>

</div>
</div>
<a id="adb2a66743b726fabd97872da8207af7c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adb2a66743b726fabd97872da8207af7c">&#9670;&nbsp;</a></span>GetIndirectLightIntensity()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float open3d::visualization::rendering::FilamentScene::GetIndirectLightIntensity </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34#abf8ec1c46cb6cce2fd7bb68eb3ce0556">open3d::visualization::rendering::Scene</a>.</p>

</div>
</div>
<a id="a47d10113994a981c3bf0e60f8e6646ae"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a47d10113994a981c3bf0e60f8e6646ae">&#9670;&nbsp;</a></span>GetIndirectLightRotation()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-22#ae324facc63aed0eb315a2e5ce04d27cc">FilamentScene::Transform</a> open3d::visualization::rendering::FilamentScene::GetIndirectLightRotation </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34#a999523e3398d266496a1fb232a1668eb">open3d::visualization::rendering::Scene</a>.</p>

</div>
</div>
<a id="a6cf0b8a7c33dd3c7d46e4d48f1cdd963"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6cf0b8a7c33dd3c7d46e4d48f1cdd963">&#9670;&nbsp;</a></span>GetLight()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structopen3d_1_1visualization_1_1rendering_1-5">Light</a> &amp; open3d::visualization::rendering::FilamentScene::GetLight </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>light_name</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34#a4dec9539ad84ec4083acd81912bb2087">open3d::visualization::rendering::Scene</a>.</p>

</div>
</div>
<a id="aa8bf055149db0a1af32ee3c344f10bc1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa8bf055149db0a1af32ee3c344f10bc1">&#9670;&nbsp;</a></span>GetNativeScene()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">filament::Scene* open3d::visualization::rendering::FilamentScene::GetNativeScene </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a925fc64c011d18865e659381beddbb9f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a925fc64c011d18865e659381beddbb9f">&#9670;&nbsp;</a></span>GetSkyboxVisible()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool open3d::visualization::rendering::FilamentScene::GetSkyboxVisible </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34#aeaf90ce87125e65f2cc3555d7f6bb2a0">open3d::visualization::rendering::Scene</a>.</p>

</div>
</div>
<a id="a0e5f7aa8097001a27557c17d388367df"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0e5f7aa8097001a27557c17d388367df">&#9670;&nbsp;</a></span>GetSunLightColor()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Eigen::Vector3f open3d::visualization::rendering::FilamentScene::GetSunLightColor </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34#a340a46efe0647d2e50f0c3e8bf76594c">open3d::visualization::rendering::Scene</a>.</p>

</div>
</div>
<a id="a2921984774bdb98b7082354df32af95d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2921984774bdb98b7082354df32af95d">&#9670;&nbsp;</a></span>GetSunLightDirection()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Eigen::Vector3f open3d::visualization::rendering::FilamentScene::GetSunLightDirection </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34#af0be4aa4be53ff4cc75205d85e8a6735">open3d::visualization::rendering::Scene</a>.</p>

</div>
</div>
<a id="a76720ed054099d9cfc2e5c776d7829ff"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a76720ed054099d9cfc2e5c776d7829ff">&#9670;&nbsp;</a></span>GetSunLightIntensity()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float open3d::visualization::rendering::FilamentScene::GetSunLightIntensity </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34#acadafd53afc774785e31ac8e09bc6cad">open3d::visualization::rendering::Scene</a>.</p>

</div>
</div>
<a id="a941de5f7cba66eb57e78c0178eb3928f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a941de5f7cba66eb57e78c0178eb3928f">&#9670;&nbsp;</a></span>GetView()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-35">View</a> * open3d::visualization::rendering::FilamentScene::GetView </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceopen3d_1_1visualization_1_1renderin#ae84c7ee53263cf103c77849661801ca3">ViewHandle</a> &amp;&#160;</td>
          <td class="paramname"><em>view_id</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34#ad9bfe7e2ae92efa67f5e40b9602917b8">open3d::visualization::rendering::Scene</a>.</p>

</div>
</div>
<a id="af4d95fdea4a06f97052576cb1f0f9017"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af4d95fdea4a06f97052576cb1f0f9017">&#9670;&nbsp;</a></span>HasGeometry()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool open3d::visualization::rendering::FilamentScene::HasGeometry </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>object_name</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34#a513b655f49db5b2919a766a189b99705">open3d::visualization::rendering::Scene</a>.</p>

</div>
</div>
<a id="a2c8190184b95c5521ac0f4cb2a618a00"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2c8190184b95c5521ac0f4cb2a618a00">&#9670;&nbsp;</a></span>HideRefractedMaterials()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::rendering::FilamentScene::HideRefractedMaterials </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>hide</em> = <code>true</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="afb49a487ff744cbbd7c9eeb5223a0e31"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afb49a487ff744cbbd7c9eeb5223a0e31">&#9670;&nbsp;</a></span>OverrideMaterial()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::rendering::FilamentScene::OverrideMaterial </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>object_name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structopen3d_1_1visualization_1_1rendering_1-3">MaterialRecord</a> &amp;&#160;</td>
          <td class="paramname"><em>material</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34#a55ce453aca254f9f4d0f830e72c03ebb">open3d::visualization::rendering::Scene</a>.</p>

</div>
</div>
<a id="a9667039c2992ed7745db51281fbe45a3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9667039c2992ed7745db51281fbe45a3">&#9670;&nbsp;</a></span>OverrideMaterialAll()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::rendering::FilamentScene::OverrideMaterialAll </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structopen3d_1_1visualization_1_1rendering_1-3">MaterialRecord</a> &amp;&#160;</td>
          <td class="paramname"><em>material</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>shader_only</em> = <code>true</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34#a7bcfe375f0384afa072ed6a0a42efd45">open3d::visualization::rendering::Scene</a>.</p>

</div>
</div>
<a id="ad9e50a75e8193b18b72d4784f1befce3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad9e50a75e8193b18b72d4784f1befce3">&#9670;&nbsp;</a></span>QueryGeometry()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::rendering::FilamentScene::QueryGeometry </td>
          <td>(</td>
          <td class="paramtype">std::vector&lt; std::string &gt; &amp;&#160;</td>
          <td class="paramname"><em>geometry</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34#a0b63667d3e4d019f3726c209101d2722">open3d::visualization::rendering::Scene</a>.</p>

</div>
</div>
<a id="aee4f7f2f2c1ee517b1a0ff3f3103796a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aee4f7f2f2c1ee517b1a0ff3f3103796a">&#9670;&nbsp;</a></span>RemoveCamera()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::rendering::FilamentScene::RemoveCamera </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>camera_name</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34#a9ab903326db319d368b207419da014a1">open3d::visualization::rendering::Scene</a>.</p>

</div>
</div>
<a id="a5fc801273e45d1b2e3558df72612d8f9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5fc801273e45d1b2e3558df72612d8f9">&#9670;&nbsp;</a></span>RemoveGeometry()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::rendering::FilamentScene::RemoveGeometry </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>object_name</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34#a6bb35b37ce02617e5a2edbbccda79c04">open3d::visualization::rendering::Scene</a>.</p>

</div>
</div>
<a id="ad2bcfecc53f14af4a03f3dc088fc6faa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad2bcfecc53f14af4a03f3dc088fc6faa">&#9670;&nbsp;</a></span>RemoveLight()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::rendering::FilamentScene::RemoveLight </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>light_name</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34#a9047e7f473c9f8806c097aeefae4417a">open3d::visualization::rendering::Scene</a>.</p>

</div>
</div>
<a id="a8daae0466af612d5bbbaf200cc747e5a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8daae0466af612d5bbbaf200cc747e5a">&#9670;&nbsp;</a></span>RemoveView()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::rendering::FilamentScene::RemoveView </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceopen3d_1_1visualization_1_1renderin#ae84c7ee53263cf103c77849661801ca3">ViewHandle</a> &amp;&#160;</td>
          <td class="paramname"><em>view_id</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34#ab2aec6ebde41d309fbbd99cbadefbce6">open3d::visualization::rendering::Scene</a>.</p>

</div>
</div>
<a id="a226be1ddcee3fda009fa5c614dbbd5a6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a226be1ddcee3fda009fa5c614dbbd5a6">&#9670;&nbsp;</a></span>RenderToDepthImage()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::rendering::FilamentScene::RenderToDepthImage </td>
          <td>(</td>
          <td class="paramtype">std::function&lt; void(std::shared_ptr&lt; <a class="el" href="classopen3d_1_1geometry_1_1_image.406.delaye">geometry::Image</a> &gt;)&gt;&#160;</td>
          <td class="paramname"><em>callback</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Size of image is the size of the window. </p>

<p>Implements <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34#a6f8cae719c863abb6c1cd6155c011b02">open3d::visualization::rendering::Scene</a>.</p>

</div>
</div>
<a id="a30b5b6a61275db9c4a17d433c281ce3f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a30b5b6a61275db9c4a17d433c281ce3f">&#9670;&nbsp;</a></span>RenderToImage()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::rendering::FilamentScene::RenderToImage </td>
          <td>(</td>
          <td class="paramtype">std::function&lt; void(std::shared_ptr&lt; <a class="el" href="classopen3d_1_1geometry_1_1_image.406.delaye">geometry::Image</a> &gt;)&gt;&#160;</td>
          <td class="paramname"><em>callback</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Size of image is the size of the window. </p>

<p>Implements <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34#a69be6c64b799a24d9bbb8597e690c2d2">open3d::visualization::rendering::Scene</a>.</p>

</div>
</div>
<a id="a1ccd7d8473b96ef570d3e2d791b87801"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1ccd7d8473b96ef570d3e2d791b87801">&#9670;&nbsp;</a></span>SetActiveCamera()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::rendering::FilamentScene::SetActiveCamera </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>camera_name</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34#ac48b8ddea01f848d153fc1585cd9378a">open3d::visualization::rendering::Scene</a>.</p>

</div>
</div>
<a id="a35270e7f31ae9c7abd0321da19614baf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a35270e7f31ae9c7abd0321da19614baf">&#9670;&nbsp;</a></span>SetBackground() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::rendering::FilamentScene::SetBackground </td>
          <td>(</td>
          <td class="paramtype">const Eigen::Vector4f &amp;&#160;</td>
          <td class="paramname"><em>color</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::shared_ptr&lt; <a class="el" href="classopen3d_1_1geometry_1_1_image.406.delaye">geometry::Image</a> &gt;&#160;</td>
          <td class="paramname"><em>image</em> = <code>nullptr</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34#a66b12293e2fca890fe0522dfa69c4b00">open3d::visualization::rendering::Scene</a>.</p>

</div>
</div>
<a id="af44932029b0f04d6c29c3e5a498cc836"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af44932029b0f04d6c29c3e5a498cc836">&#9670;&nbsp;</a></span>SetBackground() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::rendering::FilamentScene::SetBackground </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceopen3d_1_1visualization_1_1renderin#abe77f5a7fbacbb64e93059aa27873e11">TextureHandle</a>&#160;</td>
          <td class="paramname"><em>image</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34#a606234ad6fbbf85415ffe13117089c67">open3d::visualization::rendering::Scene</a>.</p>

</div>
</div>
<a id="a9c8519f428865278c5afe2de39488105"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9c8519f428865278c5afe2de39488105">&#9670;&nbsp;</a></span>SetGeometryCulling()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::rendering::FilamentScene::SetGeometryCulling </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>object_name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>enable</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34#a025b50e1011754d04b80e4edd9b8133b">open3d::visualization::rendering::Scene</a>.</p>

</div>
</div>
<a id="acc317e305e568da70ed4a1ff5f56362e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acc317e305e568da70ed4a1ff5f56362e">&#9670;&nbsp;</a></span>SetGeometryPriority()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::rendering::FilamentScene::SetGeometryPriority </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>object_name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>priority</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34#a763d9b603f4100c51a39e568ed50175d">open3d::visualization::rendering::Scene</a>.</p>

</div>
</div>
<a id="a256c36cf9d6d3d1f2048ee6b09f74efe"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a256c36cf9d6d3d1f2048ee6b09f74efe">&#9670;&nbsp;</a></span>SetGeometryTransform()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::rendering::FilamentScene::SetGeometryTransform </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>object_name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-22#ae324facc63aed0eb315a2e5ce04d27cc">Transform</a> &amp;&#160;</td>
          <td class="paramname"><em>transform</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34#ac0430ba977fe40e67e7758f68af5f4de">open3d::visualization::rendering::Scene</a>.</p>

</div>
</div>
<a id="a67ad4dd3291cd3ca42c8f89e7ec9ff40"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a67ad4dd3291cd3ca42c8f89e7ec9ff40">&#9670;&nbsp;</a></span>SetGroundPlaneColor()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::rendering::FilamentScene::SetGroundPlaneColor </td>
          <td>(</td>
          <td class="paramtype">const Eigen::Vector4f &amp;&#160;</td>
          <td class="paramname"><em>color</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34#a887a8758f8acd1666742af59ce0e6ce2">open3d::visualization::rendering::Scene</a>.</p>

</div>
</div>
<a id="a63fd0470bbc47a1fa34cbd97edde95ac"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a63fd0470bbc47a1fa34cbd97edde95ac">&#9670;&nbsp;</a></span>SetIndirectLight()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool open3d::visualization::rendering::FilamentScene::SetIndirectLight </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>ibl_name</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34#a0a5fa7bff59bfea2def97917eac557b0">open3d::visualization::rendering::Scene</a>.</p>

</div>
</div>
<a id="a6db623787a4a18c70a37b581b25a37d8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6db623787a4a18c70a37b581b25a37d8">&#9670;&nbsp;</a></span>SetIndirectLightIntensity()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::rendering::FilamentScene::SetIndirectLightIntensity </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>intensity</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34#a15a5122fbdde98c85ec017d0a77b8e60">open3d::visualization::rendering::Scene</a>.</p>

</div>
</div>
<a id="adb0f85311ca0511610dd1d6714c57272"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adb0f85311ca0511610dd1d6714c57272">&#9670;&nbsp;</a></span>SetIndirectLightRotation()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::rendering::FilamentScene::SetIndirectLightRotation </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-22#ae324facc63aed0eb315a2e5ce04d27cc">Transform</a> &amp;&#160;</td>
          <td class="paramname"><em>rotation</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34#a91c5893d8092d0e7ad1dd67c2c1e695b">open3d::visualization::rendering::Scene</a>.</p>

</div>
</div>
<a id="a99cccfacfe9594c3177697ca886fa2e6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a99cccfacfe9594c3177697ca886fa2e6">&#9670;&nbsp;</a></span>SetRenderOnce()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::rendering::FilamentScene::SetRenderOnce </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceopen3d_1_1visualization_1_1renderin#ae84c7ee53263cf103c77849661801ca3">ViewHandle</a> &amp;&#160;</td>
          <td class="paramname"><em>view_id</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34#a12dd4ff334678c0ed6206e0a3da52d52">open3d::visualization::rendering::Scene</a>.</p>

</div>
</div>
<a id="a7245b2ce1117ba7f6a4b01dedbde1976"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7245b2ce1117ba7f6a4b01dedbde1976">&#9670;&nbsp;</a></span>SetSunAngularRadius()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::rendering::FilamentScene::SetSunAngularRadius </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>radius</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34#a3f332bc4dcf627dc1be584ff9c97c22c">open3d::visualization::rendering::Scene</a>.</p>

</div>
</div>
<a id="ad4cf05e4de06af4fb5a9194ae68199ba"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad4cf05e4de06af4fb5a9194ae68199ba">&#9670;&nbsp;</a></span>SetSunHaloFalloff()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::rendering::FilamentScene::SetSunHaloFalloff </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>falloff</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34#a83207341b69f53b6b59f07a3f91dc3a7">open3d::visualization::rendering::Scene</a>.</p>

</div>
</div>
<a id="a9d251d7c13f3785cd68c78c5c7d8f5f1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9d251d7c13f3785cd68c78c5c7d8f5f1">&#9670;&nbsp;</a></span>SetSunHaloSize()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::rendering::FilamentScene::SetSunHaloSize </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>size</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34#a297fc8b218f49ebfccc0ebf99fd4932a">open3d::visualization::rendering::Scene</a>.</p>

</div>
</div>
<a id="ad9f08639acfc848c211e6dda449aacd7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad9f08639acfc848c211e6dda449aacd7">&#9670;&nbsp;</a></span>SetSunLight()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::rendering::FilamentScene::SetSunLight </td>
          <td>(</td>
          <td class="paramtype">const Eigen::Vector3f &amp;&#160;</td>
          <td class="paramname"><em>direction</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const Eigen::Vector3f &amp;&#160;</td>
          <td class="paramname"><em>color</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>intensity</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34#aef74a47fdc07e55e8222f347fddca864">open3d::visualization::rendering::Scene</a>.</p>

</div>
</div>
<a id="a20b465f3003da0ef88a9597f34ce764c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a20b465f3003da0ef88a9597f34ce764c">&#9670;&nbsp;</a></span>SetSunLightColor()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::rendering::FilamentScene::SetSunLightColor </td>
          <td>(</td>
          <td class="paramtype">const Eigen::Vector3f &amp;&#160;</td>
          <td class="paramname"><em>color</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34#a7b2a05b3d8055f0b2c46305aae8730fb">open3d::visualization::rendering::Scene</a>.</p>

</div>
</div>
<a id="a2a48ad4ee5ec52c5e8bb36d407259034"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2a48ad4ee5ec52c5e8bb36d407259034">&#9670;&nbsp;</a></span>SetSunLightDirection()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::rendering::FilamentScene::SetSunLightDirection </td>
          <td>(</td>
          <td class="paramtype">const Eigen::Vector3f &amp;&#160;</td>
          <td class="paramname"><em>direction</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34#a12fcd7089776910e5be9b40b5be0a0a3">open3d::visualization::rendering::Scene</a>.</p>

</div>
</div>
<a id="a5072af29d9c6c2d7dc69a3885b3f968c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5072af29d9c6c2d7dc69a3885b3f968c">&#9670;&nbsp;</a></span>SetSunLightIntensity()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::rendering::FilamentScene::SetSunLightIntensity </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>intensity</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34#a4c8c8db1e5084ec20c3d9ecc2d495f33">open3d::visualization::rendering::Scene</a>.</p>

</div>
</div>
<a id="ace9c10657b3bbb93f1d742d873c78800"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ace9c10657b3bbb93f1d742d873c78800">&#9670;&nbsp;</a></span>SetViewActive()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::rendering::FilamentScene::SetViewActive </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceopen3d_1_1visualization_1_1renderin#ae84c7ee53263cf103c77849661801ca3">ViewHandle</a> &amp;&#160;</td>
          <td class="paramname"><em>view_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>is_active</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34#a5dc3d9c41f09143d67ae0939f69e9451">open3d::visualization::rendering::Scene</a>.</p>

</div>
</div>
<a id="acff5abc18befb4c69d452418d3538cee"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acff5abc18befb4c69d452418d3538cee">&#9670;&nbsp;</a></span>ShowGeometry()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::rendering::FilamentScene::ShowGeometry </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>object_name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>show</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34#a823d9119a507091b9f1c93b68ea756f0">open3d::visualization::rendering::Scene</a>.</p>

</div>
</div>
<a id="ab47bdc32fae3b632d10821a972742726"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab47bdc32fae3b632d10821a972742726">&#9670;&nbsp;</a></span>ShowSkybox()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::rendering::FilamentScene::ShowSkybox </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>show</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34#ae39a2d77f5c72f0ec880eaaba2b2e465">open3d::visualization::rendering::Scene</a>.</p>

</div>
</div>
<a id="ac5dcf22cd541d80f9c98b0f2497f1b78"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac5dcf22cd541d80f9c98b0f2497f1b78">&#9670;&nbsp;</a></span>UpdateGeometry()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::rendering::FilamentScene::UpdateGeometry </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>object_name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_point_cloud">t::geometry::PointCloud</a> &amp;&#160;</td>
          <td class="paramname"><em>point_cloud</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>update_flags</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34#a3c40bafd10214203fab585059d373fea">open3d::visualization::rendering::Scene</a>.</p>

</div>
</div>
<a id="af6a82adecc4d19e079d4d5bba92314f5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af6a82adecc4d19e079d4d5bba92314f5">&#9670;&nbsp;</a></span>UpdateLight()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::rendering::FilamentScene::UpdateLight </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>light_name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structopen3d_1_1visualization_1_1rendering_1-5">Light</a> &amp;&#160;</td>
          <td class="paramname"><em>light</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34#a6d6b5d6ff2aa5ba8bcb98f7b46510d20">open3d::visualization::rendering::Scene</a>.</p>

</div>
</div>
<a id="a4213233f4d94e01eed76a7c7a4319fa0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4213233f4d94e01eed76a7c7a4319fa0">&#9670;&nbsp;</a></span>UpdateLightColor()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::rendering::FilamentScene::UpdateLightColor </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>light_name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const Eigen::Vector3f &amp;&#160;</td>
          <td class="paramname"><em>color</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34#a9d34915ac9bcf9d72c72e2d833ad8522">open3d::visualization::rendering::Scene</a>.</p>

</div>
</div>
<a id="ae88f50efd3c15587918356185abd9f41"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae88f50efd3c15587918356185abd9f41">&#9670;&nbsp;</a></span>UpdateLightConeAngles()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::rendering::FilamentScene::UpdateLightConeAngles </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>light_name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>inner_cone_angle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>outer_cone_angle</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34#a09005a631417d7ae9e2112b6f1809ece">open3d::visualization::rendering::Scene</a>.</p>

</div>
</div>
<a id="a0a23b23ccaac5e1602889b789a107aaf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0a23b23ccaac5e1602889b789a107aaf">&#9670;&nbsp;</a></span>UpdateLightDirection()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::rendering::FilamentScene::UpdateLightDirection </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>light_name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const Eigen::Vector3f &amp;&#160;</td>
          <td class="paramname"><em>direction</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34#ae830f204ec744c4db12792fd1bf77d94">open3d::visualization::rendering::Scene</a>.</p>

</div>
</div>
<a id="a8688c85e131452dcc0e05bf0b31f77b8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8688c85e131452dcc0e05bf0b31f77b8">&#9670;&nbsp;</a></span>UpdateLightFalloff()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::rendering::FilamentScene::UpdateLightFalloff </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>light_name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>falloff</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34#ad36a31aebedb299c00fa2197860a9190">open3d::visualization::rendering::Scene</a>.</p>

</div>
</div>
<a id="a124d7267f9ea5fe0c0327edc37472fc4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a124d7267f9ea5fe0c0327edc37472fc4">&#9670;&nbsp;</a></span>UpdateLightIntensity()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::rendering::FilamentScene::UpdateLightIntensity </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>light_name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>intensity</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34#a60ae72ae679380597f15627f65342bc1">open3d::visualization::rendering::Scene</a>.</p>

</div>
</div>
<a id="a55e4b21e372de86c9d9f969d92e93a21"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a55e4b21e372de86c9d9f969d92e93a21">&#9670;&nbsp;</a></span>UpdateLightPosition()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::rendering::FilamentScene::UpdateLightPosition </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>light_name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const Eigen::Vector3f &amp;&#160;</td>
          <td class="paramname"><em>position</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34#a160abb6b06d67b95e850c5cf394bbf47">open3d::visualization::rendering::Scene</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/runner/work/Open3D/Open3D/cpp/open3d/visualization/rendering/filament/<a class="el" href="_filament_scene_8h_source.html">FilamentScene.h (9238339 (Tue Mar 14 18:49:09 2023 -0700))</a></li>
<li>/home/runner/work/Open3D/Open3D/cpp/open3d/visualization/rendering/filament/<a class="el" href="_filament_scene_8cpp.html">FilamentScene.cpp (9238339 (Tue Mar 14 18:49:09 2023 -0700))</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1
</small></address>
</body>

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/classopen3d_1_1visualization_1_1rendering_1_1_filament_scene.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 11:01:43 GMT -->
</html>
