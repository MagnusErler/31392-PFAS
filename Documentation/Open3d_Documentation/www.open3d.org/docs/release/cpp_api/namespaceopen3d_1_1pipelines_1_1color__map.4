<!-- HTML header for doxygen 1.8.20-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/namespaceopen3d_1_1pipelines_1_1color__map.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 10:56:26 GMT -->
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Open3D (C++ API): open3d::pipelines::color_map Namespace Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js", "TeX/AMSmath.html", "TeX/AMSsymbols.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="../../../../cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-3TQPKGV6Z3"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());
  gtag('config', 'G-3TQPKGV6Z3');
</script>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="open3d_logo.ico"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Open3D (C++ API)
   &#160;<span id="projectnumber">0.17.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.html');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.html','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceopen3d.html">open3d</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1pipelines.html">pipelines</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1pipelines_1_1color__map.4">color_map</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">open3d::pipelines::color_map Namespace Reference</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1pipelines_1_1color__map_1_1_i">ImageWarpingField</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structopen3d_1_1pipelines_1_1color__map_1_1_">NonRigidOptimizerOption</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structopen3d_1_1pipelines_1_1color__map_1_1_-2">RigidOptimizerOption</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a0144a088175fc9883d1a53062f7e7d70"><td class="memItemLeft" align="right" valign="top">std::tuple&lt; std::vector&lt; <a class="el" href="classopen3d_1_1geometry_1_1_image.406.delaye">geometry::Image</a> &gt;, std::vector&lt; <a class="el" href="classopen3d_1_1geometry_1_1_image.406.delaye">geometry::Image</a> &gt;, std::vector&lt; <a class="el" href="classopen3d_1_1geometry_1_1_image.406.delaye">geometry::Image</a> &gt;, std::vector&lt; <a class="el" href="classopen3d_1_1geometry_1_1_image.406.delaye">geometry::Image</a> &gt;, std::vector&lt; <a class="el" href="classopen3d_1_1geometry_1_1_image.406.delaye">geometry::Image</a> &gt; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1pipelines_1_1color__map.4#a0144a088175fc9883d1a53062f7e7d70">CreateUtilImagesFromRGBD</a> (const std::vector&lt; <a class="el" href="classopen3d_1_1geometry_1_1_r_g_b_d_image.37">geometry::RGBDImage</a> &gt; &amp;images_rgbd)</td></tr>
<tr class="separator:a0144a088175fc9883d1a53062f7e7d70"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af2f9c1cd8d66a84efb72c78245cd7356"><td class="memItemLeft" align="right" valign="top">std::vector&lt; <a class="el" href="classopen3d_1_1geometry_1_1_image.406.delaye">geometry::Image</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1pipelines_1_1color__map.4#af2f9c1cd8d66a84efb72c78245cd7356">CreateDepthBoundaryMasks</a> (const std::vector&lt; <a class="el" href="classopen3d_1_1geometry_1_1_image.406.delaye">geometry::Image</a> &gt; &amp;images_depth, double depth_threshold_for_discontinuity_check, int half_dilation_kernel_size_for_discontinuity_map)</td></tr>
<tr class="separator:af2f9c1cd8d66a84efb72c78245cd7356"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acb447583d47adbbaff3079e7b54c18c7"><td class="memItemLeft" align="right" valign="top">std::tuple&lt; std::vector&lt; std::vector&lt; int &gt; &gt;, std::vector&lt; std::vector&lt; int &gt; &gt; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1pipelines_1_1color__map.4#acb447583d47adbbaff3079e7b54c18c7">CreateVertexAndImageVisibility</a> (const <a class="el" href="classopen3d_1_1geometry_1_1_triangle_mesh.40">geometry::TriangleMesh</a> &amp;mesh, const std::vector&lt; <a class="el" href="classopen3d_1_1geometry_1_1_image.406.delaye">geometry::Image</a> &gt; &amp;images_depth, const std::vector&lt; <a class="el" href="classopen3d_1_1geometry_1_1_image.406.delaye">geometry::Image</a> &gt; &amp;images_mask, const <a class="el" href="classopen3d_1_1camera_1_1_pinhole_camera_tra">camera::PinholeCameraTrajectory</a> &amp;camera_trajectory, double maximum_allowable_depth, double depth_threshold_for_visibility_check)</td></tr>
<tr class="separator:acb447583d47adbbaff3079e7b54c18c7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8cdbfd066cf4c0620f727fcefc89a74c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1pipelines_1_1color__map.4#a8cdbfd066cf4c0620f727fcefc89a74c">SetProxyIntensityForVertex</a> (const <a class="el" href="classopen3d_1_1geometry_1_1_triangle_mesh.40">geometry::TriangleMesh</a> &amp;mesh, const std::vector&lt; <a class="el" href="classopen3d_1_1geometry_1_1_image.406.delaye">geometry::Image</a> &gt; &amp;images_gray, const <a class="el" href="classopen3d_1_1utility_1_1optional.3c6.delay">utility::optional</a>&lt; std::vector&lt; <a class="el" href="classopen3d_1_1pipelines_1_1color__map_1_1_i">ImageWarpingField</a> &gt;&gt; &amp;warping_fields, const <a class="el" href="classopen3d_1_1camera_1_1_pinhole_camera_tra">camera::PinholeCameraTrajectory</a> &amp;camera_trajectory, const std::vector&lt; std::vector&lt; int &gt;&gt; &amp;visibility_vertex_to_image, std::vector&lt; double &gt; &amp;proxy_intensity, int image_boundary_margin)</td></tr>
<tr class="separator:a8cdbfd066cf4c0620f727fcefc89a74c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af075486389de871d40e5b7d53e6c3543"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1pipelines_1_1color__map.4#af075486389de871d40e5b7d53e6c3543">SetGeometryColorAverage</a> (<a class="el" href="classopen3d_1_1geometry_1_1_triangle_mesh.40">geometry::TriangleMesh</a> &amp;mesh, const std::vector&lt; <a class="el" href="classopen3d_1_1geometry_1_1_image.406.delaye">geometry::Image</a> &gt; &amp;images_color, const <a class="el" href="classopen3d_1_1utility_1_1optional.3c6.delay">utility::optional</a>&lt; std::vector&lt; <a class="el" href="classopen3d_1_1pipelines_1_1color__map_1_1_i">ImageWarpingField</a> &gt;&gt; &amp;warping_fields, const <a class="el" href="classopen3d_1_1camera_1_1_pinhole_camera_tra">camera::PinholeCameraTrajectory</a> &amp;camera_trajectory, const std::vector&lt; std::vector&lt; int &gt;&gt; &amp;visibility_vertex_to_image, int image_boundary_margin, int invisible_vertex_color_knn)</td></tr>
<tr class="separator:af075486389de871d40e5b7d53e6c3543"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3302148a89063efa468ecdf2f3a422ec"><td class="memItemLeft" align="right" valign="top">std::pair&lt; <a class="el" href="classopen3d_1_1geometry_1_1_triangle_mesh.40">geometry::TriangleMesh</a>, <a class="el" href="classopen3d_1_1camera_1_1_pinhole_camera_tra">camera::PinholeCameraTrajectory</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1pipelines_1_1color__map.4#a3302148a89063efa468ecdf2f3a422ec">RunNonRigidOptimizer</a> (const <a class="el" href="classopen3d_1_1geometry_1_1_triangle_mesh.40">geometry::TriangleMesh</a> &amp;mesh, const std::vector&lt; <a class="el" href="classopen3d_1_1geometry_1_1_r_g_b_d_image.37">geometry::RGBDImage</a> &gt; &amp;images_rgbd, const <a class="el" href="classopen3d_1_1camera_1_1_pinhole_camera_tra">camera::PinholeCameraTrajectory</a> &amp;camera_trajectory, const <a class="el" href="structopen3d_1_1pipelines_1_1color__map_1_1_">NonRigidOptimizerOption</a> &amp;option)</td></tr>
<tr class="separator:a3302148a89063efa468ecdf2f3a422ec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad9d69b8b9ec764a63c1d053513da0c24"><td class="memItemLeft" align="right" valign="top">std::pair&lt; <a class="el" href="classopen3d_1_1geometry_1_1_triangle_mesh.40">geometry::TriangleMesh</a>, <a class="el" href="classopen3d_1_1camera_1_1_pinhole_camera_tra">camera::PinholeCameraTrajectory</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1pipelines_1_1color__map.4#ad9d69b8b9ec764a63c1d053513da0c24">RunRigidOptimizer</a> (const <a class="el" href="classopen3d_1_1geometry_1_1_triangle_mesh.40">geometry::TriangleMesh</a> &amp;mesh, const std::vector&lt; <a class="el" href="classopen3d_1_1geometry_1_1_r_g_b_d_image.37">geometry::RGBDImage</a> &gt; &amp;images_rgbd, const <a class="el" href="classopen3d_1_1camera_1_1_pinhole_camera_tra">camera::PinholeCameraTrajectory</a> &amp;camera_trajectory, const <a class="el" href="structopen3d_1_1pipelines_1_1color__map_1_1_-2">RigidOptimizerOption</a> &amp;option)</td></tr>
<tr class="separator:ad9d69b8b9ec764a63c1d053513da0c24"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a id="af2f9c1cd8d66a84efb72c78245cd7356"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af2f9c1cd8d66a84efb72c78245cd7356">&#9670;&nbsp;</a></span>CreateDepthBoundaryMasks()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt; <a class="el" href="classopen3d_1_1geometry_1_1_image.406.delaye">geometry::Image</a> &gt; open3d::pipelines::color_map::CreateDepthBoundaryMasks </td>
          <td>(</td>
          <td class="paramtype">const std::vector&lt; <a class="el" href="classopen3d_1_1geometry_1_1_image.406.delaye">geometry::Image</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>images_depth</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>depth_threshold_for_discontinuity_check</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>half_dilation_kernel_size_for_discontinuity_map</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a0144a088175fc9883d1a53062f7e7d70"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0144a088175fc9883d1a53062f7e7d70">&#9670;&nbsp;</a></span>CreateUtilImagesFromRGBD()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::tuple&lt; std::vector&lt; <a class="el" href="classopen3d_1_1geometry_1_1_image.406.delaye">geometry::Image</a> &gt;, std::vector&lt; <a class="el" href="classopen3d_1_1geometry_1_1_image.406.delaye">geometry::Image</a> &gt;, std::vector&lt; <a class="el" href="classopen3d_1_1geometry_1_1_image.406.delaye">geometry::Image</a> &gt;, std::vector&lt; <a class="el" href="classopen3d_1_1geometry_1_1_image.406.delaye">geometry::Image</a> &gt;, std::vector&lt; <a class="el" href="classopen3d_1_1geometry_1_1_image.406.delaye">geometry::Image</a> &gt; &gt; open3d::pipelines::color_map::CreateUtilImagesFromRGBD </td>
          <td>(</td>
          <td class="paramtype">const std::vector&lt; <a class="el" href="classopen3d_1_1geometry_1_1_r_g_b_d_image.37">geometry::RGBDImage</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>images_rgbd</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="acb447583d47adbbaff3079e7b54c18c7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acb447583d47adbbaff3079e7b54c18c7">&#9670;&nbsp;</a></span>CreateVertexAndImageVisibility()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::tuple&lt; std::vector&lt; std::vector&lt; int &gt; &gt;, std::vector&lt; std::vector&lt; int &gt; &gt; &gt; open3d::pipelines::color_map::CreateVertexAndImageVisibility </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1geometry_1_1_triangle_mesh.40">geometry::TriangleMesh</a> &amp;&#160;</td>
          <td class="paramname"><em>mesh</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; <a class="el" href="classopen3d_1_1geometry_1_1_image.406.delaye">geometry::Image</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>images_depth</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; <a class="el" href="classopen3d_1_1geometry_1_1_image.406.delaye">geometry::Image</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>images_mask</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1camera_1_1_pinhole_camera_tra">camera::PinholeCameraTrajectory</a> &amp;&#160;</td>
          <td class="paramname"><em>camera_trajectory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>maximum_allowable_depth</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>depth_threshold_for_visibility_check</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a3302148a89063efa468ecdf2f3a422ec"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3302148a89063efa468ecdf2f3a422ec">&#9670;&nbsp;</a></span>RunNonRigidOptimizer()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::pair&lt; <a class="el" href="classopen3d_1_1geometry_1_1_triangle_mesh.40">geometry::TriangleMesh</a>, <a class="el" href="classopen3d_1_1camera_1_1_pinhole_camera_tra">camera::PinholeCameraTrajectory</a> &gt; open3d::pipelines::color_map::RunNonRigidOptimizer </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1geometry_1_1_triangle_mesh.40">geometry::TriangleMesh</a> &amp;&#160;</td>
          <td class="paramname"><em>mesh</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; <a class="el" href="classopen3d_1_1geometry_1_1_r_g_b_d_image.37">geometry::RGBDImage</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>images_rgbd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1camera_1_1_pinhole_camera_tra">camera::PinholeCameraTrajectory</a> &amp;&#160;</td>
          <td class="paramname"><em>camera_trajectory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structopen3d_1_1pipelines_1_1color__map_1_1_">NonRigidOptimizerOption</a> &amp;&#160;</td>
          <td class="paramname"><em>option</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ad9d69b8b9ec764a63c1d053513da0c24"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad9d69b8b9ec764a63c1d053513da0c24">&#9670;&nbsp;</a></span>RunRigidOptimizer()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::pair&lt; <a class="el" href="classopen3d_1_1geometry_1_1_triangle_mesh.40">geometry::TriangleMesh</a>, <a class="el" href="classopen3d_1_1camera_1_1_pinhole_camera_tra">camera::PinholeCameraTrajectory</a> &gt; open3d::pipelines::color_map::RunRigidOptimizer </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1geometry_1_1_triangle_mesh.40">geometry::TriangleMesh</a> &amp;&#160;</td>
          <td class="paramname"><em>mesh</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; <a class="el" href="classopen3d_1_1geometry_1_1_r_g_b_d_image.37">geometry::RGBDImage</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>images_rgbd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1camera_1_1_pinhole_camera_tra">camera::PinholeCameraTrajectory</a> &amp;&#160;</td>
          <td class="paramname"><em>camera_trajectory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structopen3d_1_1pipelines_1_1color__map_1_1_-2">RigidOptimizerOption</a> &amp;&#160;</td>
          <td class="paramname"><em>option</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="af075486389de871d40e5b7d53e6c3543"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af075486389de871d40e5b7d53e6c3543">&#9670;&nbsp;</a></span>SetGeometryColorAverage()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::pipelines::color_map::SetGeometryColorAverage </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1geometry_1_1_triangle_mesh.40">geometry::TriangleMesh</a> &amp;&#160;</td>
          <td class="paramname"><em>mesh</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; <a class="el" href="classopen3d_1_1geometry_1_1_image.406.delaye">geometry::Image</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>images_color</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1utility_1_1optional.3c6.delay">utility::optional</a>&lt; std::vector&lt; <a class="el" href="classopen3d_1_1pipelines_1_1color__map_1_1_i">ImageWarpingField</a> &gt;&gt; &amp;&#160;</td>
          <td class="paramname"><em>warping_fields</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1camera_1_1_pinhole_camera_tra">camera::PinholeCameraTrajectory</a> &amp;&#160;</td>
          <td class="paramname"><em>camera_trajectory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; std::vector&lt; int &gt;&gt; &amp;&#160;</td>
          <td class="paramname"><em>visibility_vertex_to_image</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>image_boundary_margin</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>invisible_vertex_color_knn</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a8cdbfd066cf4c0620f727fcefc89a74c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8cdbfd066cf4c0620f727fcefc89a74c">&#9670;&nbsp;</a></span>SetProxyIntensityForVertex()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::pipelines::color_map::SetProxyIntensityForVertex </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1geometry_1_1_triangle_mesh.40">geometry::TriangleMesh</a> &amp;&#160;</td>
          <td class="paramname"><em>mesh</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; <a class="el" href="classopen3d_1_1geometry_1_1_image.406.delaye">geometry::Image</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>images_gray</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1utility_1_1optional.3c6.delay">utility::optional</a>&lt; std::vector&lt; <a class="el" href="classopen3d_1_1pipelines_1_1color__map_1_1_i">ImageWarpingField</a> &gt;&gt; &amp;&#160;</td>
          <td class="paramname"><em>warping_fields</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1camera_1_1_pinhole_camera_tra">camera::PinholeCameraTrajectory</a> &amp;&#160;</td>
          <td class="paramname"><em>camera_trajectory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; std::vector&lt; int &gt;&gt; &amp;&#160;</td>
          <td class="paramname"><em>visibility_vertex_to_image</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::vector&lt; double &gt; &amp;&#160;</td>
          <td class="paramname"><em>proxy_intensity</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>image_boundary_margin</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1
</small></address>
</body>

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/namespaceopen3d_1_1pipelines_1_1color__map.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 10:56:26 GMT -->
</html>
