<!-- HTML header for doxygen 1.8.20-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/classopen3d_1_1visualization_1_1webrtc__server_1_1_web_r_t_c_window_system.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 11:01:50 GMT -->
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Open3D (C++ API): open3d::visualization::webrtc_server::WebRTCWindowSystem Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js", "TeX/AMSmath.html", "TeX/AMSsymbols.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="../../../../cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-3TQPKGV6Z3"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());
  gtag('config', 'G-3TQPKGV6Z3');
</script>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="open3d_logo.ico"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Open3D (C++ API)
   &#160;<span id="projectnumber">0.17.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.html');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.html','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceopen3d.html">open3d</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1visualization.html">visualization</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1visualization_1_1webrtc__">webrtc_server</a></li><li class="navelem"><a class="el" href="classopen3d_1_1visualization_1_1webrtc__serv-10">WebRTCWindowSystem</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">open3d::visualization::webrtc_server::WebRTCWindowSystem Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><a class="el" href="classopen3d_1_1visualization_1_1webrtc__serv-10" title="WebRTCWindowSystem is a BitmapWindowSystem with a WebRTC server that sends video frames to remote cli...">WebRTCWindowSystem</a> is a BitmapWindowSystem with a WebRTC server that sends video frames to remote clients for visualization.  
 <a href="classopen3d_1_1visualization_1_1webrtc__serv-10#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_web_r_t_c_window_system_8h_source.92d.delay">WebRTCWindowSystem.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for open3d::visualization::webrtc_server::WebRTCWindowSystem:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classopen3d_1_1visualization_1_1webrtc__serv-19" usemap="#open3d::visualization::webrtc_5Fserver::WebRTCWindowSystem_map" alt=""/>
  <map id="open3d::visualization::webrtc_5Fserver::WebRTCWindowSystem_map" name="open3d::visualization::webrtc_5Fserver::WebRTCWindowSystem_map">
<area href="classopen3d_1_1visualization_1_1gui_1_1_bitm" alt="open3d::visualization::gui::BitmapWindowSystem" shape="rect" coords="0,56,356,80"/>
<area href="classopen3d_1_1visualization_1_1gui_1_1_wind-2" alt="open3d::visualization::gui::WindowSystem" shape="rect" coords="0,0,356,24"/>
  </map>
</div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structopen3d_1_1visualization_1_1webrtc__ser-2">Impl</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a0500e394e371faed9f6b6d093b125b63"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1webrtc__serv-10#a0500e394e371faed9f6b6d093b125b63">~WebRTCWindowSystem</a> ()</td></tr>
<tr class="separator:a0500e394e371faed9f6b6d093b125b63"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a334f76c500eb1390bf69a93867581a48"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">OSWindow</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1webrtc__serv-10#a334f76c500eb1390bf69a93867581a48">CreateOSWindow</a> (<a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind">gui::Window</a> *<a class="el" href="_bitmap_window_system_8cpp.html#a5362a314787f250a6bdba91e8fcfecf2">o3d_window</a>, int <a class="el" href="io_2file__format_2_file_p_c_d_8cpp.375.delay#a2474a5474cbff19523a51eb1de01cda4">width</a>, int <a class="el" href="io_2file__format_2_file_p_c_d_8cpp.375.delay#ad12fc34ce789bce6c8a05d8a17138534">height</a>, const char *title, int flags) override</td></tr>
<tr class="separator:a334f76c500eb1390bf69a93867581a48"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1d37bbf4e883b33d1b25b439d81998eb"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1webrtc__serv-10#a1d37bbf4e883b33d1b25b439d81998eb">DestroyWindow</a> (<a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">OSWindow</a> w) override</td></tr>
<tr class="separator:a1d37bbf4e883b33d1b25b439d81998eb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab6fb659fb0fd0af2051659afa3375e3d"><td class="memItemLeft" align="right" valign="top">std::vector&lt; std::string &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1webrtc__serv-10#ab6fb659fb0fd0af2051659afa3375e3d">GetWindowUIDs</a> () const</td></tr>
<tr class="memdesc:ab6fb659fb0fd0af2051659afa3375e3d"><td class="mdescLeft">&#160;</td><td class="mdescRight">List available windows.  <a href="classopen3d_1_1visualization_1_1webrtc__serv-10#ab6fb659fb0fd0af2051659afa3375e3d">More...</a><br /></td></tr>
<tr class="separator:ab6fb659fb0fd0af2051659afa3375e3d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aff0fa0e470725e5ee18b8be8e25b2ec2"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1webrtc__serv-10#aff0fa0e470725e5ee18b8be8e25b2ec2">GetWindowUID</a> (<a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">OSWindow</a> w) const</td></tr>
<tr class="separator:aff0fa0e470725e5ee18b8be8e25b2ec2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af5788c05b8ff14082ae91a73f7b80d3f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">OSWindow</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1webrtc__serv-10#af5788c05b8ff14082ae91a73f7b80d3f">GetOSWindowByUID</a> (const std::string &amp;uid) const</td></tr>
<tr class="separator:af5788c05b8ff14082ae91a73f7b80d3f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1d78380205271b2fcd44155e4726c3aa"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1webrtc__serv-10#a1d78380205271b2fcd44155e4726c3aa">StartWebRTCServer</a> ()</td></tr>
<tr class="memdesc:a1d78380205271b2fcd44155e4726c3aa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Start WebRTC server in a background thread.  <a href="classopen3d_1_1visualization_1_1webrtc__serv-10#a1d78380205271b2fcd44155e4726c3aa">More...</a><br /></td></tr>
<tr class="separator:a1d78380205271b2fcd44155e4726c3aa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae910c1634bdc6184178c90e5a3d4625d"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1webrtc__serv-10#ae910c1634bdc6184178c90e5a3d4625d">OnDataChannelMessage</a> (const std::string &amp;message)</td></tr>
<tr class="separator:ae910c1634bdc6184178c90e5a3d4625d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeed2c20b42852237a1808c54bb15d296"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1webrtc__serv-10#aeed2c20b42852237a1808c54bb15d296">RegisterDataChannelMessageCallback</a> (const std::string &amp;class_name, const std::function&lt; std::string(const std::string &amp;)&gt; <a class="el" href="_filament_renderer_8cpp.html#a7a0a25a91d8a936306270fd09f1a64a9">callback</a>)</td></tr>
<tr class="separator:aeed2c20b42852237a1808c54bb15d296"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae797ce076e6810d9260b24993fff61fa"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1webrtc__serv-10#ae797ce076e6810d9260b24993fff61fa">OnFrame</a> (const std::string &amp;window_uid, const std::shared_ptr&lt; <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &gt; &amp;im)</td></tr>
<tr class="memdesc:ae797ce076e6810d9260b24993fff61fa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Server -&gt; client frame.  <a href="classopen3d_1_1visualization_1_1webrtc__serv-10#ae797ce076e6810d9260b24993fff61fa">More...</a><br /></td></tr>
<tr class="separator:ae797ce076e6810d9260b24993fff61fa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acc226f6445bf195a7ec34a2952c42305"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1webrtc__serv-10#acc226f6445bf195a7ec34a2952c42305">SendInitFrames</a> (const std::string &amp;window_uid)</td></tr>
<tr class="separator:acc226f6445bf195a7ec34a2952c42305"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acbff2d0322a1072c8a2fae3324445414"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1webrtc__serv-10#acbff2d0322a1072c8a2fae3324445414">CallHttpAPI</a> (const std::string &amp;entry_point, const std::string &amp;query_string=&quot;&quot;, const std::string &amp;data=&quot;&quot;) const</td></tr>
<tr class="memdesc:acbff2d0322a1072c8a2fae3324445414"><td class="mdescLeft">&#160;</td><td class="mdescRight">Call <a class="el" href="classopen3d_1_1visualization_1_1webrtc__serv-7">PeerConnectionManager</a>'s web request API.  <a href="classopen3d_1_1visualization_1_1webrtc__serv-10#acbff2d0322a1072c8a2fae3324445414">More...</a><br /></td></tr>
<tr class="separator:acbff2d0322a1072c8a2fae3324445414"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6309ba63e3c2407034ccc16d21435620"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1webrtc__serv-10#a6309ba63e3c2407034ccc16d21435620">EnableWebRTC</a> ()</td></tr>
<tr class="separator:a6309ba63e3c2407034ccc16d21435620"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab63aac4c231cc2dded4ea2351d6ad294"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1webrtc__serv-10#ab63aac4c231cc2dded4ea2351d6ad294">DisableHttpHandshake</a> ()</td></tr>
<tr class="separator:ab63aac4c231cc2dded4ea2351d6ad294"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeef2643dab421ed19449cf7bed2b9bf9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1webrtc__serv-10#aeef2643dab421ed19449cf7bed2b9bf9">CloseWindowConnections</a> (const std::string &amp;window_uid)</td></tr>
<tr class="memdesc:aeef2643dab421ed19449cf7bed2b9bf9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Close all WebRTC connections that correspond to a Window.  <a href="classopen3d_1_1visualization_1_1webrtc__serv-10#aeef2643dab421ed19449cf7bed2b9bf9">More...</a><br /></td></tr>
<tr class="separator:aeef2643dab421ed19449cf7bed2b9bf9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classopen3d_1_1visualization_1_1gui_1_1_bitmap_window_system"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classopen3d_1_1visualization_1_1gui_1_1_bitmap_window_system')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_bitm">open3d::visualization::gui::BitmapWindowSystem</a></td></tr>
<tr class="memitem:aa094fabc25ce6c05a9aad1dd29a1cd12 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_bitmap_window_system"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_bitm#aa094fabc25ce6c05a9aad1dd29a1cd12">BitmapWindowSystem</a> (<a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_bitm#a6b1524827ecc224d6d7712404231c3f9">Rendering</a> mode=<a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_bitm#a6b1524827ecc224d6d7712404231c3f9a1e23852820b9154316c7c06e2b7ba051">Rendering::NORMAL</a>)</td></tr>
<tr class="separator:aa094fabc25ce6c05a9aad1dd29a1cd12 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_bitmap_window_system"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6e7ff99751adccd050fa7422c701666d inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_bitmap_window_system"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_bitm#a6e7ff99751adccd050fa7422c701666d">~BitmapWindowSystem</a> ()</td></tr>
<tr class="separator:a6e7ff99751adccd050fa7422c701666d inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_bitmap_window_system"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac720e9bde01996c8b4a67434ea3b9844 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_bitmap_window_system"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_bitm#ac720e9bde01996c8b4a67434ea3b9844">Initialize</a> () override</td></tr>
<tr class="separator:ac720e9bde01996c8b4a67434ea3b9844 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_bitmap_window_system"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2f62ffc4cc7ac97d0d7711849e8c1517 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_bitmap_window_system"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_bitm#a2f62ffc4cc7ac97d0d7711849e8c1517">Uninitialize</a> () override</td></tr>
<tr class="separator:a2f62ffc4cc7ac97d0d7711849e8c1517 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_bitmap_window_system"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab1705dd288427f82cf351f5dc3bcada4 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_bitmap_window_system"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_bitm#ab1705dd288427f82cf351f5dc3bcada4">SetOnWindowDraw</a> (<a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_bitm#a79eb4d0a9f8e4db6c3c5899fff491bf7">OnDrawCallback</a> <a class="el" href="_filament_renderer_8cpp.html#a7a0a25a91d8a936306270fd09f1a64a9">callback</a>)</td></tr>
<tr class="separator:ab1705dd288427f82cf351f5dc3bcada4 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_bitmap_window_system"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8a4265beec129ad81add39f03502e859 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_bitmap_window_system"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_bitm#a8a4265beec129ad81add39f03502e859">WaitEventsTimeout</a> (double timeout_secs) override</td></tr>
<tr class="separator:a8a4265beec129ad81add39f03502e859 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_bitmap_window_system"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5c66ff095c399c7d046d5465f23e1788 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_bitmap_window_system"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structopen3d_1_1visualization_1_1gui_1_1_siz">Size</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_bitm#a5c66ff095c399c7d046d5465f23e1788">GetScreenSize</a> (<a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">OSWindow</a> w) override</td></tr>
<tr class="separator:a5c66ff095c399c7d046d5465f23e1788 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_bitmap_window_system"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af83e19e6045baf1504a3f4fc36410c03 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_bitmap_window_system"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_bitm#af83e19e6045baf1504a3f4fc36410c03">PostRedrawEvent</a> (<a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">OSWindow</a> w) override</td></tr>
<tr class="separator:af83e19e6045baf1504a3f4fc36410c03 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_bitmap_window_system"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a840728deb5d9a5c5fcefd0938524ffe1 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_bitmap_window_system"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_bitm#a840728deb5d9a5c5fcefd0938524ffe1">PostMouseEvent</a> (<a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">OSWindow</a> w, const <a class="el" href="structopen3d_1_1visualization_1_1gui_1_1_mou">MouseEvent</a> &amp;e)</td></tr>
<tr class="separator:a840728deb5d9a5c5fcefd0938524ffe1 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_bitmap_window_system"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3b0f58c3f1e2bc17fe00d7e2016c2dac inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_bitmap_window_system"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_bitm#a3b0f58c3f1e2bc17fe00d7e2016c2dac">PostKeyEvent</a> (<a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">OSWindow</a> w, const <a class="el" href="structopen3d_1_1visualization_1_1gui_1_1_key">KeyEvent</a> &amp;e)</td></tr>
<tr class="separator:a3b0f58c3f1e2bc17fe00d7e2016c2dac inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_bitmap_window_system"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af6efe7ecd162c57c572f42c3043f394d inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_bitmap_window_system"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_bitm#af6efe7ecd162c57c572f42c3043f394d">PostTextInputEvent</a> (<a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">OSWindow</a> w, const <a class="el" href="structopen3d_1_1visualization_1_1gui_1_1_tex">TextInputEvent</a> &amp;e)</td></tr>
<tr class="separator:af6efe7ecd162c57c572f42c3043f394d inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_bitmap_window_system"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a399c213c703052f94b48fb480b8b55a8 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_bitmap_window_system"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_bitm#a399c213c703052f94b48fb480b8b55a8">GetWindowIsVisible</a> (<a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">OSWindow</a> w) const override</td></tr>
<tr class="separator:a399c213c703052f94b48fb480b8b55a8 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_bitmap_window_system"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5efe8e9c21f4fec5519832957d3d364b inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_bitmap_window_system"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_bitm#a5efe8e9c21f4fec5519832957d3d364b">ShowWindow</a> (<a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">OSWindow</a> w, bool show) override</td></tr>
<tr class="separator:a5efe8e9c21f4fec5519832957d3d364b inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_bitmap_window_system"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a73676e93c82066bffa2b0cd0a621c36a inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_bitmap_window_system"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_bitm#a73676e93c82066bffa2b0cd0a621c36a">RaiseWindowToTop</a> (<a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">OSWindow</a> w) override</td></tr>
<tr class="separator:a73676e93c82066bffa2b0cd0a621c36a inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_bitmap_window_system"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f1408da1fc0c27fb9ece0576159ba15 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_bitmap_window_system"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_bitm#a3f1408da1fc0c27fb9ece0576159ba15">IsActiveWindow</a> (<a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">OSWindow</a> w) const override</td></tr>
<tr class="separator:a3f1408da1fc0c27fb9ece0576159ba15 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_bitmap_window_system"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8c4cbfbc1cb221ae241451ba460b0045 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_bitmap_window_system"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structopen3d_1_1visualization_1_1gui_1_1_poi">Point</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_bitm#a8c4cbfbc1cb221ae241451ba460b0045">GetWindowPos</a> (<a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">OSWindow</a> w) const override</td></tr>
<tr class="separator:a8c4cbfbc1cb221ae241451ba460b0045 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_bitmap_window_system"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8e15fc9dec0cb57038edadb92d2590fb inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_bitmap_window_system"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_bitm#a8e15fc9dec0cb57038edadb92d2590fb">SetWindowPos</a> (<a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">OSWindow</a> w, int x, int y) override</td></tr>
<tr class="separator:a8e15fc9dec0cb57038edadb92d2590fb inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_bitmap_window_system"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acfbec4f8cf98f30e18b85a22b067a838 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_bitmap_window_system"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structopen3d_1_1visualization_1_1gui_1_1_siz">Size</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_bitm#acfbec4f8cf98f30e18b85a22b067a838">GetWindowSize</a> (<a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">OSWindow</a> w) const override</td></tr>
<tr class="separator:acfbec4f8cf98f30e18b85a22b067a838 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_bitmap_window_system"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a419e444ed0c466af84362051ff5dfb4d inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_bitmap_window_system"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_bitm#a419e444ed0c466af84362051ff5dfb4d">SetWindowSize</a> (<a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">OSWindow</a> w, int <a class="el" href="io_2file__format_2_file_p_c_d_8cpp.375.delay#a2474a5474cbff19523a51eb1de01cda4">width</a>, int <a class="el" href="io_2file__format_2_file_p_c_d_8cpp.375.delay#ad12fc34ce789bce6c8a05d8a17138534">height</a>) override</td></tr>
<tr class="separator:a419e444ed0c466af84362051ff5dfb4d inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_bitmap_window_system"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a829df60178fbb0bf3b0b523439f22cb7 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_bitmap_window_system"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structopen3d_1_1visualization_1_1gui_1_1_siz">Size</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_bitm#a829df60178fbb0bf3b0b523439f22cb7">GetWindowSizePixels</a> (<a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">OSWindow</a> w) const override</td></tr>
<tr class="separator:a829df60178fbb0bf3b0b523439f22cb7 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_bitmap_window_system"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a13afffa81ff00fb0ddb5643889487c9f inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_bitmap_window_system"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_bitm#a13afffa81ff00fb0ddb5643889487c9f">SetWindowSizePixels</a> (<a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">OSWindow</a> w, const <a class="el" href="structopen3d_1_1visualization_1_1gui_1_1_siz">Size</a> &amp;<a class="el" href="io_2file__format_2_file_p_c_d_8cpp.375.delay#a439227feff9d7f55384e8780cfc2eb82">size</a>) override</td></tr>
<tr class="separator:a13afffa81ff00fb0ddb5643889487c9f inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_bitmap_window_system"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab6ebd23d5e16e38616fd6bcb33a16a05 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_bitmap_window_system"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_bitm#ab6ebd23d5e16e38616fd6bcb33a16a05">GetWindowScaleFactor</a> (<a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">OSWindow</a> w) const override</td></tr>
<tr class="separator:ab6ebd23d5e16e38616fd6bcb33a16a05 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_bitmap_window_system"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2f6849064a996ec9b3385700d6821f81 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_bitmap_window_system"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_bitm#a2f6849064a996ec9b3385700d6821f81">GetUIScaleFactor</a> (<a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">OSWindow</a> w) const override</td></tr>
<tr class="separator:a2f6849064a996ec9b3385700d6821f81 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_bitmap_window_system"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2e38a720ded991233ab7f31829235558 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_bitmap_window_system"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_bitm#a2e38a720ded991233ab7f31829235558">SetWindowTitle</a> (<a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">OSWindow</a> w, const char *title) override</td></tr>
<tr class="separator:a2e38a720ded991233ab7f31829235558 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_bitmap_window_system"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa72784b7ce6b23932be15c172f6ca6b0 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_bitmap_window_system"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structopen3d_1_1visualization_1_1gui_1_1_poi">Point</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_bitm#aa72784b7ce6b23932be15c172f6ca6b0">GetMousePosInWindow</a> (<a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">OSWindow</a> w) const override</td></tr>
<tr class="separator:aa72784b7ce6b23932be15c172f6ca6b0 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_bitmap_window_system"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6d37d71863b316b652aafb9858b54b20 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_bitmap_window_system"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_bitm#a6d37d71863b316b652aafb9858b54b20">GetMouseButtons</a> (<a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">OSWindow</a> w) const override</td></tr>
<tr class="separator:a6d37d71863b316b652aafb9858b54b20 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_bitmap_window_system"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeda1f8bc55855749c5c4ca531ce13660 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_bitmap_window_system"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_bitm#aeda1f8bc55855749c5c4ca531ce13660">CancelUserClose</a> (<a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">OSWindow</a> w) override</td></tr>
<tr class="separator:aeda1f8bc55855749c5c4ca531ce13660 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_bitmap_window_system"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8ec8372165d75fe95763a9d59142c3c0 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_bitmap_window_system"><td class="memItemLeft" align="right" valign="top">void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_bitm#a8ec8372165d75fe95763a9d59142c3c0">GetNativeDrawable</a> (<a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">OSWindow</a> w) override</td></tr>
<tr class="separator:a8ec8372165d75fe95763a9d59142c3c0 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_bitmap_window_system"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1b94624dfcaf6bc29419379fddece4ad inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_bitmap_window_system"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-19">rendering::FilamentRenderer</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_bitm#a1b94624dfcaf6bc29419379fddece4ad">CreateRenderer</a> (<a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">OSWindow</a> w) override</td></tr>
<tr class="separator:a1b94624dfcaf6bc29419379fddece4ad inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_bitmap_window_system"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a38acbcc2b4bfe90e7cb95072698b6792 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_bitmap_window_system"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_bitm#a38acbcc2b4bfe90e7cb95072698b6792">ResizeRenderer</a> (<a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">OSWindow</a> w, <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-19">rendering::FilamentRenderer</a> *renderer) override</td></tr>
<tr class="separator:a38acbcc2b4bfe90e7cb95072698b6792 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_bitmap_window_system"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ace8d80b05828b3d28c4aa145963e6c50 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_bitmap_window_system"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_menu-2">MenuBase</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_bitm#ace8d80b05828b3d28c4aa145963e6c50">CreateOSMenu</a> () override</td></tr>
<tr class="separator:ace8d80b05828b3d28c4aa145963e6c50 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_bitmap_window_system"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window_system"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window_system')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2">open3d::visualization::gui::WindowSystem</a></td></tr>
<tr class="memitem:a27d44dee8f562e760d0f23442c84ff82 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window_system"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a27d44dee8f562e760d0f23442c84ff82">~WindowSystem</a> ()</td></tr>
<tr class="separator:a27d44dee8f562e760d0f23442c84ff82 inherit pub_methods_classopen3d_1_1visualization_1_1gui_1_1_window_system"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a6ead48c1116aef40d66f4dcbf195c63f"><td class="memItemLeft" align="right" valign="top">static std::shared_ptr&lt; <a class="el" href="classopen3d_1_1visualization_1_1webrtc__serv-10">WebRTCWindowSystem</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1webrtc__serv-10#a6ead48c1116aef40d66f4dcbf195c63f">GetInstance</a> ()</td></tr>
<tr class="separator:a6ead48c1116aef40d66f4dcbf195c63f"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_types_classopen3d_1_1visualization_1_1gui_1_1_bitmap_window_system"><td colspan="2" onclick="javascript:toggleInherit('pub_types_classopen3d_1_1visualization_1_1gui_1_1_bitmap_window_system')"><img src="closed.png" alt="-"/>&#160;Public Types inherited from <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_bitm">open3d::visualization::gui::BitmapWindowSystem</a></td></tr>
<tr class="memitem:a6b1524827ecc224d6d7712404231c3f9 inherit pub_types_classopen3d_1_1visualization_1_1gui_1_1_bitmap_window_system"><td class="memItemLeft" align="right" valign="top">enum class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_bitm#a6b1524827ecc224d6d7712404231c3f9">Rendering</a> { <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_bitm#a6b1524827ecc224d6d7712404231c3f9a1e23852820b9154316c7c06e2b7ba051">NORMAL</a>
, <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_bitm#a6b1524827ecc224d6d7712404231c3f9a8fbd60bd137c7b5abc38d710feb34df5">HEADLESS</a>
 }</td></tr>
<tr class="separator:a6b1524827ecc224d6d7712404231c3f9 inherit pub_types_classopen3d_1_1visualization_1_1gui_1_1_bitmap_window_system"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a79eb4d0a9f8e4db6c3c5899fff491bf7 inherit pub_types_classopen3d_1_1visualization_1_1gui_1_1_bitmap_window_system"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_bitm#a79eb4d0a9f8e4db6c3c5899fff491bf7">OnDrawCallback</a> = std::function&lt; void(<a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind">Window</a> *, std::shared_ptr&lt; <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &gt;)&gt;</td></tr>
<tr class="separator:a79eb4d0a9f8e4db6c3c5899fff491bf7 inherit pub_types_classopen3d_1_1visualization_1_1gui_1_1_bitmap_window_system"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_types_classopen3d_1_1visualization_1_1gui_1_1_window_system"><td colspan="2" onclick="javascript:toggleInherit('pub_types_classopen3d_1_1visualization_1_1gui_1_1_window_system')"><img src="closed.png" alt="-"/>&#160;Public Types inherited from <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2">open3d::visualization::gui::WindowSystem</a></td></tr>
<tr class="memitem:a7cc99ba75236df4f5d2a815a77e7a27b inherit pub_types_classopen3d_1_1visualization_1_1gui_1_1_window_system"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">OSWindow</a> = void *</td></tr>
<tr class="separator:a7cc99ba75236df4f5d2a815a77e7a27b inherit pub_types_classopen3d_1_1visualization_1_1gui_1_1_window_system"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_static_attribs_classopen3d_1_1visualization_1_1gui_1_1_window_system"><td colspan="2" onclick="javascript:toggleInherit('pub_static_attribs_classopen3d_1_1visualization_1_1gui_1_1_window_system')"><img src="closed.png" alt="-"/>&#160;Static Public Attributes inherited from <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2">open3d::visualization::gui::WindowSystem</a></td></tr>
<tr class="memitem:aec5141ae677f8cd297c19c9ca152791f inherit pub_static_attribs_classopen3d_1_1visualization_1_1gui_1_1_window_system"><td class="memItemLeft" align="right" valign="top">static constexpr int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#aec5141ae677f8cd297c19c9ca152791f">FLAG_VISIBLE</a> = 0</td></tr>
<tr class="separator:aec5141ae677f8cd297c19c9ca152791f inherit pub_static_attribs_classopen3d_1_1visualization_1_1gui_1_1_window_system"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a9bdea49f94b5ab46d43a8aeea3feb9 inherit pub_static_attribs_classopen3d_1_1visualization_1_1gui_1_1_window_system"><td class="memItemLeft" align="right" valign="top">static constexpr int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a6a9bdea49f94b5ab46d43a8aeea3feb9">FLAG_HIDDEN</a> = (1 &lt;&lt; 0)</td></tr>
<tr class="separator:a6a9bdea49f94b5ab46d43a8aeea3feb9 inherit pub_static_attribs_classopen3d_1_1visualization_1_1gui_1_1_window_system"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a207eccd6e23e4098fff16d02a1a0d0c6 inherit pub_static_attribs_classopen3d_1_1visualization_1_1gui_1_1_window_system"><td class="memItemLeft" align="right" valign="top">static constexpr int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a207eccd6e23e4098fff16d02a1a0d0c6">FLAG_TOPMOST</a> = (1 &lt;&lt; 1)</td></tr>
<tr class="separator:a207eccd6e23e4098fff16d02a1a0d0c6 inherit pub_static_attribs_classopen3d_1_1visualization_1_1gui_1_1_window_system"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p><a class="el" href="classopen3d_1_1visualization_1_1webrtc__serv-10" title="WebRTCWindowSystem is a BitmapWindowSystem with a WebRTC server that sends video frames to remote cli...">WebRTCWindowSystem</a> is a BitmapWindowSystem with a WebRTC server that sends video frames to remote clients for visualization. </p>
<p><a class="el" href="classopen3d_1_1visualization_1_1webrtc__serv-10" title="WebRTCWindowSystem is a BitmapWindowSystem with a WebRTC server that sends video frames to remote cli...">WebRTCWindowSystem</a> owns a <a class="el" href="classopen3d_1_1visualization_1_1webrtc__serv-7">PeerConnectionManager</a>, which manages all things related to the WebRTC connections, e.g. get media lists, get and add ICE candidates, connect to a media and hangup.</p>
<p>When the client visit a Open3D visualizer's website for visualization (a.k.a. standalone mode), an HTTP handshake server will be used to serve the website and perform handshake to establish the WebRTC connection. In Jupyter mode, the HTTP handshake server is disabled and the handshake is done via Jupyter's JavaScript&lt;-&gt;Python communication channel.</p>
<p><a class="el" href="classopen3d_1_1visualization_1_1webrtc__serv-10" title="WebRTCWindowSystem is a BitmapWindowSystem with a WebRTC server that sends video frames to remote cli...">WebRTCWindowSystem</a> shall be used as a global singleton. Both the <a class="el" href="classopen3d_1_1visualization_1_1webrtc__serv-7">PeerConnectionManager</a> and the HTTP handshake server runs on different threads. </p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a0500e394e371faed9f6b6d093b125b63"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0500e394e371faed9f6b6d093b125b63">&#9670;&nbsp;</a></span>~WebRTCWindowSystem()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">open3d::visualization::webrtc_server::WebRTCWindowSystem::~WebRTCWindowSystem </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="acbff2d0322a1072c8a2fae3324445414"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acbff2d0322a1072c8a2fae3324445414">&#9670;&nbsp;</a></span>CallHttpAPI()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string open3d::visualization::webrtc_server::WebRTCWindowSystem::CallHttpAPI </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>entry_point</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>query_string</em> = <code>&quot;&quot;</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>data</em> = <code>&quot;&quot;</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Call <a class="el" href="classopen3d_1_1visualization_1_1webrtc__serv-7">PeerConnectionManager</a>'s web request API. </p>
<p>This function is called in JavaScript via Python binding to mimic the behavior of sending HTTP request via fetch() in JavaScript.</p>
<p>With fetch: data = {method: "POST", body: JSON.stringify(candidate)}; fetch("/api/addIceCandidate?peerid=" + peerid, data);</p>
<p>Now with CallHttpAPI: <a class="el" href="namespaceopen3d_1_1visualization_1_1webrtc__">open3d.visualization.webrtc_server</a>("/api/addIceCandidate", "?peerid=" + peerid, data["body"]);</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">entry_point</td><td>URL part before '?'. </td></tr>
    <tr><td class="paramname">query_string</td><td>URL part after '?', including '?'. If '?' is not the first character or if the string is empty, the query_string is ignored. </td></tr>
    <tr><td class="paramname">data</td><td>JSON-encoded string. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="aeef2643dab421ed19449cf7bed2b9bf9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeef2643dab421ed19449cf7bed2b9bf9">&#9670;&nbsp;</a></span>CloseWindowConnections()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::webrtc_server::WebRTCWindowSystem::CloseWindowConnections </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>window_uid</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Close all WebRTC connections that correspond to a Window. </p>

</div>
</div>
<a id="a334f76c500eb1390bf69a93867581a48"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a334f76c500eb1390bf69a93867581a48">&#9670;&nbsp;</a></span>CreateOSWindow()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">WebRTCWindowSystem::OSWindow</a> open3d::visualization::webrtc_server::WebRTCWindowSystem::CreateOSWindow </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind">gui::Window</a> *&#160;</td>
          <td class="paramname"><em>o3d_window</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>width</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>height</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>title</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>flags</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented from <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_bitm#a64fa2bff897f1d0c67d3a68f2545d35f">open3d::visualization::gui::BitmapWindowSystem</a>.</p>

</div>
</div>
<a id="a1d37bbf4e883b33d1b25b439d81998eb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1d37bbf4e883b33d1b25b439d81998eb">&#9670;&nbsp;</a></span>DestroyWindow()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::webrtc_server::WebRTCWindowSystem::DestroyWindow </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">OSWindow</a>&#160;</td>
          <td class="paramname"><em>w</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented from <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_bitm#a7fd5688ed18baf77ef6963eafafd945d">open3d::visualization::gui::BitmapWindowSystem</a>.</p>

</div>
</div>
<a id="ab63aac4c231cc2dded4ea2351d6ad294"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab63aac4c231cc2dded4ea2351d6ad294">&#9670;&nbsp;</a></span>DisableHttpHandshake()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::webrtc_server::WebRTCWindowSystem::DisableHttpHandshake </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>HTTP handshake server is enabled by default. In Jupyter environment, call <a class="el" href="classopen3d_1_1visualization_1_1webrtc__serv-10#ab63aac4c231cc2dded4ea2351d6ad294">DisableHttpHandshake()</a> before <a class="el" href="classopen3d_1_1visualization_1_1webrtc__serv-10#a1d78380205271b2fcd44155e4726c3aa" title="Start WebRTC server in a background thread.">StartWebRTCServer()</a>. </p>

</div>
</div>
<a id="a6309ba63e3c2407034ccc16d21435620"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6309ba63e3c2407034ccc16d21435620">&#9670;&nbsp;</a></span>EnableWebRTC()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::webrtc_server::WebRTCWindowSystem::EnableWebRTC </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Sets <a class="el" href="classopen3d_1_1visualization_1_1webrtc__serv-10" title="WebRTCWindowSystem is a BitmapWindowSystem with a WebRTC server that sends video frames to remote cli...">WebRTCWindowSystem</a> as the default window system in Application. This enables a global WebRTC server and each <a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind">gui::Window</a> will be rendered to a WebRTC video stream. </p>

</div>
</div>
<a id="a6ead48c1116aef40d66f4dcbf195c63f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6ead48c1116aef40d66f4dcbf195c63f">&#9670;&nbsp;</a></span>GetInstance()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::shared_ptr&lt; <a class="el" href="classopen3d_1_1visualization_1_1webrtc__serv-10">WebRTCWindowSystem</a> &gt; open3d::visualization::webrtc_server::WebRTCWindowSystem::GetInstance </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="af5788c05b8ff14082ae91a73f7b80d3f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af5788c05b8ff14082ae91a73f7b80d3f">&#9670;&nbsp;</a></span>GetOSWindowByUID()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">WebRTCWindowSystem::OSWindow</a> open3d::visualization::webrtc_server::WebRTCWindowSystem::GetOSWindowByUID </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>uid</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="aff0fa0e470725e5ee18b8be8e25b2ec2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aff0fa0e470725e5ee18b8be8e25b2ec2">&#9670;&nbsp;</a></span>GetWindowUID()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string open3d::visualization::webrtc_server::WebRTCWindowSystem::GetWindowUID </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">WebRTCWindowSystem::OSWindow</a>&#160;</td>
          <td class="paramname"><em>w</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ab6fb659fb0fd0af2051659afa3375e3d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab6fb659fb0fd0af2051659afa3375e3d">&#9670;&nbsp;</a></span>GetWindowUIDs()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt; std::string &gt; open3d::visualization::webrtc_server::WebRTCWindowSystem::GetWindowUIDs </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>List available windows. </p>

</div>
</div>
<a id="ae910c1634bdc6184178c90e5a3d4625d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae910c1634bdc6184178c90e5a3d4625d">&#9670;&nbsp;</a></span>OnDataChannelMessage()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string open3d::visualization::webrtc_server::WebRTCWindowSystem::OnDataChannelMessage </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>message</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Client -&gt; server message. </p><dl class="section return"><dt>Returns</dt><dd>Message reply that should be sent back to the client. </dd></dl>

</div>
</div>
<a id="ae797ce076e6810d9260b24993fff61fa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae797ce076e6810d9260b24993fff61fa">&#9670;&nbsp;</a></span>OnFrame()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::webrtc_server::WebRTCWindowSystem::OnFrame </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>window_uid</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::shared_ptr&lt; <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>im</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Server -&gt; client frame. </p>

</div>
</div>
<a id="aeed2c20b42852237a1808c54bb15d296"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeed2c20b42852237a1808c54bb15d296">&#9670;&nbsp;</a></span>RegisterDataChannelMessageCallback()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::webrtc_server::WebRTCWindowSystem::RegisterDataChannelMessageCallback </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>class_name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::function&lt; std::string(const std::string &amp;)&gt;&#160;</td>
          <td class="paramname"><em>callback</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>When the data channel receives a valid JSON string, the <code>class_name</code> property of the JSON object will be examined and the corresponding callback function will be called. The callback should return a string reply, which will be sent back to the client.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">class_name</td><td>The value of the <code>class_name</code> property of the JSON object. </td></tr>
    <tr><td class="paramname">callback</td><td>The callback function that will be called when a JSON object with the matching <code>class_name</code> is received via the data channel.</td></tr>
  </table>
  </dd>
</dl>
<div class="fragment"><div class="line"><span class="comment">// Register callback in C++</span></div>
<div class="line"><span class="keyword">auto</span> ws =</div>
<div class="line"><a class="code" href="classopen3d_1_1visualization_1_1webrtc__serv-10#a6ead48c1116aef40d66f4dcbf195c63f">visualization::webrtc_server::WebRTCWindowSystem::GetInstance</a>();</div>
<div class="line">ws-&gt;EnableWebRTC();</div>
<div class="line">ws-&gt;RegisterDataChannelMessageCallback(<span class="stringliteral">&quot;webapp/input&quot;</span>, <span class="stringliteral">&quot;input&quot;</span>,</div>
<div class="line">    [](<span class="keyword">const</span> std::string &amp;<a class="code" href="namespaceopen3d_1_1io_1_1k4a__plugin.362.del#ab20d0a0a37985f881854441f0bddbc90">data</a>) {</div>
<div class="line">        std::string reply = <a class="code" href="_filament_resource_manager_8cpp.html#a1acaede49c416601578d9bbd854f5106">fmt::format</a>(<span class="stringliteral">&quot;Received dataChannel message&quot;</span></div>
<div class="line">        <span class="stringliteral">&quot; for class_name &#39;webapp/input&#39; with data: {}&quot;</span>, <a class="code" href="namespaceopen3d_1_1io_1_1k4a__plugin.362.del#ab20d0a0a37985f881854441f0bddbc90">data</a>);</div>
<div class="line">        <a class="code" href="_logging_8h.html#a57eb3ffc98e6ad1bdbed0a980a54c484">utility::LogInfo</a>(reply);</div>
<div class="line">        <span class="keywordflow">return</span> reply;</div>
<div class="line">    });</div>
<div class="ttc" id="a_filament_resource_manager_8cpp_html_a1acaede49c416601578d9bbd854f5106"><div class="ttname"><a href="_filament_resource_manager_8cpp.html#a1acaede49c416601578d9bbd854f5106">format</a></div><div class="ttdeci">filament::Texture::InternalFormat format</div><div class="ttdef"><b>Definition:</b> FilamentResourceManager.cpp:195</div></div>
<div class="ttc" id="a_logging_8h_html_a57eb3ffc98e6ad1bdbed0a980a54c484"><div class="ttname"><a href="_logging_8h.html#a57eb3ffc98e6ad1bdbed0a980a54c484">LogInfo</a></div><div class="ttdeci">#define LogInfo(...)</div><div class="ttdef"><b>Definition:</b> Logging.h:70</div></div>
<div class="ttc" id="aclassopen3d_1_1visualization_1_1webrtc__server_1_1_web_r_t_c_window_system_html_a6ead48c1116aef40d66f4dcbf195c63f"><div class="ttname"><a href="classopen3d_1_1visualization_1_1webrtc__serv-10#a6ead48c1116aef40d66f4dcbf195c63f">open3d::visualization::webrtc_server::WebRTCWindowSystem::GetInstance</a></div><div class="ttdeci">static std::shared_ptr&lt; WebRTCWindowSystem &gt; GetInstance()</div><div class="ttdef"><b>Definition:</b> WebRTCWindowSystem.cpp:111</div></div>
<div class="ttc" id="anamespaceopen3d_1_1io_1_1k4a__plugin_html_ab20d0a0a37985f881854441f0bddbc90"><div class="ttname"><a href="namespaceopen3d_1_1io_1_1k4a__plugin.362.del#ab20d0a0a37985f881854441f0bddbc90">open3d::io::k4a_plugin::data</a></div><div class="ttdeci">const char const char value recording_handle imu_sample recording_handle uint8_t data</div><div class="ttdef"><b>Definition:</b> K4aPlugin.cpp:269</div></div>
</div><!-- fragment --><p> <br  />
</p><div class="fragment"><div class="line">   /* Send message in JavaScript to trigger callback. this is</div>
<div class="line">*  WebRTCStreamer object */</div>
<div class="line">   this.dataChannel.send(&#39;{&quot;class_name&quot;:&quot;webapp/input&quot;,</div>
<div class="line">       &quot;data&quot;:&quot;Test event&quot;}&#39;);</div>
</div><!-- fragment --> 
</div>
</div>
<a id="acc226f6445bf195a7ec34a2952c42305"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acc226f6445bf195a7ec34a2952c42305">&#9670;&nbsp;</a></span>SendInitFrames()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::webrtc_server::WebRTCWindowSystem::SendInitFrames </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>window_uid</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Send initial frames. This flushes the WebRTC video stream. After the initial frames, new frames will only be sent at triggered events. </p>

</div>
</div>
<a id="a1d78380205271b2fcd44155e4726c3aa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1d78380205271b2fcd44155e4726c3aa">&#9670;&nbsp;</a></span>StartWebRTCServer()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::webrtc_server::WebRTCWindowSystem::StartWebRTCServer </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Start WebRTC server in a background thread. </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/runner/work/Open3D/Open3D/cpp/open3d/visualization/webrtc_server/<a class="el" href="_web_r_t_c_window_system_8h_source.92d.delay">WebRTCWindowSystem.h (9238339 (Tue Mar 14 18:49:09 2023 -0700))</a></li>
<li>/home/runner/work/Open3D/Open3D/cpp/open3d/visualization/webrtc_server/<a class="el" href="_web_r_t_c_window_system_8cpp.html">WebRTCWindowSystem.cpp (9238339 (Tue Mar 14 18:49:09 2023 -0700))</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1
</small></address>
</body>

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/classopen3d_1_1visualization_1_1webrtc__server_1_1_web_r_t_c_window_system.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 11:01:51 GMT -->
</html>
