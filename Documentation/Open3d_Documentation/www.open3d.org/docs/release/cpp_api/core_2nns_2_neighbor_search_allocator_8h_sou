<!-- HTML header for doxygen 1.8.20-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/core_2nns_2_neighbor_search_allocator_8h_source.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 11:03:32 GMT -->
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Open3D (C++ API): /home/runner/work/Open3D/Open3D/cpp/open3d/core/nns/NeighborSearchAllocator.h (9238339 (Tue Mar 14 18:49:09 2023 -0700)) Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js", "TeX/AMSmath.html", "TeX/AMSsymbols.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="../../../../cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-3TQPKGV6Z3"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());
  gtag('config', 'G-3TQPKGV6Z3');
</script>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="open3d_logo.ico"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Open3D (C++ API)
   &#160;<span id="projectnumber">0.17.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.html');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.html','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_df511e5bd85cec96854b39d5e1c27aa8.357.del">cpp</a></li><li class="navelem"><a class="el" href="dir_f8cc15b2217ff526bd336cf17635da2a.358.del">open3d</a></li><li class="navelem"><a class="el" href="dir_559a533dc613f808f5747b65451c8a78.48c.del">core</a></li><li class="navelem"><a class="el" href="dir_537ba5981d577830b3c67832c5ce0533.7db.del">nns</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">NeighborSearchAllocator.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="core_2nns_2_neighbor_search_allocator_8h.b9a">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">// ----------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// -                        Open3D: www.open3d.org                            -</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// ----------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">// Copyright (c) 2018-2023 www.open3d.org</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">// SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">// ----------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160; </div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160; </div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_device_8h.html">open3d/core/Device.h</a>&quot;</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_dtype_8h.html">open3d/core/Dtype.h</a>&quot;</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_tensor_8h.html">open3d/core/Tensor.h</a>&quot;</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160; </div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceopen3d.html">open3d</a> {</div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="keyword">namespace </span>core {</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="keyword">namespace </span>nns {</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160; </div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> T, <span class="keyword">class</span> TIndex = <span class="keywordtype">int</span>32_t&gt;</div>
<div class="line"><a name="l00019"></a><span class="lineno"><a class="line" href="classopen3d_1_1core_1_1nns_1_1_neighbor_sear">   19</a></span>&#160;<span class="keyword">class </span><a class="code" href="classopen3d_1_1core_1_1nns_1_1_neighbor_sear">NeighborSearchAllocator</a> {</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00021"></a><span class="lineno"><a class="line" href="classopen3d_1_1core_1_1nns_1_1_neighbor_sear#ac6cde304ae8f6afe56c97a06f73a4298">   21</a></span>&#160;    <a class="code" href="classopen3d_1_1core_1_1nns_1_1_neighbor_sear#ac6cde304ae8f6afe56c97a06f73a4298">NeighborSearchAllocator</a>(<a class="code" href="classopen3d_1_1core_1_1_device.html">Device</a> device) : device_(device) {}</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160; </div>
<div class="line"><a name="l00023"></a><span class="lineno"><a class="line" href="classopen3d_1_1core_1_1nns_1_1_neighbor_sear#a6dbfba44c31be4871ba1d3a6bc7634a8">   23</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classopen3d_1_1core_1_1nns_1_1_neighbor_sear#a6dbfba44c31be4871ba1d3a6bc7634a8">AllocIndices</a>(TIndex** ptr, <span class="keywordtype">size_t</span> num) {</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;        indices_ = <a class="code" href="classopen3d_1_1core_1_1_tensor.html#a214f3b8317ac5409ea148c14def11aaf">Tensor::Empty</a>({int64_t(num)}, Dtype::FromType&lt;TIndex&gt;(),</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;                                 device_);</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;        *ptr = indices_.<a class="code" href="classopen3d_1_1core_1_1_tensor.html#a02fcf79268d821e0b1081207ea02f11c">GetDataPtr</a>&lt;TIndex&gt;();</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;    }</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160; </div>
<div class="line"><a name="l00029"></a><span class="lineno"><a class="line" href="classopen3d_1_1core_1_1nns_1_1_neighbor_sear#aee6b336c7c06aa7b18057a08cc79c563">   29</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classopen3d_1_1core_1_1nns_1_1_neighbor_sear#aee6b336c7c06aa7b18057a08cc79c563">AllocIndices</a>(TIndex** ptr, <span class="keywordtype">size_t</span> num, TIndex value) {</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;        indices_ = <a class="code" href="classopen3d_1_1core_1_1_tensor.html#a8bb690e133a87cc1ff4feb4f4d6ab9cc">Tensor::Full</a>({int64_t(num)}, value,</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;                                Dtype::FromType&lt;TIndex&gt;(), device_);</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;        *ptr = indices_.<a class="code" href="classopen3d_1_1core_1_1_tensor.html#a02fcf79268d821e0b1081207ea02f11c">GetDataPtr</a>&lt;TIndex&gt;();</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    }</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160; </div>
<div class="line"><a name="l00035"></a><span class="lineno"><a class="line" href="classopen3d_1_1core_1_1nns_1_1_neighbor_sear#a166383acc27a45f0e28eb8e9beb5a6a7">   35</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classopen3d_1_1core_1_1nns_1_1_neighbor_sear#a166383acc27a45f0e28eb8e9beb5a6a7">AllocDistances</a>(T** ptr, <span class="keywordtype">size_t</span> num) {</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;        distances_ =</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;                <a class="code" href="classopen3d_1_1core_1_1_tensor.html#a214f3b8317ac5409ea148c14def11aaf">Tensor::Empty</a>({int64_t(num)}, Dtype::FromType&lt;T&gt;(), device_);</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;        *ptr = distances_.<a class="code" href="classopen3d_1_1core_1_1_tensor.html#a02fcf79268d821e0b1081207ea02f11c">GetDataPtr</a>&lt;T&gt;();</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    }</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160; </div>
<div class="line"><a name="l00041"></a><span class="lineno"><a class="line" href="classopen3d_1_1core_1_1nns_1_1_neighbor_sear#a4ecf7e56cfca1331694a225586c1808b">   41</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classopen3d_1_1core_1_1nns_1_1_neighbor_sear#a4ecf7e56cfca1331694a225586c1808b">AllocDistances</a>(T** ptr, <span class="keywordtype">size_t</span> num, T value) {</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;        distances_ = <a class="code" href="classopen3d_1_1core_1_1_tensor.html#a8bb690e133a87cc1ff4feb4f4d6ab9cc">Tensor::Full</a>({int64_t(num)}, value, Dtype::FromType&lt;T&gt;(),</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;                                  device_);</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;        *ptr = distances_.<a class="code" href="classopen3d_1_1core_1_1_tensor.html#a02fcf79268d821e0b1081207ea02f11c">GetDataPtr</a>&lt;T&gt;();</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    }</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160; </div>
<div class="line"><a name="l00047"></a><span class="lineno"><a class="line" href="classopen3d_1_1core_1_1nns_1_1_neighbor_sear#aa4b7561bfad453458d3a983adc87ac8c">   47</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classopen3d_1_1core_1_1nns_1_1_neighbor_sear#aa4b7561bfad453458d3a983adc87ac8c">AllocCounts</a>(TIndex** ptr, <span class="keywordtype">size_t</span> num) {</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;        counts_ = <a class="code" href="classopen3d_1_1core_1_1_tensor.html#a214f3b8317ac5409ea148c14def11aaf">Tensor::Empty</a>({int64_t(num)}, Dtype::FromType&lt;TIndex&gt;(),</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;                                device_);</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;        *ptr = counts_.<a class="code" href="classopen3d_1_1core_1_1_tensor.html#a02fcf79268d821e0b1081207ea02f11c">GetDataPtr</a>&lt;TIndex&gt;();</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    }</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160; </div>
<div class="line"><a name="l00053"></a><span class="lineno"><a class="line" href="classopen3d_1_1core_1_1nns_1_1_neighbor_sear#a0cc4b1b6426565571a87c20f8b73296f">   53</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classopen3d_1_1core_1_1nns_1_1_neighbor_sear#a0cc4b1b6426565571a87c20f8b73296f">AllocCounts</a>(TIndex** ptr, <span class="keywordtype">size_t</span> num, TIndex value) {</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;        counts_ = <a class="code" href="classopen3d_1_1core_1_1_tensor.html#a8bb690e133a87cc1ff4feb4f4d6ab9cc">Tensor::Full</a>({int64_t(num)}, value, Dtype::FromType&lt;TIndex&gt;(),</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;                               device_);</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        *ptr = counts_.<a class="code" href="classopen3d_1_1core_1_1_tensor.html#a02fcf79268d821e0b1081207ea02f11c">GetDataPtr</a>&lt;TIndex&gt;();</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    }</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160; </div>
<div class="line"><a name="l00059"></a><span class="lineno"><a class="line" href="classopen3d_1_1core_1_1nns_1_1_neighbor_sear#a336c81fd37eb8da23caaeb5ad5836e94">   59</a></span>&#160;    <span class="keyword">const</span> TIndex* <a class="code" href="classopen3d_1_1core_1_1nns_1_1_neighbor_sear#a336c81fd37eb8da23caaeb5ad5836e94">IndicesPtr</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> indices_.<a class="code" href="classopen3d_1_1core_1_1_tensor.html#a02fcf79268d821e0b1081207ea02f11c">GetDataPtr</a>&lt;TIndex&gt;(); }</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160; </div>
<div class="line"><a name="l00061"></a><span class="lineno"><a class="line" href="classopen3d_1_1core_1_1nns_1_1_neighbor_sear#a1660cd0437c9e3a4cbd5a7b7267c82b5">   61</a></span>&#160;    <span class="keyword">const</span> T* <a class="code" href="classopen3d_1_1core_1_1nns_1_1_neighbor_sear#a1660cd0437c9e3a4cbd5a7b7267c82b5">DistancesPtr</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> distances_.<a class="code" href="classopen3d_1_1core_1_1_tensor.html#a02fcf79268d821e0b1081207ea02f11c">GetDataPtr</a>&lt;T&gt;(); }</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160; </div>
<div class="line"><a name="l00063"></a><span class="lineno"><a class="line" href="classopen3d_1_1core_1_1nns_1_1_neighbor_sear#adb8f73275b2ad13692fe8910109b8775">   63</a></span>&#160;    <span class="keyword">const</span> TIndex* <a class="code" href="classopen3d_1_1core_1_1nns_1_1_neighbor_sear#adb8f73275b2ad13692fe8910109b8775">CountsPtr</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> counts_.<a class="code" href="classopen3d_1_1core_1_1_tensor.html#a02fcf79268d821e0b1081207ea02f11c">GetDataPtr</a>&lt;TIndex&gt;(); }</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160; </div>
<div class="line"><a name="l00065"></a><span class="lineno"><a class="line" href="classopen3d_1_1core_1_1nns_1_1_neighbor_sear#a446efca67cd1298e5894912013f18e64">   65</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a>&amp; <a class="code" href="classopen3d_1_1core_1_1nns_1_1_neighbor_sear#a446efca67cd1298e5894912013f18e64">NeighborsIndex</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> indices_; }</div>
<div class="line"><a name="l00066"></a><span class="lineno"><a class="line" href="classopen3d_1_1core_1_1nns_1_1_neighbor_sear#acee78d3aa583934c45f2c1df24ba1cdc">   66</a></span>&#160;    <a class="code" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a>&amp; <a class="code" href="classopen3d_1_1core_1_1nns_1_1_neighbor_sear#acee78d3aa583934c45f2c1df24ba1cdc">NeighborsIndex_</a>() { <span class="keywordflow">return</span> indices_; }</div>
<div class="line"><a name="l00067"></a><span class="lineno"><a class="line" href="classopen3d_1_1core_1_1nns_1_1_neighbor_sear#a637f8357940f8589f05aa9fb9bb8c8f4">   67</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a>&amp; <a class="code" href="classopen3d_1_1core_1_1nns_1_1_neighbor_sear#a637f8357940f8589f05aa9fb9bb8c8f4">NeighborsDistance</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> distances_; }</div>
<div class="line"><a name="l00068"></a><span class="lineno"><a class="line" href="classopen3d_1_1core_1_1nns_1_1_neighbor_sear#a70a887c6032028de351896a79cd93ab7">   68</a></span>&#160;    <a class="code" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a>&amp; <a class="code" href="classopen3d_1_1core_1_1nns_1_1_neighbor_sear#a70a887c6032028de351896a79cd93ab7">NeighborsDistance_</a>() { <span class="keywordflow">return</span> distances_; }</div>
<div class="line"><a name="l00069"></a><span class="lineno"><a class="line" href="classopen3d_1_1core_1_1nns_1_1_neighbor_sear#a807382f83c29c2bf9de88622fedf7fd1">   69</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a>&amp; <a class="code" href="classopen3d_1_1core_1_1nns_1_1_neighbor_sear#a807382f83c29c2bf9de88622fedf7fd1">NeighborsCount</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> counts_; }</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160; </div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <a class="code" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a> indices_;</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <a class="code" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a> distances_;</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <a class="code" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a> counts_;</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <a class="code" href="classopen3d_1_1core_1_1_device.html">Device</a> device_;</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;};</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160; </div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;}  <span class="comment">// namespace nns</span></div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;}  <span class="comment">// namespace core</span></div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;}  <span class="comment">// namespace open3d</span></div>
<div class="ttc" id="a_device_8h_html"><div class="ttname"><a href="_device_8h.html">Device.h</a></div></div>
<div class="ttc" id="a_dtype_8h_html"><div class="ttname"><a href="_dtype_8h.html">Dtype.h</a></div></div>
<div class="ttc" id="a_tensor_8h_html"><div class="ttname"><a href="_tensor_8h.html">Tensor.h</a></div></div>
<div class="ttc" id="aclassopen3d_1_1core_1_1_device_html"><div class="ttname"><a href="classopen3d_1_1core_1_1_device.html">open3d::core::Device</a></div><div class="ttdef"><b>Definition:</b> Device.h:18</div></div>
<div class="ttc" id="aclassopen3d_1_1core_1_1_tensor_html"><div class="ttname"><a href="classopen3d_1_1core_1_1_tensor.html">open3d::core::Tensor</a></div><div class="ttdef"><b>Definition:</b> Tensor.h:32</div></div>
<div class="ttc" id="aclassopen3d_1_1core_1_1_tensor_html_a02fcf79268d821e0b1081207ea02f11c"><div class="ttname"><a href="classopen3d_1_1core_1_1_tensor.html#a02fcf79268d821e0b1081207ea02f11c">open3d::core::Tensor::GetDataPtr</a></div><div class="ttdeci">T * GetDataPtr()</div><div class="ttdef"><b>Definition:</b> Tensor.h:1133</div></div>
<div class="ttc" id="aclassopen3d_1_1core_1_1_tensor_html_a214f3b8317ac5409ea148c14def11aaf"><div class="ttname"><a href="classopen3d_1_1core_1_1_tensor.html#a214f3b8317ac5409ea148c14def11aaf">open3d::core::Tensor::Empty</a></div><div class="ttdeci">static Tensor Empty(const SizeVector &amp;shape, Dtype dtype, const Device &amp;device=Device(&quot;CPU:0&quot;))</div><div class="ttdoc">Create a tensor with uninitialized values.</div><div class="ttdef"><b>Definition:</b> Tensor.cpp:367</div></div>
<div class="ttc" id="aclassopen3d_1_1core_1_1_tensor_html_a8bb690e133a87cc1ff4feb4f4d6ab9cc"><div class="ttname"><a href="classopen3d_1_1core_1_1_tensor.html#a8bb690e133a87cc1ff4feb4f4d6ab9cc">open3d::core::Tensor::Full</a></div><div class="ttdeci">static Tensor Full(const SizeVector &amp;shape, T fill_value, Dtype dtype, const Device &amp;device=Device(&quot;CPU:0&quot;))</div><div class="ttdoc">Create a tensor fill with specified value.</div><div class="ttdef"><b>Definition:</b> Tensor.h:252</div></div>
<div class="ttc" id="aclassopen3d_1_1core_1_1nns_1_1_neighbor_search_allocator_html"><div class="ttname"><a href="classopen3d_1_1core_1_1nns_1_1_neighbor_sear">open3d::core::nns::NeighborSearchAllocator</a></div><div class="ttdef"><b>Definition:</b> NeighborSearchAllocator.h:19</div></div>
<div class="ttc" id="aclassopen3d_1_1core_1_1nns_1_1_neighbor_search_allocator_html_a0cc4b1b6426565571a87c20f8b73296f"><div class="ttname"><a href="classopen3d_1_1core_1_1nns_1_1_neighbor_sear#a0cc4b1b6426565571a87c20f8b73296f">open3d::core::nns::NeighborSearchAllocator::AllocCounts</a></div><div class="ttdeci">void AllocCounts(TIndex **ptr, size_t num, TIndex value)</div><div class="ttdef"><b>Definition:</b> NeighborSearchAllocator.h:53</div></div>
<div class="ttc" id="aclassopen3d_1_1core_1_1nns_1_1_neighbor_search_allocator_html_a1660cd0437c9e3a4cbd5a7b7267c82b5"><div class="ttname"><a href="classopen3d_1_1core_1_1nns_1_1_neighbor_sear#a1660cd0437c9e3a4cbd5a7b7267c82b5">open3d::core::nns::NeighborSearchAllocator::DistancesPtr</a></div><div class="ttdeci">const T * DistancesPtr() const</div><div class="ttdef"><b>Definition:</b> NeighborSearchAllocator.h:61</div></div>
<div class="ttc" id="aclassopen3d_1_1core_1_1nns_1_1_neighbor_search_allocator_html_a166383acc27a45f0e28eb8e9beb5a6a7"><div class="ttname"><a href="classopen3d_1_1core_1_1nns_1_1_neighbor_sear#a166383acc27a45f0e28eb8e9beb5a6a7">open3d::core::nns::NeighborSearchAllocator::AllocDistances</a></div><div class="ttdeci">void AllocDistances(T **ptr, size_t num)</div><div class="ttdef"><b>Definition:</b> NeighborSearchAllocator.h:35</div></div>
<div class="ttc" id="aclassopen3d_1_1core_1_1nns_1_1_neighbor_search_allocator_html_a336c81fd37eb8da23caaeb5ad5836e94"><div class="ttname"><a href="classopen3d_1_1core_1_1nns_1_1_neighbor_sear#a336c81fd37eb8da23caaeb5ad5836e94">open3d::core::nns::NeighborSearchAllocator::IndicesPtr</a></div><div class="ttdeci">const TIndex * IndicesPtr() const</div><div class="ttdef"><b>Definition:</b> NeighborSearchAllocator.h:59</div></div>
<div class="ttc" id="aclassopen3d_1_1core_1_1nns_1_1_neighbor_search_allocator_html_a446efca67cd1298e5894912013f18e64"><div class="ttname"><a href="classopen3d_1_1core_1_1nns_1_1_neighbor_sear#a446efca67cd1298e5894912013f18e64">open3d::core::nns::NeighborSearchAllocator::NeighborsIndex</a></div><div class="ttdeci">const Tensor &amp; NeighborsIndex() const</div><div class="ttdef"><b>Definition:</b> NeighborSearchAllocator.h:65</div></div>
<div class="ttc" id="aclassopen3d_1_1core_1_1nns_1_1_neighbor_search_allocator_html_a4ecf7e56cfca1331694a225586c1808b"><div class="ttname"><a href="classopen3d_1_1core_1_1nns_1_1_neighbor_sear#a4ecf7e56cfca1331694a225586c1808b">open3d::core::nns::NeighborSearchAllocator::AllocDistances</a></div><div class="ttdeci">void AllocDistances(T **ptr, size_t num, T value)</div><div class="ttdef"><b>Definition:</b> NeighborSearchAllocator.h:41</div></div>
<div class="ttc" id="aclassopen3d_1_1core_1_1nns_1_1_neighbor_search_allocator_html_a637f8357940f8589f05aa9fb9bb8c8f4"><div class="ttname"><a href="classopen3d_1_1core_1_1nns_1_1_neighbor_sear#a637f8357940f8589f05aa9fb9bb8c8f4">open3d::core::nns::NeighborSearchAllocator::NeighborsDistance</a></div><div class="ttdeci">const Tensor &amp; NeighborsDistance() const</div><div class="ttdef"><b>Definition:</b> NeighborSearchAllocator.h:67</div></div>
<div class="ttc" id="aclassopen3d_1_1core_1_1nns_1_1_neighbor_search_allocator_html_a6dbfba44c31be4871ba1d3a6bc7634a8"><div class="ttname"><a href="classopen3d_1_1core_1_1nns_1_1_neighbor_sear#a6dbfba44c31be4871ba1d3a6bc7634a8">open3d::core::nns::NeighborSearchAllocator::AllocIndices</a></div><div class="ttdeci">void AllocIndices(TIndex **ptr, size_t num)</div><div class="ttdef"><b>Definition:</b> NeighborSearchAllocator.h:23</div></div>
<div class="ttc" id="aclassopen3d_1_1core_1_1nns_1_1_neighbor_search_allocator_html_a70a887c6032028de351896a79cd93ab7"><div class="ttname"><a href="classopen3d_1_1core_1_1nns_1_1_neighbor_sear#a70a887c6032028de351896a79cd93ab7">open3d::core::nns::NeighborSearchAllocator::NeighborsDistance_</a></div><div class="ttdeci">Tensor &amp; NeighborsDistance_()</div><div class="ttdef"><b>Definition:</b> NeighborSearchAllocator.h:68</div></div>
<div class="ttc" id="aclassopen3d_1_1core_1_1nns_1_1_neighbor_search_allocator_html_a807382f83c29c2bf9de88622fedf7fd1"><div class="ttname"><a href="classopen3d_1_1core_1_1nns_1_1_neighbor_sear#a807382f83c29c2bf9de88622fedf7fd1">open3d::core::nns::NeighborSearchAllocator::NeighborsCount</a></div><div class="ttdeci">const Tensor &amp; NeighborsCount() const</div><div class="ttdef"><b>Definition:</b> NeighborSearchAllocator.h:69</div></div>
<div class="ttc" id="aclassopen3d_1_1core_1_1nns_1_1_neighbor_search_allocator_html_aa4b7561bfad453458d3a983adc87ac8c"><div class="ttname"><a href="classopen3d_1_1core_1_1nns_1_1_neighbor_sear#aa4b7561bfad453458d3a983adc87ac8c">open3d::core::nns::NeighborSearchAllocator::AllocCounts</a></div><div class="ttdeci">void AllocCounts(TIndex **ptr, size_t num)</div><div class="ttdef"><b>Definition:</b> NeighborSearchAllocator.h:47</div></div>
<div class="ttc" id="aclassopen3d_1_1core_1_1nns_1_1_neighbor_search_allocator_html_ac6cde304ae8f6afe56c97a06f73a4298"><div class="ttname"><a href="classopen3d_1_1core_1_1nns_1_1_neighbor_sear#ac6cde304ae8f6afe56c97a06f73a4298">open3d::core::nns::NeighborSearchAllocator::NeighborSearchAllocator</a></div><div class="ttdeci">NeighborSearchAllocator(Device device)</div><div class="ttdef"><b>Definition:</b> NeighborSearchAllocator.h:21</div></div>
<div class="ttc" id="aclassopen3d_1_1core_1_1nns_1_1_neighbor_search_allocator_html_acee78d3aa583934c45f2c1df24ba1cdc"><div class="ttname"><a href="classopen3d_1_1core_1_1nns_1_1_neighbor_sear#acee78d3aa583934c45f2c1df24ba1cdc">open3d::core::nns::NeighborSearchAllocator::NeighborsIndex_</a></div><div class="ttdeci">Tensor &amp; NeighborsIndex_()</div><div class="ttdef"><b>Definition:</b> NeighborSearchAllocator.h:66</div></div>
<div class="ttc" id="aclassopen3d_1_1core_1_1nns_1_1_neighbor_search_allocator_html_adb8f73275b2ad13692fe8910109b8775"><div class="ttname"><a href="classopen3d_1_1core_1_1nns_1_1_neighbor_sear#adb8f73275b2ad13692fe8910109b8775">open3d::core::nns::NeighborSearchAllocator::CountsPtr</a></div><div class="ttdeci">const TIndex * CountsPtr() const</div><div class="ttdef"><b>Definition:</b> NeighborSearchAllocator.h:63</div></div>
<div class="ttc" id="aclassopen3d_1_1core_1_1nns_1_1_neighbor_search_allocator_html_aee6b336c7c06aa7b18057a08cc79c563"><div class="ttname"><a href="classopen3d_1_1core_1_1nns_1_1_neighbor_sear#aee6b336c7c06aa7b18057a08cc79c563">open3d::core::nns::NeighborSearchAllocator::AllocIndices</a></div><div class="ttdeci">void AllocIndices(TIndex **ptr, size_t num, TIndex value)</div><div class="ttdef"><b>Definition:</b> NeighborSearchAllocator.h:29</div></div>
<div class="ttc" id="anamespaceopen3d_html"><div class="ttname"><a href="namespaceopen3d.html">open3d</a></div><div class="ttdef"><b>Definition:</b> PinholeCameraIntrinsic.cpp:16</div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1
</small></address>
</body>

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/core_2nns_2_neighbor_search_allocator_8h_source.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 11:03:32 GMT -->
</html>
