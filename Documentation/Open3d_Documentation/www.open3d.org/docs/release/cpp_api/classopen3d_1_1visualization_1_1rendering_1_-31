<!-- HTML header for doxygen 1.8.20-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/classopen3d_1_1visualization_1_1rendering_1_1_renderer.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 11:01:45 GMT -->
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Open3D (C++ API): open3d::visualization::rendering::Renderer Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js", "TeX/AMSmath.html", "TeX/AMSsymbols.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="../../../../cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-3TQPKGV6Z3"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());
  gtag('config', 'G-3TQPKGV6Z3');
</script>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="open3d_logo.ico"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Open3D (C++ API)
   &#160;<span id="projectnumber">0.17.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.html');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.html','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceopen3d.html">open3d</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1visualization.html">visualization</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1visualization_1_1renderin">rendering</a></li><li class="navelem"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-31">Renderer</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">open3d::visualization::rendering::Renderer Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_renderer_8h_source.html">Renderer.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for open3d::visualization::rendering::Renderer:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classopen3d_1_1visualization_1_1rendering_1_-59" usemap="#open3d::visualization::rendering::Renderer_map" alt=""/>
  <map id="open3d::visualization::rendering::Renderer_map" name="open3d::visualization::rendering::Renderer_map">
<area href="classopen3d_1_1visualization_1_1rendering_1_-19" alt="open3d::visualization::rendering::FilamentRenderer" shape="rect" coords="0,56,296,80"/>
  </map>
</div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a50157c54f854af72d844df23c513f055"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-31#a50157c54f854af72d844df23c513f055">~Renderer</a> ()=default</td></tr>
<tr class="separator:a50157c54f854af72d844df23c513f055"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1de10f6d3c6ad71607083152d9b09da3"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceopen3d_1_1visualization_1_1renderin#a3e03c6d1e088ec92fbc03dce9560f5e1">SceneHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-31#a1de10f6d3c6ad71607083152d9b09da3">CreateScene</a> ()=0</td></tr>
<tr class="separator:a1de10f6d3c6ad71607083152d9b09da3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3b312d29c15d941a9e96c90c18d289be"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34">Scene</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-31#a3b312d29c15d941a9e96c90c18d289be">GetScene</a> (const <a class="el" href="namespaceopen3d_1_1visualization_1_1renderin#a3e03c6d1e088ec92fbc03dce9560f5e1">SceneHandle</a> &amp;id) const =0</td></tr>
<tr class="separator:a3b312d29c15d941a9e96c90c18d289be"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9b3e50a35171d2bd45195409c8aa56f7"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-31#a9b3e50a35171d2bd45195409c8aa56f7">DestroyScene</a> (const <a class="el" href="namespaceopen3d_1_1visualization_1_1renderin#a3e03c6d1e088ec92fbc03dce9560f5e1">SceneHandle</a> &amp;id)=0</td></tr>
<tr class="separator:a9b3e50a35171d2bd45195409c8aa56f7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a322086f29b413b66c5b6354d192af5fe"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-31#a322086f29b413b66c5b6354d192af5fe">SetClearColor</a> (const Eigen::Vector4f &amp;<a class="el" href="_triangle_mesh_buffers_8cpp.html#aa332976d803be75beb81e81af320bfcb">color</a>)=0</td></tr>
<tr class="separator:a322086f29b413b66c5b6354d192af5fe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af0b8d96499e2487c12e4f729b12ba3a9"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-31#af0b8d96499e2487c12e4f729b12ba3a9">UpdateSwapChain</a> ()=0</td></tr>
<tr class="separator:af0b8d96499e2487c12e4f729b12ba3a9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa35dcd84db369806bc712d51ca654d53"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-31#aa35dcd84db369806bc712d51ca654d53">UpdateBitmapSwapChain</a> (int <a class="el" href="io_2file__format_2_file_p_c_d_8cpp.375.delay#a2474a5474cbff19523a51eb1de01cda4">width</a>, int <a class="el" href="io_2file__format_2_file_p_c_d_8cpp.375.delay#ad12fc34ce789bce6c8a05d8a17138534">height</a>)=0</td></tr>
<tr class="separator:aa35dcd84db369806bc712d51ca654d53"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a95248b9d2e3607ed7327e4a474b012c7"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-31#a95248b9d2e3607ed7327e4a474b012c7">BeginFrame</a> ()=0</td></tr>
<tr class="separator:a95248b9d2e3607ed7327e4a474b012c7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5a3a108cdcca8d0e6682db361b146eef"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-31#a5a3a108cdcca8d0e6682db361b146eef">Draw</a> ()=0</td></tr>
<tr class="separator:a5a3a108cdcca8d0e6682db361b146eef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a244af40b777be6d6608d121a9b9b7dc6"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-31#a244af40b777be6d6608d121a9b9b7dc6">RequestReadPixels</a> (int <a class="el" href="io_2file__format_2_file_p_c_d_8cpp.375.delay#a2474a5474cbff19523a51eb1de01cda4">width</a>, int <a class="el" href="io_2file__format_2_file_p_c_d_8cpp.375.delay#ad12fc34ce789bce6c8a05d8a17138534">height</a>, std::function&lt; void(std::shared_ptr&lt; <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &gt;)&gt; <a class="el" href="_filament_renderer_8cpp.html#a7a0a25a91d8a936306270fd09f1a64a9">callback</a>)=0</td></tr>
<tr class="separator:a244af40b777be6d6608d121a9b9b7dc6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af7b7bd6b8cb63b313bfd244c44b7feea"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-31#af7b7bd6b8cb63b313bfd244c44b7feea">EndFrame</a> ()=0</td></tr>
<tr class="separator:af7b7bd6b8cb63b313bfd244c44b7feea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af4f573fad321db8465fea4662db0a6ba"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-31#af4f573fad321db8465fea4662db0a6ba">SetOnAfterDraw</a> (std::function&lt; void()&gt; <a class="el" href="_filament_renderer_8cpp.html#a7a0a25a91d8a936306270fd09f1a64a9">callback</a>)=0</td></tr>
<tr class="separator:af4f573fad321db8465fea4662db0a6ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab797d53df3e2baf640bd2e3ba1db2d9b"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceopen3d_1_1visualization_1_1renderin#a1a741c5d9cee6f42405dde52c34b491f">MaterialHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-31#ab797d53df3e2baf640bd2e3ba1db2d9b">AddMaterial</a> (const <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-30">ResourceLoadRequest</a> &amp;request)=0</td></tr>
<tr class="separator:ab797d53df3e2baf640bd2e3ba1db2d9b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa44e4ead85571354f6497184fcf518f"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceopen3d_1_1visualization_1_1renderin#a4e207141b276ea74dc4f8ac29496ba90">MaterialInstanceHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-31#aaa44e4ead85571354f6497184fcf518f">AddMaterialInstance</a> (const <a class="el" href="namespaceopen3d_1_1visualization_1_1renderin#a1a741c5d9cee6f42405dde52c34b491f">MaterialHandle</a> &amp;material)=0</td></tr>
<tr class="separator:aaa44e4ead85571354f6497184fcf518f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a93783f1ff429697ebf8bcdb3a9d64c91"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-27">MaterialModifier</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-31#a93783f1ff429697ebf8bcdb3a9d64c91">ModifyMaterial</a> (const <a class="el" href="namespaceopen3d_1_1visualization_1_1renderin#a1a741c5d9cee6f42405dde52c34b491f">MaterialHandle</a> &amp;id)=0</td></tr>
<tr class="separator:a93783f1ff429697ebf8bcdb3a9d64c91"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa29e38525bc6936b49a6f0157dcdfc0b"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-27">MaterialModifier</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-31#aa29e38525bc6936b49a6f0157dcdfc0b">ModifyMaterial</a> (const <a class="el" href="namespaceopen3d_1_1visualization_1_1renderin#a4e207141b276ea74dc4f8ac29496ba90">MaterialInstanceHandle</a> &amp;id)=0</td></tr>
<tr class="separator:aa29e38525bc6936b49a6f0157dcdfc0b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a05952dda842f3a09768f7861c45a0a7e"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-31#a05952dda842f3a09768f7861c45a0a7e">RemoveMaterialInstance</a> (const <a class="el" href="namespaceopen3d_1_1visualization_1_1renderin#a4e207141b276ea74dc4f8ac29496ba90">MaterialInstanceHandle</a> &amp;id)=0</td></tr>
<tr class="separator:a05952dda842f3a09768f7861c45a0a7e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1aa823e01ee42c5011b0b9d7d21fb3cb"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceopen3d_1_1visualization_1_1renderin#abe77f5a7fbacbb64e93059aa27873e11">TextureHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-31#a1aa823e01ee42c5011b0b9d7d21fb3cb">AddTexture</a> (const <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-30">ResourceLoadRequest</a> &amp;request, bool srgb=false)=0</td></tr>
<tr class="separator:a1aa823e01ee42c5011b0b9d7d21fb3cb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adc1a0d5de90fee8329543fb00e92dcf3"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceopen3d_1_1visualization_1_1renderin#abe77f5a7fbacbb64e93059aa27873e11">TextureHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-31#adc1a0d5de90fee8329543fb00e92dcf3">AddTexture</a> (const std::shared_ptr&lt; <a class="el" href="classopen3d_1_1geometry_1_1_image.406.delaye">geometry::Image</a> &gt; <a class="el" href="_filament_renderer_8cpp.html#a60b0c69b08810766e366c4b90031cd0d">image</a>, bool srgb=false)=0</td></tr>
<tr class="separator:adc1a0d5de90fee8329543fb00e92dcf3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a813be26ee15ea0b702f4aaca1a209e1c"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceopen3d_1_1visualization_1_1renderin#abe77f5a7fbacbb64e93059aa27873e11">TextureHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-31#a813be26ee15ea0b702f4aaca1a209e1c">AddTexture</a> (const <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_image.34e.d">t::geometry::Image</a> &amp;<a class="el" href="_filament_renderer_8cpp.html#a60b0c69b08810766e366c4b90031cd0d">image</a>, bool srgb=false)=0</td></tr>
<tr class="separator:a813be26ee15ea0b702f4aaca1a209e1c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8ff39edd40ee5d726f6784837c00f61d"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-31#a8ff39edd40ee5d726f6784837c00f61d">UpdateTexture</a> (<a class="el" href="namespaceopen3d_1_1visualization_1_1renderin#abe77f5a7fbacbb64e93059aa27873e11">TextureHandle</a> texture, const std::shared_ptr&lt; <a class="el" href="classopen3d_1_1geometry_1_1_image.406.delaye">geometry::Image</a> &gt; <a class="el" href="_filament_renderer_8cpp.html#a60b0c69b08810766e366c4b90031cd0d">image</a>, bool srgb)=0</td></tr>
<tr class="separator:a8ff39edd40ee5d726f6784837c00f61d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a288ff5a839cf74705e4f7ba9e7a72f3b"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-31#a288ff5a839cf74705e4f7ba9e7a72f3b">UpdateTexture</a> (<a class="el" href="namespaceopen3d_1_1visualization_1_1renderin#abe77f5a7fbacbb64e93059aa27873e11">TextureHandle</a> texture, const <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_image.34e.d">t::geometry::Image</a> &amp;<a class="el" href="_filament_renderer_8cpp.html#a60b0c69b08810766e366c4b90031cd0d">image</a>, bool srgb)=0</td></tr>
<tr class="separator:a288ff5a839cf74705e4f7ba9e7a72f3b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a131a3b211dc1a2ada3b40676a14bc4ef"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-31#a131a3b211dc1a2ada3b40676a14bc4ef">RemoveTexture</a> (const <a class="el" href="namespaceopen3d_1_1visualization_1_1renderin#abe77f5a7fbacbb64e93059aa27873e11">TextureHandle</a> &amp;id)=0</td></tr>
<tr class="separator:a131a3b211dc1a2ada3b40676a14bc4ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5876066e33aa4f60168f13c1a932ce77"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceopen3d_1_1visualization_1_1renderin#af56cbfa97bdab743a3b2225505f161f3">IndirectLightHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-31#a5876066e33aa4f60168f13c1a932ce77">AddIndirectLight</a> (const <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-30">ResourceLoadRequest</a> &amp;request)=0</td></tr>
<tr class="separator:a5876066e33aa4f60168f13c1a932ce77"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a14777b60f9f8dc7c4136ffeb51b286c3"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-31#a14777b60f9f8dc7c4136ffeb51b286c3">RemoveIndirectLight</a> (const <a class="el" href="namespaceopen3d_1_1visualization_1_1renderin#af56cbfa97bdab743a3b2225505f161f3">IndirectLightHandle</a> &amp;id)=0</td></tr>
<tr class="separator:a14777b60f9f8dc7c4136ffeb51b286c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a473ad5dd070b31be5709bd82a7755a95"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceopen3d_1_1visualization_1_1renderin#ad671097860ab575fc6990a38afe75025">SkyboxHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-31#a473ad5dd070b31be5709bd82a7755a95">AddSkybox</a> (const <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-30">ResourceLoadRequest</a> &amp;request)=0</td></tr>
<tr class="separator:a473ad5dd070b31be5709bd82a7755a95"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a53e4c6ccf8316947d7858103e808208d"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-31#a53e4c6ccf8316947d7858103e808208d">RemoveSkybox</a> (const <a class="el" href="namespaceopen3d_1_1visualization_1_1renderin#ad671097860ab575fc6990a38afe75025">SkyboxHandle</a> &amp;id)=0</td></tr>
<tr class="separator:a53e4c6ccf8316947d7858103e808208d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2940b826be36a263cd1b74197e1fa225"><td class="memItemLeft" align="right" valign="top">virtual std::shared_ptr&lt; <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-32">RenderToBuffer</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-31#a2940b826be36a263cd1b74197e1fa225">CreateBufferRenderer</a> ()=0</td></tr>
<tr class="separator:a2940b826be36a263cd1b74197e1fa225"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae9459885b582565133a63240df2c1a31"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-31#ae9459885b582565133a63240df2c1a31">RenderToImage</a> (<a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-35">View</a> *view, <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34">Scene</a> *scene, std::function&lt; void(std::shared_ptr&lt; <a class="el" href="classopen3d_1_1geometry_1_1_image.406.delaye">geometry::Image</a> &gt;)&gt; cb)</td></tr>
<tr class="separator:ae9459885b582565133a63240df2c1a31"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a76169909ad0f9651fbe11ca4dd8e8439"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-31#a76169909ad0f9651fbe11ca4dd8e8439">RenderToDepthImage</a> (<a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-35">View</a> *view, <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34">Scene</a> *scene, std::function&lt; void(std::shared_ptr&lt; <a class="el" href="classopen3d_1_1geometry_1_1_image.406.delaye">geometry::Image</a> &gt;)&gt; cb, bool z_in_view_space=false)</td></tr>
<tr class="separator:a76169909ad0f9651fbe11ca4dd8e8439"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a50157c54f854af72d844df23c513f055"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a50157c54f854af72d844df23c513f055">&#9670;&nbsp;</a></span>~Renderer()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual open3d::visualization::rendering::Renderer::~Renderer </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a5876066e33aa4f60168f13c1a932ce77"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5876066e33aa4f60168f13c1a932ce77">&#9670;&nbsp;</a></span>AddIndirectLight()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespaceopen3d_1_1visualization_1_1renderin#af56cbfa97bdab743a3b2225505f161f3">IndirectLightHandle</a> open3d::visualization::rendering::Renderer::AddIndirectLight </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-30">ResourceLoadRequest</a> &amp;&#160;</td>
          <td class="paramname"><em>request</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-19#a9bf00785fe6b8a91d0f9cbe3eb0ea40c">open3d::visualization::rendering::FilamentRenderer</a>.</p>

</div>
</div>
<a id="ab797d53df3e2baf640bd2e3ba1db2d9b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab797d53df3e2baf640bd2e3ba1db2d9b">&#9670;&nbsp;</a></span>AddMaterial()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespaceopen3d_1_1visualization_1_1renderin#a1a741c5d9cee6f42405dde52c34b491f">MaterialHandle</a> open3d::visualization::rendering::Renderer::AddMaterial </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-30">ResourceLoadRequest</a> &amp;&#160;</td>
          <td class="paramname"><em>request</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-19#ae2ee9f14d4676688fef5a6041c8c1d4f">open3d::visualization::rendering::FilamentRenderer</a>.</p>

</div>
</div>
<a id="aaa44e4ead85571354f6497184fcf518f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaa44e4ead85571354f6497184fcf518f">&#9670;&nbsp;</a></span>AddMaterialInstance()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespaceopen3d_1_1visualization_1_1renderin#a4e207141b276ea74dc4f8ac29496ba90">MaterialInstanceHandle</a> open3d::visualization::rendering::Renderer::AddMaterialInstance </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceopen3d_1_1visualization_1_1renderin#a1a741c5d9cee6f42405dde52c34b491f">MaterialHandle</a> &amp;&#160;</td>
          <td class="paramname"><em>material</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-19#a7b1ec9ac34f247360ccd8d6285dd598d">open3d::visualization::rendering::FilamentRenderer</a>.</p>

</div>
</div>
<a id="a473ad5dd070b31be5709bd82a7755a95"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a473ad5dd070b31be5709bd82a7755a95">&#9670;&nbsp;</a></span>AddSkybox()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespaceopen3d_1_1visualization_1_1renderin#ad671097860ab575fc6990a38afe75025">SkyboxHandle</a> open3d::visualization::rendering::Renderer::AddSkybox </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-30">ResourceLoadRequest</a> &amp;&#160;</td>
          <td class="paramname"><em>request</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-19#a18733dfdeebfd131d1081c81adb8ec7d">open3d::visualization::rendering::FilamentRenderer</a>.</p>

</div>
</div>
<a id="a1aa823e01ee42c5011b0b9d7d21fb3cb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1aa823e01ee42c5011b0b9d7d21fb3cb">&#9670;&nbsp;</a></span>AddTexture() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespaceopen3d_1_1visualization_1_1renderin#abe77f5a7fbacbb64e93059aa27873e11">TextureHandle</a> open3d::visualization::rendering::Renderer::AddTexture </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-30">ResourceLoadRequest</a> &amp;&#160;</td>
          <td class="paramname"><em>request</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>srgb</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-19#a38ac93b5d0aaaf664e3d11e5a4f287e0">open3d::visualization::rendering::FilamentRenderer</a>.</p>

</div>
</div>
<a id="adc1a0d5de90fee8329543fb00e92dcf3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adc1a0d5de90fee8329543fb00e92dcf3">&#9670;&nbsp;</a></span>AddTexture() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespaceopen3d_1_1visualization_1_1renderin#abe77f5a7fbacbb64e93059aa27873e11">TextureHandle</a> open3d::visualization::rendering::Renderer::AddTexture </td>
          <td>(</td>
          <td class="paramtype">const std::shared_ptr&lt; <a class="el" href="classopen3d_1_1geometry_1_1_image.406.delaye">geometry::Image</a> &gt;&#160;</td>
          <td class="paramname"><em>image</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>srgb</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-19#a28f501fb9ba99447e601fa5d36cd7086">open3d::visualization::rendering::FilamentRenderer</a>.</p>

</div>
</div>
<a id="a813be26ee15ea0b702f4aaca1a209e1c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a813be26ee15ea0b702f4aaca1a209e1c">&#9670;&nbsp;</a></span>AddTexture() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespaceopen3d_1_1visualization_1_1renderin#abe77f5a7fbacbb64e93059aa27873e11">TextureHandle</a> open3d::visualization::rendering::Renderer::AddTexture </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_image.34e.d">t::geometry::Image</a> &amp;&#160;</td>
          <td class="paramname"><em>image</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>srgb</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-19#a7dbc89f0b106e2f3a795d954115fe24f">open3d::visualization::rendering::FilamentRenderer</a>.</p>

</div>
</div>
<a id="a95248b9d2e3607ed7327e4a474b012c7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a95248b9d2e3607ed7327e4a474b012c7">&#9670;&nbsp;</a></span>BeginFrame()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void open3d::visualization::rendering::Renderer::BeginFrame </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-19#a3c84acad0186724a462af1dec92aeafd">open3d::visualization::rendering::FilamentRenderer</a>.</p>

</div>
</div>
<a id="a2940b826be36a263cd1b74197e1fa225"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2940b826be36a263cd1b74197e1fa225">&#9670;&nbsp;</a></span>CreateBufferRenderer()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual std::shared_ptr&lt;<a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-32">RenderToBuffer</a>&gt; open3d::visualization::rendering::Renderer::CreateBufferRenderer </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-19#a8008e5640b9e583f78ac133dc022d5be">open3d::visualization::rendering::FilamentRenderer</a>.</p>

</div>
</div>
<a id="a1de10f6d3c6ad71607083152d9b09da3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1de10f6d3c6ad71607083152d9b09da3">&#9670;&nbsp;</a></span>CreateScene()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespaceopen3d_1_1visualization_1_1renderin#a3e03c6d1e088ec92fbc03dce9560f5e1">SceneHandle</a> open3d::visualization::rendering::Renderer::CreateScene </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-19#a2b2603614c30586b30c97c382fbc659e">open3d::visualization::rendering::FilamentRenderer</a>.</p>

</div>
</div>
<a id="a9b3e50a35171d2bd45195409c8aa56f7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9b3e50a35171d2bd45195409c8aa56f7">&#9670;&nbsp;</a></span>DestroyScene()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void open3d::visualization::rendering::Renderer::DestroyScene </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceopen3d_1_1visualization_1_1renderin#a3e03c6d1e088ec92fbc03dce9560f5e1">SceneHandle</a> &amp;&#160;</td>
          <td class="paramname"><em>id</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-19#af8f953c521afdf7965ce2a346828e891">open3d::visualization::rendering::FilamentRenderer</a>.</p>

</div>
</div>
<a id="a5a3a108cdcca8d0e6682db361b146eef"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5a3a108cdcca8d0e6682db361b146eef">&#9670;&nbsp;</a></span>Draw()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void open3d::visualization::rendering::Renderer::Draw </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-19#a8b3e604f3a626ce9cbcc969b8f27d661">open3d::visualization::rendering::FilamentRenderer</a>.</p>

</div>
</div>
<a id="af7b7bd6b8cb63b313bfd244c44b7feea"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af7b7bd6b8cb63b313bfd244c44b7feea">&#9670;&nbsp;</a></span>EndFrame()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void open3d::visualization::rendering::Renderer::EndFrame </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-19#a8f55b51a08a382635f987a76b8ded613">open3d::visualization::rendering::FilamentRenderer</a>.</p>

</div>
</div>
<a id="a3b312d29c15d941a9e96c90c18d289be"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3b312d29c15d941a9e96c90c18d289be">&#9670;&nbsp;</a></span>GetScene()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34">Scene</a>* open3d::visualization::rendering::Renderer::GetScene </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceopen3d_1_1visualization_1_1renderin#a3e03c6d1e088ec92fbc03dce9560f5e1">SceneHandle</a> &amp;&#160;</td>
          <td class="paramname"><em>id</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-19#acb6baf3256f7b4747d379ad560c8c0fa">open3d::visualization::rendering::FilamentRenderer</a>.</p>

</div>
</div>
<a id="a93783f1ff429697ebf8bcdb3a9d64c91"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a93783f1ff429697ebf8bcdb3a9d64c91">&#9670;&nbsp;</a></span>ModifyMaterial() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-27">MaterialModifier</a>&amp; open3d::visualization::rendering::Renderer::ModifyMaterial </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceopen3d_1_1visualization_1_1renderin#a1a741c5d9cee6f42405dde52c34b491f">MaterialHandle</a> &amp;&#160;</td>
          <td class="paramname"><em>id</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-19#a404ebaba89eeba597aee62721aa96de8">open3d::visualization::rendering::FilamentRenderer</a>.</p>

</div>
</div>
<a id="aa29e38525bc6936b49a6f0157dcdfc0b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa29e38525bc6936b49a6f0157dcdfc0b">&#9670;&nbsp;</a></span>ModifyMaterial() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-27">MaterialModifier</a>&amp; open3d::visualization::rendering::Renderer::ModifyMaterial </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceopen3d_1_1visualization_1_1renderin#a4e207141b276ea74dc4f8ac29496ba90">MaterialInstanceHandle</a> &amp;&#160;</td>
          <td class="paramname"><em>id</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-19#acd6f9c168c8d7bdf7c67f51a5de5fe95">open3d::visualization::rendering::FilamentRenderer</a>.</p>

</div>
</div>
<a id="a14777b60f9f8dc7c4136ffeb51b286c3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a14777b60f9f8dc7c4136ffeb51b286c3">&#9670;&nbsp;</a></span>RemoveIndirectLight()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void open3d::visualization::rendering::Renderer::RemoveIndirectLight </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceopen3d_1_1visualization_1_1renderin#af56cbfa97bdab743a3b2225505f161f3">IndirectLightHandle</a> &amp;&#160;</td>
          <td class="paramname"><em>id</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-19#abca1b922f8911f3995e01e59d56394ab">open3d::visualization::rendering::FilamentRenderer</a>.</p>

</div>
</div>
<a id="a05952dda842f3a09768f7861c45a0a7e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a05952dda842f3a09768f7861c45a0a7e">&#9670;&nbsp;</a></span>RemoveMaterialInstance()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void open3d::visualization::rendering::Renderer::RemoveMaterialInstance </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceopen3d_1_1visualization_1_1renderin#a4e207141b276ea74dc4f8ac29496ba90">MaterialInstanceHandle</a> &amp;&#160;</td>
          <td class="paramname"><em>id</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-19#adf022d1a510f06bb06b0e2841f97d9e6">open3d::visualization::rendering::FilamentRenderer</a>.</p>

</div>
</div>
<a id="a53e4c6ccf8316947d7858103e808208d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a53e4c6ccf8316947d7858103e808208d">&#9670;&nbsp;</a></span>RemoveSkybox()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void open3d::visualization::rendering::Renderer::RemoveSkybox </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceopen3d_1_1visualization_1_1renderin#ad671097860ab575fc6990a38afe75025">SkyboxHandle</a> &amp;&#160;</td>
          <td class="paramname"><em>id</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-19#a315c6ce74ccfe5c6a8fc3965fb3c5100">open3d::visualization::rendering::FilamentRenderer</a>.</p>

</div>
</div>
<a id="a131a3b211dc1a2ada3b40676a14bc4ef"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a131a3b211dc1a2ada3b40676a14bc4ef">&#9670;&nbsp;</a></span>RemoveTexture()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void open3d::visualization::rendering::Renderer::RemoveTexture </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceopen3d_1_1visualization_1_1renderin#abe77f5a7fbacbb64e93059aa27873e11">TextureHandle</a> &amp;&#160;</td>
          <td class="paramname"><em>id</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-19#a8a4c33d5de6734c73ac78c38ba572dd0">open3d::visualization::rendering::FilamentRenderer</a>.</p>

</div>
</div>
<a id="a76169909ad0f9651fbe11ca4dd8e8439"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a76169909ad0f9651fbe11ca4dd8e8439">&#9670;&nbsp;</a></span>RenderToDepthImage()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::rendering::Renderer::RenderToDepthImage </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-35">View</a> *&#160;</td>
          <td class="paramname"><em>view</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34">Scene</a> *&#160;</td>
          <td class="paramname"><em>scene</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::function&lt; void(std::shared_ptr&lt; <a class="el" href="classopen3d_1_1geometry_1_1_image.406.delaye">geometry::Image</a> &gt;)&gt;&#160;</td>
          <td class="paramname"><em>cb</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>z_in_view_space</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ae9459885b582565133a63240df2c1a31"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae9459885b582565133a63240df2c1a31">&#9670;&nbsp;</a></span>RenderToImage()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::rendering::Renderer::RenderToImage </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-35">View</a> *&#160;</td>
          <td class="paramname"><em>view</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34">Scene</a> *&#160;</td>
          <td class="paramname"><em>scene</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::function&lt; void(std::shared_ptr&lt; <a class="el" href="classopen3d_1_1geometry_1_1_image.406.delaye">geometry::Image</a> &gt;)&gt;&#160;</td>
          <td class="paramname"><em>cb</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a244af40b777be6d6608d121a9b9b7dc6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a244af40b777be6d6608d121a9b9b7dc6">&#9670;&nbsp;</a></span>RequestReadPixels()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void open3d::visualization::rendering::Renderer::RequestReadPixels </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>width</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>height</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::function&lt; void(std::shared_ptr&lt; <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &gt;)&gt;&#160;</td>
          <td class="paramname"><em>callback</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-19#a60610fae2cb87b1f166c08887240ed0f">open3d::visualization::rendering::FilamentRenderer</a>.</p>

</div>
</div>
<a id="a322086f29b413b66c5b6354d192af5fe"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a322086f29b413b66c5b6354d192af5fe">&#9670;&nbsp;</a></span>SetClearColor()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void open3d::visualization::rendering::Renderer::SetClearColor </td>
          <td>(</td>
          <td class="paramtype">const Eigen::Vector4f &amp;&#160;</td>
          <td class="paramname"><em>color</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-19#a1687b6acfc3534c4761843fdb31ad5ee">open3d::visualization::rendering::FilamentRenderer</a>.</p>

</div>
</div>
<a id="af4f573fad321db8465fea4662db0a6ba"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af4f573fad321db8465fea4662db0a6ba">&#9670;&nbsp;</a></span>SetOnAfterDraw()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void open3d::visualization::rendering::Renderer::SetOnAfterDraw </td>
          <td>(</td>
          <td class="paramtype">std::function&lt; void()&gt;&#160;</td>
          <td class="paramname"><em>callback</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-19#a292aebffe51bc7715720b148217a2908">open3d::visualization::rendering::FilamentRenderer</a>.</p>

</div>
</div>
<a id="aa35dcd84db369806bc712d51ca654d53"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa35dcd84db369806bc712d51ca654d53">&#9670;&nbsp;</a></span>UpdateBitmapSwapChain()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void open3d::visualization::rendering::Renderer::UpdateBitmapSwapChain </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>width</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>height</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-19#a61022135e20ec58ae1444032a6f2c4ac">open3d::visualization::rendering::FilamentRenderer</a>.</p>

</div>
</div>
<a id="af0b8d96499e2487c12e4f729b12ba3a9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af0b8d96499e2487c12e4f729b12ba3a9">&#9670;&nbsp;</a></span>UpdateSwapChain()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void open3d::visualization::rendering::Renderer::UpdateSwapChain </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-19#a50137601a4118e1211c153a571c97941">open3d::visualization::rendering::FilamentRenderer</a>.</p>

</div>
</div>
<a id="a8ff39edd40ee5d726f6784837c00f61d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8ff39edd40ee5d726f6784837c00f61d">&#9670;&nbsp;</a></span>UpdateTexture() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool open3d::visualization::rendering::Renderer::UpdateTexture </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceopen3d_1_1visualization_1_1renderin#abe77f5a7fbacbb64e93059aa27873e11">TextureHandle</a>&#160;</td>
          <td class="paramname"><em>texture</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::shared_ptr&lt; <a class="el" href="classopen3d_1_1geometry_1_1_image.406.delaye">geometry::Image</a> &gt;&#160;</td>
          <td class="paramname"><em>image</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>srgb</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-19#a3aedad7c901040ccd53eb1d2fe9bed50">open3d::visualization::rendering::FilamentRenderer</a>.</p>

</div>
</div>
<a id="a288ff5a839cf74705e4f7ba9e7a72f3b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a288ff5a839cf74705e4f7ba9e7a72f3b">&#9670;&nbsp;</a></span>UpdateTexture() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool open3d::visualization::rendering::Renderer::UpdateTexture </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceopen3d_1_1visualization_1_1renderin#abe77f5a7fbacbb64e93059aa27873e11">TextureHandle</a>&#160;</td>
          <td class="paramname"><em>texture</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_image.34e.d">t::geometry::Image</a> &amp;&#160;</td>
          <td class="paramname"><em>image</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>srgb</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-19#a4a04ef804782256e807d058a2edaf245">open3d::visualization::rendering::FilamentRenderer</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/runner/work/Open3D/Open3D/cpp/open3d/visualization/rendering/<a class="el" href="_renderer_8h_source.html">Renderer.h (9238339 (Tue Mar 14 18:49:09 2023 -0700))</a></li>
<li>/home/runner/work/Open3D/Open3D/cpp/open3d/visualization/rendering/<a class="el" href="_renderer_8cpp.html">Renderer.cpp (9238339 (Tue Mar 14 18:49:09 2023 -0700))</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1
</small></address>
</body>

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/classopen3d_1_1visualization_1_1rendering_1_1_renderer.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 11:01:45 GMT -->
</html>
