<!-- HTML header for doxygen 1.8.20-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/classopen3d_1_1visualization_1_1rendering_1_1_open3_d_scene.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 10:59:47 GMT -->
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Open3D (C++ API): open3d::visualization::rendering::Open3DScene Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js", "TeX/AMSmath.html", "TeX/AMSsymbols.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="../../../../cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-3TQPKGV6Z3"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());
  gtag('config', 'G-3TQPKGV6Z3');
</script>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="open3d_logo.ico"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Open3D (C++ API)
   &#160;<span id="projectnumber">0.17.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.html');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.html','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceopen3d.html">open3d</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1visualization.html">visualization</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1visualization_1_1renderin">rendering</a></li><li class="navelem"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-2">Open3DScene</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">open3d::visualization::rendering::Open3DScene Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_open3_d_scene_8h_source.html">Open3DScene.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:ab31317fc0a0f6adbbe6fbff78d112f68"><td class="memItemLeft" align="right" valign="top">enum class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-2#ab31317fc0a0f6adbbe6fbff78d112f68">LightingProfile</a> { <br />
&#160;&#160;<a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-2#ab31317fc0a0f6adbbe6fbff78d112f68a1cd49a1ec6c4d2f0b6706dd1fb4add8a">HARD_SHADOWS</a>
, <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-2#ab31317fc0a0f6adbbe6fbff78d112f68a3de52f1c918ddf321f3dc0912be75a05">DARK_SHADOWS</a>
, <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-2#ab31317fc0a0f6adbbe6fbff78d112f68a2fee3eef8d43d0cdd0b7b22c7acfa72f">MED_SHADOWS</a>
, <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-2#ab31317fc0a0f6adbbe6fbff78d112f68abe7bef010c23e069a3934ba37548d977">SOFT_SHADOWS</a>
, <br />
&#160;&#160;<a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-2#ab31317fc0a0f6adbbe6fbff78d112f68aee35f77ceda5f08943ecf862be1521f0">NO_SHADOWS</a>
<br />
 }</td></tr>
<tr class="separator:ab31317fc0a0f6adbbe6fbff78d112f68"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a683b6333b8c45818c7a3c3e51d3445d7"><td class="memItemLeft" align="right" valign="top">enum class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-2#a683b6333b8c45818c7a3c3e51d3445d7">LOD</a> { <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-2#a683b6333b8c45818c7a3c3e51d3445d7a9f4e94bae255ba30c4ce5bac5c12b3cf">HIGH_DETAIL</a>
, <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-2#a683b6333b8c45818c7a3c3e51d3445d7adca6e617f6fb54033deb311e7e7c93cc">FAST</a>
 }</td></tr>
<tr class="separator:a683b6333b8c45818c7a3c3e51d3445d7"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ad9d7b65793e9955e58ff88666ed65abc"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-2#ad9d7b65793e9955e58ff88666ed65abc">Open3DScene</a> (<a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-31">Renderer</a> &amp;renderer)</td></tr>
<tr class="separator:ad9d7b65793e9955e58ff88666ed65abc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6fa1c0dbd143bcd64a436107e2812f13"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-2#a6fa1c0dbd143bcd64a436107e2812f13">~Open3DScene</a> ()</td></tr>
<tr class="separator:a6fa1c0dbd143bcd64a436107e2812f13"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a93958a9ef2fb5aa21c75a1f05a0b33db"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-35">View</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-2#a93958a9ef2fb5aa21c75a1f05a0b33db">GetView</a> () const</td></tr>
<tr class="separator:a93958a9ef2fb5aa21c75a1f05a0b33db"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a54bd4526cbfd99eb54736f9cc7f7e673"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceopen3d_1_1visualization_1_1renderin#ae84c7ee53263cf103c77849661801ca3">ViewHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-2#a54bd4526cbfd99eb54736f9cc7f7e673">GetViewId</a> () const</td></tr>
<tr class="separator:a54bd4526cbfd99eb54736f9cc7f7e673"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac47f53b1a95253ba4ed557046886283f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-2#ac47f53b1a95253ba4ed557046886283f">SetViewport</a> (std::int32_t x, std::int32_t y, std::uint32_t <a class="el" href="io_2file__format_2_file_p_c_d_8cpp.375.delay#a2474a5474cbff19523a51eb1de01cda4">width</a>, std::uint32_t <a class="el" href="io_2file__format_2_file_p_c_d_8cpp.375.delay#ad12fc34ce789bce6c8a05d8a17138534">height</a>)</td></tr>
<tr class="separator:ac47f53b1a95253ba4ed557046886283f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a918206cb3fff4920a24200a6a539029b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-2#a918206cb3fff4920a24200a6a539029b">ShowSkybox</a> (bool enable)</td></tr>
<tr class="separator:a918206cb3fff4920a24200a6a539029b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4948d3767ebef4c687afbde4a4f2409a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-2#a4948d3767ebef4c687afbde4a4f2409a">ShowAxes</a> (bool enable)</td></tr>
<tr class="separator:a4948d3767ebef4c687afbde4a4f2409a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2ca6f9a3a54e75d693b87a36206b997f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-2#a2ca6f9a3a54e75d693b87a36206b997f">SetBackground</a> (const Eigen::Vector4f &amp;<a class="el" href="_triangle_mesh_buffers_8cpp.html#aa332976d803be75beb81e81af320bfcb">color</a>, std::shared_ptr&lt; <a class="el" href="classopen3d_1_1geometry_1_1_image.406.delaye">geometry::Image</a> &gt; <a class="el" href="_filament_renderer_8cpp.html#a60b0c69b08810766e366c4b90031cd0d">image</a>=nullptr)</td></tr>
<tr class="separator:a2ca6f9a3a54e75d693b87a36206b997f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4b7863e0426d2cc3545d4723010545af"><td class="memItemLeft" align="right" valign="top">const Eigen::Vector4f&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-2#a4b7863e0426d2cc3545d4723010545af">GetBackgroundColor</a> () const</td></tr>
<tr class="separator:a4b7863e0426d2cc3545d4723010545af"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2c733e652b537a3e9024455157fb37b9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-2#a2c733e652b537a3e9024455157fb37b9">ShowGroundPlane</a> (bool enable, <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34#a387adee0ccffd4754260c6809d03f137">Scene::GroundPlane</a> plane)</td></tr>
<tr class="separator:a2c733e652b537a3e9024455157fb37b9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0924aef05e4d8c98d6252a6012e32248"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-2#a0924aef05e4d8c98d6252a6012e32248">SetLighting</a> (<a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-2#ab31317fc0a0f6adbbe6fbff78d112f68">LightingProfile</a> <a class="el" href="_o3_d_visualizer_8cpp.html#a7561f528cedf554bb5d9080556e48898">profile</a>, const Eigen::Vector3f &amp;sun_dir)</td></tr>
<tr class="separator:a0924aef05e4d8c98d6252a6012e32248"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae01242027f20f9527ac313b50546d36e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-2#ae01242027f20f9527ac313b50546d36e">SetDownsampleThreshold</a> (size_t n_points)</td></tr>
<tr class="separator:ae01242027f20f9527ac313b50546d36e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab52cb07e39adbff5e0cca2d37c854ac0"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-2#ab52cb07e39adbff5e0cca2d37c854ac0">GetDownsampleThreshold</a> () const</td></tr>
<tr class="separator:ab52cb07e39adbff5e0cca2d37c854ac0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3ed85804b727d1fed6c3af88ff9ea46f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-2#a3ed85804b727d1fed6c3af88ff9ea46f">ClearGeometry</a> ()</td></tr>
<tr class="separator:a3ed85804b727d1fed6c3af88ff9ea46f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8bc6a4e2883caf4c32a9d7f1c58d8ace"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-2#a8bc6a4e2883caf4c32a9d7f1c58d8ace">AddGeometry</a> (const std::string &amp;<a class="el" href="_o3_d_visualizer_8cpp.html#a9b45b3e13bd9167aab02e17e08916231">name</a>, const <a class="el" href="classopen3d_1_1geometry_1_1_geometry3_d.402">geometry::Geometry3D</a> *geom, const <a class="el" href="structopen3d_1_1visualization_1_1rendering_1-3">MaterialRecord</a> &amp;mat, bool add_downsampled_copy_for_fast_rendering=true)</td></tr>
<tr class="memdesc:a8bc6a4e2883caf4c32a9d7f1c58d8ace"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a geometry with the specified name. Default visible is true.  <a href="classopen3d_1_1visualization_1_1rendering_1_-2#a8bc6a4e2883caf4c32a9d7f1c58d8ace">More...</a><br /></td></tr>
<tr class="separator:a8bc6a4e2883caf4c32a9d7f1c58d8ace"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a41ad1c46e32a069a01522fbca9227ea8"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-2#a41ad1c46e32a069a01522fbca9227ea8">AddGeometry</a> (const std::string &amp;<a class="el" href="_o3_d_visualizer_8cpp.html#a9b45b3e13bd9167aab02e17e08916231">name</a>, const <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36">t::geometry::Geometry</a> *geom, const <a class="el" href="structopen3d_1_1visualization_1_1rendering_1-3">MaterialRecord</a> &amp;mat, bool add_downsampled_copy_for_fast_rendering=true)</td></tr>
<tr class="separator:a41ad1c46e32a069a01522fbca9227ea8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae22a4ae28a84bb20d59f5ddced0220dd"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-2#ae22a4ae28a84bb20d59f5ddced0220dd">HasGeometry</a> (const std::string &amp;<a class="el" href="_o3_d_visualizer_8cpp.html#a9b45b3e13bd9167aab02e17e08916231">name</a>) const</td></tr>
<tr class="separator:ae22a4ae28a84bb20d59f5ddced0220dd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acc4c9f4215234ccb127034758a203548"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-2#acc4c9f4215234ccb127034758a203548">RemoveGeometry</a> (const std::string &amp;<a class="el" href="_o3_d_visualizer_8cpp.html#a9b45b3e13bd9167aab02e17e08916231">name</a>)</td></tr>
<tr class="separator:acc4c9f4215234ccb127034758a203548"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af5c15bdb26542cd7fdbacfd15ec14f85"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-2#af5c15bdb26542cd7fdbacfd15ec14f85">ShowGeometry</a> (const std::string &amp;<a class="el" href="_o3_d_visualizer_8cpp.html#a9b45b3e13bd9167aab02e17e08916231">name</a>, bool show)</td></tr>
<tr class="memdesc:af5c15bdb26542cd7fdbacfd15ec14f85"><td class="mdescLeft">&#160;</td><td class="mdescRight">Shows or hides the geometry with the specified name.  <a href="classopen3d_1_1visualization_1_1rendering_1_-2#af5c15bdb26542cd7fdbacfd15ec14f85">More...</a><br /></td></tr>
<tr class="separator:af5c15bdb26542cd7fdbacfd15ec14f85"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3231872d7bb3fea46f2c243e86bb922e"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-2#a3231872d7bb3fea46f2c243e86bb922e">GeometryIsVisible</a> (const std::string &amp;<a class="el" href="_o3_d_visualizer_8cpp.html#a9b45b3e13bd9167aab02e17e08916231">name</a>)</td></tr>
<tr class="separator:a3231872d7bb3fea46f2c243e86bb922e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aacc169d1dd2b714749ca0e2e571f39b5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-2#aacc169d1dd2b714749ca0e2e571f39b5">SetGeometryTransform</a> (const std::string &amp;<a class="el" href="_o3_d_visualizer_8cpp.html#a9b45b3e13bd9167aab02e17e08916231">name</a>, const Eigen::Matrix4d &amp;transform)</td></tr>
<tr class="separator:aacc169d1dd2b714749ca0e2e571f39b5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a438891cb2857ecbec183348f33a8bde5"><td class="memItemLeft" align="right" valign="top">Eigen::Matrix4d&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-2#a438891cb2857ecbec183348f33a8bde5">GetGeometryTransform</a> (const std::string &amp;<a class="el" href="_o3_d_visualizer_8cpp.html#a9b45b3e13bd9167aab02e17e08916231">name</a>)</td></tr>
<tr class="separator:a438891cb2857ecbec183348f33a8bde5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af43571740171bf1790d4a5f635ac3362"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-2#af43571740171bf1790d4a5f635ac3362">ModifyGeometryMaterial</a> (const std::string &amp;<a class="el" href="_o3_d_visualizer_8cpp.html#a9b45b3e13bd9167aab02e17e08916231">name</a>, const <a class="el" href="structopen3d_1_1visualization_1_1rendering_1-3">MaterialRecord</a> &amp;mat)</td></tr>
<tr class="separator:af43571740171bf1790d4a5f635ac3362"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae56b92dff9076acffa39306e4d36a062"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-2#ae56b92dff9076acffa39306e4d36a062">AddModel</a> (const std::string &amp;<a class="el" href="_o3_d_visualizer_8cpp.html#a9b45b3e13bd9167aab02e17e08916231">name</a>, const <a class="el" href="structopen3d_1_1visualization_1_1rendering_1">TriangleMeshModel</a> &amp;model)</td></tr>
<tr class="separator:ae56b92dff9076acffa39306e4d36a062"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae2c05ef526cc648a72e7e7fffab8e33e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-2#ae2c05ef526cc648a72e7e7fffab8e33e">UpdateMaterial</a> (const <a class="el" href="structopen3d_1_1visualization_1_1rendering_1-3">MaterialRecord</a> &amp;mat)</td></tr>
<tr class="memdesc:ae2c05ef526cc648a72e7e7fffab8e33e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Updates all geometries to use this material.  <a href="classopen3d_1_1visualization_1_1rendering_1_-2#ae2c05ef526cc648a72e7e7fffab8e33e">More...</a><br /></td></tr>
<tr class="separator:ae2c05ef526cc648a72e7e7fffab8e33e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a79e48be82a8bbf9017b4178ec8d97ef7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-2#a79e48be82a8bbf9017b4178ec8d97ef7">UpdateModelMaterial</a> (const std::string &amp;<a class="el" href="_o3_d_visualizer_8cpp.html#a9b45b3e13bd9167aab02e17e08916231">name</a>, const <a class="el" href="structopen3d_1_1visualization_1_1rendering_1">TriangleMeshModel</a> &amp;model)</td></tr>
<tr class="memdesc:a79e48be82a8bbf9017b4178ec8d97ef7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Updates the named model to use this material.  <a href="classopen3d_1_1visualization_1_1rendering_1_-2#a79e48be82a8bbf9017b4178ec8d97ef7">More...</a><br /></td></tr>
<tr class="separator:a79e48be82a8bbf9017b4178ec8d97ef7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae633851d9b5c2cd2c560e5161412d276"><td class="memItemLeft" align="right" valign="top">std::vector&lt; std::string &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-2#ae633851d9b5c2cd2c560e5161412d276">GetGeometries</a> ()</td></tr>
<tr class="separator:ae633851d9b5c2cd2c560e5161412d276"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a841bf192b039c928259a673e27a03159"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classopen3d_1_1geometry_1_1_axis_aligned_bou">geometry::AxisAlignedBoundingBox</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-2#a841bf192b039c928259a673e27a03159">GetBoundingBox</a> ()</td></tr>
<tr class="separator:a841bf192b039c928259a673e27a03159"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a94efd824c2a543e51b3ae5d9f0fb247a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-2#a94efd824c2a543e51b3ae5d9f0fb247a">SetLOD</a> (<a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-2#a683b6333b8c45818c7a3c3e51d3445d7">LOD</a> lod)</td></tr>
<tr class="separator:a94efd824c2a543e51b3ae5d9f0fb247a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9aa8304e29da502c17e71963b1511c89"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-2#a683b6333b8c45818c7a3c3e51d3445d7">LOD</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-2#a9aa8304e29da502c17e71963b1511c89">GetLOD</a> () const</td></tr>
<tr class="separator:a9aa8304e29da502c17e71963b1511c89"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5264a54a97b3a67b238af51b0941108e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34">Scene</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-2#a5264a54a97b3a67b238af51b0941108e">GetScene</a> () const</td></tr>
<tr class="separator:a5264a54a97b3a67b238af51b0941108e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4be98f60b892d8a7cc83764965e2b9d5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-3">Camera</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-2#a4be98f60b892d8a7cc83764965e2b9d5">GetCamera</a> () const</td></tr>
<tr class="separator:a4be98f60b892d8a7cc83764965e2b9d5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4726a03f4358baa6757994ce0ef4cc85"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-31">Renderer</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-2#a4726a03f4358baa6757994ce0ef4cc85">GetRenderer</a> () const</td></tr>
<tr class="separator:a4726a03f4358baa6757994ce0ef4cc85"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Member Enumeration Documentation</h2>
<a id="ab31317fc0a0f6adbbe6fbff78d112f68"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab31317fc0a0f6adbbe6fbff78d112f68">&#9670;&nbsp;</a></span>LightingProfile</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-2#ab31317fc0a0f6adbbe6fbff78d112f68">open3d::visualization::rendering::Open3DScene::LightingProfile</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="ab31317fc0a0f6adbbe6fbff78d112f68a1cd49a1ec6c4d2f0b6706dd1fb4add8a"></a>HARD_SHADOWS&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="ab31317fc0a0f6adbbe6fbff78d112f68a3de52f1c918ddf321f3dc0912be75a05"></a>DARK_SHADOWS&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="ab31317fc0a0f6adbbe6fbff78d112f68a2fee3eef8d43d0cdd0b7b22c7acfa72f"></a>MED_SHADOWS&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="ab31317fc0a0f6adbbe6fbff78d112f68abe7bef010c23e069a3934ba37548d977"></a>SOFT_SHADOWS&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="ab31317fc0a0f6adbbe6fbff78d112f68aee35f77ceda5f08943ecf862be1521f0"></a>NO_SHADOWS&#160;</td><td class="fielddoc"></td></tr>
</table>

</div>
</div>
<a id="a683b6333b8c45818c7a3c3e51d3445d7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a683b6333b8c45818c7a3c3e51d3445d7">&#9670;&nbsp;</a></span>LOD</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-2#a683b6333b8c45818c7a3c3e51d3445d7">open3d::visualization::rendering::Open3DScene::LOD</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a683b6333b8c45818c7a3c3e51d3445d7a9f4e94bae255ba30c4ce5bac5c12b3cf"></a>HIGH_DETAIL&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a683b6333b8c45818c7a3c3e51d3445d7adca6e617f6fb54033deb311e7e7c93cc"></a>FAST&#160;</td><td class="fielddoc"></td></tr>
</table>

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="ad9d7b65793e9955e58ff88666ed65abc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad9d7b65793e9955e58ff88666ed65abc">&#9670;&nbsp;</a></span>Open3DScene()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">open3d::visualization::rendering::Open3DScene::Open3DScene </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-31">Renderer</a> &amp;&#160;</td>
          <td class="paramname"><em>renderer</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a6fa1c0dbd143bcd64a436107e2812f13"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6fa1c0dbd143bcd64a436107e2812f13">&#9670;&nbsp;</a></span>~Open3DScene()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">open3d::visualization::rendering::Open3DScene::~Open3DScene </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a8bc6a4e2883caf4c32a9d7f1c58d8ace"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8bc6a4e2883caf4c32a9d7f1c58d8ace">&#9670;&nbsp;</a></span>AddGeometry() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::rendering::Open3DScene::AddGeometry </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1geometry_1_1_geometry3_d.402">geometry::Geometry3D</a> *&#160;</td>
          <td class="paramname"><em>geom</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structopen3d_1_1visualization_1_1rendering_1-3">MaterialRecord</a> &amp;&#160;</td>
          <td class="paramname"><em>mat</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>add_downsampled_copy_for_fast_rendering</em> = <code>true</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Adds a geometry with the specified name. Default visible is true. </p>

</div>
</div>
<a id="a41ad1c46e32a069a01522fbca9227ea8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a41ad1c46e32a069a01522fbca9227ea8">&#9670;&nbsp;</a></span>AddGeometry() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::rendering::Open3DScene::AddGeometry </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_geometry.36">t::geometry::Geometry</a> *&#160;</td>
          <td class="paramname"><em>geom</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structopen3d_1_1visualization_1_1rendering_1-3">MaterialRecord</a> &amp;&#160;</td>
          <td class="paramname"><em>mat</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>add_downsampled_copy_for_fast_rendering</em> = <code>true</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ae56b92dff9076acffa39306e4d36a062"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae56b92dff9076acffa39306e4d36a062">&#9670;&nbsp;</a></span>AddModel()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::rendering::Open3DScene::AddModel </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structopen3d_1_1visualization_1_1rendering_1">TriangleMeshModel</a> &amp;&#160;</td>
          <td class="paramname"><em>model</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a3ed85804b727d1fed6c3af88ff9ea46f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3ed85804b727d1fed6c3af88ff9ea46f">&#9670;&nbsp;</a></span>ClearGeometry()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::rendering::Open3DScene::ClearGeometry </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a3231872d7bb3fea46f2c243e86bb922e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3231872d7bb3fea46f2c243e86bb922e">&#9670;&nbsp;</a></span>GeometryIsVisible()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool open3d::visualization::rendering::Open3DScene::GeometryIsVisible </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>name</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a4b7863e0426d2cc3545d4723010545af"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4b7863e0426d2cc3545d4723010545af">&#9670;&nbsp;</a></span>GetBackgroundColor()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const Eigen::Vector4f open3d::visualization::rendering::Open3DScene::GetBackgroundColor </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a841bf192b039c928259a673e27a03159"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a841bf192b039c928259a673e27a03159">&#9670;&nbsp;</a></span>GetBoundingBox()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classopen3d_1_1geometry_1_1_axis_aligned_bou">geometry::AxisAlignedBoundingBox</a>&amp; open3d::visualization::rendering::Open3DScene::GetBoundingBox </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a4be98f60b892d8a7cc83764965e2b9d5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4be98f60b892d8a7cc83764965e2b9d5">&#9670;&nbsp;</a></span>GetCamera()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-3">Camera</a> * open3d::visualization::rendering::Open3DScene::GetCamera </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ab52cb07e39adbff5e0cca2d37c854ac0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab52cb07e39adbff5e0cca2d37c854ac0">&#9670;&nbsp;</a></span>GetDownsampleThreshold()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t open3d::visualization::rendering::Open3DScene::GetDownsampleThreshold </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ae633851d9b5c2cd2c560e5161412d276"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae633851d9b5c2cd2c560e5161412d276">&#9670;&nbsp;</a></span>GetGeometries()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt; std::string &gt; open3d::visualization::rendering::Open3DScene::GetGeometries </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a438891cb2857ecbec183348f33a8bde5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a438891cb2857ecbec183348f33a8bde5">&#9670;&nbsp;</a></span>GetGeometryTransform()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Eigen::Matrix4d open3d::visualization::rendering::Open3DScene::GetGeometryTransform </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>name</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a9aa8304e29da502c17e71963b1511c89"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9aa8304e29da502c17e71963b1511c89">&#9670;&nbsp;</a></span>GetLOD()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-2#a683b6333b8c45818c7a3c3e51d3445d7">Open3DScene::LOD</a> open3d::visualization::rendering::Open3DScene::GetLOD </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a4726a03f4358baa6757994ce0ef4cc85"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4726a03f4358baa6757994ce0ef4cc85">&#9670;&nbsp;</a></span>GetRenderer()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-31">Renderer</a> &amp; open3d::visualization::rendering::Open3DScene::GetRenderer </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a5264a54a97b3a67b238af51b0941108e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5264a54a97b3a67b238af51b0941108e">&#9670;&nbsp;</a></span>GetScene()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34">Scene</a> * open3d::visualization::rendering::Open3DScene::GetScene </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a93958a9ef2fb5aa21c75a1f05a0b33db"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a93958a9ef2fb5aa21c75a1f05a0b33db">&#9670;&nbsp;</a></span>GetView()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-35">View</a> * open3d::visualization::rendering::Open3DScene::GetView </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a54bd4526cbfd99eb54736f9cc7f7e673"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a54bd4526cbfd99eb54736f9cc7f7e673">&#9670;&nbsp;</a></span>GetViewId()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceopen3d_1_1visualization_1_1renderin#ae84c7ee53263cf103c77849661801ca3">ViewHandle</a> open3d::visualization::rendering::Open3DScene::GetViewId </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ae22a4ae28a84bb20d59f5ddced0220dd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae22a4ae28a84bb20d59f5ddced0220dd">&#9670;&nbsp;</a></span>HasGeometry()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool open3d::visualization::rendering::Open3DScene::HasGeometry </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>name</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="af43571740171bf1790d4a5f635ac3362"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af43571740171bf1790d4a5f635ac3362">&#9670;&nbsp;</a></span>ModifyGeometryMaterial()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::rendering::Open3DScene::ModifyGeometryMaterial </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structopen3d_1_1visualization_1_1rendering_1-3">MaterialRecord</a> &amp;&#160;</td>
          <td class="paramname"><em>mat</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="acc4c9f4215234ccb127034758a203548"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acc4c9f4215234ccb127034758a203548">&#9670;&nbsp;</a></span>RemoveGeometry()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::rendering::Open3DScene::RemoveGeometry </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>name</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a2ca6f9a3a54e75d693b87a36206b997f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2ca6f9a3a54e75d693b87a36206b997f">&#9670;&nbsp;</a></span>SetBackground()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::rendering::Open3DScene::SetBackground </td>
          <td>(</td>
          <td class="paramtype">const Eigen::Vector4f &amp;&#160;</td>
          <td class="paramname"><em>color</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::shared_ptr&lt; <a class="el" href="classopen3d_1_1geometry_1_1_image.406.delaye">geometry::Image</a> &gt;&#160;</td>
          <td class="paramname"><em>image</em> = <code>nullptr</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ae01242027f20f9527ac313b50546d36e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae01242027f20f9527ac313b50546d36e">&#9670;&nbsp;</a></span>SetDownsampleThreshold()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::rendering::Open3DScene::SetDownsampleThreshold </td>
          <td>(</td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>n_points</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Sets the maximum number of points before AddGeometry also adds a downsampled point cloud with number of points, used when rendering speed is important. </p>

</div>
</div>
<a id="aacc169d1dd2b714749ca0e2e571f39b5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aacc169d1dd2b714749ca0e2e571f39b5">&#9670;&nbsp;</a></span>SetGeometryTransform()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::rendering::Open3DScene::SetGeometryTransform </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const Eigen::Matrix4d &amp;&#160;</td>
          <td class="paramname"><em>transform</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a0924aef05e4d8c98d6252a6012e32248"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0924aef05e4d8c98d6252a6012e32248">&#9670;&nbsp;</a></span>SetLighting()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::rendering::Open3DScene::SetLighting </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-2#ab31317fc0a0f6adbbe6fbff78d112f68">LightingProfile</a>&#160;</td>
          <td class="paramname"><em>profile</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const Eigen::Vector3f &amp;&#160;</td>
          <td class="paramname"><em>sun_dir</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a94efd824c2a543e51b3ae5d9f0fb247a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a94efd824c2a543e51b3ae5d9f0fb247a">&#9670;&nbsp;</a></span>SetLOD()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::rendering::Open3DScene::SetLOD </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-2#a683b6333b8c45818c7a3c3e51d3445d7">LOD</a>&#160;</td>
          <td class="paramname"><em>lod</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ac47f53b1a95253ba4ed557046886283f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac47f53b1a95253ba4ed557046886283f">&#9670;&nbsp;</a></span>SetViewport()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::rendering::Open3DScene::SetViewport </td>
          <td>(</td>
          <td class="paramtype">std::int32_t&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::int32_t&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::uint32_t&#160;</td>
          <td class="paramname"><em>width</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::uint32_t&#160;</td>
          <td class="paramname"><em>height</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a4948d3767ebef4c687afbde4a4f2409a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4948d3767ebef4c687afbde4a4f2409a">&#9670;&nbsp;</a></span>ShowAxes()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::rendering::Open3DScene::ShowAxes </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>enable</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="af5c15bdb26542cd7fdbacfd15ec14f85"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af5c15bdb26542cd7fdbacfd15ec14f85">&#9670;&nbsp;</a></span>ShowGeometry()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::rendering::Open3DScene::ShowGeometry </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>show</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Shows or hides the geometry with the specified name. </p>

</div>
</div>
<a id="a2c733e652b537a3e9024455157fb37b9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2c733e652b537a3e9024455157fb37b9">&#9670;&nbsp;</a></span>ShowGroundPlane()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::rendering::Open3DScene::ShowGroundPlane </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>enable</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1visualization_1_1rendering_1_-34#a387adee0ccffd4754260c6809d03f137">Scene::GroundPlane</a>&#160;</td>
          <td class="paramname"><em>plane</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a918206cb3fff4920a24200a6a539029b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a918206cb3fff4920a24200a6a539029b">&#9670;&nbsp;</a></span>ShowSkybox()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::rendering::Open3DScene::ShowSkybox </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>enable</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ae2c05ef526cc648a72e7e7fffab8e33e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae2c05ef526cc648a72e7e7fffab8e33e">&#9670;&nbsp;</a></span>UpdateMaterial()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::rendering::Open3DScene::UpdateMaterial </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structopen3d_1_1visualization_1_1rendering_1-3">MaterialRecord</a> &amp;&#160;</td>
          <td class="paramname"><em>mat</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Updates all geometries to use this material. </p>

</div>
</div>
<a id="a79e48be82a8bbf9017b4178ec8d97ef7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a79e48be82a8bbf9017b4178ec8d97ef7">&#9670;&nbsp;</a></span>UpdateModelMaterial()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::rendering::Open3DScene::UpdateModelMaterial </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structopen3d_1_1visualization_1_1rendering_1">TriangleMeshModel</a> &amp;&#160;</td>
          <td class="paramname"><em>model</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Updates the named model to use this material. </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/runner/work/Open3D/Open3D/cpp/open3d/visualization/rendering/<a class="el" href="_open3_d_scene_8h_source.html">Open3DScene.h (9238339 (Tue Mar 14 18:49:09 2023 -0700))</a></li>
<li>/home/runner/work/Open3D/Open3D/cpp/open3d/visualization/rendering/<a class="el" href="_open3_d_scene_8cpp.html">Open3DScene.cpp (9238339 (Tue Mar 14 18:49:09 2023 -0700))</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1
</small></address>
</body>

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/classopen3d_1_1visualization_1_1rendering_1_1_open3_d_scene.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 10:59:47 GMT -->
</html>
