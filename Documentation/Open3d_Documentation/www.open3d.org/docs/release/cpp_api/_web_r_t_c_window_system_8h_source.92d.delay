<!-- HTML header for doxygen 1.8.20-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/_web_r_t_c_window_system_8h_source.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 11:03:06 GMT -->
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Open3D (C++ API): /home/runner/work/Open3D/Open3D/cpp/open3d/visualization/webrtc_server/WebRTCWindowSystem.h (9238339 (Tue Mar 14 18:49:09 2023 -0700)) Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js", "TeX/AMSmath.html", "TeX/AMSsymbols.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="../../../../cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-3TQPKGV6Z3"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());
  gtag('config', 'G-3TQPKGV6Z3');
</script>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="open3d_logo.ico"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Open3D (C++ API)
   &#160;<span id="projectnumber">0.17.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.html');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.html','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_df511e5bd85cec96854b39d5e1c27aa8.357.del">cpp</a></li><li class="navelem"><a class="el" href="dir_f8cc15b2217ff526bd336cf17635da2a.358.del">open3d</a></li><li class="navelem"><a class="el" href="dir_24afd032cc75c1c3607b086ffced3f32.4b6.del">visualization</a></li><li class="navelem"><a class="el" href="dir_2641aa47251edb57d3489eb146c72216.84d.del">webrtc_server</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">WebRTCWindowSystem.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_web_r_t_c_window_system_8h.html">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">// ----------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// -                        Open3D: www.open3d.org                            -</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// ----------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">// Copyright (c) 2018-2023 www.open3d.org</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">// SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">// ----------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160; </div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor">#include &lt;functional&gt;</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="preprocessor">#include &lt;memory&gt;</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160; </div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_bitmap_window_system_8h.html">open3d/visualization/gui/BitmapWindowSystem.h</a>&quot;</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160; </div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceopen3d.html">open3d</a> {</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="keyword">namespace </span>visualization {</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="keyword">namespace </span>webrtc_server {</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160; </div>
<div class="line"><a name="l00040"></a><span class="lineno"><a class="line" href="classopen3d_1_1visualization_1_1webrtc__serv-10">   40</a></span>&#160;<span class="keyword">class </span><a class="code" href="classopen3d_1_1visualization_1_1webrtc__serv-10">WebRTCWindowSystem</a> : <span class="keyword">public</span> <a class="code" href="classopen3d_1_1visualization_1_1gui_1_1_bitm">gui::BitmapWindowSystem</a> {</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    <span class="keyword">static</span> std::shared_ptr&lt;WebRTCWindowSystem&gt; <a class="code" href="classopen3d_1_1visualization_1_1webrtc__serv-10#a6ead48c1116aef40d66f4dcbf195c63f">GetInstance</a>();</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <span class="keyword">virtual</span> <a class="code" href="classopen3d_1_1visualization_1_1webrtc__serv-10#a0500e394e371faed9f6b6d093b125b63">~WebRTCWindowSystem</a>();</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <a class="code" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">OSWindow</a> <a class="code" href="classopen3d_1_1visualization_1_1webrtc__serv-10#a334f76c500eb1390bf69a93867581a48">CreateOSWindow</a>(<a class="code" href="classopen3d_1_1visualization_1_1gui_1_1_wind">gui::Window</a>* <a class="code" href="_bitmap_window_system_8cpp.html#a5362a314787f250a6bdba91e8fcfecf2">o3d_window</a>,</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;                            <span class="keywordtype">int</span> <a class="code" href="io_2file__format_2_file_p_c_d_8cpp.375.delay#a2474a5474cbff19523a51eb1de01cda4">width</a>,</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;                            <span class="keywordtype">int</span> <a class="code" href="io_2file__format_2_file_p_c_d_8cpp.375.delay#ad12fc34ce789bce6c8a05d8a17138534">height</a>,</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;                            <span class="keyword">const</span> <span class="keywordtype">char</span>* title,</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;                            <span class="keywordtype">int</span> flags) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classopen3d_1_1visualization_1_1webrtc__serv-10#a1d37bbf4e883b33d1b25b439d81998eb">DestroyWindow</a>(<a class="code" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">OSWindow</a> w) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160; </div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    std::vector&lt;std::string&gt; <a class="code" href="classopen3d_1_1visualization_1_1webrtc__serv-10#ab6fb659fb0fd0af2051659afa3375e3d">GetWindowUIDs</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    std::string <a class="code" href="classopen3d_1_1visualization_1_1webrtc__serv-10#aff0fa0e470725e5ee18b8be8e25b2ec2">GetWindowUID</a>(<a class="code" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">OSWindow</a> w) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <a class="code" href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">OSWindow</a> <a class="code" href="classopen3d_1_1visualization_1_1webrtc__serv-10#af5788c05b8ff14082ae91a73f7b80d3f">GetOSWindowByUID</a>(<span class="keyword">const</span> std::string&amp; uid) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160; </div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classopen3d_1_1visualization_1_1webrtc__serv-10#a1d78380205271b2fcd44155e4726c3aa">StartWebRTCServer</a>();</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160; </div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    std::string <a class="code" href="classopen3d_1_1visualization_1_1webrtc__serv-10#ae910c1634bdc6184178c90e5a3d4625d">OnDataChannelMessage</a>(<span class="keyword">const</span> std::string&amp; message);</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160; </div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classopen3d_1_1visualization_1_1webrtc__serv-10#aeed2c20b42852237a1808c54bb15d296">RegisterDataChannelMessageCallback</a>(</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;            <span class="keyword">const</span> std::string&amp; class_name,</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;            <span class="keyword">const</span> std::function&lt;std::string(<span class="keyword">const</span> std::string&amp;)&gt; <a class="code" href="_filament_renderer_8cpp.html#a7a0a25a91d8a936306270fd09f1a64a9">callback</a>);</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160; </div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classopen3d_1_1visualization_1_1webrtc__serv-10#ae797ce076e6810d9260b24993fff61fa">OnFrame</a>(<span class="keyword">const</span> std::string&amp; window_uid,</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;                 <span class="keyword">const</span> std::shared_ptr&lt;core::Tensor&gt;&amp; im);</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160; </div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classopen3d_1_1visualization_1_1webrtc__serv-10#acc226f6445bf195a7ec34a2952c42305">SendInitFrames</a>(<span class="keyword">const</span> std::string&amp; window_uid);</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160; </div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    std::string <a class="code" href="classopen3d_1_1visualization_1_1webrtc__serv-10#acbff2d0322a1072c8a2fae3324445414">CallHttpAPI</a>(<span class="keyword">const</span> std::string&amp; entry_point,</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;                            <span class="keyword">const</span> std::string&amp; query_string = <span class="stringliteral">&quot;&quot;</span>,</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;                            <span class="keyword">const</span> std::string&amp; <a class="code" href="namespaceopen3d_1_1io_1_1k4a__plugin.362.del#ab20d0a0a37985f881854441f0bddbc90">data</a> = <span class="stringliteral">&quot;&quot;</span>) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160; </div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classopen3d_1_1visualization_1_1webrtc__serv-10#a6309ba63e3c2407034ccc16d21435620">EnableWebRTC</a>();</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160; </div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classopen3d_1_1visualization_1_1webrtc__serv-10#ab63aac4c231cc2dded4ea2351d6ad294">DisableHttpHandshake</a>();</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160; </div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classopen3d_1_1visualization_1_1webrtc__serv-10#aeef2643dab421ed19449cf7bed2b9bf9">CloseWindowConnections</a>(<span class="keyword">const</span> std::string&amp; window_uid);</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160; </div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    <a class="code" href="classopen3d_1_1visualization_1_1webrtc__serv-10">WebRTCWindowSystem</a>();</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    <span class="keyword">struct </span><a class="code" href="structopen3d_1_1visualization_1_1webrtc__ser-2">Impl</a>;</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    std::unique_ptr&lt;Impl&gt; impl_;</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;};</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160; </div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;}  <span class="comment">// namespace webrtc_server</span></div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;}  <span class="comment">// namespace visualization</span></div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;}  <span class="comment">// namespace open3d</span></div>
<div class="ttc" id="a_bitmap_window_system_8cpp_html_a5362a314787f250a6bdba91e8fcfecf2"><div class="ttname"><a href="_bitmap_window_system_8cpp.html#a5362a314787f250a6bdba91e8fcfecf2">o3d_window</a></div><div class="ttdeci">Window * o3d_window</div><div class="ttdef"><b>Definition:</b> BitmapWindowSystem.cpp:29</div></div>
<div class="ttc" id="a_bitmap_window_system_8h_html"><div class="ttname"><a href="_bitmap_window_system_8h.html">BitmapWindowSystem.h</a></div></div>
<div class="ttc" id="a_filament_renderer_8cpp_html_a7a0a25a91d8a936306270fd09f1a64a9"><div class="ttname"><a href="_filament_renderer_8cpp.html#a7a0a25a91d8a936306270fd09f1a64a9">callback</a></div><div class="ttdeci">std::function&lt; void(std::shared_ptr&lt; core::Tensor &gt;)&gt; callback</div><div class="ttdef"><b>Definition:</b> FilamentRenderer.cpp:182</div></div>
<div class="ttc" id="aclassopen3d_1_1visualization_1_1gui_1_1_bitmap_window_system_html"><div class="ttname"><a href="classopen3d_1_1visualization_1_1gui_1_1_bitm">open3d::visualization::gui::BitmapWindowSystem</a></div><div class="ttdef"><b>Definition:</b> BitmapWindowSystem.h:28</div></div>
<div class="ttc" id="aclassopen3d_1_1visualization_1_1gui_1_1_window_html"><div class="ttname"><a href="classopen3d_1_1visualization_1_1gui_1_1_wind">open3d::visualization::gui::Window</a></div><div class="ttdef"><b>Definition:</b> Window.h:30</div></div>
<div class="ttc" id="aclassopen3d_1_1visualization_1_1gui_1_1_window_system_html_a7cc99ba75236df4f5d2a815a77e7a27b"><div class="ttname"><a href="classopen3d_1_1visualization_1_1gui_1_1_wind-2#a7cc99ba75236df4f5d2a815a77e7a27b">open3d::visualization::gui::WindowSystem::OSWindow</a></div><div class="ttdeci">void * OSWindow</div><div class="ttdef"><b>Definition:</b> WindowSystem.h:29</div></div>
<div class="ttc" id="aclassopen3d_1_1visualization_1_1webrtc__server_1_1_web_r_t_c_window_system_html"><div class="ttname"><a href="classopen3d_1_1visualization_1_1webrtc__serv-10">open3d::visualization::webrtc_server::WebRTCWindowSystem</a></div><div class="ttdoc">WebRTCWindowSystem is a BitmapWindowSystem with a WebRTC server that sends video frames to remote cli...</div><div class="ttdef"><b>Definition:</b> WebRTCWindowSystem.h:40</div></div>
<div class="ttc" id="aclassopen3d_1_1visualization_1_1webrtc__server_1_1_web_r_t_c_window_system_html_a0500e394e371faed9f6b6d093b125b63"><div class="ttname"><a href="classopen3d_1_1visualization_1_1webrtc__serv-10#a0500e394e371faed9f6b6d093b125b63">open3d::visualization::webrtc_server::WebRTCWindowSystem::~WebRTCWindowSystem</a></div><div class="ttdeci">virtual ~WebRTCWindowSystem()</div><div class="ttdef"><b>Definition:</b> WebRTCWindowSystem.cpp:199</div></div>
<div class="ttc" id="aclassopen3d_1_1visualization_1_1webrtc__server_1_1_web_r_t_c_window_system_html_a1d37bbf4e883b33d1b25b439d81998eb"><div class="ttname"><a href="classopen3d_1_1visualization_1_1webrtc__serv-10#a1d37bbf4e883b33d1b25b439d81998eb">open3d::visualization::webrtc_server::WebRTCWindowSystem::DestroyWindow</a></div><div class="ttdeci">void DestroyWindow(OSWindow w) override</div><div class="ttdef"><b>Definition:</b> WebRTCWindowSystem.cpp:220</div></div>
<div class="ttc" id="aclassopen3d_1_1visualization_1_1webrtc__server_1_1_web_r_t_c_window_system_html_a1d78380205271b2fcd44155e4726c3aa"><div class="ttname"><a href="classopen3d_1_1visualization_1_1webrtc__serv-10#a1d78380205271b2fcd44155e4726c3aa">open3d::visualization::webrtc_server::WebRTCWindowSystem::StartWebRTCServer</a></div><div class="ttdeci">void StartWebRTCServer()</div><div class="ttdoc">Start WebRTC server in a background thread.</div><div class="ttdef"><b>Definition:</b> WebRTCWindowSystem.cpp:257</div></div>
<div class="ttc" id="aclassopen3d_1_1visualization_1_1webrtc__server_1_1_web_r_t_c_window_system_html_a334f76c500eb1390bf69a93867581a48"><div class="ttname"><a href="classopen3d_1_1visualization_1_1webrtc__serv-10#a334f76c500eb1390bf69a93867581a48">open3d::visualization::webrtc_server::WebRTCWindowSystem::CreateOSWindow</a></div><div class="ttdeci">OSWindow CreateOSWindow(gui::Window *o3d_window, int width, int height, const char *title, int flags) override</div><div class="ttdef"><b>Definition:</b> WebRTCWindowSystem.cpp:204</div></div>
<div class="ttc" id="aclassopen3d_1_1visualization_1_1webrtc__server_1_1_web_r_t_c_window_system_html_a6309ba63e3c2407034ccc16d21435620"><div class="ttname"><a href="classopen3d_1_1visualization_1_1webrtc__serv-10#a6309ba63e3c2407034ccc16d21435620">open3d::visualization::webrtc_server::WebRTCWindowSystem::EnableWebRTC</a></div><div class="ttdeci">void EnableWebRTC()</div><div class="ttdef"><b>Definition:</b> WebRTCWindowSystem.cpp:485</div></div>
<div class="ttc" id="aclassopen3d_1_1visualization_1_1webrtc__server_1_1_web_r_t_c_window_system_html_a6ead48c1116aef40d66f4dcbf195c63f"><div class="ttname"><a href="classopen3d_1_1visualization_1_1webrtc__serv-10#a6ead48c1116aef40d66f4dcbf195c63f">open3d::visualization::webrtc_server::WebRTCWindowSystem::GetInstance</a></div><div class="ttdeci">static std::shared_ptr&lt; WebRTCWindowSystem &gt; GetInstance()</div><div class="ttdef"><b>Definition:</b> WebRTCWindowSystem.cpp:111</div></div>
<div class="ttc" id="aclassopen3d_1_1visualization_1_1webrtc__server_1_1_web_r_t_c_window_system_html_ab63aac4c231cc2dded4ea2351d6ad294"><div class="ttname"><a href="classopen3d_1_1visualization_1_1webrtc__serv-10#ab63aac4c231cc2dded4ea2351d6ad294">open3d::visualization::webrtc_server::WebRTCWindowSystem::DisableHttpHandshake</a></div><div class="ttdeci">void DisableHttpHandshake()</div><div class="ttdef"><b>Definition:</b> WebRTCWindowSystem.cpp:490</div></div>
<div class="ttc" id="aclassopen3d_1_1visualization_1_1webrtc__server_1_1_web_r_t_c_window_system_html_ab6fb659fb0fd0af2051659afa3375e3d"><div class="ttname"><a href="classopen3d_1_1visualization_1_1webrtc__serv-10#ab6fb659fb0fd0af2051659afa3375e3d">open3d::visualization::webrtc_server::WebRTCWindowSystem::GetWindowUIDs</a></div><div class="ttdeci">std::vector&lt; std::string &gt; GetWindowUIDs() const</div><div class="ttdoc">List available windows.</div><div class="ttdef"><b>Definition:</b> WebRTCWindowSystem.cpp:228</div></div>
<div class="ttc" id="aclassopen3d_1_1visualization_1_1webrtc__server_1_1_web_r_t_c_window_system_html_acbff2d0322a1072c8a2fae3324445414"><div class="ttname"><a href="classopen3d_1_1visualization_1_1webrtc__serv-10#acbff2d0322a1072c8a2fae3324445414">open3d::visualization::webrtc_server::WebRTCWindowSystem::CallHttpAPI</a></div><div class="ttdeci">std::string CallHttpAPI(const std::string &amp;entry_point, const std::string &amp;query_string=&quot;&quot;, const std::string &amp;data=&quot;&quot;) const</div><div class="ttdoc">Call PeerConnectionManager's web request API.</div><div class="ttdef"><b>Definition:</b> WebRTCWindowSystem.cpp:419</div></div>
<div class="ttc" id="aclassopen3d_1_1visualization_1_1webrtc__server_1_1_web_r_t_c_window_system_html_acc226f6445bf195a7ec34a2952c42305"><div class="ttname"><a href="classopen3d_1_1visualization_1_1webrtc__serv-10#acc226f6445bf195a7ec34a2952c42305">open3d::visualization::webrtc_server::WebRTCWindowSystem::SendInitFrames</a></div><div class="ttdeci">void SendInitFrames(const std::string &amp;window_uid)</div><div class="ttdef"><b>Definition:</b> WebRTCWindowSystem.cpp:405</div></div>
<div class="ttc" id="aclassopen3d_1_1visualization_1_1webrtc__server_1_1_web_r_t_c_window_system_html_ae797ce076e6810d9260b24993fff61fa"><div class="ttname"><a href="classopen3d_1_1visualization_1_1webrtc__serv-10#ae797ce076e6810d9260b24993fff61fa">open3d::visualization::webrtc_server::WebRTCWindowSystem::OnFrame</a></div><div class="ttdeci">void OnFrame(const std::string &amp;window_uid, const std::shared_ptr&lt; core::Tensor &gt; &amp;im)</div><div class="ttdoc">Server -&gt; client frame.</div><div class="ttdef"><b>Definition:</b> WebRTCWindowSystem.cpp:400</div></div>
<div class="ttc" id="aclassopen3d_1_1visualization_1_1webrtc__server_1_1_web_r_t_c_window_system_html_ae910c1634bdc6184178c90e5a3d4625d"><div class="ttname"><a href="classopen3d_1_1visualization_1_1webrtc__serv-10#ae910c1634bdc6184178c90e5a3d4625d">open3d::visualization::webrtc_server::WebRTCWindowSystem::OnDataChannelMessage</a></div><div class="ttdeci">std::string OnDataChannelMessage(const std::string &amp;message)</div><div class="ttdef"><b>Definition:</b> WebRTCWindowSystem.cpp:355</div></div>
<div class="ttc" id="aclassopen3d_1_1visualization_1_1webrtc__server_1_1_web_r_t_c_window_system_html_aeed2c20b42852237a1808c54bb15d296"><div class="ttname"><a href="classopen3d_1_1visualization_1_1webrtc__serv-10#aeed2c20b42852237a1808c54bb15d296">open3d::visualization::webrtc_server::WebRTCWindowSystem::RegisterDataChannelMessageCallback</a></div><div class="ttdeci">void RegisterDataChannelMessageCallback(const std::string &amp;class_name, const std::function&lt; std::string(const std::string &amp;)&gt; callback)</div><div class="ttdef"><b>Definition:</b> WebRTCWindowSystem.cpp:391</div></div>
<div class="ttc" id="aclassopen3d_1_1visualization_1_1webrtc__server_1_1_web_r_t_c_window_system_html_aeef2643dab421ed19449cf7bed2b9bf9"><div class="ttname"><a href="classopen3d_1_1visualization_1_1webrtc__serv-10#aeef2643dab421ed19449cf7bed2b9bf9">open3d::visualization::webrtc_server::WebRTCWindowSystem::CloseWindowConnections</a></div><div class="ttdeci">void CloseWindowConnections(const std::string &amp;window_uid)</div><div class="ttdoc">Close all WebRTC connections that correspond to a Window.</div><div class="ttdef"><b>Definition:</b> WebRTCWindowSystem.cpp:495</div></div>
<div class="ttc" id="aclassopen3d_1_1visualization_1_1webrtc__server_1_1_web_r_t_c_window_system_html_af5788c05b8ff14082ae91a73f7b80d3f"><div class="ttname"><a href="classopen3d_1_1visualization_1_1webrtc__serv-10#af5788c05b8ff14082ae91a73f7b80d3f">open3d::visualization::webrtc_server::WebRTCWindowSystem::GetOSWindowByUID</a></div><div class="ttdeci">OSWindow GetOSWindowByUID(const std::string &amp;uid) const</div><div class="ttdef"><b>Definition:</b> WebRTCWindowSystem.cpp:245</div></div>
<div class="ttc" id="aclassopen3d_1_1visualization_1_1webrtc__server_1_1_web_r_t_c_window_system_html_aff0fa0e470725e5ee18b8be8e25b2ec2"><div class="ttname"><a href="classopen3d_1_1visualization_1_1webrtc__serv-10#aff0fa0e470725e5ee18b8be8e25b2ec2">open3d::visualization::webrtc_server::WebRTCWindowSystem::GetWindowUID</a></div><div class="ttdeci">std::string GetWindowUID(OSWindow w) const</div><div class="ttdef"><b>Definition:</b> WebRTCWindowSystem.cpp:236</div></div>
<div class="ttc" id="aio_2file__format_2_file_p_c_d_8cpp_html_a2474a5474cbff19523a51eb1de01cda4"><div class="ttname"><a href="io_2file__format_2_file_p_c_d_8cpp.375.delay#a2474a5474cbff19523a51eb1de01cda4">width</a></div><div class="ttdeci">int width</div><div class="ttdef"><b>Definition:</b> FilePCD.cpp:52</div></div>
<div class="ttc" id="aio_2file__format_2_file_p_c_d_8cpp_html_ad12fc34ce789bce6c8a05d8a17138534"><div class="ttname"><a href="io_2file__format_2_file_p_c_d_8cpp.375.delay#ad12fc34ce789bce6c8a05d8a17138534">height</a></div><div class="ttdeci">int height</div><div class="ttdef"><b>Definition:</b> FilePCD.cpp:53</div></div>
<div class="ttc" id="anamespaceopen3d_1_1io_1_1k4a__plugin_html_ab20d0a0a37985f881854441f0bddbc90"><div class="ttname"><a href="namespaceopen3d_1_1io_1_1k4a__plugin.362.del#ab20d0a0a37985f881854441f0bddbc90">open3d::io::k4a_plugin::data</a></div><div class="ttdeci">const char const char value recording_handle imu_sample recording_handle uint8_t data</div><div class="ttdef"><b>Definition:</b> K4aPlugin.cpp:269</div></div>
<div class="ttc" id="anamespaceopen3d_html"><div class="ttname"><a href="namespaceopen3d.html">open3d</a></div><div class="ttdef"><b>Definition:</b> PinholeCameraIntrinsic.cpp:16</div></div>
<div class="ttc" id="astructopen3d_1_1visualization_1_1webrtc__server_1_1_web_r_t_c_window_system_1_1_impl_html"><div class="ttname"><a href="structopen3d_1_1visualization_1_1webrtc__ser-2">open3d::visualization::webrtc_server::WebRTCWindowSystem::Impl</a></div><div class="ttdef"><b>Definition:</b> WebRTCWindowSystem.cpp:87</div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1
</small></address>
</body>

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/_web_r_t_c_window_system_8h_source.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 11:03:06 GMT -->
</html>
