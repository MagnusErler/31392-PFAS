<!-- HTML header for doxygen 1.8.20-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/classopen3d_1_1utility_1_1_i_json_convertible.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 10:54:36 GMT -->
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Open3D (C++ API): open3d::utility::IJsonConvertible Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js", "TeX/AMSmath.html", "TeX/AMSsymbols.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="../../../../cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-3TQPKGV6Z3"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());
  gtag('config', 'G-3TQPKGV6Z3');
</script>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="open3d_logo.ico"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Open3D (C++ API)
   &#160;<span id="projectnumber">0.17.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.html');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.html','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceopen3d.html">open3d</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1utility.html">utility</a></li><li class="navelem"><a class="el" href="classopen3d_1_1utility_1_1_i_json_convertibl">IJsonConvertible</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">open3d::utility::IJsonConvertible Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_i_json_convertible_8h_source.html">IJsonConvertible.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for open3d::utility::IJsonConvertible:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classopen3d_1_1utility_1_1_i_json_convertibl-2" usemap="#open3d::utility::IJsonConvertible_map" alt=""/>
  <map id="open3d::utility::IJsonConvertible_map" name="open3d::utility::IJsonConvertible_map">
<area href="classopen3d_1_1camera_1_1_pinhole_camera_int" title="Contains the pinhole camera intrinsic parameters." alt="open3d::camera::PinholeCameraIntrinsic" shape="rect" coords="299,56,588,80"/>
<area href="classopen3d_1_1camera_1_1_pinhole_camera_par" title="Contains both intrinsic and extrinsic pinhole camera parameters." alt="open3d::camera::PinholeCameraParameters" shape="rect" coords="299,112,588,136"/>
<area href="classopen3d_1_1camera_1_1_pinhole_camera_tra" alt="open3d::camera::PinholeCameraTrajectory" shape="rect" coords="299,168,588,192"/>
<area href="classopen3d_1_1geometry_1_1_octree.41a.delay" title="Octree datastructure." alt="open3d::geometry::Octree" shape="rect" coords="299,224,588,248"/>
<area href="classopen3d_1_1geometry_1_1_octree_node.414" title="The base class for octree node." alt="open3d::geometry::OctreeNode" shape="rect" coords="299,280,588,304"/>
<area href="classopen3d_1_1io_1_1_m_k_v_metadata.432.del" alt="open3d::io::MKVMetadata" shape="rect" coords="299,336,588,360"/>
<area href="classopen3d_1_1io_1_1_r_g_b_d_sensor_config" alt="open3d::io::RGBDSensorConfig" shape="rect" coords="299,392,588,416"/>
<area href="classopen3d_1_1pipelines_1_1color__map_1_1_i" alt="open3d::pipelines::color_map::ImageWarpingField" shape="rect" coords="299,448,588,472"/>
<area href="classopen3d_1_1pipelines_1_1registration_1_1-2" title="Data structure defining the pose graph." alt="open3d::pipelines::registration::PoseGraph" shape="rect" coords="299,504,588,528"/>
<area href="classopen3d_1_1pipelines_1_1registration_1_1-3" title="Edge of PoseGraph." alt="open3d::pipelines::registration::PoseGraphEdge" shape="rect" coords="299,560,588,584"/>
<area href="classopen3d_1_1pipelines_1_1registration_1_1-4" title="Node of PoseGraph." alt="open3d::pipelines::registration::PoseGraphNode" shape="rect" coords="299,616,588,640"/>
<area href="classopen3d_1_1t_1_1io_1_1_r_g_b_d_video_met" title="RGBD video metadata." alt="open3d::t::io::RGBDVideoMetadata" shape="rect" coords="299,672,588,696"/>
<area href="classopen3d_1_1visualization_1_1_render_opti" title="Defines rendering options for visualizer." alt="open3d::visualization::RenderOption" shape="rect" coords="299,728,588,752"/>
<area href="classopen3d_1_1visualization_1_1_selection_p-2" title="Select a polygon volume for cropping." alt="open3d::visualization::SelectionPolygonVolume" shape="rect" coords="299,784,588,808"/>
<area href="classopen3d_1_1visualization_1_1_view_parame" alt="open3d::visualization::ViewParameters" shape="rect" coords="299,840,588,864"/>
<area href="classopen3d_1_1visualization_1_1_view_trajec" alt="open3d::visualization::ViewTrajectory" shape="rect" coords="299,896,588,920"/>
  </map>
</div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:acf2f47a1d7f759ee0046b7a9f76a9ab0"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1utility_1_1_i_json_convertibl#acf2f47a1d7f759ee0046b7a9f76a9ab0">~IJsonConvertible</a> ()</td></tr>
<tr class="separator:acf2f47a1d7f759ee0046b7a9f76a9ab0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a95e320da6916f2f0417d7fa00b20793f"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1utility_1_1_i_json_convertibl#a95e320da6916f2f0417d7fa00b20793f">ConvertToJsonValue</a> (Json::Value &amp;value) const =0</td></tr>
<tr class="separator:a95e320da6916f2f0417d7fa00b20793f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a42bfd942fd44e0318fa6a12866ce669d"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1utility_1_1_i_json_convertibl#a42bfd942fd44e0318fa6a12866ce669d">ConvertFromJsonValue</a> (const Json::Value &amp;value)=0</td></tr>
<tr class="separator:a42bfd942fd44e0318fa6a12866ce669d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa7aaf69458ae9065121bf55cc21bfbcf"><td class="memItemLeft" align="right" valign="top">virtual std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1utility_1_1_i_json_convertibl#aa7aaf69458ae9065121bf55cc21bfbcf">ToString</a> () const</td></tr>
<tr class="memdesc:aa7aaf69458ae9065121bf55cc21bfbcf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convert to a styled string representation of JSON data for display.  <a href="classopen3d_1_1utility_1_1_i_json_convertibl#aa7aaf69458ae9065121bf55cc21bfbcf">More...</a><br /></td></tr>
<tr class="separator:aa7aaf69458ae9065121bf55cc21bfbcf"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a25ee0ebf7aafc887fa917136f97dc623"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1utility_1_1_i_json_convertibl#a25ee0ebf7aafc887fa917136f97dc623">EigenVector3dFromJsonArray</a> (Eigen::Vector3d &amp;vec, const Json::Value &amp;value)</td></tr>
<tr class="separator:a25ee0ebf7aafc887fa917136f97dc623"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa504e85fe0fab6eb9bf00c8870c64e7b"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1utility_1_1_i_json_convertibl#aa504e85fe0fab6eb9bf00c8870c64e7b">EigenVector3dToJsonArray</a> (const Eigen::Vector3d &amp;vec, Json::Value &amp;value)</td></tr>
<tr class="separator:aa504e85fe0fab6eb9bf00c8870c64e7b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3bc2a9c0c6377e4d90305766b5fb78d7"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1utility_1_1_i_json_convertibl#a3bc2a9c0c6377e4d90305766b5fb78d7">EigenVector4dFromJsonArray</a> (Eigen::Vector4d &amp;vec, const Json::Value &amp;value)</td></tr>
<tr class="separator:a3bc2a9c0c6377e4d90305766b5fb78d7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9aa39c74c435a61a328296908e85dcdd"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1utility_1_1_i_json_convertibl#a9aa39c74c435a61a328296908e85dcdd">EigenVector4dToJsonArray</a> (const Eigen::Vector4d &amp;vec, Json::Value &amp;value)</td></tr>
<tr class="separator:a9aa39c74c435a61a328296908e85dcdd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a654a42e83add5a3b19eccc09c31a9ca8"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1utility_1_1_i_json_convertibl#a654a42e83add5a3b19eccc09c31a9ca8">EigenMatrix3dFromJsonArray</a> (Eigen::Matrix3d &amp;mat, const Json::Value &amp;value)</td></tr>
<tr class="separator:a654a42e83add5a3b19eccc09c31a9ca8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ace9dac52c3ee510e08f295ada0733b6b"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1utility_1_1_i_json_convertibl#ace9dac52c3ee510e08f295ada0733b6b">EigenMatrix3dToJsonArray</a> (const Eigen::Matrix3d &amp;mat, Json::Value &amp;value)</td></tr>
<tr class="separator:ace9dac52c3ee510e08f295ada0733b6b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1e8788f8bdac9878c74e3e8a7a760bb7"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1utility_1_1_i_json_convertibl#a1e8788f8bdac9878c74e3e8a7a760bb7">EigenMatrix4dFromJsonArray</a> (Eigen::Matrix4d &amp;mat, const Json::Value &amp;value)</td></tr>
<tr class="separator:a1e8788f8bdac9878c74e3e8a7a760bb7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a98d6575885469a57787f6ff4c2a65839"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1utility_1_1_i_json_convertibl#a98d6575885469a57787f6ff4c2a65839">EigenMatrix4dToJsonArray</a> (const Eigen::Matrix4d &amp;mat, Json::Value &amp;value)</td></tr>
<tr class="separator:a98d6575885469a57787f6ff4c2a65839"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3a4d0a90b42bc56b5ae5cb595c0c27b5"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1utility_1_1_i_json_convertibl#a3a4d0a90b42bc56b5ae5cb595c0c27b5">EigenMatrix4dFromJsonArray</a> (Eigen::Matrix4d_u &amp;mat, const Json::Value &amp;value)</td></tr>
<tr class="separator:a3a4d0a90b42bc56b5ae5cb595c0c27b5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac27b2b52cd3d64f42e6ba8980fcd7132"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1utility_1_1_i_json_convertibl#ac27b2b52cd3d64f42e6ba8980fcd7132">EigenMatrix4dToJsonArray</a> (const Eigen::Matrix4d_u &amp;mat, Json::Value &amp;value)</td></tr>
<tr class="separator:ac27b2b52cd3d64f42e6ba8980fcd7132"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a55b66a1bf7c520b528d81adc68a3f51a"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1utility_1_1_i_json_convertibl#a55b66a1bf7c520b528d81adc68a3f51a">EigenMatrix6dFromJsonArray</a> (Eigen::Matrix6d &amp;mat, const Json::Value &amp;value)</td></tr>
<tr class="separator:a55b66a1bf7c520b528d81adc68a3f51a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a84d46a8fbdecc2ce0df15a6454396068"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1utility_1_1_i_json_convertibl#a84d46a8fbdecc2ce0df15a6454396068">EigenMatrix6dToJsonArray</a> (const Eigen::Matrix6d &amp;mat, Json::Value &amp;value)</td></tr>
<tr class="separator:a84d46a8fbdecc2ce0df15a6454396068"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae4f1ece384c77ae3ec839c28666c3633"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1utility_1_1_i_json_convertibl#ae4f1ece384c77ae3ec839c28666c3633">EigenMatrix6dFromJsonArray</a> (Eigen::Matrix6d_u &amp;mat, const Json::Value &amp;value)</td></tr>
<tr class="separator:ae4f1ece384c77ae3ec839c28666c3633"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4b9ea2fed07b9cbbab565aca6b9417cd"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1utility_1_1_i_json_convertibl#a4b9ea2fed07b9cbbab565aca6b9417cd">EigenMatrix6dToJsonArray</a> (const Eigen::Matrix6d_u &amp;mat, Json::Value &amp;value)</td></tr>
<tr class="separator:a4b9ea2fed07b9cbbab565aca6b9417cd"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Class <a class="el" href="classopen3d_1_1utility_1_1_i_json_convertibl">IJsonConvertible</a> defines the behavior of a class that can convert itself to/from a json::Value. </p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="acf2f47a1d7f759ee0046b7a9f76a9ab0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acf2f47a1d7f759ee0046b7a9f76a9ab0">&#9670;&nbsp;</a></span>~IJsonConvertible()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual open3d::utility::IJsonConvertible::~IJsonConvertible </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a42bfd942fd44e0318fa6a12866ce669d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a42bfd942fd44e0318fa6a12866ce669d">&#9670;&nbsp;</a></span>ConvertFromJsonValue()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool open3d::utility::IJsonConvertible::ConvertFromJsonValue </td>
          <td>(</td>
          <td class="paramtype">const Json::Value &amp;&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classopen3d_1_1visualization_1_1_view_trajec#a53e4c660ed8819f665a57a28539443a1">open3d::visualization::ViewTrajectory</a>, <a class="el" href="classopen3d_1_1visualization_1_1_view_parame#af2fe990b55aff698ddd0a1304bc2134e">open3d::visualization::ViewParameters</a>, <a class="el" href="classopen3d_1_1visualization_1_1_render_opti-2#aba3a4c0125150a367059c97b9e991450">open3d::visualization::RenderOptionWithEditing</a>, <a class="el" href="classopen3d_1_1visualization_1_1_render_opti#a9fdead1753a608960ddf3cfbdb8296aa">open3d::visualization::RenderOption</a>, <a class="el" href="classopen3d_1_1visualization_1_1_selection_p-2#ad5afdd0c6774b05fb03fe118f72197b0">open3d::visualization::SelectionPolygonVolume</a>, <a class="el" href="classopen3d_1_1t_1_1io_1_1_r_g_b_d_video_met#ae64c123ea713d59020e7f801d8cf03cc">open3d::t::io::RGBDVideoMetadata</a>, <a class="el" href="classopen3d_1_1t_1_1io_1_1_real_sense_sensor-2#a5692656328cba3a103ca07d060551410">open3d::t::io::RealSenseSensorConfig</a>, <a class="el" href="classopen3d_1_1pipelines_1_1registration_1_1-2#a62ca7c1e9f1e774273e4ea389062a055">open3d::pipelines::registration::PoseGraph</a>, <a class="el" href="classopen3d_1_1pipelines_1_1registration_1_1-3#a896ec7e7dd015b1c1fd375e0c4ef20e5">open3d::pipelines::registration::PoseGraphEdge</a>, <a class="el" href="classopen3d_1_1pipelines_1_1registration_1_1-4#aa3c972754777979c906326424dc5c78a">open3d::pipelines::registration::PoseGraphNode</a>, <a class="el" href="classopen3d_1_1pipelines_1_1color__map_1_1_i#a40a0cfe33ba94ce555d9f51c285af012">open3d::pipelines::color_map::ImageWarpingField</a>, <a class="el" href="classopen3d_1_1io_1_1_m_k_v_metadata.432.del#a39a5c27e313bc85a8048e0c3eb9d8a49">open3d::io::MKVMetadata</a>, <a class="el" href="classopen3d_1_1io_1_1_azure_kinect_sensor_co#a8cd8607b7db75c6c0bf1474bd4950695">open3d::io::AzureKinectSensorConfig</a>, <a class="el" href="classopen3d_1_1geometry_1_1_octree.41a.delay#a48cec1a67b692c2b4701f5d695828809">open3d::geometry::Octree</a>, <a class="el" href="classopen3d_1_1geometry_1_1_octree_point_col#aebe903e4a970b966cd1e2cefc8f868d4">open3d::geometry::OctreePointColorLeafNode</a>, <a class="el" href="classopen3d_1_1geometry_1_1_octree_color_lea#a615a04684c4df2d6b71858fea8f802ab">open3d::geometry::OctreeColorLeafNode</a>, <a class="el" href="classopen3d_1_1geometry_1_1_octree_internal_-2#af0bfbe135574919fbc42297dcd1304d1">open3d::geometry::OctreeInternalPointNode</a>, <a class="el" href="classopen3d_1_1geometry_1_1_octree_internal_#a71eb164a794c959986d304ac8fcba439">open3d::geometry::OctreeInternalNode</a>, <a class="el" href="classopen3d_1_1camera_1_1_pinhole_camera_tra#ad1cecdbbb56375e5b67ea1acc02c21d8">open3d::camera::PinholeCameraTrajectory</a>, <a class="el" href="classopen3d_1_1camera_1_1_pinhole_camera_par#ae7114228231400130c4d9560a61c8ac0">open3d::camera::PinholeCameraParameters</a>, and <a class="el" href="classopen3d_1_1camera_1_1_pinhole_camera_int#a0b9d6853df2fd01aa3e9397c4d4c55a0">open3d::camera::PinholeCameraIntrinsic</a>.</p>

</div>
</div>
<a id="a95e320da6916f2f0417d7fa00b20793f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a95e320da6916f2f0417d7fa00b20793f">&#9670;&nbsp;</a></span>ConvertToJsonValue()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool open3d::utility::IJsonConvertible::ConvertToJsonValue </td>
          <td>(</td>
          <td class="paramtype">Json::Value &amp;&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classopen3d_1_1visualization_1_1_view_trajec#aca60980ab4373ee5c3c742e16fa2e0aa">open3d::visualization::ViewTrajectory</a>, <a class="el" href="classopen3d_1_1visualization_1_1_view_parame#a79e7a6ebf1b5d1f7fb4fb5035699ee69">open3d::visualization::ViewParameters</a>, <a class="el" href="classopen3d_1_1visualization_1_1_render_opti-2#ad739f02d7f69ca80139cebc894c33f0d">open3d::visualization::RenderOptionWithEditing</a>, <a class="el" href="classopen3d_1_1visualization_1_1_render_opti#a500c17c59c13c83b3636b1271dc4d3a0">open3d::visualization::RenderOption</a>, <a class="el" href="classopen3d_1_1visualization_1_1_selection_p-2#a4a5e637288fac62c2d6b91bc70515a18">open3d::visualization::SelectionPolygonVolume</a>, <a class="el" href="classopen3d_1_1t_1_1io_1_1_r_g_b_d_video_met#ad4eef8d0756ac0fbbab4ef59167987f1">open3d::t::io::RGBDVideoMetadata</a>, <a class="el" href="classopen3d_1_1t_1_1io_1_1_real_sense_sensor-2#af5a77ec5fa101b81991b011e00845c7e">open3d::t::io::RealSenseSensorConfig</a>, <a class="el" href="classopen3d_1_1pipelines_1_1registration_1_1-2#ac404566180a621e852fdbaea92450f0b">open3d::pipelines::registration::PoseGraph</a>, <a class="el" href="classopen3d_1_1pipelines_1_1registration_1_1-3#ad303973992f60ee673faa6be61cef849">open3d::pipelines::registration::PoseGraphEdge</a>, <a class="el" href="classopen3d_1_1pipelines_1_1registration_1_1-4#adf60de2c877ef3fd0fc9904b41f79f05">open3d::pipelines::registration::PoseGraphNode</a>, <a class="el" href="classopen3d_1_1pipelines_1_1color__map_1_1_i#ad366e0ac120138f270b77a154144b84b">open3d::pipelines::color_map::ImageWarpingField</a>, <a class="el" href="classopen3d_1_1io_1_1_m_k_v_metadata.432.del#a81fc6f0be2cabf3d8aabe0ce8cd577c8">open3d::io::MKVMetadata</a>, <a class="el" href="classopen3d_1_1io_1_1_azure_kinect_sensor_co#a1d323ffee5c2bce3c198c6306d8b06e2">open3d::io::AzureKinectSensorConfig</a>, <a class="el" href="classopen3d_1_1geometry_1_1_octree.41a.delay#a2e08e51768c35382174ab4c369e68f4e">open3d::geometry::Octree</a>, <a class="el" href="classopen3d_1_1geometry_1_1_octree_point_col#a13bad289a85ca596f15fa70ec1b3f0cc">open3d::geometry::OctreePointColorLeafNode</a>, <a class="el" href="classopen3d_1_1geometry_1_1_octree_color_lea#a147d287f8b43f14a644d8ee8825f2a06">open3d::geometry::OctreeColorLeafNode</a>, <a class="el" href="classopen3d_1_1geometry_1_1_octree_internal_-2#afaab2841e59bae5d4fbf58e539056e86">open3d::geometry::OctreeInternalPointNode</a>, <a class="el" href="classopen3d_1_1geometry_1_1_octree_internal_#a9eca8d927ffac6a64b5024e9fd809d41">open3d::geometry::OctreeInternalNode</a>, <a class="el" href="classopen3d_1_1camera_1_1_pinhole_camera_tra#af54b7e957f918c9d577ef5d93acbcde3">open3d::camera::PinholeCameraTrajectory</a>, <a class="el" href="classopen3d_1_1camera_1_1_pinhole_camera_par#a2cee616118b5d635e5b4c1c757b004ae">open3d::camera::PinholeCameraParameters</a>, and <a class="el" href="classopen3d_1_1camera_1_1_pinhole_camera_int#ac66896c0b913a13760c70261f2765d66">open3d::camera::PinholeCameraIntrinsic</a>.</p>

</div>
</div>
<a id="a654a42e83add5a3b19eccc09c31a9ca8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a654a42e83add5a3b19eccc09c31a9ca8">&#9670;&nbsp;</a></span>EigenMatrix3dFromJsonArray()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool open3d::utility::IJsonConvertible::EigenMatrix3dFromJsonArray </td>
          <td>(</td>
          <td class="paramtype">Eigen::Matrix3d &amp;&#160;</td>
          <td class="paramname"><em>mat</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const Json::Value &amp;&#160;</td>
          <td class="paramname"><em>value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ace9dac52c3ee510e08f295ada0733b6b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ace9dac52c3ee510e08f295ada0733b6b">&#9670;&nbsp;</a></span>EigenMatrix3dToJsonArray()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool open3d::utility::IJsonConvertible::EigenMatrix3dToJsonArray </td>
          <td>(</td>
          <td class="paramtype">const Eigen::Matrix3d &amp;&#160;</td>
          <td class="paramname"><em>mat</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Json::Value &amp;&#160;</td>
          <td class="paramname"><em>value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a1e8788f8bdac9878c74e3e8a7a760bb7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1e8788f8bdac9878c74e3e8a7a760bb7">&#9670;&nbsp;</a></span>EigenMatrix4dFromJsonArray() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool open3d::utility::IJsonConvertible::EigenMatrix4dFromJsonArray </td>
          <td>(</td>
          <td class="paramtype">Eigen::Matrix4d &amp;&#160;</td>
          <td class="paramname"><em>mat</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const Json::Value &amp;&#160;</td>
          <td class="paramname"><em>value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a3a4d0a90b42bc56b5ae5cb595c0c27b5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3a4d0a90b42bc56b5ae5cb595c0c27b5">&#9670;&nbsp;</a></span>EigenMatrix4dFromJsonArray() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool open3d::utility::IJsonConvertible::EigenMatrix4dFromJsonArray </td>
          <td>(</td>
          <td class="paramtype">Eigen::Matrix4d_u &amp;&#160;</td>
          <td class="paramname"><em>mat</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const Json::Value &amp;&#160;</td>
          <td class="paramname"><em>value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a98d6575885469a57787f6ff4c2a65839"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a98d6575885469a57787f6ff4c2a65839">&#9670;&nbsp;</a></span>EigenMatrix4dToJsonArray() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool open3d::utility::IJsonConvertible::EigenMatrix4dToJsonArray </td>
          <td>(</td>
          <td class="paramtype">const Eigen::Matrix4d &amp;&#160;</td>
          <td class="paramname"><em>mat</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Json::Value &amp;&#160;</td>
          <td class="paramname"><em>value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ac27b2b52cd3d64f42e6ba8980fcd7132"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac27b2b52cd3d64f42e6ba8980fcd7132">&#9670;&nbsp;</a></span>EigenMatrix4dToJsonArray() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool open3d::utility::IJsonConvertible::EigenMatrix4dToJsonArray </td>
          <td>(</td>
          <td class="paramtype">const Eigen::Matrix4d_u &amp;&#160;</td>
          <td class="paramname"><em>mat</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Json::Value &amp;&#160;</td>
          <td class="paramname"><em>value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a55b66a1bf7c520b528d81adc68a3f51a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a55b66a1bf7c520b528d81adc68a3f51a">&#9670;&nbsp;</a></span>EigenMatrix6dFromJsonArray() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool open3d::utility::IJsonConvertible::EigenMatrix6dFromJsonArray </td>
          <td>(</td>
          <td class="paramtype">Eigen::Matrix6d &amp;&#160;</td>
          <td class="paramname"><em>mat</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const Json::Value &amp;&#160;</td>
          <td class="paramname"><em>value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ae4f1ece384c77ae3ec839c28666c3633"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae4f1ece384c77ae3ec839c28666c3633">&#9670;&nbsp;</a></span>EigenMatrix6dFromJsonArray() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool open3d::utility::IJsonConvertible::EigenMatrix6dFromJsonArray </td>
          <td>(</td>
          <td class="paramtype">Eigen::Matrix6d_u &amp;&#160;</td>
          <td class="paramname"><em>mat</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const Json::Value &amp;&#160;</td>
          <td class="paramname"><em>value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a84d46a8fbdecc2ce0df15a6454396068"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a84d46a8fbdecc2ce0df15a6454396068">&#9670;&nbsp;</a></span>EigenMatrix6dToJsonArray() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool open3d::utility::IJsonConvertible::EigenMatrix6dToJsonArray </td>
          <td>(</td>
          <td class="paramtype">const Eigen::Matrix6d &amp;&#160;</td>
          <td class="paramname"><em>mat</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Json::Value &amp;&#160;</td>
          <td class="paramname"><em>value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a4b9ea2fed07b9cbbab565aca6b9417cd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4b9ea2fed07b9cbbab565aca6b9417cd">&#9670;&nbsp;</a></span>EigenMatrix6dToJsonArray() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool open3d::utility::IJsonConvertible::EigenMatrix6dToJsonArray </td>
          <td>(</td>
          <td class="paramtype">const Eigen::Matrix6d_u &amp;&#160;</td>
          <td class="paramname"><em>mat</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Json::Value &amp;&#160;</td>
          <td class="paramname"><em>value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a25ee0ebf7aafc887fa917136f97dc623"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a25ee0ebf7aafc887fa917136f97dc623">&#9670;&nbsp;</a></span>EigenVector3dFromJsonArray()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool open3d::utility::IJsonConvertible::EigenVector3dFromJsonArray </td>
          <td>(</td>
          <td class="paramtype">Eigen::Vector3d &amp;&#160;</td>
          <td class="paramname"><em>vec</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const Json::Value &amp;&#160;</td>
          <td class="paramname"><em>value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aa504e85fe0fab6eb9bf00c8870c64e7b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa504e85fe0fab6eb9bf00c8870c64e7b">&#9670;&nbsp;</a></span>EigenVector3dToJsonArray()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool open3d::utility::IJsonConvertible::EigenVector3dToJsonArray </td>
          <td>(</td>
          <td class="paramtype">const Eigen::Vector3d &amp;&#160;</td>
          <td class="paramname"><em>vec</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Json::Value &amp;&#160;</td>
          <td class="paramname"><em>value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a3bc2a9c0c6377e4d90305766b5fb78d7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3bc2a9c0c6377e4d90305766b5fb78d7">&#9670;&nbsp;</a></span>EigenVector4dFromJsonArray()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool open3d::utility::IJsonConvertible::EigenVector4dFromJsonArray </td>
          <td>(</td>
          <td class="paramtype">Eigen::Vector4d &amp;&#160;</td>
          <td class="paramname"><em>vec</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const Json::Value &amp;&#160;</td>
          <td class="paramname"><em>value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a9aa39c74c435a61a328296908e85dcdd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9aa39c74c435a61a328296908e85dcdd">&#9670;&nbsp;</a></span>EigenVector4dToJsonArray()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool open3d::utility::IJsonConvertible::EigenVector4dToJsonArray </td>
          <td>(</td>
          <td class="paramtype">const Eigen::Vector4d &amp;&#160;</td>
          <td class="paramname"><em>vec</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Json::Value &amp;&#160;</td>
          <td class="paramname"><em>value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aa7aaf69458ae9065121bf55cc21bfbcf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa7aaf69458ae9065121bf55cc21bfbcf">&#9670;&nbsp;</a></span>ToString()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::string open3d::utility::IJsonConvertible::ToString </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Convert to a styled string representation of JSON data for display. </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/runner/work/Open3D/Open3D/cpp/open3d/utility/<a class="el" href="_i_json_convertible_8h_source.html">IJsonConvertible.h (9238339 (Tue Mar 14 18:49:09 2023 -0700))</a></li>
<li>/home/runner/work/Open3D/Open3D/cpp/open3d/utility/<a class="el" href="_i_json_convertible_8cpp.html">IJsonConvertible.cpp (9238339 (Tue Mar 14 18:49:09 2023 -0700))</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1
</small></address>
</body>

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/classopen3d_1_1utility_1_1_i_json_convertible.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 10:54:36 GMT -->
</html>
