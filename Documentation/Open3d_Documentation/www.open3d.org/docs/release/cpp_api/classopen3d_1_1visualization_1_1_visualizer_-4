<!-- HTML header for doxygen 1.8.20-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/classopen3d_1_1visualization_1_1_visualizer_with_vertex_selection.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 10:57:19 GMT -->
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Open3D (C++ API): open3d::visualization::VisualizerWithVertexSelection Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js", "TeX/AMSmath.html", "TeX/AMSsymbols.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="../../../../cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-3TQPKGV6Z3"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());
  gtag('config', 'G-3TQPKGV6Z3');
</script>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="open3d_logo.ico"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Open3D (C++ API)
   &#160;<span id="projectnumber">0.17.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.html');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.html','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceopen3d.html">open3d</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1visualization.html">visualization</a></li><li class="navelem"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer_-4">VisualizerWithVertexSelection</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-types">Protected Types</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a>  </div>
  <div class="headertitle">
<div class="title">open3d::visualization::VisualizerWithVertexSelection Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_visualizer_with_vertex_selection_8h_source">VisualizerWithVertexSelection.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for open3d::visualization::VisualizerWithVertexSelection:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classopen3d_1_1visualization_1_1_visualizer_-8" usemap="#open3d::visualization::VisualizerWithVertexSelection_map" alt=""/>
  <map id="open3d::visualization::VisualizerWithVertexSelection_map" name="open3d::visualization::VisualizerWithVertexSelection_map">
<area href="classopen3d_1_1visualization_1_1_visualizer" title="The main Visualizer class." alt="open3d::visualization::Visualizer" shape="rect" coords="0,0,304,24"/>
  </map>
</div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structopen3d_1_1visualization_1_1_visualizer-2">PickedPoint</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:aa3aa94a04c9c3b1e78bb7c9b49dc8d37"><td class="memItemLeft" align="right" valign="top">enum class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer_-4#aa3aa94a04c9c3b1e78bb7c9b49dc8d37">SelectionMode</a> { <a class="el" href="classopen3d_1_1visualization_1_1_visualizer_-4#aa3aa94a04c9c3b1e78bb7c9b49dc8d37a6adf97f83acf6453d4a6a4b1070f3754">None</a> = 0
, <a class="el" href="classopen3d_1_1visualization_1_1_visualizer_-4#aa3aa94a04c9c3b1e78bb7c9b49dc8d37a2a3cd5946cfd317eb99c3d32e35e2d4c">Point</a> = 1
, <a class="el" href="classopen3d_1_1visualization_1_1_visualizer_-4#aa3aa94a04c9c3b1e78bb7c9b49dc8d37ace9291906a4c3b042650b70d7f3b152e">Rectangle</a> = 2
, <a class="el" href="classopen3d_1_1visualization_1_1_visualizer_-4#aa3aa94a04c9c3b1e78bb7c9b49dc8d37adefe967ad0373b2274fc298f19125ca7">Moving</a> = 3
 }</td></tr>
<tr class="separator:aa3aa94a04c9c3b1e78bb7c9b49dc8d37"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ad8f2f8452f6b56090e932288a366054b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer_-4#ad8f2f8452f6b56090e932288a366054b">VisualizerWithVertexSelection</a> ()</td></tr>
<tr class="separator:ad8f2f8452f6b56090e932288a366054b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac2449f25e95ce5feae528e2c42796558"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer_-4#ac2449f25e95ce5feae528e2c42796558">~VisualizerWithVertexSelection</a> () override</td></tr>
<tr class="separator:ac2449f25e95ce5feae528e2c42796558"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9974530afd54b1188757e969b00ee812"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer_-4#a9974530afd54b1188757e969b00ee812">VisualizerWithVertexSelection</a> (const <a class="el" href="classopen3d_1_1visualization_1_1_visualizer_-4">VisualizerWithVertexSelection</a> &amp;)=delete</td></tr>
<tr class="separator:a9974530afd54b1188757e969b00ee812"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa92a6d98879f622f84ab3a67e87d9d84"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer_-4">VisualizerWithVertexSelection</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer_-4#aa92a6d98879f622f84ab3a67e87d9d84">operator=</a> (const <a class="el" href="classopen3d_1_1visualization_1_1_visualizer_-4">VisualizerWithVertexSelection</a> &amp;)=delete</td></tr>
<tr class="separator:aa92a6d98879f622f84ab3a67e87d9d84"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a65931b3b875526b77665e4697f496692"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer_-4#a65931b3b875526b77665e4697f496692">AddGeometry</a> (std::shared_ptr&lt; const <a class="el" href="classopen3d_1_1geometry_1_1_geometry.400.del">geometry::Geometry</a> &gt; geometry_ptr, bool reset_bounding_box=true) override</td></tr>
<tr class="memdesc:a65931b3b875526b77665e4697f496692"><td class="mdescLeft">&#160;</td><td class="mdescRight">Function to add geometry to the scene and create corresponding shaders.  <a href="classopen3d_1_1visualization_1_1_visualizer_-4#a65931b3b875526b77665e4697f496692">More...</a><br /></td></tr>
<tr class="separator:a65931b3b875526b77665e4697f496692"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a773c7b9aff67d82ef1cc6d0f9e8a79ce"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer_-4#a773c7b9aff67d82ef1cc6d0f9e8a79ce">UpdateGeometry</a> (std::shared_ptr&lt; const <a class="el" href="classopen3d_1_1geometry_1_1_geometry.400.del">geometry::Geometry</a> &gt; geometry_ptr=nullptr) override</td></tr>
<tr class="memdesc:a773c7b9aff67d82ef1cc6d0f9e8a79ce"><td class="mdescLeft">&#160;</td><td class="mdescRight">Function to update geometry.  <a href="classopen3d_1_1visualization_1_1_visualizer_-4#a773c7b9aff67d82ef1cc6d0f9e8a79ce">More...</a><br /></td></tr>
<tr class="separator:a773c7b9aff67d82ef1cc6d0f9e8a79ce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a847e0960766e08f8545f0199b5242dea"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer_-4#a847e0960766e08f8545f0199b5242dea">PrintVisualizerHelp</a> () override</td></tr>
<tr class="separator:a847e0960766e08f8545f0199b5242dea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab7f97fcca990d7938c50b2eedbfc8cf0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer_-4#ab7f97fcca990d7938c50b2eedbfc8cf0">UpdateWindowTitle</a> () override</td></tr>
<tr class="separator:ab7f97fcca990d7938c50b2eedbfc8cf0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a135346dcf88285d77b333342ca85a67a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer_-4#a135346dcf88285d77b333342ca85a67a">BuildUtilities</a> () override</td></tr>
<tr class="separator:a135346dcf88285d77b333342ca85a67a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5d2a98a148aea57a9d9c338ba3585e45"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer_-4#a5d2a98a148aea57a9d9c338ba3585e45">SetPointSize</a> (double <a class="el" href="io_2file__format_2_file_p_c_d_8cpp.375.delay#a439227feff9d7f55384e8780cfc2eb82">size</a>)</td></tr>
<tr class="separator:a5d2a98a148aea57a9d9c338ba3585e45"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a623170f61baa7a39490a581ecad600aa"><td class="memItemLeft" align="right" valign="top">std::vector&lt; int &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer_-4#a623170f61baa7a39490a581ecad600aa">PickPoints</a> (double x, double y, double w, double h)</td></tr>
<tr class="separator:a623170f61baa7a39490a581ecad600aa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6467c47d1016c944c1b17aae1372ae2e"><td class="memItemLeft" align="right" valign="top">std::vector&lt; <a class="el" href="structopen3d_1_1visualization_1_1_visualizer-2">PickedPoint</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer_-4#a6467c47d1016c944c1b17aae1372ae2e">GetPickedPoints</a> () const</td></tr>
<tr class="separator:a6467c47d1016c944c1b17aae1372ae2e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a96143dd522c7fff920342af8c44ef8c2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer_-4#a96143dd522c7fff920342af8c44ef8c2">ClearPickedPoints</a> ()</td></tr>
<tr class="separator:a96143dd522c7fff920342af8c44ef8c2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2b4c69caf559ad808c0c2afc05677919"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer_-4#a2b4c69caf559ad808c0c2afc05677919">AddPickedPoints</a> (const std::vector&lt; int &gt; indices)</td></tr>
<tr class="separator:a2b4c69caf559ad808c0c2afc05677919"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad8d8dcb0b38f9578d4792a9d9ff69f67"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer_-4#ad8d8dcb0b38f9578d4792a9d9ff69f67">RemovePickedPoints</a> (const std::vector&lt; int &gt; indices)</td></tr>
<tr class="separator:ad8d8dcb0b38f9578d4792a9d9ff69f67"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa1d6089e3824947829549a94c3db5b1e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer_-4#aa1d6089e3824947829549a94c3db5b1e">RegisterSelectionChangedCallback</a> (std::function&lt; void()&gt; f)</td></tr>
<tr class="separator:aa1d6089e3824947829549a94c3db5b1e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad5a9d11286be1e00380d79ebeecf1033"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer_-4#ad5a9d11286be1e00380d79ebeecf1033">RegisterSelectionMovingCallback</a> (std::function&lt; void()&gt; f)</td></tr>
<tr class="separator:ad5a9d11286be1e00380d79ebeecf1033"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae9b7d2ecf00180b9307822b65937b0fe"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer_-4#ae9b7d2ecf00180b9307822b65937b0fe">RegisterSelectionMovedCallback</a> (std::function&lt; void()&gt; f)</td></tr>
<tr class="separator:ae9b7d2ecf00180b9307822b65937b0fe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classopen3d_1_1visualization_1_1_visualizer"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classopen3d_1_1visualization_1_1_visualizer')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classopen3d_1_1visualization_1_1_visualizer">open3d::visualization::Visualizer</a></td></tr>
<tr class="memitem:aec583df646cf10d3869208f3c896327d inherit pub_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer#aec583df646cf10d3869208f3c896327d">Visualizer</a> ()</td></tr>
<tr class="separator:aec583df646cf10d3869208f3c896327d inherit pub_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa02fac8fbfb1a5be28ef205a14d3c539 inherit pub_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer#aa02fac8fbfb1a5be28ef205a14d3c539">~Visualizer</a> ()</td></tr>
<tr class="separator:aa02fac8fbfb1a5be28ef205a14d3c539 inherit pub_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a676bbc84979c1bdc15611c54b2a86529 inherit pub_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer#a676bbc84979c1bdc15611c54b2a86529">Visualizer</a> (<a class="el" href="classopen3d_1_1visualization_1_1_visualizer">Visualizer</a> &amp;&amp;)=delete</td></tr>
<tr class="separator:a676bbc84979c1bdc15611c54b2a86529 inherit pub_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4c072f8e610e6f2157bf2a1e8eb38406 inherit pub_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer#a4c072f8e610e6f2157bf2a1e8eb38406">Visualizer</a> (const <a class="el" href="classopen3d_1_1visualization_1_1_visualizer">Visualizer</a> &amp;)=delete</td></tr>
<tr class="separator:a4c072f8e610e6f2157bf2a1e8eb38406 inherit pub_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af93497ebfef602ae96503f0429669a85 inherit pub_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer">Visualizer</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer#af93497ebfef602ae96503f0429669a85">operator=</a> (const <a class="el" href="classopen3d_1_1visualization_1_1_visualizer">Visualizer</a> &amp;)=delete</td></tr>
<tr class="separator:af93497ebfef602ae96503f0429669a85 inherit pub_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a07d20e24af90610618151111ffff0961 inherit pub_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer#a07d20e24af90610618151111ffff0961">CreateVisualizerWindow</a> (const std::string &amp;window_name=&quot;Open3D&quot;, const int <a class="el" href="io_2file__format_2_file_p_c_d_8cpp.375.delay#a2474a5474cbff19523a51eb1de01cda4">width</a>=640, const int <a class="el" href="io_2file__format_2_file_p_c_d_8cpp.375.delay#ad12fc34ce789bce6c8a05d8a17138534">height</a>=480, const int left=50, const int top=50, const bool visible=true)</td></tr>
<tr class="memdesc:a07d20e24af90610618151111ffff0961 inherit pub_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Function to create a window and initialize GLFW.  <a href="classopen3d_1_1visualization_1_1_visualizer#a07d20e24af90610618151111ffff0961">More...</a><br /></td></tr>
<tr class="separator:a07d20e24af90610618151111ffff0961 inherit pub_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa0bf54b03eb94fb8336dcac5c1d8044c inherit pub_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer#aa0bf54b03eb94fb8336dcac5c1d8044c">DestroyVisualizerWindow</a> ()</td></tr>
<tr class="memdesc:aa0bf54b03eb94fb8336dcac5c1d8044c inherit pub_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Function to destroy a window.  <a href="classopen3d_1_1visualization_1_1_visualizer#aa0bf54b03eb94fb8336dcac5c1d8044c">More...</a><br /></td></tr>
<tr class="separator:aa0bf54b03eb94fb8336dcac5c1d8044c inherit pub_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab74c869e2bc18c97f44161d3c4931f81 inherit pub_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer#ab74c869e2bc18c97f44161d3c4931f81">RegisterAnimationCallback</a> (std::function&lt; bool(<a class="el" href="classopen3d_1_1visualization_1_1_visualizer">Visualizer</a> *)&gt; callback_func)</td></tr>
<tr class="memdesc:ab74c869e2bc18c97f44161d3c4931f81 inherit pub_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Function to register a callback function for animation.  <a href="classopen3d_1_1visualization_1_1_visualizer#ab74c869e2bc18c97f44161d3c4931f81">More...</a><br /></td></tr>
<tr class="separator:ab74c869e2bc18c97f44161d3c4931f81 inherit pub_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a595b469f3b9857942101b575a598b5f6 inherit pub_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer#a595b469f3b9857942101b575a598b5f6">Run</a> ()</td></tr>
<tr class="memdesc:a595b469f3b9857942101b575a598b5f6 inherit pub_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Function to activate the window.  <a href="classopen3d_1_1visualization_1_1_visualizer#a595b469f3b9857942101b575a598b5f6">More...</a><br /></td></tr>
<tr class="separator:a595b469f3b9857942101b575a598b5f6 inherit pub_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae212a6e466975ad04c3875d3804d5875 inherit pub_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer#ae212a6e466975ad04c3875d3804d5875">Close</a> ()</td></tr>
<tr class="memdesc:ae212a6e466975ad04c3875d3804d5875 inherit pub_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Function to to notify the window to be closed.  <a href="classopen3d_1_1visualization_1_1_visualizer#ae212a6e466975ad04c3875d3804d5875">More...</a><br /></td></tr>
<tr class="separator:ae212a6e466975ad04c3875d3804d5875 inherit pub_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7e9be382fc756f8a0523c94ab9e3684b inherit pub_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer#a7e9be382fc756f8a0523c94ab9e3684b">WaitEvents</a> ()</td></tr>
<tr class="memdesc:a7e9be382fc756f8a0523c94ab9e3684b inherit pub_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Function to process the event queue and return if the window is closed.  <a href="classopen3d_1_1visualization_1_1_visualizer#a7e9be382fc756f8a0523c94ab9e3684b">More...</a><br /></td></tr>
<tr class="separator:a7e9be382fc756f8a0523c94ab9e3684b inherit pub_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a193b935e6e0da5a5740b794b147ca7f0 inherit pub_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer#a193b935e6e0da5a5740b794b147ca7f0">PollEvents</a> ()</td></tr>
<tr class="separator:a193b935e6e0da5a5740b794b147ca7f0 inherit pub_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa76112ff46caa1f12800455288258d1c inherit pub_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer#aa76112ff46caa1f12800455288258d1c">RemoveGeometry</a> (std::shared_ptr&lt; const <a class="el" href="classopen3d_1_1geometry_1_1_geometry.400.del">geometry::Geometry</a> &gt; geometry_ptr, bool reset_bounding_box=true)</td></tr>
<tr class="memdesc:aa76112ff46caa1f12800455288258d1c inherit pub_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Function to remove geometry from the scene.  <a href="classopen3d_1_1visualization_1_1_visualizer#aa76112ff46caa1f12800455288258d1c">More...</a><br /></td></tr>
<tr class="separator:aa76112ff46caa1f12800455288258d1c inherit pub_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a099024549554076dbc3d112acf61c7f4 inherit pub_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer#a099024549554076dbc3d112acf61c7f4">ClearGeometries</a> ()</td></tr>
<tr class="separator:a099024549554076dbc3d112acf61c7f4 inherit pub_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae7dfd6044fcaff4d84e20a5a52be844b inherit pub_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer#ae7dfd6044fcaff4d84e20a5a52be844b">HasGeometry</a> () const</td></tr>
<tr class="separator:ae7dfd6044fcaff4d84e20a5a52be844b inherit pub_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a28d870e521d0faa775fd93cb40d2b999 inherit pub_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer#a28d870e521d0faa775fd93cb40d2b999">UpdateRender</a> ()</td></tr>
<tr class="memdesc:a28d870e521d0faa775fd93cb40d2b999 inherit pub_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Function to inform render needed to be updated.  <a href="classopen3d_1_1visualization_1_1_visualizer#a28d870e521d0faa775fd93cb40d2b999">More...</a><br /></td></tr>
<tr class="separator:a28d870e521d0faa775fd93cb40d2b999 inherit pub_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a095ae99ea49bbe65d6b500a7a6761885 inherit pub_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer#a095ae99ea49bbe65d6b500a7a6761885">SetFullScreen</a> (bool fullscreen)</td></tr>
<tr class="memdesc:a095ae99ea49bbe65d6b500a7a6761885 inherit pub_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Functions to change between fullscreen and windowed modes.  <a href="classopen3d_1_1visualization_1_1_visualizer#a095ae99ea49bbe65d6b500a7a6761885">More...</a><br /></td></tr>
<tr class="separator:a095ae99ea49bbe65d6b500a7a6761885 inherit pub_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad5e561df6cc1e249bb439853177dbe99 inherit pub_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer#ad5e561df6cc1e249bb439853177dbe99">ToggleFullScreen</a> ()</td></tr>
<tr class="separator:ad5e561df6cc1e249bb439853177dbe99 inherit pub_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a41cb28383410cd55e8e7037849e533cc inherit pub_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer#a41cb28383410cd55e8e7037849e533cc">IsFullScreen</a> ()</td></tr>
<tr class="separator:a41cb28383410cd55e8e7037849e533cc inherit pub_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a72287ed3a5f1004a96c7d0884cccfd9e inherit pub_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1visualization_1_1_view_contro">ViewControl</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer#a72287ed3a5f1004a96c7d0884cccfd9e">GetViewControl</a> ()</td></tr>
<tr class="memdesc:a72287ed3a5f1004a96c7d0884cccfd9e inherit pub_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Function to retrieve the associated <a class="el" href="classopen3d_1_1visualization_1_1_view_contro" title="View controller for visualizer.">ViewControl</a>.  <a href="classopen3d_1_1visualization_1_1_visualizer#a72287ed3a5f1004a96c7d0884cccfd9e">More...</a><br /></td></tr>
<tr class="separator:a72287ed3a5f1004a96c7d0884cccfd9e inherit pub_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae16438ae5899daca352327d8a5ee6ab2 inherit pub_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classopen3d_1_1visualization_1_1_view_contro">ViewControl</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer#ae16438ae5899daca352327d8a5ee6ab2">GetViewControl</a> () const</td></tr>
<tr class="separator:ae16438ae5899daca352327d8a5ee6ab2 inherit pub_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a04157b4967e1521693b1d6ac6c9945c2 inherit pub_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1visualization_1_1_render_opti">RenderOption</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer#a04157b4967e1521693b1d6ac6c9945c2">GetRenderOption</a> ()</td></tr>
<tr class="memdesc:a04157b4967e1521693b1d6ac6c9945c2 inherit pub_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Function to retrieve the associated <a class="el" href="classopen3d_1_1visualization_1_1_render_opti" title="Defines rendering options for visualizer.">RenderOption</a>.  <a href="classopen3d_1_1visualization_1_1_visualizer#a04157b4967e1521693b1d6ac6c9945c2">More...</a><br /></td></tr>
<tr class="separator:a04157b4967e1521693b1d6ac6c9945c2 inherit pub_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae4c9166a9cad1de0114d7039125f6d71 inherit pub_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="memItemLeft" align="right" valign="top">std::shared_ptr&lt; <a class="el" href="classopen3d_1_1geometry_1_1_image.406.delaye">geometry::Image</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer#ae4c9166a9cad1de0114d7039125f6d71">CaptureScreenFloatBuffer</a> (bool do_render=true)</td></tr>
<tr class="memdesc:ae4c9166a9cad1de0114d7039125f6d71 inherit pub_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Function to capture screen and store RGB in a float buffer.  <a href="classopen3d_1_1visualization_1_1_visualizer#ae4c9166a9cad1de0114d7039125f6d71">More...</a><br /></td></tr>
<tr class="separator:ae4c9166a9cad1de0114d7039125f6d71 inherit pub_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4f44eac125c4426c018785d83242c80d inherit pub_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer#a4f44eac125c4426c018785d83242c80d">CaptureScreenImage</a> (const std::string &amp;filename=&quot;&quot;, bool do_render=true)</td></tr>
<tr class="memdesc:a4f44eac125c4426c018785d83242c80d inherit pub_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Function to capture and save a screen image.  <a href="classopen3d_1_1visualization_1_1_visualizer#a4f44eac125c4426c018785d83242c80d">More...</a><br /></td></tr>
<tr class="separator:a4f44eac125c4426c018785d83242c80d inherit pub_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7db191033c2dca4cafbcfb215fb6fce6 inherit pub_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="memItemLeft" align="right" valign="top">std::shared_ptr&lt; <a class="el" href="classopen3d_1_1geometry_1_1_image.406.delaye">geometry::Image</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer#a7db191033c2dca4cafbcfb215fb6fce6">CaptureDepthFloatBuffer</a> (bool do_render=true)</td></tr>
<tr class="separator:a7db191033c2dca4cafbcfb215fb6fce6 inherit pub_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1c972b706dfcafe73aec62339e4512c3 inherit pub_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer#a1c972b706dfcafe73aec62339e4512c3">CaptureDepthImage</a> (const std::string &amp;filename=&quot;&quot;, bool do_render=true, double depth_scale=1000.0)</td></tr>
<tr class="separator:a1c972b706dfcafe73aec62339e4512c3 inherit pub_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f4808ca04f062f1d874b15a9b50416a inherit pub_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer#a3f4808ca04f062f1d874b15a9b50416a">CaptureDepthPointCloud</a> (const std::string &amp;filename=&quot;&quot;, bool do_render=true, bool convert_to_world_coordinate=false)</td></tr>
<tr class="memdesc:a3f4808ca04f062f1d874b15a9b50416a inherit pub_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Function to capture and save local point cloud.  <a href="classopen3d_1_1visualization_1_1_visualizer#a3f4808ca04f062f1d874b15a9b50416a">More...</a><br /></td></tr>
<tr class="separator:a3f4808ca04f062f1d874b15a9b50416a inherit pub_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a011fa8851c2a0598c644f4d883eae80e inherit pub_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer#a011fa8851c2a0598c644f4d883eae80e">CaptureRenderOption</a> (const std::string &amp;filename=&quot;&quot;)</td></tr>
<tr class="separator:a011fa8851c2a0598c644f4d883eae80e inherit pub_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afd5dbe527fb1ab7c9be364b318c4391c inherit pub_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer#afd5dbe527fb1ab7c9be364b318c4391c">ResetViewPoint</a> (bool reset_bounding_box=false)</td></tr>
<tr class="memdesc:afd5dbe527fb1ab7c9be364b318c4391c inherit pub_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Function to reset view point.  <a href="classopen3d_1_1visualization_1_1_visualizer#afd5dbe527fb1ab7c9be364b318c4391c">More...</a><br /></td></tr>
<tr class="separator:afd5dbe527fb1ab7c9be364b318c4391c inherit pub_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a96d700320a533b0b678895c5c4fbbe29 inherit pub_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="memItemLeft" align="right" valign="top">const std::string &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer#a96d700320a533b0b678895c5c4fbbe29">GetWindowName</a> () const</td></tr>
<tr class="separator:a96d700320a533b0b678895c5c4fbbe29 inherit pub_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-types"></a>
Protected Types</h2></td></tr>
<tr class="memitem:aa19f814628d1529efc095044b8b7d0e3"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer_-4#aa19f814628d1529efc095044b8b7d0e3">DragType</a> { <a class="el" href="classopen3d_1_1visualization_1_1_visualizer_-4#aa19f814628d1529efc095044b8b7d0e3ad84b3d7323905f3f267620ac0450dd35">DRAG_MOVING</a>
, <a class="el" href="classopen3d_1_1visualization_1_1_visualizer_-4#aa19f814628d1529efc095044b8b7d0e3ab8dada9ddc2c2d34bb3088b4055a0620">DRAG_END</a>
 }</td></tr>
<tr class="separator:aa19f814628d1529efc095044b8b7d0e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a604880a8a8339090e45d258de205b059"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer_-4#a604880a8a8339090e45d258de205b059">InitViewControl</a> () override</td></tr>
<tr class="memdesc:a604880a8a8339090e45d258de205b059"><td class="mdescLeft">&#160;</td><td class="mdescRight">Function to initialize <a class="el" href="classopen3d_1_1visualization_1_1_view_contro" title="View controller for visualizer.">ViewControl</a>.  <a href="classopen3d_1_1visualization_1_1_visualizer_-4#a604880a8a8339090e45d258de205b059">More...</a><br /></td></tr>
<tr class="separator:a604880a8a8339090e45d258de205b059"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a089b262a9a8886c2c58e5afe2f640231"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer_-4#a089b262a9a8886c2c58e5afe2f640231">InitRenderOption</a> () override</td></tr>
<tr class="memdesc:a089b262a9a8886c2c58e5afe2f640231"><td class="mdescLeft">&#160;</td><td class="mdescRight">Function to initialize <a class="el" href="classopen3d_1_1visualization_1_1_render_opti" title="Defines rendering options for visualizer.">RenderOption</a>.  <a href="classopen3d_1_1visualization_1_1_visualizer_-4#a089b262a9a8886c2c58e5afe2f640231">More...</a><br /></td></tr>
<tr class="separator:a089b262a9a8886c2c58e5afe2f640231"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5b3570d47a0ce9b89cb25578f68022c7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer_-4#a5b3570d47a0ce9b89cb25578f68022c7">WindowResizeCallback</a> (GLFWwindow *window, int w, int h) override</td></tr>
<tr class="separator:a5b3570d47a0ce9b89cb25578f68022c7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab00b4f7d3f33e4ec48d008b1da496b07"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer_-4#ab00b4f7d3f33e4ec48d008b1da496b07">MouseMoveCallback</a> (GLFWwindow *window, double x, double y) override</td></tr>
<tr class="separator:ab00b4f7d3f33e4ec48d008b1da496b07"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8c2f3f5c4102a7b646b5310d28a128ff"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer_-4#a8c2f3f5c4102a7b646b5310d28a128ff">MouseScrollCallback</a> (GLFWwindow *window, double x, double y) override</td></tr>
<tr class="separator:a8c2f3f5c4102a7b646b5310d28a128ff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa2fba9e2ceff98b26e7090ddf83a6ce4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer_-4#aa2fba9e2ceff98b26e7090ddf83a6ce4">MouseButtonCallback</a> (GLFWwindow *window, int button, int action, int mods) override</td></tr>
<tr class="separator:aa2fba9e2ceff98b26e7090ddf83a6ce4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af6b81603dc9a0daed3f2c7f3527a8a28"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer_-4#af6b81603dc9a0daed3f2c7f3527a8a28">KeyPressCallback</a> (GLFWwindow *window, int key, int scancode, int action, int mods) override</td></tr>
<tr class="separator:af6b81603dc9a0daed3f2c7f3527a8a28"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5c7b2e2b9d4647e8aeabbf1ceca921e9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer_-4#a5c7b2e2b9d4647e8aeabbf1ceca921e9">InvalidateSelectionPolygon</a> ()</td></tr>
<tr class="separator:a5c7b2e2b9d4647e8aeabbf1ceca921e9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abddcc1d9d239ded79758b535be0e70d4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer_-4#abddcc1d9d239ded79758b535be0e70d4">InvalidatePicking</a> ()</td></tr>
<tr class="separator:abddcc1d9d239ded79758b535be0e70d4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8b0985cdf496dafe0254d7ac18eaacf1"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer_-4#a8b0985cdf496dafe0254d7ac18eaacf1">GetDepth</a> (int winX, int winY)</td></tr>
<tr class="separator:a8b0985cdf496dafe0254d7ac18eaacf1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a59e414b282f7f3fb30bdf804eda66f28"><td class="memItemLeft" align="right" valign="top">Eigen::Vector3d&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer_-4#a59e414b282f7f3fb30bdf804eda66f28">CalcDragDelta</a> (double winX, double winY)</td></tr>
<tr class="separator:a59e414b282f7f3fb30bdf804eda66f28"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a13de6edb015d6f397cd7006d64cbcf09"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer_-4#a13de6edb015d6f397cd7006d64cbcf09">DragSelectedPoints</a> (const Eigen::Vector3d &amp;delta, <a class="el" href="classopen3d_1_1visualization_1_1_visualizer_-4#aa19f814628d1529efc095044b8b7d0e3">DragType</a> <a class="el" href="io_2file__format_2_file_p_c_d_8cpp.375.delay#aff17911edc8208aa8ddb1c7c52c78389">type</a>)</td></tr>
<tr class="separator:a13de6edb015d6f397cd7006d64cbcf09"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a618f0a2e0bd7eb9fa55ff2b56153c7a7"><td class="memItemLeft" align="right" valign="top">const std::vector&lt; Eigen::Vector3d &gt; *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer_-4#a618f0a2e0bd7eb9fa55ff2b56153c7a7">GetGeometryPoints</a> (std::shared_ptr&lt; const <a class="el" href="classopen3d_1_1geometry_1_1_geometry.400.del">geometry::Geometry</a> &gt; geometry)</td></tr>
<tr class="separator:a618f0a2e0bd7eb9fa55ff2b56153c7a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_classopen3d_1_1visualization_1_1_visualizer"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_classopen3d_1_1visualization_1_1_visualizer')"><img src="closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="classopen3d_1_1visualization_1_1_visualizer">open3d::visualization::Visualizer</a></td></tr>
<tr class="memitem:a400043c8d622f07985e0815e6776c2c8 inherit pro_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer#a400043c8d622f07985e0815e6776c2c8">InitOpenGL</a> ()</td></tr>
<tr class="memdesc:a400043c8d622f07985e0815e6776c2c8 inherit pro_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Function to initialize OpenGL.  <a href="classopen3d_1_1visualization_1_1_visualizer#a400043c8d622f07985e0815e6776c2c8">More...</a><br /></td></tr>
<tr class="separator:a400043c8d622f07985e0815e6776c2c8 inherit pro_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6fa516b240f96e3812c78153810d6790 inherit pro_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer#a6fa516b240f96e3812c78153810d6790">Render</a> (bool render_screen=false)</td></tr>
<tr class="separator:a6fa516b240f96e3812c78153810d6790 inherit pro_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afd5a2f7fd54997fa4e2618ea12878bb9 inherit pro_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer#afd5a2f7fd54997fa4e2618ea12878bb9">CopyViewStatusToClipboard</a> ()</td></tr>
<tr class="separator:afd5a2f7fd54997fa4e2618ea12878bb9 inherit pro_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9738c6de00d86eff17dc4196efe892aa inherit pro_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer#a9738c6de00d86eff17dc4196efe892aa">CopyViewStatusFromClipboard</a> ()</td></tr>
<tr class="separator:a9738c6de00d86eff17dc4196efe892aa inherit pro_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acf5774830b1fe804fd77818a8c4c53a7 inherit pro_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer#acf5774830b1fe804fd77818a8c4c53a7">WindowRefreshCallback</a> (GLFWwindow *window)</td></tr>
<tr class="separator:acf5774830b1fe804fd77818a8c4c53a7 inherit pro_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a773987c072695fc7e823873b9173250e inherit pro_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer#a773987c072695fc7e823873b9173250e">WindowCloseCallback</a> (GLFWwindow *window)</td></tr>
<tr class="memdesc:a773987c072695fc7e823873b9173250e inherit pro_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Function to notify the window to be closed.  <a href="classopen3d_1_1visualization_1_1_visualizer#a773987c072695fc7e823873b9173250e">More...</a><br /></td></tr>
<tr class="separator:a773987c072695fc7e823873b9173250e inherit pro_methods_classopen3d_1_1visualization_1_1_visualizer"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:a2c230ab709def6d2bb43fd3bf8d6c92a"><td class="memItemLeft" align="right" valign="top">std::shared_ptr&lt; <a class="el" href="classopen3d_1_1visualization_1_1_selection_p">SelectionPolygon</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer_-4#a2c230ab709def6d2bb43fd3bf8d6c92a">selection_polygon_ptr_</a></td></tr>
<tr class="separator:a2c230ab709def6d2bb43fd3bf8d6c92a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1f314f509b6f8e18632ce93b8cfba745"><td class="memItemLeft" align="right" valign="top">std::shared_ptr&lt; <a class="el" href="classopen3d_1_1visualization_1_1glsl_1_1_sel">glsl::SelectionPolygonRenderer</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer_-4#a1f314f509b6f8e18632ce93b8cfba745">selection_polygon_renderer_ptr_</a></td></tr>
<tr class="separator:a1f314f509b6f8e18632ce93b8cfba745"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a75ab2af6a22caabfc2c817874346c2a7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer_-4#aa3aa94a04c9c3b1e78bb7c9b49dc8d37">SelectionMode</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer_-4#a75ab2af6a22caabfc2c817874346c2a7">selection_mode_</a> = <a class="el" href="classopen3d_1_1visualization_1_1_visualizer_-4#aa3aa94a04c9c3b1e78bb7c9b49dc8d37a6adf97f83acf6453d4a6a4b1070f3754">SelectionMode::None</a></td></tr>
<tr class="separator:a75ab2af6a22caabfc2c817874346c2a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af891b277cca744b2927f4b7ca8fa30e0"><td class="memItemLeft" align="right" valign="top">Eigen::Vector2d&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer_-4#af891b277cca744b2927f4b7ca8fa30e0">mouse_down_pos_</a></td></tr>
<tr class="separator:af891b277cca744b2927f4b7ca8fa30e0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adb1b7fae84dc076a26aac4b31fe78495"><td class="memItemLeft" align="right" valign="top">std::vector&lt; int &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer_-4#adb1b7fae84dc076a26aac4b31fe78495">points_in_rect_</a></td></tr>
<tr class="separator:adb1b7fae84dc076a26aac4b31fe78495"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae95c8d91e4f042b92fd7a6dbbd0494ae"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer_-4#ae95c8d91e4f042b92fd7a6dbbd0494ae">drag_depth_</a> = 0.0f</td></tr>
<tr class="separator:ae95c8d91e4f042b92fd7a6dbbd0494ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad1c612ae3cda90d7f8bcc0f8b9aac8b0"><td class="memItemLeft" align="right" valign="top">std::shared_ptr&lt; <a class="el" href="classopen3d_1_1visualization_1_1_point_cloud">PointCloudPicker</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer_-4#ad1c612ae3cda90d7f8bcc0f8b9aac8b0">pointcloud_picker_ptr_</a></td></tr>
<tr class="separator:ad1c612ae3cda90d7f8bcc0f8b9aac8b0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a74892aa1d97ba495d802a7f8c4d1c209"><td class="memItemLeft" align="right" valign="top">std::shared_ptr&lt; <a class="el" href="classopen3d_1_1visualization_1_1glsl_1_1_poi-3">glsl::PointCloudPickerRenderer</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer_-4#a74892aa1d97ba495d802a7f8c4d1c209">pointcloud_picker_renderer_ptr_</a></td></tr>
<tr class="separator:a74892aa1d97ba495d802a7f8c4d1c209"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8a10c55d9e43eec79f1c233b45a883b0"><td class="memItemLeft" align="right" valign="top">std::shared_ptr&lt; const <a class="el" href="classopen3d_1_1geometry_1_1_geometry.400.del">geometry::Geometry</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer_-4#a8a10c55d9e43eec79f1c233b45a883b0">geometry_ptr_</a></td></tr>
<tr class="separator:a8a10c55d9e43eec79f1c233b45a883b0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aecf8c321f6ea2e35897eafd054e52c97"><td class="memItemLeft" align="right" valign="top">std::shared_ptr&lt; <a class="el" href="classopen3d_1_1visualization_1_1glsl_1_1_geo">glsl::GeometryRenderer</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer_-4#aecf8c321f6ea2e35897eafd054e52c97">geometry_renderer_ptr_</a></td></tr>
<tr class="separator:aecf8c321f6ea2e35897eafd054e52c97"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a933436779c83e60725822a427391ee50"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1visualization_1_1_render_opti">RenderOption</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer_-4#a933436779c83e60725822a427391ee50">pick_point_opts_</a></td></tr>
<tr class="separator:a933436779c83e60725822a427391ee50"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5d84cff5d12e4f8939eb38bcf702bda8"><td class="memItemLeft" align="right" valign="top">std::shared_ptr&lt; <a class="el" href="classopen3d_1_1geometry_1_1_point_cloud.41b">geometry::PointCloud</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer_-4#a5d84cff5d12e4f8939eb38bcf702bda8">ui_points_geometry_ptr_</a></td></tr>
<tr class="separator:a5d84cff5d12e4f8939eb38bcf702bda8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a46d4012d89ab1cc5223f0fe4a082416f"><td class="memItemLeft" align="right" valign="top">std::shared_ptr&lt; <a class="el" href="classopen3d_1_1visualization_1_1glsl_1_1_geo">glsl::GeometryRenderer</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer_-4#a46d4012d89ab1cc5223f0fe4a082416f">ui_points_renderer_ptr_</a></td></tr>
<tr class="separator:a46d4012d89ab1cc5223f0fe4a082416f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:addb631e9be3b5b48332103cdbc7fa2ee"><td class="memItemLeft" align="right" valign="top">std::unordered_map&lt; int, Eigen::Vector3d &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer_-4#addb631e9be3b5b48332103cdbc7fa2ee">selected_points_</a></td></tr>
<tr class="separator:addb631e9be3b5b48332103cdbc7fa2ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a36ee8b5bd0c25196ed86628e3be037c9"><td class="memItemLeft" align="right" valign="top">std::unordered_map&lt; int, Eigen::Vector3d &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer_-4#a36ee8b5bd0c25196ed86628e3be037c9">selected_points_before_drag_</a></td></tr>
<tr class="separator:a36ee8b5bd0c25196ed86628e3be037c9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaf73fae0d3626f30c559ae5c857c7eac"><td class="memItemLeft" align="right" valign="top">std::shared_ptr&lt; <a class="el" href="classopen3d_1_1geometry_1_1_point_cloud.41b">geometry::PointCloud</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer_-4#aaf73fae0d3626f30c559ae5c857c7eac">ui_selected_points_geometry_ptr_</a></td></tr>
<tr class="separator:aaf73fae0d3626f30c559ae5c857c7eac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adc30d12ff3f094a13469189e1bea05f9"><td class="memItemLeft" align="right" valign="top">std::shared_ptr&lt; <a class="el" href="classopen3d_1_1visualization_1_1glsl_1_1_geo">glsl::GeometryRenderer</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer_-4#adc30d12ff3f094a13469189e1bea05f9">ui_selected_points_renderer_ptr_</a></td></tr>
<tr class="separator:adc30d12ff3f094a13469189e1bea05f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3b4a0104347abfe945ae1c599de38c5a"><td class="memItemLeft" align="right" valign="top">std::function&lt; void()&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer_-4#a3b4a0104347abfe945ae1c599de38c5a">on_selection_changed_</a></td></tr>
<tr class="separator:a3b4a0104347abfe945ae1c599de38c5a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a16cf7d09da99df3ddd0e64a22436e0db"><td class="memItemLeft" align="right" valign="top">std::function&lt; void()&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer_-4#a16cf7d09da99df3ddd0e64a22436e0db">on_selection_moving_</a></td></tr>
<tr class="separator:a16cf7d09da99df3ddd0e64a22436e0db"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a653488823787e1565d6bd1ac57403edd"><td class="memItemLeft" align="right" valign="top">std::function&lt; void()&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer_-4#a653488823787e1565d6bd1ac57403edd">on_selection_moved_</a></td></tr>
<tr class="separator:a653488823787e1565d6bd1ac57403edd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_classopen3d_1_1visualization_1_1_visualizer"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_classopen3d_1_1visualization_1_1_visualizer')"><img src="closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="classopen3d_1_1visualization_1_1_visualizer">open3d::visualization::Visualizer</a></td></tr>
<tr class="memitem:ad85780d57e82dd182b609e166db7c7c0 inherit pro_attribs_classopen3d_1_1visualization_1_1_visualizer"><td class="memItemLeft" align="right" valign="top">GLFWwindow *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer#ad85780d57e82dd182b609e166db7c7c0">window_</a> = NULL</td></tr>
<tr class="separator:ad85780d57e82dd182b609e166db7c7c0 inherit pro_attribs_classopen3d_1_1visualization_1_1_visualizer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a82cfc6c07fa79da7aee3aeb1cd5f3eba inherit pro_attribs_classopen3d_1_1visualization_1_1_visualizer"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer#a82cfc6c07fa79da7aee3aeb1cd5f3eba">window_name_</a> = &quot;Open3D&quot;</td></tr>
<tr class="separator:a82cfc6c07fa79da7aee3aeb1cd5f3eba inherit pro_attribs_classopen3d_1_1visualization_1_1_visualizer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad40d44437feb2e98ddfb86ad5fbd1e30 inherit pro_attribs_classopen3d_1_1visualization_1_1_visualizer"><td class="memItemLeft" align="right" valign="top">Eigen::Vector2i&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer#ad40d44437feb2e98ddfb86ad5fbd1e30">saved_window_size_</a> = Eigen::Vector2i::Zero()</td></tr>
<tr class="separator:ad40d44437feb2e98ddfb86ad5fbd1e30 inherit pro_attribs_classopen3d_1_1visualization_1_1_visualizer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2cc82e75f5a7a56f9dc930a4856204a3 inherit pro_attribs_classopen3d_1_1visualization_1_1_visualizer"><td class="memItemLeft" align="right" valign="top">Eigen::Vector2i&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer#a2cc82e75f5a7a56f9dc930a4856204a3">saved_window_pos_</a> = Eigen::Vector2i::Zero()</td></tr>
<tr class="separator:a2cc82e75f5a7a56f9dc930a4856204a3 inherit pro_attribs_classopen3d_1_1visualization_1_1_visualizer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac20427006fcee2b4722b1cbde365527c inherit pro_attribs_classopen3d_1_1visualization_1_1_visualizer"><td class="memItemLeft" align="right" valign="top">std::function&lt; bool(<a class="el" href="classopen3d_1_1visualization_1_1_visualizer">Visualizer</a> *)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer#ac20427006fcee2b4722b1cbde365527c">animation_callback_func_</a> = nullptr</td></tr>
<tr class="separator:ac20427006fcee2b4722b1cbde365527c inherit pro_attribs_classopen3d_1_1visualization_1_1_visualizer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2a9c9b12baac9a1cc5f3e61042296956 inherit pro_attribs_classopen3d_1_1visualization_1_1_visualizer"><td class="memItemLeft" align="right" valign="top">std::function&lt; bool(<a class="el" href="classopen3d_1_1visualization_1_1_visualizer">Visualizer</a> *)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer#a2a9c9b12baac9a1cc5f3e61042296956">animation_callback_func_in_loop_</a></td></tr>
<tr class="separator:a2a9c9b12baac9a1cc5f3e61042296956 inherit pro_attribs_classopen3d_1_1visualization_1_1_visualizer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad79e18c26333afa7286b546d4ce8e04b inherit pro_attribs_classopen3d_1_1visualization_1_1_visualizer"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structopen3d_1_1visualization_1_1_visualizer">MouseControl</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer#ad79e18c26333afa7286b546d4ce8e04b">mouse_control_</a></td></tr>
<tr class="separator:ad79e18c26333afa7286b546d4ce8e04b inherit pro_attribs_classopen3d_1_1visualization_1_1_visualizer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae834065d6fce27bae08581956bbc3a6a inherit pro_attribs_classopen3d_1_1visualization_1_1_visualizer"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer#ae834065d6fce27bae08581956bbc3a6a">is_redraw_required_</a> = true</td></tr>
<tr class="separator:ae834065d6fce27bae08581956bbc3a6a inherit pro_attribs_classopen3d_1_1visualization_1_1_visualizer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0c77053e7318994d032d39c7ae2480b0 inherit pro_attribs_classopen3d_1_1visualization_1_1_visualizer"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer#a0c77053e7318994d032d39c7ae2480b0">is_initialized_</a> = false</td></tr>
<tr class="separator:a0c77053e7318994d032d39c7ae2480b0 inherit pro_attribs_classopen3d_1_1visualization_1_1_visualizer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a160948b961a98adb32a8e5e74fbc5cf0 inherit pro_attribs_classopen3d_1_1visualization_1_1_visualizer"><td class="memItemLeft" align="right" valign="top">GLuint&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer#a160948b961a98adb32a8e5e74fbc5cf0">vao_id_</a> = 0</td></tr>
<tr class="separator:a160948b961a98adb32a8e5e74fbc5cf0 inherit pro_attribs_classopen3d_1_1visualization_1_1_visualizer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a18d3fdee434e6bd2d3d38b7975382bd3 inherit pro_attribs_classopen3d_1_1visualization_1_1_visualizer"><td class="memItemLeft" align="right" valign="top">GLuint&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer#a18d3fdee434e6bd2d3d38b7975382bd3">render_fbo_</a> = 0</td></tr>
<tr class="separator:a18d3fdee434e6bd2d3d38b7975382bd3 inherit pro_attribs_classopen3d_1_1visualization_1_1_visualizer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab0c39a3c13d4c67de74f19be422deaf1 inherit pro_attribs_classopen3d_1_1visualization_1_1_visualizer"><td class="memItemLeft" align="right" valign="top">GLuint&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer#ab0c39a3c13d4c67de74f19be422deaf1">render_rgb_tex_</a> = 0</td></tr>
<tr class="separator:ab0c39a3c13d4c67de74f19be422deaf1 inherit pro_attribs_classopen3d_1_1visualization_1_1_visualizer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1e96e839868d4a0dff40c0415beee131 inherit pro_attribs_classopen3d_1_1visualization_1_1_visualizer"><td class="memItemLeft" align="right" valign="top">GLuint&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer#a1e96e839868d4a0dff40c0415beee131">render_depth_stencil_rbo_</a> = 0</td></tr>
<tr class="separator:a1e96e839868d4a0dff40c0415beee131 inherit pro_attribs_classopen3d_1_1visualization_1_1_visualizer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0cd8038c9c2b7143161cf2fffe8b01c1 inherit pro_attribs_classopen3d_1_1visualization_1_1_visualizer"><td class="memItemLeft" align="right" valign="top">std::unique_ptr&lt; <a class="el" href="classopen3d_1_1visualization_1_1_view_contro">ViewControl</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer#a0cd8038c9c2b7143161cf2fffe8b01c1">view_control_ptr_</a></td></tr>
<tr class="separator:a0cd8038c9c2b7143161cf2fffe8b01c1 inherit pro_attribs_classopen3d_1_1visualization_1_1_visualizer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a08f37cb7ca4735d693191cbcab73ef34 inherit pro_attribs_classopen3d_1_1visualization_1_1_visualizer"><td class="memItemLeft" align="right" valign="top">std::unique_ptr&lt; <a class="el" href="classopen3d_1_1visualization_1_1_render_opti">RenderOption</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer#a08f37cb7ca4735d693191cbcab73ef34">render_option_ptr_</a></td></tr>
<tr class="separator:a08f37cb7ca4735d693191cbcab73ef34 inherit pro_attribs_classopen3d_1_1visualization_1_1_visualizer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a826c7fe4e3465ecf234288a97956ad37 inherit pro_attribs_classopen3d_1_1visualization_1_1_visualizer"><td class="memItemLeft" align="right" valign="top">std::unordered_set&lt; std::shared_ptr&lt; const <a class="el" href="classopen3d_1_1geometry_1_1_geometry.400.del">geometry::Geometry</a> &gt; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer#a826c7fe4e3465ecf234288a97956ad37">geometry_ptrs_</a></td></tr>
<tr class="separator:a826c7fe4e3465ecf234288a97956ad37 inherit pro_attribs_classopen3d_1_1visualization_1_1_visualizer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af8df0323357cfe0fe69b5a232905a484 inherit pro_attribs_classopen3d_1_1visualization_1_1_visualizer"><td class="memItemLeft" align="right" valign="top">std::unordered_set&lt; std::shared_ptr&lt; <a class="el" href="classopen3d_1_1visualization_1_1glsl_1_1_geo">glsl::GeometryRenderer</a> &gt; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer#af8df0323357cfe0fe69b5a232905a484">geometry_renderer_ptrs_</a></td></tr>
<tr class="separator:af8df0323357cfe0fe69b5a232905a484 inherit pro_attribs_classopen3d_1_1visualization_1_1_visualizer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2633024495864786ba3c01c933b3b920 inherit pro_attribs_classopen3d_1_1visualization_1_1_visualizer"><td class="memItemLeft" align="right" valign="top">std::vector&lt; std::shared_ptr&lt; const <a class="el" href="classopen3d_1_1geometry_1_1_geometry.400.del">geometry::Geometry</a> &gt; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer#a2633024495864786ba3c01c933b3b920">utility_ptrs_</a></td></tr>
<tr class="separator:a2633024495864786ba3c01c933b3b920 inherit pro_attribs_classopen3d_1_1visualization_1_1_visualizer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa1e74366b5c50f49d87c5a4594f95cba inherit pro_attribs_classopen3d_1_1visualization_1_1_visualizer"><td class="memItemLeft" align="right" valign="top">std::vector&lt; std::shared_ptr&lt; <a class="el" href="classopen3d_1_1visualization_1_1glsl_1_1_geo">glsl::GeometryRenderer</a> &gt; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer#aa1e74366b5c50f49d87c5a4594f95cba">utility_renderer_ptrs_</a></td></tr>
<tr class="separator:aa1e74366b5c50f49d87c5a4594f95cba inherit pro_attribs_classopen3d_1_1visualization_1_1_visualizer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a744ed5220de50ff08fb4079dcab124e0 inherit pro_attribs_classopen3d_1_1visualization_1_1_visualizer"><td class="memItemLeft" align="right" valign="top">std::unordered_map&lt; std::shared_ptr&lt; <a class="el" href="classopen3d_1_1visualization_1_1glsl_1_1_geo">glsl::GeometryRenderer</a> &gt;, <a class="el" href="classopen3d_1_1visualization_1_1_render_opti">RenderOption</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer#a744ed5220de50ff08fb4079dcab124e0">utility_renderer_opts_</a></td></tr>
<tr class="separator:a744ed5220de50ff08fb4079dcab124e0 inherit pro_attribs_classopen3d_1_1visualization_1_1_visualizer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae3f22819d06468dac182a109a556746e inherit pro_attribs_classopen3d_1_1visualization_1_1_visualizer"><td class="memItemLeft" align="right" valign="top">std::shared_ptr&lt; <a class="el" href="classopen3d_1_1geometry_1_1_triangle_mesh.40">geometry::TriangleMesh</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer#ae3f22819d06468dac182a109a556746e">coordinate_frame_mesh_ptr_</a></td></tr>
<tr class="separator:ae3f22819d06468dac182a109a556746e inherit pro_attribs_classopen3d_1_1visualization_1_1_visualizer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5de911011443cd8cc066105ac55b3d6c inherit pro_attribs_classopen3d_1_1visualization_1_1_visualizer"><td class="memItemLeft" align="right" valign="top">std::shared_ptr&lt; <a class="el" href="classopen3d_1_1visualization_1_1glsl_1_1_coo">glsl::CoordinateFrameRenderer</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer#a5de911011443cd8cc066105ac55b3d6c">coordinate_frame_mesh_renderer_ptr_</a></td></tr>
<tr class="separator:a5de911011443cd8cc066105ac55b3d6c inherit pro_attribs_classopen3d_1_1visualization_1_1_visualizer"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Member Enumeration Documentation</h2>
<a id="aa19f814628d1529efc095044b8b7d0e3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa19f814628d1529efc095044b8b7d0e3">&#9670;&nbsp;</a></span>DragType</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="classopen3d_1_1visualization_1_1_visualizer_-4#aa19f814628d1529efc095044b8b7d0e3">open3d::visualization::VisualizerWithVertexSelection::DragType</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="aa19f814628d1529efc095044b8b7d0e3ad84b3d7323905f3f267620ac0450dd35"></a>DRAG_MOVING&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="aa19f814628d1529efc095044b8b7d0e3ab8dada9ddc2c2d34bb3088b4055a0620"></a>DRAG_END&#160;</td><td class="fielddoc"></td></tr>
</table>

</div>
</div>
<a id="aa3aa94a04c9c3b1e78bb7c9b49dc8d37"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa3aa94a04c9c3b1e78bb7c9b49dc8d37">&#9670;&nbsp;</a></span>SelectionMode</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="classopen3d_1_1visualization_1_1_visualizer_-4#aa3aa94a04c9c3b1e78bb7c9b49dc8d37">open3d::visualization::VisualizerWithVertexSelection::SelectionMode</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="aa3aa94a04c9c3b1e78bb7c9b49dc8d37a6adf97f83acf6453d4a6a4b1070f3754"></a>None&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="aa3aa94a04c9c3b1e78bb7c9b49dc8d37a2a3cd5946cfd317eb99c3d32e35e2d4c"></a>Point&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="aa3aa94a04c9c3b1e78bb7c9b49dc8d37ace9291906a4c3b042650b70d7f3b152e"></a>Rectangle&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="aa3aa94a04c9c3b1e78bb7c9b49dc8d37adefe967ad0373b2274fc298f19125ca7"></a>Moving&#160;</td><td class="fielddoc"></td></tr>
</table>

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="ad8f2f8452f6b56090e932288a366054b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad8f2f8452f6b56090e932288a366054b">&#9670;&nbsp;</a></span>VisualizerWithVertexSelection() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">open3d::visualization::VisualizerWithVertexSelection::VisualizerWithVertexSelection </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ac2449f25e95ce5feae528e2c42796558"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac2449f25e95ce5feae528e2c42796558">&#9670;&nbsp;</a></span>~VisualizerWithVertexSelection()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">open3d::visualization::VisualizerWithVertexSelection::~VisualizerWithVertexSelection </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a9974530afd54b1188757e969b00ee812"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9974530afd54b1188757e969b00ee812">&#9670;&nbsp;</a></span>VisualizerWithVertexSelection() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">open3d::visualization::VisualizerWithVertexSelection::VisualizerWithVertexSelection </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1visualization_1_1_visualizer_-4">VisualizerWithVertexSelection</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a65931b3b875526b77665e4697f496692"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a65931b3b875526b77665e4697f496692">&#9670;&nbsp;</a></span>AddGeometry()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool open3d::visualization::VisualizerWithVertexSelection::AddGeometry </td>
          <td>(</td>
          <td class="paramtype">std::shared_ptr&lt; const <a class="el" href="classopen3d_1_1geometry_1_1_geometry.400.del">geometry::Geometry</a> &gt;&#160;</td>
          <td class="paramname"><em>geometry_ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>reset_bounding_box</em> = <code>true</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Function to add geometry to the scene and create corresponding shaders. </p>
<ol type="1">
<li>After calling this function, the <a class="el" href="classopen3d_1_1visualization_1_1_visualizer" title="The main Visualizer class.">Visualizer</a> owns the geometry object.</li>
<li>This function MUST be called after <a class="el" href="classopen3d_1_1visualization_1_1_visualizer#a07d20e24af90610618151111ffff0961" title="Function to create a window and initialize GLFW.">CreateVisualizerWindow()</a>.</li>
<li>This function returns FALSE when the geometry is of an unsupported type.</li>
<li>If an added geometry is changed, the behavior of <a class="el" href="classopen3d_1_1visualization_1_1_visualizer" title="The main Visualizer class.">Visualizer</a> is undefined. Programmers are responsible for calling Geometry() to notify the <a class="el" href="classopen3d_1_1visualization_1_1_visualizer" title="The main Visualizer class.">Visualizer</a> that the geometry has been changed and the <a class="el" href="classopen3d_1_1visualization_1_1_visualizer" title="The main Visualizer class.">Visualizer</a> should be updated accordingly.</li>
</ol>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">geometry_ptr</td><td>The Geometry object. </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented from <a class="el" href="classopen3d_1_1visualization_1_1_visualizer#a625d702db5f4f747ccdf546d603c89b4">open3d::visualization::Visualizer</a>.</p>

</div>
</div>
<a id="a2b4c69caf559ad808c0c2afc05677919"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2b4c69caf559ad808c0c2afc05677919">&#9670;&nbsp;</a></span>AddPickedPoints()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::VisualizerWithVertexSelection::AddPickedPoints </td>
          <td>(</td>
          <td class="paramtype">const std::vector&lt; int &gt;&#160;</td>
          <td class="paramname"><em>indices</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a135346dcf88285d77b333342ca85a67a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a135346dcf88285d77b333342ca85a67a">&#9670;&nbsp;</a></span>BuildUtilities()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::VisualizerWithVertexSelection::BuildUtilities </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented from <a class="el" href="classopen3d_1_1visualization_1_1_visualizer#a07f07858a00033c52bb6abfae8167940">open3d::visualization::Visualizer</a>.</p>

</div>
</div>
<a id="a59e414b282f7f3fb30bdf804eda66f28"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a59e414b282f7f3fb30bdf804eda66f28">&#9670;&nbsp;</a></span>CalcDragDelta()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Eigen::Vector3d open3d::visualization::VisualizerWithVertexSelection::CalcDragDelta </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>winX</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>winY</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a96143dd522c7fff920342af8c44ef8c2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a96143dd522c7fff920342af8c44ef8c2">&#9670;&nbsp;</a></span>ClearPickedPoints()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::VisualizerWithVertexSelection::ClearPickedPoints </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a13de6edb015d6f397cd7006d64cbcf09"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a13de6edb015d6f397cd7006d64cbcf09">&#9670;&nbsp;</a></span>DragSelectedPoints()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::VisualizerWithVertexSelection::DragSelectedPoints </td>
          <td>(</td>
          <td class="paramtype">const Eigen::Vector3d &amp;&#160;</td>
          <td class="paramname"><em>delta</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer_-4#aa19f814628d1529efc095044b8b7d0e3">DragType</a>&#160;</td>
          <td class="paramname"><em>type</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a8b0985cdf496dafe0254d7ac18eaacf1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8b0985cdf496dafe0254d7ac18eaacf1">&#9670;&nbsp;</a></span>GetDepth()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float open3d::visualization::VisualizerWithVertexSelection::GetDepth </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>winX</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>winY</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a618f0a2e0bd7eb9fa55ff2b56153c7a7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a618f0a2e0bd7eb9fa55ff2b56153c7a7">&#9670;&nbsp;</a></span>GetGeometryPoints()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const std::vector&lt; Eigen::Vector3d &gt; * open3d::visualization::VisualizerWithVertexSelection::GetGeometryPoints </td>
          <td>(</td>
          <td class="paramtype">std::shared_ptr&lt; const <a class="el" href="classopen3d_1_1geometry_1_1_geometry.400.del">geometry::Geometry</a> &gt;&#160;</td>
          <td class="paramname"><em>geometry</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a6467c47d1016c944c1b17aae1372ae2e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6467c47d1016c944c1b17aae1372ae2e">&#9670;&nbsp;</a></span>GetPickedPoints()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt; <a class="el" href="structopen3d_1_1visualization_1_1_visualizer-2">VisualizerWithVertexSelection::PickedPoint</a> &gt; open3d::visualization::VisualizerWithVertexSelection::GetPickedPoints </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a089b262a9a8886c2c58e5afe2f640231"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a089b262a9a8886c2c58e5afe2f640231">&#9670;&nbsp;</a></span>InitRenderOption()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool open3d::visualization::VisualizerWithVertexSelection::InitRenderOption </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Function to initialize <a class="el" href="classopen3d_1_1visualization_1_1_render_opti" title="Defines rendering options for visualizer.">RenderOption</a>. </p>

<p>Reimplemented from <a class="el" href="classopen3d_1_1visualization_1_1_visualizer#a7f53227bf48f8d307cc87550883395be">open3d::visualization::Visualizer</a>.</p>

</div>
</div>
<a id="a604880a8a8339090e45d258de205b059"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a604880a8a8339090e45d258de205b059">&#9670;&nbsp;</a></span>InitViewControl()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool open3d::visualization::VisualizerWithVertexSelection::InitViewControl </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Function to initialize <a class="el" href="classopen3d_1_1visualization_1_1_view_contro" title="View controller for visualizer.">ViewControl</a>. </p>

<p>Reimplemented from <a class="el" href="classopen3d_1_1visualization_1_1_visualizer#a7dd718657a835274aa66124398068fee">open3d::visualization::Visualizer</a>.</p>

</div>
</div>
<a id="abddcc1d9d239ded79758b535be0e70d4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abddcc1d9d239ded79758b535be0e70d4">&#9670;&nbsp;</a></span>InvalidatePicking()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::VisualizerWithVertexSelection::InvalidatePicking </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a5c7b2e2b9d4647e8aeabbf1ceca921e9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5c7b2e2b9d4647e8aeabbf1ceca921e9">&#9670;&nbsp;</a></span>InvalidateSelectionPolygon()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::VisualizerWithVertexSelection::InvalidateSelectionPolygon </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="af6b81603dc9a0daed3f2c7f3527a8a28"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af6b81603dc9a0daed3f2c7f3527a8a28">&#9670;&nbsp;</a></span>KeyPressCallback()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::VisualizerWithVertexSelection::KeyPressCallback </td>
          <td>(</td>
          <td class="paramtype">GLFWwindow *&#160;</td>
          <td class="paramname"><em>window</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>scancode</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>action</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>mods</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented from <a class="el" href="classopen3d_1_1visualization_1_1_visualizer#af11465d05f79c7ef33439488626c6826">open3d::visualization::Visualizer</a>.</p>

</div>
</div>
<a id="aa2fba9e2ceff98b26e7090ddf83a6ce4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa2fba9e2ceff98b26e7090ddf83a6ce4">&#9670;&nbsp;</a></span>MouseButtonCallback()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::VisualizerWithVertexSelection::MouseButtonCallback </td>
          <td>(</td>
          <td class="paramtype">GLFWwindow *&#160;</td>
          <td class="paramname"><em>window</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>button</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>action</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>mods</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented from <a class="el" href="classopen3d_1_1visualization_1_1_visualizer#a82f0cf1581f202983a9165d35bb6307a">open3d::visualization::Visualizer</a>.</p>

</div>
</div>
<a id="ab00b4f7d3f33e4ec48d008b1da496b07"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab00b4f7d3f33e4ec48d008b1da496b07">&#9670;&nbsp;</a></span>MouseMoveCallback()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::VisualizerWithVertexSelection::MouseMoveCallback </td>
          <td>(</td>
          <td class="paramtype">GLFWwindow *&#160;</td>
          <td class="paramname"><em>window</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>y</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented from <a class="el" href="classopen3d_1_1visualization_1_1_visualizer#a68cdbdc00303f15da32129bf712cacdd">open3d::visualization::Visualizer</a>.</p>

</div>
</div>
<a id="a8c2f3f5c4102a7b646b5310d28a128ff"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8c2f3f5c4102a7b646b5310d28a128ff">&#9670;&nbsp;</a></span>MouseScrollCallback()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::VisualizerWithVertexSelection::MouseScrollCallback </td>
          <td>(</td>
          <td class="paramtype">GLFWwindow *&#160;</td>
          <td class="paramname"><em>window</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>y</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented from <a class="el" href="classopen3d_1_1visualization_1_1_visualizer#aa79d4c9649f918cdb5ae8781aaa2dcea">open3d::visualization::Visualizer</a>.</p>

</div>
</div>
<a id="aa92a6d98879f622f84ab3a67e87d9d84"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa92a6d98879f622f84ab3a67e87d9d84">&#9670;&nbsp;</a></span>operator=()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer_-4">VisualizerWithVertexSelection</a>&amp; open3d::visualization::VisualizerWithVertexSelection::operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1visualization_1_1_visualizer_-4">VisualizerWithVertexSelection</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a623170f61baa7a39490a581ecad600aa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a623170f61baa7a39490a581ecad600aa">&#9670;&nbsp;</a></span>PickPoints()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt; int &gt; open3d::visualization::VisualizerWithVertexSelection::PickPoints </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>w</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>h</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a847e0960766e08f8545f0199b5242dea"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a847e0960766e08f8545f0199b5242dea">&#9670;&nbsp;</a></span>PrintVisualizerHelp()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::VisualizerWithVertexSelection::PrintVisualizerHelp </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented from <a class="el" href="classopen3d_1_1visualization_1_1_visualizer#adff58d36d16c0f5b28f0d232d93090d7">open3d::visualization::Visualizer</a>.</p>

</div>
</div>
<a id="aa1d6089e3824947829549a94c3db5b1e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa1d6089e3824947829549a94c3db5b1e">&#9670;&nbsp;</a></span>RegisterSelectionChangedCallback()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::VisualizerWithVertexSelection::RegisterSelectionChangedCallback </td>
          <td>(</td>
          <td class="paramtype">std::function&lt; void()&gt;&#160;</td>
          <td class="paramname"><em>f</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ae9b7d2ecf00180b9307822b65937b0fe"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae9b7d2ecf00180b9307822b65937b0fe">&#9670;&nbsp;</a></span>RegisterSelectionMovedCallback()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::VisualizerWithVertexSelection::RegisterSelectionMovedCallback </td>
          <td>(</td>
          <td class="paramtype">std::function&lt; void()&gt;&#160;</td>
          <td class="paramname"><em>f</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ad5a9d11286be1e00380d79ebeecf1033"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad5a9d11286be1e00380d79ebeecf1033">&#9670;&nbsp;</a></span>RegisterSelectionMovingCallback()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::VisualizerWithVertexSelection::RegisterSelectionMovingCallback </td>
          <td>(</td>
          <td class="paramtype">std::function&lt; void()&gt;&#160;</td>
          <td class="paramname"><em>f</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Do not change the number of vertices in geometry, but can change the vertex values and call <a class="el" href="classopen3d_1_1visualization_1_1_visualizer_-4#a773c7b9aff67d82ef1cc6d0f9e8a79ce" title="Function to update geometry.">UpdateGeometry()</a>. </p>

</div>
</div>
<a id="ad8d8dcb0b38f9578d4792a9d9ff69f67"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad8d8dcb0b38f9578d4792a9d9ff69f67">&#9670;&nbsp;</a></span>RemovePickedPoints()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::VisualizerWithVertexSelection::RemovePickedPoints </td>
          <td>(</td>
          <td class="paramtype">const std::vector&lt; int &gt;&#160;</td>
          <td class="paramname"><em>indices</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a5d2a98a148aea57a9d9c338ba3585e45"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5d2a98a148aea57a9d9c338ba3585e45">&#9670;&nbsp;</a></span>SetPointSize()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::VisualizerWithVertexSelection::SetPointSize </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>size</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a773c7b9aff67d82ef1cc6d0f9e8a79ce"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a773c7b9aff67d82ef1cc6d0f9e8a79ce">&#9670;&nbsp;</a></span>UpdateGeometry()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool open3d::visualization::VisualizerWithVertexSelection::UpdateGeometry </td>
          <td>(</td>
          <td class="paramtype">std::shared_ptr&lt; const <a class="el" href="classopen3d_1_1geometry_1_1_geometry.400.del">geometry::Geometry</a> &gt;&#160;</td>
          <td class="paramname"><em>geometry_ptr</em> = <code>nullptr</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Function to update geometry. </p>
<p>This function must be called when geometry has been changed. Otherwise the behavior of <a class="el" href="classopen3d_1_1visualization_1_1_visualizer" title="The main Visualizer class.">Visualizer</a> is undefined. If called without an argument, updates all geometries, otherwise only updates the geometry specified. </p>

<p>Reimplemented from <a class="el" href="classopen3d_1_1visualization_1_1_visualizer#a5b112bdf1cf4f1c95af424f9940537dd">open3d::visualization::Visualizer</a>.</p>

</div>
</div>
<a id="ab7f97fcca990d7938c50b2eedbfc8cf0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab7f97fcca990d7938c50b2eedbfc8cf0">&#9670;&nbsp;</a></span>UpdateWindowTitle()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::VisualizerWithVertexSelection::UpdateWindowTitle </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented from <a class="el" href="classopen3d_1_1visualization_1_1_visualizer#ab1a324bde040be6f9b94dfb3990827da">open3d::visualization::Visualizer</a>.</p>

</div>
</div>
<a id="a5b3570d47a0ce9b89cb25578f68022c7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5b3570d47a0ce9b89cb25578f68022c7">&#9670;&nbsp;</a></span>WindowResizeCallback()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::VisualizerWithVertexSelection::WindowResizeCallback </td>
          <td>(</td>
          <td class="paramtype">GLFWwindow *&#160;</td>
          <td class="paramname"><em>window</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>w</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>h</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented from <a class="el" href="classopen3d_1_1visualization_1_1_visualizer#a7063afa1dcc4568dc26c0727bb83ac59">open3d::visualization::Visualizer</a>.</p>

</div>
</div>
<h2 class="groupheader">Field Documentation</h2>
<a id="ae95c8d91e4f042b92fd7a6dbbd0494ae"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae95c8d91e4f042b92fd7a6dbbd0494ae">&#9670;&nbsp;</a></span>drag_depth_</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float open3d::visualization::VisualizerWithVertexSelection::drag_depth_ = 0.0f</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a8a10c55d9e43eec79f1c233b45a883b0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8a10c55d9e43eec79f1c233b45a883b0">&#9670;&nbsp;</a></span>geometry_ptr_</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::shared_ptr&lt;const <a class="el" href="classopen3d_1_1geometry_1_1_geometry.400.del">geometry::Geometry</a>&gt; open3d::visualization::VisualizerWithVertexSelection::geometry_ptr_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aecf8c321f6ea2e35897eafd054e52c97"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aecf8c321f6ea2e35897eafd054e52c97">&#9670;&nbsp;</a></span>geometry_renderer_ptr_</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::shared_ptr&lt;<a class="el" href="classopen3d_1_1visualization_1_1glsl_1_1_geo">glsl::GeometryRenderer</a>&gt; open3d::visualization::VisualizerWithVertexSelection::geometry_renderer_ptr_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="af891b277cca744b2927f4b7ca8fa30e0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af891b277cca744b2927f4b7ca8fa30e0">&#9670;&nbsp;</a></span>mouse_down_pos_</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Eigen::Vector2d open3d::visualization::VisualizerWithVertexSelection::mouse_down_pos_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a3b4a0104347abfe945ae1c599de38c5a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3b4a0104347abfe945ae1c599de38c5a">&#9670;&nbsp;</a></span>on_selection_changed_</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::function&lt;void()&gt; open3d::visualization::VisualizerWithVertexSelection::on_selection_changed_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a653488823787e1565d6bd1ac57403edd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a653488823787e1565d6bd1ac57403edd">&#9670;&nbsp;</a></span>on_selection_moved_</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::function&lt;void()&gt; open3d::visualization::VisualizerWithVertexSelection::on_selection_moved_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a16cf7d09da99df3ddd0e64a22436e0db"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a16cf7d09da99df3ddd0e64a22436e0db">&#9670;&nbsp;</a></span>on_selection_moving_</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::function&lt;void()&gt; open3d::visualization::VisualizerWithVertexSelection::on_selection_moving_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a933436779c83e60725822a427391ee50"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a933436779c83e60725822a427391ee50">&#9670;&nbsp;</a></span>pick_point_opts_</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1visualization_1_1_render_opti">RenderOption</a> open3d::visualization::VisualizerWithVertexSelection::pick_point_opts_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ad1c612ae3cda90d7f8bcc0f8b9aac8b0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad1c612ae3cda90d7f8bcc0f8b9aac8b0">&#9670;&nbsp;</a></span>pointcloud_picker_ptr_</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::shared_ptr&lt;<a class="el" href="classopen3d_1_1visualization_1_1_point_cloud">PointCloudPicker</a>&gt; open3d::visualization::VisualizerWithVertexSelection::pointcloud_picker_ptr_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a74892aa1d97ba495d802a7f8c4d1c209"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a74892aa1d97ba495d802a7f8c4d1c209">&#9670;&nbsp;</a></span>pointcloud_picker_renderer_ptr_</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::shared_ptr&lt;<a class="el" href="classopen3d_1_1visualization_1_1glsl_1_1_poi-3">glsl::PointCloudPickerRenderer</a>&gt; open3d::visualization::VisualizerWithVertexSelection::pointcloud_picker_renderer_ptr_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="adb1b7fae84dc076a26aac4b31fe78495"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adb1b7fae84dc076a26aac4b31fe78495">&#9670;&nbsp;</a></span>points_in_rect_</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;int&gt; open3d::visualization::VisualizerWithVertexSelection::points_in_rect_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="addb631e9be3b5b48332103cdbc7fa2ee"></a>
<h2 class="memtitle"><span class="permalink"><a href="#addb631e9be3b5b48332103cdbc7fa2ee">&#9670;&nbsp;</a></span>selected_points_</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::unordered_map&lt;int, Eigen::Vector3d&gt; open3d::visualization::VisualizerWithVertexSelection::selected_points_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a36ee8b5bd0c25196ed86628e3be037c9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a36ee8b5bd0c25196ed86628e3be037c9">&#9670;&nbsp;</a></span>selected_points_before_drag_</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::unordered_map&lt;int, Eigen::Vector3d&gt; open3d::visualization::VisualizerWithVertexSelection::selected_points_before_drag_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a75ab2af6a22caabfc2c817874346c2a7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a75ab2af6a22caabfc2c817874346c2a7">&#9670;&nbsp;</a></span>selection_mode_</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1visualization_1_1_visualizer_-4#aa3aa94a04c9c3b1e78bb7c9b49dc8d37">SelectionMode</a> open3d::visualization::VisualizerWithVertexSelection::selection_mode_ = <a class="el" href="classopen3d_1_1visualization_1_1_visualizer_-4#aa3aa94a04c9c3b1e78bb7c9b49dc8d37a6adf97f83acf6453d4a6a4b1070f3754">SelectionMode::None</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a2c230ab709def6d2bb43fd3bf8d6c92a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2c230ab709def6d2bb43fd3bf8d6c92a">&#9670;&nbsp;</a></span>selection_polygon_ptr_</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::shared_ptr&lt;<a class="el" href="classopen3d_1_1visualization_1_1_selection_p">SelectionPolygon</a>&gt; open3d::visualization::VisualizerWithVertexSelection::selection_polygon_ptr_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a1f314f509b6f8e18632ce93b8cfba745"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1f314f509b6f8e18632ce93b8cfba745">&#9670;&nbsp;</a></span>selection_polygon_renderer_ptr_</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::shared_ptr&lt;<a class="el" href="classopen3d_1_1visualization_1_1glsl_1_1_sel">glsl::SelectionPolygonRenderer</a>&gt; open3d::visualization::VisualizerWithVertexSelection::selection_polygon_renderer_ptr_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a5d84cff5d12e4f8939eb38bcf702bda8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5d84cff5d12e4f8939eb38bcf702bda8">&#9670;&nbsp;</a></span>ui_points_geometry_ptr_</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::shared_ptr&lt;<a class="el" href="classopen3d_1_1geometry_1_1_point_cloud.41b">geometry::PointCloud</a>&gt; open3d::visualization::VisualizerWithVertexSelection::ui_points_geometry_ptr_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a46d4012d89ab1cc5223f0fe4a082416f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a46d4012d89ab1cc5223f0fe4a082416f">&#9670;&nbsp;</a></span>ui_points_renderer_ptr_</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::shared_ptr&lt;<a class="el" href="classopen3d_1_1visualization_1_1glsl_1_1_geo">glsl::GeometryRenderer</a>&gt; open3d::visualization::VisualizerWithVertexSelection::ui_points_renderer_ptr_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aaf73fae0d3626f30c559ae5c857c7eac"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaf73fae0d3626f30c559ae5c857c7eac">&#9670;&nbsp;</a></span>ui_selected_points_geometry_ptr_</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::shared_ptr&lt;<a class="el" href="classopen3d_1_1geometry_1_1_point_cloud.41b">geometry::PointCloud</a>&gt; open3d::visualization::VisualizerWithVertexSelection::ui_selected_points_geometry_ptr_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="adc30d12ff3f094a13469189e1bea05f9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adc30d12ff3f094a13469189e1bea05f9">&#9670;&nbsp;</a></span>ui_selected_points_renderer_ptr_</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::shared_ptr&lt;<a class="el" href="classopen3d_1_1visualization_1_1glsl_1_1_geo">glsl::GeometryRenderer</a>&gt; open3d::visualization::VisualizerWithVertexSelection::ui_selected_points_renderer_ptr_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/runner/work/Open3D/Open3D/cpp/open3d/visualization/visualizer/<a class="el" href="_visualizer_with_vertex_selection_8h_source">VisualizerWithVertexSelection.h (9238339 (Tue Mar 14 18:49:09 2023 -0700))</a></li>
<li>/home/runner/work/Open3D/Open3D/cpp/open3d/visualization/visualizer/<a class="el" href="_visualizer_with_vertex_selection_8cpp.7d6.d">VisualizerWithVertexSelection.cpp (9238339 (Tue Mar 14 18:49:09 2023 -0700))</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1
</small></address>
</body>

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/classopen3d_1_1visualization_1_1_visualizer_with_vertex_selection.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 10:57:19 GMT -->
</html>
