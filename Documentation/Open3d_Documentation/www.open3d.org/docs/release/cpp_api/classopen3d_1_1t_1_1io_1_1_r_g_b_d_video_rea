<!-- HTML header for doxygen 1.8.20-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/classopen3d_1_1t_1_1io_1_1_r_g_b_d_video_reader.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 10:53:04 GMT -->
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Open3D (C++ API): open3d::t::io::RGBDVideoReader Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js", "TeX/AMSmath.html", "TeX/AMSsymbols.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="../../../../cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-3TQPKGV6Z3"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());
  gtag('config', 'G-3TQPKGV6Z3');
</script>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="open3d_logo.ico"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Open3D (C++ API)
   &#160;<span id="projectnumber">0.17.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.html');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.html','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceopen3d.html">open3d</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1t.html">t</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1t_1_1io.html">io</a></li><li class="navelem"><a class="el" href="classopen3d_1_1t_1_1io_1_1_r_g_b_d_video_rea">RGBDVideoReader</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">open3d::t::io::RGBDVideoReader Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_r_g_b_d_video_reader_8h_source.html">RGBDVideoReader.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for open3d::t::io::RGBDVideoReader:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classopen3d_1_1t_1_1io_1_1_r_g_b_d_video_rea-2" usemap="#open3d::t::io::RGBDVideoReader_map" alt=""/>
  <map id="open3d::t::io::RGBDVideoReader_map" name="open3d::t::io::RGBDVideoReader_map">
<area href="classopen3d_1_1t_1_1io_1_1_r_s_bag_reader.2f" alt="open3d::t::io::RSBagReader" shape="rect" coords="0,56,193,80"/>
  </map>
</div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a91ea869930d48c37f5d95699b5c70459"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1io_1_1_r_g_b_d_video_rea#a91ea869930d48c37f5d95699b5c70459">RGBDVideoReader</a> ()</td></tr>
<tr class="separator:a91ea869930d48c37f5d95699b5c70459"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2c97de706a7b39127fc78c48117b517a"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1io_1_1_r_g_b_d_video_rea#a2c97de706a7b39127fc78c48117b517a">~RGBDVideoReader</a> ()</td></tr>
<tr class="separator:a2c97de706a7b39127fc78c48117b517a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0aa03c3859168a0db96f4dfbe3f7a886"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1io_1_1_r_g_b_d_video_rea#a0aa03c3859168a0db96f4dfbe3f7a886">IsOpened</a> () const =0</td></tr>
<tr class="memdesc:a0aa03c3859168a0db96f4dfbe3f7a886"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check If the RGBD video file is opened.  <a href="classopen3d_1_1t_1_1io_1_1_r_g_b_d_video_rea#a0aa03c3859168a0db96f4dfbe3f7a886">More...</a><br /></td></tr>
<tr class="separator:a0aa03c3859168a0db96f4dfbe3f7a886"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a77b09a9deac471d801ccce9c2f99ff12"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1io_1_1_r_g_b_d_video_rea#a77b09a9deac471d801ccce9c2f99ff12">IsEOF</a> () const =0</td></tr>
<tr class="memdesc:a77b09a9deac471d801ccce9c2f99ff12"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if the RGBD video file is all read.  <a href="classopen3d_1_1t_1_1io_1_1_r_g_b_d_video_rea#a77b09a9deac471d801ccce9c2f99ff12">More...</a><br /></td></tr>
<tr class="separator:a77b09a9deac471d801ccce9c2f99ff12"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a48fe3befeb52003f285823e4e9f36014"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1io_1_1_r_g_b_d_video_rea#a48fe3befeb52003f285823e4e9f36014">Open</a> (const std::string &amp;filename)=0</td></tr>
<tr class="separator:a48fe3befeb52003f285823e4e9f36014"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a73330ea9b3980b84a62a64e7171a0aaf"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1io_1_1_r_g_b_d_video_rea#a73330ea9b3980b84a62a64e7171a0aaf">Close</a> ()=0</td></tr>
<tr class="memdesc:a73330ea9b3980b84a62a64e7171a0aaf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Close the opened RGBD video playback.  <a href="classopen3d_1_1t_1_1io_1_1_r_g_b_d_video_rea#a73330ea9b3980b84a62a64e7171a0aaf">More...</a><br /></td></tr>
<tr class="separator:a73330ea9b3980b84a62a64e7171a0aaf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a32437cd1ecc9664f382db18df7b64b49"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classopen3d_1_1t_1_1io_1_1_r_g_b_d_video_met">RGBDVideoMetadata</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1io_1_1_r_g_b_d_video_rea#a32437cd1ecc9664f382db18df7b64b49">GetMetadata</a> ()=0</td></tr>
<tr class="memdesc:a32437cd1ecc9664f382db18df7b64b49"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get reference to the metadata of the RGBD video playback.  <a href="classopen3d_1_1t_1_1io_1_1_r_g_b_d_video_rea#a32437cd1ecc9664f382db18df7b64b49">More...</a><br /></td></tr>
<tr class="separator:a32437cd1ecc9664f382db18df7b64b49"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0033e72b863d57793f762080e1fcfae8"><td class="memItemLeft" align="right" valign="top">virtual const <a class="el" href="classopen3d_1_1t_1_1io_1_1_r_g_b_d_video_met">RGBDVideoMetadata</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1io_1_1_r_g_b_d_video_rea#a0033e72b863d57793f762080e1fcfae8">GetMetadata</a> () const =0</td></tr>
<tr class="memdesc:a0033e72b863d57793f762080e1fcfae8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get metadata of the RGBD video playback.  <a href="classopen3d_1_1t_1_1io_1_1_r_g_b_d_video_rea#a0033e72b863d57793f762080e1fcfae8">More...</a><br /></td></tr>
<tr class="separator:a0033e72b863d57793f762080e1fcfae8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac83293ca86fa1a657de7de7e0f3f7dbc"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1io_1_1_r_g_b_d_video_rea#ac83293ca86fa1a657de7de7e0f3f7dbc">SeekTimestamp</a> (uint64_t timestamp)=0</td></tr>
<tr class="memdesc:ac83293ca86fa1a657de7de7e0f3f7dbc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Seek to the timestamp (in us).  <a href="classopen3d_1_1t_1_1io_1_1_r_g_b_d_video_rea#ac83293ca86fa1a657de7de7e0f3f7dbc">More...</a><br /></td></tr>
<tr class="separator:ac83293ca86fa1a657de7de7e0f3f7dbc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae275d9de725c178d30f99ee6f1353e50"><td class="memItemLeft" align="right" valign="top">virtual uint64_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1io_1_1_r_g_b_d_video_rea#ae275d9de725c178d30f99ee6f1353e50">GetTimestamp</a> () const =0</td></tr>
<tr class="memdesc:ae275d9de725c178d30f99ee6f1353e50"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get current timestamp (in us).  <a href="classopen3d_1_1t_1_1io_1_1_r_g_b_d_video_rea#ae275d9de725c178d30f99ee6f1353e50">More...</a><br /></td></tr>
<tr class="separator:ae275d9de725c178d30f99ee6f1353e50"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7b4de4f1fac003798bc3ce20ac51740c"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_r_g_b_d_ima">t::geometry::RGBDImage</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1io_1_1_r_g_b_d_video_rea#a7b4de4f1fac003798bc3ce20ac51740c">NextFrame</a> ()=0</td></tr>
<tr class="memdesc:a7b4de4f1fac003798bc3ce20ac51740c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get next frame from the RGBD video playback and returns the RGBD object.  <a href="classopen3d_1_1t_1_1io_1_1_r_g_b_d_video_rea#a7b4de4f1fac003798bc3ce20ac51740c">More...</a><br /></td></tr>
<tr class="separator:a7b4de4f1fac003798bc3ce20ac51740c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a389546000772ec376085ab75379b0c9a"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1io_1_1_r_g_b_d_video_rea#a389546000772ec376085ab75379b0c9a">SaveFrames</a> (const std::string &amp;frame_path, uint64_t start_time_us=0, uint64_t end_time_us=UINT64_MAX)</td></tr>
<tr class="separator:a389546000772ec376085ab75379b0c9a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a046de48dfad7e8be1351e98e56a8386e"><td class="memItemLeft" align="right" valign="top">virtual std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1io_1_1_r_g_b_d_video_rea#a046de48dfad7e8be1351e98e56a8386e">GetFilename</a> () const =0</td></tr>
<tr class="memdesc:a046de48dfad7e8be1351e98e56a8386e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return filename being read.  <a href="classopen3d_1_1t_1_1io_1_1_r_g_b_d_video_rea#a046de48dfad7e8be1351e98e56a8386e">More...</a><br /></td></tr>
<tr class="separator:a046de48dfad7e8be1351e98e56a8386e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adab9c775224b828689e50cd813951f67"><td class="memItemLeft" align="right" valign="top">virtual std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1io_1_1_r_g_b_d_video_rea#adab9c775224b828689e50cd813951f67">ToString</a> () const</td></tr>
<tr class="memdesc:adab9c775224b828689e50cd813951f67"><td class="mdescLeft">&#160;</td><td class="mdescRight">Text description.  <a href="classopen3d_1_1t_1_1io_1_1_r_g_b_d_video_rea#adab9c775224b828689e50cd813951f67">More...</a><br /></td></tr>
<tr class="separator:adab9c775224b828689e50cd813951f67"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:ad092856b2b2922bd3a611ae60690b5e1"><td class="memItemLeft" align="right" valign="top">static std::unique_ptr&lt; <a class="el" href="classopen3d_1_1t_1_1io_1_1_r_g_b_d_video_rea">RGBDVideoReader</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1io_1_1_r_g_b_d_video_rea#ad092856b2b2922bd3a611ae60690b5e1">Create</a> (const std::string &amp;filename)</td></tr>
<tr class="memdesc:ad092856b2b2922bd3a611ae60690b5e1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Factory function to create object based on RGBD video file type.  <a href="classopen3d_1_1t_1_1io_1_1_r_g_b_d_video_rea#ad092856b2b2922bd3a611ae60690b5e1">More...</a><br /></td></tr>
<tr class="separator:ad092856b2b2922bd3a611ae60690b5e1"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a91ea869930d48c37f5d95699b5c70459"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a91ea869930d48c37f5d95699b5c70459">&#9670;&nbsp;</a></span>RGBDVideoReader()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">open3d::t::io::RGBDVideoReader::RGBDVideoReader </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a2c97de706a7b39127fc78c48117b517a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2c97de706a7b39127fc78c48117b517a">&#9670;&nbsp;</a></span>~RGBDVideoReader()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual open3d::t::io::RGBDVideoReader::~RGBDVideoReader </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a73330ea9b3980b84a62a64e7171a0aaf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a73330ea9b3980b84a62a64e7171a0aaf">&#9670;&nbsp;</a></span>Close()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void open3d::t::io::RGBDVideoReader::Close </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Close the opened RGBD video playback. </p>

<p>Implemented in <a class="el" href="classopen3d_1_1t_1_1io_1_1_r_s_bag_reader.2f#ad20fd3056edb5fd81deeb9d110c72ce5">open3d::t::io::RSBagReader</a>.</p>

</div>
</div>
<a id="ad092856b2b2922bd3a611ae60690b5e1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad092856b2b2922bd3a611ae60690b5e1">&#9670;&nbsp;</a></span>Create()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::unique_ptr&lt; <a class="el" href="classopen3d_1_1t_1_1io_1_1_r_g_b_d_video_rea">RGBDVideoReader</a> &gt; open3d::t::io::RGBDVideoReader::Create </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>filename</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Factory function to create object based on RGBD video file type. </p>

</div>
</div>
<a id="a046de48dfad7e8be1351e98e56a8386e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a046de48dfad7e8be1351e98e56a8386e">&#9670;&nbsp;</a></span>GetFilename()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual std::string open3d::t::io::RGBDVideoReader::GetFilename </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Return filename being read. </p>

<p>Implemented in <a class="el" href="classopen3d_1_1t_1_1io_1_1_r_s_bag_reader.2f#adf33b33e9e8c64efc6a91bd9f9bc26b0">open3d::t::io::RSBagReader</a>.</p>

</div>
</div>
<a id="a0033e72b863d57793f762080e1fcfae8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0033e72b863d57793f762080e1fcfae8">&#9670;&nbsp;</a></span>GetMetadata() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const <a class="el" href="classopen3d_1_1t_1_1io_1_1_r_g_b_d_video_met">RGBDVideoMetadata</a>&amp; open3d::t::io::RGBDVideoReader::GetMetadata </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get metadata of the RGBD video playback. </p>

<p>Implemented in <a class="el" href="classopen3d_1_1t_1_1io_1_1_r_s_bag_reader.2f#afe042f42d4bd588443e7d15bf23fc050">open3d::t::io::RSBagReader</a>.</p>

</div>
</div>
<a id="a32437cd1ecc9664f382db18df7b64b49"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a32437cd1ecc9664f382db18df7b64b49">&#9670;&nbsp;</a></span>GetMetadata() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classopen3d_1_1t_1_1io_1_1_r_g_b_d_video_met">RGBDVideoMetadata</a>&amp; open3d::t::io::RGBDVideoReader::GetMetadata </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get reference to the metadata of the RGBD video playback. </p>

<p>Implemented in <a class="el" href="classopen3d_1_1t_1_1io_1_1_r_s_bag_reader.2f#a41ac077c564b1c4fcc4796921a8b7cbe">open3d::t::io::RSBagReader</a>.</p>

</div>
</div>
<a id="ae275d9de725c178d30f99ee6f1353e50"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae275d9de725c178d30f99ee6f1353e50">&#9670;&nbsp;</a></span>GetTimestamp()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual uint64_t open3d::t::io::RGBDVideoReader::GetTimestamp </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get current timestamp (in us). </p>

<p>Implemented in <a class="el" href="classopen3d_1_1t_1_1io_1_1_r_s_bag_reader.2f#aad845442e5f870470488483ec878942e">open3d::t::io::RSBagReader</a>.</p>

</div>
</div>
<a id="a77b09a9deac471d801ccce9c2f99ff12"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a77b09a9deac471d801ccce9c2f99ff12">&#9670;&nbsp;</a></span>IsEOF()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool open3d::t::io::RGBDVideoReader::IsEOF </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Check if the RGBD video file is all read. </p>

<p>Implemented in <a class="el" href="classopen3d_1_1t_1_1io_1_1_r_s_bag_reader.2f#a1a310da3ebfcfed6a845e15ca94c7ba0">open3d::t::io::RSBagReader</a>.</p>

</div>
</div>
<a id="a0aa03c3859168a0db96f4dfbe3f7a886"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0aa03c3859168a0db96f4dfbe3f7a886">&#9670;&nbsp;</a></span>IsOpened()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool open3d::t::io::RGBDVideoReader::IsOpened </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Check If the RGBD video file is opened. </p>

<p>Implemented in <a class="el" href="classopen3d_1_1t_1_1io_1_1_r_s_bag_reader.2f#a41bcda502ffe0c4620c52c110a263f2d">open3d::t::io::RSBagReader</a>.</p>

</div>
</div>
<a id="a7b4de4f1fac003798bc3ce20ac51740c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7b4de4f1fac003798bc3ce20ac51740c">&#9670;&nbsp;</a></span>NextFrame()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_r_g_b_d_ima">t::geometry::RGBDImage</a> open3d::t::io::RGBDVideoReader::NextFrame </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get next frame from the RGBD video playback and returns the RGBD object. </p>

<p>Implemented in <a class="el" href="classopen3d_1_1t_1_1io_1_1_r_s_bag_reader.2f#a83c876cbe60b4ea588f56325882b4502">open3d::t::io::RSBagReader</a>.</p>

</div>
</div>
<a id="a48fe3befeb52003f285823e4e9f36014"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a48fe3befeb52003f285823e4e9f36014">&#9670;&nbsp;</a></span>Open()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool open3d::t::io::RGBDVideoReader::Open </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>filename</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Open an RGBD video playback.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">filename</td><td>Path to the RGBD video file. </td></tr>
  </table>
  </dd>
</dl>

<p>Implemented in <a class="el" href="classopen3d_1_1t_1_1io_1_1_r_s_bag_reader.2f#a0dea592a21538675dd24f9d5620e7562">open3d::t::io::RSBagReader</a>.</p>

</div>
</div>
<a id="a389546000772ec376085ab75379b0c9a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a389546000772ec376085ab75379b0c9a">&#9670;&nbsp;</a></span>SaveFrames()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::t::io::RGBDVideoReader::SaveFrames </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>frame_path</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint64_t&#160;</td>
          <td class="paramname"><em>start_time_us</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint64_t&#160;</td>
          <td class="paramname"><em>end_time_us</em> = <code>UINT64_MAX</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Save synchronized and aligned individual frames to subfolders.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">frame_path</td><td>Frames will be stored in stream subfolders 'color' and 'depth' here. The intrinsic camera calibration for the color stream will be saved in 'intrinsic.json'.</td></tr>
    <tr><td class="paramname">start_time_us</td><td>(default 0) Start saving frames from this time (us) </td></tr>
    <tr><td class="paramname">end_time_us</td><td>(default video length) Save frames till this time (us) </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ac83293ca86fa1a657de7de7e0f3f7dbc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac83293ca86fa1a657de7de7e0f3f7dbc">&#9670;&nbsp;</a></span>SeekTimestamp()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool open3d::t::io::RGBDVideoReader::SeekTimestamp </td>
          <td>(</td>
          <td class="paramtype">uint64_t&#160;</td>
          <td class="paramname"><em>timestamp</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Seek to the timestamp (in us). </p>

<p>Implemented in <a class="el" href="classopen3d_1_1t_1_1io_1_1_r_s_bag_reader.2f#add5065b9254fa2790b2f4344dc88ec9a">open3d::t::io::RSBagReader</a>.</p>

</div>
</div>
<a id="adab9c775224b828689e50cd813951f67"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adab9c775224b828689e50cd813951f67">&#9670;&nbsp;</a></span>ToString()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::string open3d::t::io::RGBDVideoReader::ToString </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Text description. </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/runner/work/Open3D/Open3D/cpp/open3d/t/io/sensor/<a class="el" href="_r_g_b_d_video_reader_8h_source.html">RGBDVideoReader.h (9238339 (Tue Mar 14 18:49:09 2023 -0700))</a></li>
<li>/home/runner/work/Open3D/Open3D/cpp/open3d/t/io/sensor/<a class="el" href="_r_g_b_d_video_reader_8cpp.html">RGBDVideoReader.cpp (9238339 (Tue Mar 14 18:49:09 2023 -0700))</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1
</small></address>
</body>

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/classopen3d_1_1t_1_1io_1_1_r_g_b_d_video_reader.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 10:53:06 GMT -->
</html>
