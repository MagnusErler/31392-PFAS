<!-- HTML header for doxygen 1.8.20-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/namespaceopen3d_1_1t_1_1geometry_1_1kernel_1_1image.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 11:02:13 GMT -->
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Open3D (C++ API): open3d::t::geometry::kernel::image Namespace Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js", "TeX/AMSmath.html", "TeX/AMSsymbols.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="../../../../cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-3TQPKGV6Z3"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());
  gtag('config', 'G-3TQPKGV6Z3');
</script>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="open3d_logo.ico"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Open3D (C++ API)
   &#160;<span id="projectnumber">0.17.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.html');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.html','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceopen3d.html">open3d</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1t.html">t</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1t_1_1geometry.html">geometry</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel.4">kernel</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1">image</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">open3d::t::geometry::kernel::image Namespace Reference</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:aeac6cf646a5773baf16f99b4773d776c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1#aeac6cf646a5773baf16f99b4773d776c">To</a> (const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;src, <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;dst, double scale, double <a class="el" href="io_2file__format_2_file_p_c_d_8cpp.375.delay#aed7ea92f45bd273dde380a45ddced592">offset</a>)</td></tr>
<tr class="separator:aeac6cf646a5773baf16f99b4773d776c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8bff9a09b77d934116d6e1e406b96dba"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1#a8bff9a09b77d934116d6e1e406b96dba">ClipTransform</a> (const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;src, <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;dst, float scale, float min_value, float max_value, float clip_fill)</td></tr>
<tr class="separator:a8bff9a09b77d934116d6e1e406b96dba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5c77aa468b271dc40e224d1723e86e30"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1#a5c77aa468b271dc40e224d1723e86e30">PyrDownDepth</a> (const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;src, <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;dst, float diff_threshold, float invalid_fill)</td></tr>
<tr class="separator:a5c77aa468b271dc40e224d1723e86e30"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6ba7f43fe353d5a07735507f948bc0b6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1#a6ba7f43fe353d5a07735507f948bc0b6">CreateVertexMap</a> (const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;src, <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;dst, const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;intrinsics, float invalid_fill)</td></tr>
<tr class="separator:a6ba7f43fe353d5a07735507f948bc0b6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a73be814e338cf352f84997e72458b960"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1#a73be814e338cf352f84997e72458b960">CreateNormalMap</a> (const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;src, <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;dst, float invalid_fill)</td></tr>
<tr class="separator:a73be814e338cf352f84997e72458b960"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeafb64908e8fdc0125a4a93ba7001efb"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1#aeafb64908e8fdc0125a4a93ba7001efb">ColorizeDepth</a> (const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;src, <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;dst, float scale, float min_value, float max_value)</td></tr>
<tr class="separator:aeafb64908e8fdc0125a4a93ba7001efb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab968667500de3f76f7ea535512ccac31"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1#ab968667500de3f76f7ea535512ccac31">ToCPU</a> (const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;src, <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;dst, double scale, double <a class="el" href="io_2file__format_2_file_p_c_d_8cpp.375.delay#aed7ea92f45bd273dde380a45ddced592">offset</a>)</td></tr>
<tr class="separator:ab968667500de3f76f7ea535512ccac31"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a073385a04c281804b372b1bdbe1512e9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1#a073385a04c281804b372b1bdbe1512e9">ClipTransformCPU</a> (const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;src, <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;dst, float scale, float min_value, float max_value, float clip_fill=0.0f)</td></tr>
<tr class="separator:a073385a04c281804b372b1bdbe1512e9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab2295f84d1f8d92309515d4fb55d8869"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1#ab2295f84d1f8d92309515d4fb55d8869">PyrDownDepthCPU</a> (const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;src, <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;dst, float diff_threshold, float invalid_fill)</td></tr>
<tr class="separator:ab2295f84d1f8d92309515d4fb55d8869"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a823706fbab379ba0d6b7302e583efb88"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1#a823706fbab379ba0d6b7302e583efb88">CreateVertexMapCPU</a> (const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;src, <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;dst, const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;intrinsics, float invalid_fill)</td></tr>
<tr class="separator:a823706fbab379ba0d6b7302e583efb88"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1769d1f1bfe4beda900577ece264dd8a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1#a1769d1f1bfe4beda900577ece264dd8a">CreateNormalMapCPU</a> (const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;src, <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;dst, float invalid_fill)</td></tr>
<tr class="separator:a1769d1f1bfe4beda900577ece264dd8a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a532e86e94dba6a8fbd002aa31f153b62"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1#a532e86e94dba6a8fbd002aa31f153b62">ColorizeDepthCPU</a> (const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;src, <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;dst, float scale, float min_value, float max_value)</td></tr>
<tr class="separator:a532e86e94dba6a8fbd002aa31f153b62"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a id="a8bff9a09b77d934116d6e1e406b96dba"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8bff9a09b77d934116d6e1e406b96dba">&#9670;&nbsp;</a></span>ClipTransform()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::t::geometry::kernel::image::ClipTransform </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>src</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>dst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>scale</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>min_value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>max_value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>clip_fill</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a073385a04c281804b372b1bdbe1512e9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a073385a04c281804b372b1bdbe1512e9">&#9670;&nbsp;</a></span>ClipTransformCPU()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::t::geometry::kernel::image::ClipTransformCPU </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>src</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>dst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>scale</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>min_value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>max_value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>clip_fill</em> = <code>0.0f</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="aeafb64908e8fdc0125a4a93ba7001efb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeafb64908e8fdc0125a4a93ba7001efb">&#9670;&nbsp;</a></span>ColorizeDepth()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::t::geometry::kernel::image::ColorizeDepth </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>src</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>dst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>scale</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>min_value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>max_value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a532e86e94dba6a8fbd002aa31f153b62"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a532e86e94dba6a8fbd002aa31f153b62">&#9670;&nbsp;</a></span>ColorizeDepthCPU()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::t::geometry::kernel::image::ColorizeDepthCPU </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>src</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>dst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>scale</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>min_value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>max_value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a73be814e338cf352f84997e72458b960"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a73be814e338cf352f84997e72458b960">&#9670;&nbsp;</a></span>CreateNormalMap()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::t::geometry::kernel::image::CreateNormalMap </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>src</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>dst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>invalid_fill</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a1769d1f1bfe4beda900577ece264dd8a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1769d1f1bfe4beda900577ece264dd8a">&#9670;&nbsp;</a></span>CreateNormalMapCPU()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::t::geometry::kernel::image::CreateNormalMapCPU </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>src</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>dst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>invalid_fill</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a6ba7f43fe353d5a07735507f948bc0b6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6ba7f43fe353d5a07735507f948bc0b6">&#9670;&nbsp;</a></span>CreateVertexMap()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::t::geometry::kernel::image::CreateVertexMap </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>src</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>dst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>intrinsics</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>invalid_fill</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a823706fbab379ba0d6b7302e583efb88"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a823706fbab379ba0d6b7302e583efb88">&#9670;&nbsp;</a></span>CreateVertexMapCPU()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::t::geometry::kernel::image::CreateVertexMapCPU </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>src</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>dst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>intrinsics</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>invalid_fill</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a5c77aa468b271dc40e224d1723e86e30"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5c77aa468b271dc40e224d1723e86e30">&#9670;&nbsp;</a></span>PyrDownDepth()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::t::geometry::kernel::image::PyrDownDepth </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>src</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>dst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>diff_threshold</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>invalid_fill</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ab2295f84d1f8d92309515d4fb55d8869"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab2295f84d1f8d92309515d4fb55d8869">&#9670;&nbsp;</a></span>PyrDownDepthCPU()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::t::geometry::kernel::image::PyrDownDepthCPU </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>src</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>dst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>diff_threshold</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>invalid_fill</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="aeac6cf646a5773baf16f99b4773d776c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeac6cf646a5773baf16f99b4773d776c">&#9670;&nbsp;</a></span>To()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::t::geometry::kernel::image::To </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>src</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>dst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>scale</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>offset</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ab968667500de3f76f7ea535512ccac31"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab968667500de3f76f7ea535512ccac31">&#9670;&nbsp;</a></span>ToCPU()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::t::geometry::kernel::image::ToCPU </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>src</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>dst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>scale</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>offset</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1
</small></address>
</body>

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/namespaceopen3d_1_1t_1_1geometry_1_1kernel_1_1image.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 11:02:13 GMT -->
</html>
