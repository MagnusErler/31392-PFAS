<!-- HTML header for doxygen 1.8.20-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/classopen3d_1_1t_1_1io_1_1_real_sense_sensor_config.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 10:53:40 GMT -->
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Open3D (C++ API): open3d::t::io::RealSenseSensorConfig Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js", "TeX/AMSmath.html", "TeX/AMSsymbols.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="../../../../cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-3TQPKGV6Z3"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());
  gtag('config', 'G-3TQPKGV6Z3');
</script>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="open3d_logo.ico"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Open3D (C++ API)
   &#160;<span id="projectnumber">0.17.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.html');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.html','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceopen3d.html">open3d</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1t.html">t</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1t_1_1io.html">io</a></li><li class="navelem"><a class="el" href="classopen3d_1_1t_1_1io_1_1_real_sense_sensor-2">RealSenseSensorConfig</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pub-attribs">Data Fields</a>  </div>
  <div class="headertitle">
<div class="title">open3d::t::io::RealSenseSensorConfig Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_real_sense_sensor_config_8h_source.378.dela">RealSenseSensorConfig.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for open3d::t::io::RealSenseSensorConfig:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classopen3d_1_1t_1_1io_1_1_real_sense_sensor-4" usemap="#open3d::t::io::RealSenseSensorConfig_map" alt=""/>
  <map id="open3d::t::io::RealSenseSensorConfig_map" name="open3d::t::io::RealSenseSensorConfig_map">
<area href="classopen3d_1_1io_1_1_r_g_b_d_sensor_config" alt="open3d::io::RGBDSensorConfig" shape="rect" coords="0,56,222,80"/>
<area href="classopen3d_1_1utility_1_1_i_json_convertibl" alt="open3d::utility::IJsonConvertible" shape="rect" coords="0,0,222,24"/>
  </map>
</div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a278b9f89a9b18a6c26cf19c6c5a9e3c7"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1io_1_1_real_sense_sensor-2#a278b9f89a9b18a6c26cf19c6c5a9e3c7">RealSenseSensorConfig</a> ()</td></tr>
<tr class="memdesc:a278b9f89a9b18a6c26cf19c6c5a9e3c7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor, default configs will be used.  <a href="classopen3d_1_1t_1_1io_1_1_real_sense_sensor-2#a278b9f89a9b18a6c26cf19c6c5a9e3c7">More...</a><br /></td></tr>
<tr class="separator:a278b9f89a9b18a6c26cf19c6c5a9e3c7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab6a869209bb928bb27b51da482c482f6"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1io_1_1_real_sense_sensor-2#ab6a869209bb928bb27b51da482c482f6">RealSenseSensorConfig</a> (const std::unordered_map&lt; std::string, std::string &gt; &amp;config)</td></tr>
<tr class="memdesc:ab6a869209bb928bb27b51da482c482f6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialize config with a map.  <a href="classopen3d_1_1t_1_1io_1_1_real_sense_sensor-2#ab6a869209bb928bb27b51da482c482f6">More...</a><br /></td></tr>
<tr class="separator:ab6a869209bb928bb27b51da482c482f6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af5a77ec5fa101b81991b011e00845c7e"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1io_1_1_real_sense_sensor-2#af5a77ec5fa101b81991b011e00845c7e">ConvertToJsonValue</a> (Json::Value &amp;value) const override</td></tr>
<tr class="separator:af5a77ec5fa101b81991b011e00845c7e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5692656328cba3a103ca07d060551410"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1io_1_1_real_sense_sensor-2#a5692656328cba3a103ca07d060551410">ConvertFromJsonValue</a> (const Json::Value &amp;value) override</td></tr>
<tr class="separator:a5692656328cba3a103ca07d060551410"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a959fd19a9d4e54d71971dc5a7455abc5"><td class="memItemLeft" align="right" valign="top">rs2::config&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1io_1_1_real_sense_sensor-2#a959fd19a9d4e54d71971dc5a7455abc5">ConvertToNativeConfig</a> () const</td></tr>
<tr class="memdesc:a959fd19a9d4e54d71971dc5a7455abc5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convert to RealSense config.  <a href="classopen3d_1_1t_1_1io_1_1_real_sense_sensor-2#a959fd19a9d4e54d71971dc5a7455abc5">More...</a><br /></td></tr>
<tr class="separator:a959fd19a9d4e54d71971dc5a7455abc5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classopen3d_1_1utility_1_1_i_json_convertible"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classopen3d_1_1utility_1_1_i_json_convertible')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classopen3d_1_1utility_1_1_i_json_convertibl">open3d::utility::IJsonConvertible</a></td></tr>
<tr class="memitem:acf2f47a1d7f759ee0046b7a9f76a9ab0 inherit pub_methods_classopen3d_1_1utility_1_1_i_json_convertible"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1utility_1_1_i_json_convertibl#acf2f47a1d7f759ee0046b7a9f76a9ab0">~IJsonConvertible</a> ()</td></tr>
<tr class="separator:acf2f47a1d7f759ee0046b7a9f76a9ab0 inherit pub_methods_classopen3d_1_1utility_1_1_i_json_convertible"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa7aaf69458ae9065121bf55cc21bfbcf inherit pub_methods_classopen3d_1_1utility_1_1_i_json_convertible"><td class="memItemLeft" align="right" valign="top">virtual std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1utility_1_1_i_json_convertibl#aa7aaf69458ae9065121bf55cc21bfbcf">ToString</a> () const</td></tr>
<tr class="memdesc:aa7aaf69458ae9065121bf55cc21bfbcf inherit pub_methods_classopen3d_1_1utility_1_1_i_json_convertible"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convert to a styled string representation of JSON data for display.  <a href="classopen3d_1_1utility_1_1_i_json_convertibl#aa7aaf69458ae9065121bf55cc21bfbcf">More...</a><br /></td></tr>
<tr class="separator:aa7aaf69458ae9065121bf55cc21bfbcf inherit pub_methods_classopen3d_1_1utility_1_1_i_json_convertible"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a1155ff2a94ca019671e59f2599c0f467"><td class="memItemLeft" align="right" valign="top">static Json::Value&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1io_1_1_real_sense_sensor-2#a1155ff2a94ca019671e59f2599c0f467">GetMetadataJson</a> (const rs2::pipeline_profile &amp;<a class="el" href="_o3_d_visualizer_8cpp.html#a7561f528cedf554bb5d9080556e48898">profile</a>)</td></tr>
<tr class="memdesc:a1155ff2a94ca019671e59f2599c0f467"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get metadata for a streaming RealSense camera or bag file.  <a href="classopen3d_1_1t_1_1io_1_1_real_sense_sensor-2#a1155ff2a94ca019671e59f2599c0f467">More...</a><br /></td></tr>
<tr class="separator:a1155ff2a94ca019671e59f2599c0f467"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9491581be8ee4c81d50f7e5a6c2cebea"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1io_1_1_real_sense_sensor-2#a9491581be8ee4c81d50f7e5a6c2cebea">GetPixelDtypes</a> (const rs2::pipeline_profile &amp;<a class="el" href="_o3_d_visualizer_8cpp.html#a7561f528cedf554bb5d9080556e48898">profile</a>, <a class="el" href="classopen3d_1_1t_1_1io_1_1_r_g_b_d_video_met">RGBDVideoMetadata</a> &amp;metadata)</td></tr>
<tr class="separator:a9491581be8ee4c81d50f7e5a6c2cebea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a76ce1c3e008c23930b330d514634c216"><td class="memItemLeft" align="right" valign="top">static std::pair&lt; <a class="el" href="classopen3d_1_1core_1_1_dtype.html">core::Dtype</a>, uint8_t &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1io_1_1_real_sense_sensor-2#a76ce1c3e008c23930b330d514634c216">get_dtype_channels</a> (int rs2_format_enum)</td></tr>
<tr class="separator:a76ce1c3e008c23930b330d514634c216"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_static_methods_classopen3d_1_1utility_1_1_i_json_convertible"><td colspan="2" onclick="javascript:toggleInherit('pub_static_methods_classopen3d_1_1utility_1_1_i_json_convertible')"><img src="closed.png" alt="-"/>&#160;Static Public Member Functions inherited from <a class="el" href="classopen3d_1_1utility_1_1_i_json_convertibl">open3d::utility::IJsonConvertible</a></td></tr>
<tr class="memitem:a25ee0ebf7aafc887fa917136f97dc623 inherit pub_static_methods_classopen3d_1_1utility_1_1_i_json_convertible"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1utility_1_1_i_json_convertibl#a25ee0ebf7aafc887fa917136f97dc623">EigenVector3dFromJsonArray</a> (Eigen::Vector3d &amp;vec, const Json::Value &amp;value)</td></tr>
<tr class="separator:a25ee0ebf7aafc887fa917136f97dc623 inherit pub_static_methods_classopen3d_1_1utility_1_1_i_json_convertible"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa504e85fe0fab6eb9bf00c8870c64e7b inherit pub_static_methods_classopen3d_1_1utility_1_1_i_json_convertible"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1utility_1_1_i_json_convertibl#aa504e85fe0fab6eb9bf00c8870c64e7b">EigenVector3dToJsonArray</a> (const Eigen::Vector3d &amp;vec, Json::Value &amp;value)</td></tr>
<tr class="separator:aa504e85fe0fab6eb9bf00c8870c64e7b inherit pub_static_methods_classopen3d_1_1utility_1_1_i_json_convertible"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3bc2a9c0c6377e4d90305766b5fb78d7 inherit pub_static_methods_classopen3d_1_1utility_1_1_i_json_convertible"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1utility_1_1_i_json_convertibl#a3bc2a9c0c6377e4d90305766b5fb78d7">EigenVector4dFromJsonArray</a> (Eigen::Vector4d &amp;vec, const Json::Value &amp;value)</td></tr>
<tr class="separator:a3bc2a9c0c6377e4d90305766b5fb78d7 inherit pub_static_methods_classopen3d_1_1utility_1_1_i_json_convertible"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9aa39c74c435a61a328296908e85dcdd inherit pub_static_methods_classopen3d_1_1utility_1_1_i_json_convertible"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1utility_1_1_i_json_convertibl#a9aa39c74c435a61a328296908e85dcdd">EigenVector4dToJsonArray</a> (const Eigen::Vector4d &amp;vec, Json::Value &amp;value)</td></tr>
<tr class="separator:a9aa39c74c435a61a328296908e85dcdd inherit pub_static_methods_classopen3d_1_1utility_1_1_i_json_convertible"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a654a42e83add5a3b19eccc09c31a9ca8 inherit pub_static_methods_classopen3d_1_1utility_1_1_i_json_convertible"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1utility_1_1_i_json_convertibl#a654a42e83add5a3b19eccc09c31a9ca8">EigenMatrix3dFromJsonArray</a> (Eigen::Matrix3d &amp;mat, const Json::Value &amp;value)</td></tr>
<tr class="separator:a654a42e83add5a3b19eccc09c31a9ca8 inherit pub_static_methods_classopen3d_1_1utility_1_1_i_json_convertible"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ace9dac52c3ee510e08f295ada0733b6b inherit pub_static_methods_classopen3d_1_1utility_1_1_i_json_convertible"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1utility_1_1_i_json_convertibl#ace9dac52c3ee510e08f295ada0733b6b">EigenMatrix3dToJsonArray</a> (const Eigen::Matrix3d &amp;mat, Json::Value &amp;value)</td></tr>
<tr class="separator:ace9dac52c3ee510e08f295ada0733b6b inherit pub_static_methods_classopen3d_1_1utility_1_1_i_json_convertible"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1e8788f8bdac9878c74e3e8a7a760bb7 inherit pub_static_methods_classopen3d_1_1utility_1_1_i_json_convertible"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1utility_1_1_i_json_convertibl#a1e8788f8bdac9878c74e3e8a7a760bb7">EigenMatrix4dFromJsonArray</a> (Eigen::Matrix4d &amp;mat, const Json::Value &amp;value)</td></tr>
<tr class="separator:a1e8788f8bdac9878c74e3e8a7a760bb7 inherit pub_static_methods_classopen3d_1_1utility_1_1_i_json_convertible"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a98d6575885469a57787f6ff4c2a65839 inherit pub_static_methods_classopen3d_1_1utility_1_1_i_json_convertible"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1utility_1_1_i_json_convertibl#a98d6575885469a57787f6ff4c2a65839">EigenMatrix4dToJsonArray</a> (const Eigen::Matrix4d &amp;mat, Json::Value &amp;value)</td></tr>
<tr class="separator:a98d6575885469a57787f6ff4c2a65839 inherit pub_static_methods_classopen3d_1_1utility_1_1_i_json_convertible"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3a4d0a90b42bc56b5ae5cb595c0c27b5 inherit pub_static_methods_classopen3d_1_1utility_1_1_i_json_convertible"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1utility_1_1_i_json_convertibl#a3a4d0a90b42bc56b5ae5cb595c0c27b5">EigenMatrix4dFromJsonArray</a> (Eigen::Matrix4d_u &amp;mat, const Json::Value &amp;value)</td></tr>
<tr class="separator:a3a4d0a90b42bc56b5ae5cb595c0c27b5 inherit pub_static_methods_classopen3d_1_1utility_1_1_i_json_convertible"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac27b2b52cd3d64f42e6ba8980fcd7132 inherit pub_static_methods_classopen3d_1_1utility_1_1_i_json_convertible"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1utility_1_1_i_json_convertibl#ac27b2b52cd3d64f42e6ba8980fcd7132">EigenMatrix4dToJsonArray</a> (const Eigen::Matrix4d_u &amp;mat, Json::Value &amp;value)</td></tr>
<tr class="separator:ac27b2b52cd3d64f42e6ba8980fcd7132 inherit pub_static_methods_classopen3d_1_1utility_1_1_i_json_convertible"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a55b66a1bf7c520b528d81adc68a3f51a inherit pub_static_methods_classopen3d_1_1utility_1_1_i_json_convertible"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1utility_1_1_i_json_convertibl#a55b66a1bf7c520b528d81adc68a3f51a">EigenMatrix6dFromJsonArray</a> (Eigen::Matrix6d &amp;mat, const Json::Value &amp;value)</td></tr>
<tr class="separator:a55b66a1bf7c520b528d81adc68a3f51a inherit pub_static_methods_classopen3d_1_1utility_1_1_i_json_convertible"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a84d46a8fbdecc2ce0df15a6454396068 inherit pub_static_methods_classopen3d_1_1utility_1_1_i_json_convertible"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1utility_1_1_i_json_convertibl#a84d46a8fbdecc2ce0df15a6454396068">EigenMatrix6dToJsonArray</a> (const Eigen::Matrix6d &amp;mat, Json::Value &amp;value)</td></tr>
<tr class="separator:a84d46a8fbdecc2ce0df15a6454396068 inherit pub_static_methods_classopen3d_1_1utility_1_1_i_json_convertible"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae4f1ece384c77ae3ec839c28666c3633 inherit pub_static_methods_classopen3d_1_1utility_1_1_i_json_convertible"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1utility_1_1_i_json_convertibl#ae4f1ece384c77ae3ec839c28666c3633">EigenMatrix6dFromJsonArray</a> (Eigen::Matrix6d_u &amp;mat, const Json::Value &amp;value)</td></tr>
<tr class="separator:ae4f1ece384c77ae3ec839c28666c3633 inherit pub_static_methods_classopen3d_1_1utility_1_1_i_json_convertible"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4b9ea2fed07b9cbbab565aca6b9417cd inherit pub_static_methods_classopen3d_1_1utility_1_1_i_json_convertible"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1utility_1_1_i_json_convertibl#a4b9ea2fed07b9cbbab565aca6b9417cd">EigenMatrix6dToJsonArray</a> (const Eigen::Matrix6d_u &amp;mat, Json::Value &amp;value)</td></tr>
<tr class="separator:a4b9ea2fed07b9cbbab565aca6b9417cd inherit pub_static_methods_classopen3d_1_1utility_1_1_i_json_convertible"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Data Fields</h2></td></tr>
<tr class="memitem:a7b87ff9835cf71990de834ad4fd715d4"><td class="memItemLeft" align="right" valign="top">std::unordered_map&lt; std::string, std::string &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1io_1_1_real_sense_sensor-2#a7b87ff9835cf71990de834ad4fd715d4">config_</a></td></tr>
<tr class="separator:a7b87ff9835cf71990de834ad4fd715d4"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Configuration for a RealSense camera</p>
<p>See RealSense documentation for the set of configuration values. Supported configuration options will be specific to a device and other chosen options. <a href="https://intelrealsense.github.io/librealsense/doxygen/rs__option_8h.html">https://intelrealsense.github.io/librealsense/doxygen/rs__option_8h.html</a> <a href="https://intelrealsense.github.io/librealsense/doxygen/rs__sensor_8h.html">https://intelrealsense.github.io/librealsense/doxygen/rs__sensor_8h.html</a> </p><div class="fragment"><div class="line">{</div>
<div class="line">// Pick a specific device, leave empty to pick the first available</div>
<div class="line">// device</div>
<div class="line">   {&quot;serial&quot;: &quot;&quot;},</div>
<div class="line">// pixel format for color frames</div>
<div class="line">   {&quot;color_format&quot;: &quot;RS2_FORMAT_ANY&quot;},</div>
<div class="line">// (width, height): Leave 0 to let RealSense pick a supported width or</div>
<div class="line">// height</div>
<div class="line">   {&quot;color_resolution&quot;: &quot;0,0&quot;},</div>
<div class="line">// pixel format for depth frames</div>
<div class="line">   {&quot;depth_format&quot;: &quot;RS2_FORMAT_ANY&quot;},</div>
<div class="line">// (width, height): Leave 0 to let RealSense pick a supported width or</div>
<div class="line">// height</div>
<div class="line">   {&quot;depth_resolution&quot;: &quot;0,0&quot;},</div>
<div class="line">// framerate for both color and depth streams. Leave 0 to let RealSense</div>
<div class="line">// pick a supported framerate</div>
<div class="line">   {&quot;fps&quot;: &quot;0&quot;},</div>
<div class="line">// Controls depth computation on the device. Supported values are</div>
<div class="line">// specific to device family (SR300, RS400, L500). Leave empty to pick</div>
<div class="line">// the default.</div>
<div class="line">   {&quot;visual_preset&quot;: &quot;&quot;}</div>
<div class="line">}</div>
</div><!-- fragment --> </div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a278b9f89a9b18a6c26cf19c6c5a9e3c7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a278b9f89a9b18a6c26cf19c6c5a9e3c7">&#9670;&nbsp;</a></span>RealSenseSensorConfig() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">open3d::t::io::RealSenseSensorConfig::RealSenseSensorConfig </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Default constructor, default configs will be used. </p>

</div>
</div>
<a id="ab6a869209bb928bb27b51da482c482f6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab6a869209bb928bb27b51da482c482f6">&#9670;&nbsp;</a></span>RealSenseSensorConfig() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">open3d::t::io::RealSenseSensorConfig::RealSenseSensorConfig </td>
          <td>(</td>
          <td class="paramtype">const std::unordered_map&lt; std::string, std::string &gt; &amp;&#160;</td>
          <td class="paramname"><em>config</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initialize config with a map. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a5692656328cba3a103ca07d060551410"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5692656328cba3a103ca07d060551410">&#9670;&nbsp;</a></span>ConvertFromJsonValue()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool open3d::t::io::RealSenseSensorConfig::ConvertFromJsonValue </td>
          <td>(</td>
          <td class="paramtype">const Json::Value &amp;&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classopen3d_1_1utility_1_1_i_json_convertibl#a42bfd942fd44e0318fa6a12866ce669d">open3d::utility::IJsonConvertible</a>.</p>

</div>
</div>
<a id="af5a77ec5fa101b81991b011e00845c7e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af5a77ec5fa101b81991b011e00845c7e">&#9670;&nbsp;</a></span>ConvertToJsonValue()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool open3d::t::io::RealSenseSensorConfig::ConvertToJsonValue </td>
          <td>(</td>
          <td class="paramtype">Json::Value &amp;&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classopen3d_1_1utility_1_1_i_json_convertibl#a95e320da6916f2f0417d7fa00b20793f">open3d::utility::IJsonConvertible</a>.</p>

</div>
</div>
<a id="a959fd19a9d4e54d71971dc5a7455abc5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a959fd19a9d4e54d71971dc5a7455abc5">&#9670;&nbsp;</a></span>ConvertToNativeConfig()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">rs2::config open3d::t::io::RealSenseSensorConfig::ConvertToNativeConfig </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Convert to RealSense config. </p>

</div>
</div>
<a id="a76ce1c3e008c23930b330d514634c216"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a76ce1c3e008c23930b330d514634c216">&#9670;&nbsp;</a></span>get_dtype_channels()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::pair&lt; <a class="el" href="classopen3d_1_1core_1_1_dtype.html">core::Dtype</a>, uint8_t &gt; open3d::t::io::RealSenseSensorConfig::get_dtype_channels </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>rs2_format_enum</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Convert rs2_format enum to Open3D Dtype and number of channels </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">rs2_format_enum</td><td>An int is accepted instead of rs2_format enum to prevent dependence on the realsense headers. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a1155ff2a94ca019671e59f2599c0f467"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1155ff2a94ca019671e59f2599c0f467">&#9670;&nbsp;</a></span>GetMetadataJson()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Json::Value open3d::t::io::RealSenseSensorConfig::GetMetadataJson </td>
          <td>(</td>
          <td class="paramtype">const rs2::pipeline_profile &amp;&#160;</td>
          <td class="paramname"><em>profile</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get metadata for a streaming RealSense camera or bag file. </p>

</div>
</div>
<a id="a9491581be8ee4c81d50f7e5a6c2cebea"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9491581be8ee4c81d50f7e5a6c2cebea">&#9670;&nbsp;</a></span>GetPixelDtypes()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::t::io::RealSenseSensorConfig::GetPixelDtypes </td>
          <td>(</td>
          <td class="paramtype">const rs2::pipeline_profile &amp;&#160;</td>
          <td class="paramname"><em>profile</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1t_1_1io_1_1_r_g_b_d_video_met">RGBDVideoMetadata</a> &amp;&#160;</td>
          <td class="paramname"><em>metadata</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Get pixel data types for color and depth streams. These will be set in metadata.color_dt_, metadata.color_channels_ and metadata.depth_dt_ </p>

</div>
</div>
<h2 class="groupheader">Field Documentation</h2>
<a id="a7b87ff9835cf71990de834ad4fd715d4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7b87ff9835cf71990de834ad4fd715d4">&#9670;&nbsp;</a></span>config_</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::unordered_map&lt;std::string, std::string&gt; open3d::t::io::RealSenseSensorConfig::config_</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/runner/work/Open3D/Open3D/cpp/open3d/t/io/sensor/realsense/<a class="el" href="_real_sense_sensor_config_8h_source.378.dela">RealSenseSensorConfig.h (9238339 (Tue Mar 14 18:49:09 2023 -0700))</a></li>
<li>/home/runner/work/Open3D/Open3D/cpp/open3d/t/io/sensor/realsense/<a class="el" href="_real_sense_sensor_config_8cpp.html">RealSenseSensorConfig.cpp (9238339 (Tue Mar 14 18:49:09 2023 -0700))</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1
</small></address>
</body>

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/classopen3d_1_1t_1_1io_1_1_real_sense_sensor_config.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 10:53:41 GMT -->
</html>
