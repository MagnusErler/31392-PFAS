<!-- HTML header for doxygen 1.8.20-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/classopen3d_1_1t_1_1geometry_1_1kernel_1_1_t_array_indexer.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 11:02:14 GMT -->
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Open3D (C++ API): open3d::t::geometry::kernel::TArrayIndexer&lt; index_t &gt; Class Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js", "TeX/AMSmath.html", "TeX/AMSsymbols.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="../../../../cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-3TQPKGV6Z3"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());
  gtag('config', 'G-3TQPKGV6Z3');
</script>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="open3d_logo.ico"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Open3D (C++ API)
   &#160;<span id="projectnumber">0.17.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.html');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.html','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceopen3d.html">open3d</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1t.html">t</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1t_1_1geometry.html">geometry</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel.4">kernel</a></li><li class="navelem"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1kernel_1_1_t-2">TArrayIndexer</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">open3d::t::geometry::kernel::TArrayIndexer&lt; index_t &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_geometry_indexer_8h_source.html">GeometryIndexer.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a1336f4354123fa5fe83755bdf754a9f0"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1kernel_1_1_t-2#a1336f4354123fa5fe83755bdf754a9f0">TArrayIndexer</a> ()</td></tr>
<tr class="separator:a1336f4354123fa5fe83755bdf754a9f0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3aa17b1fc9815644ea600c8525f2cfa9"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1kernel_1_1_t-2#a3aa17b1fc9815644ea600c8525f2cfa9">TArrayIndexer</a> (const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;ndarray, index_t active_dims)</td></tr>
<tr class="separator:a3aa17b1fc9815644ea600c8525f2cfa9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae14ee764f2ae2ee9f8b600ac35c266f1"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1kernel_1_1_t-2#ae14ee764f2ae2ee9f8b600ac35c266f1">TArrayIndexer</a> (const <a class="el" href="classopen3d_1_1core_1_1_size_vector.3b3.dela">core::SizeVector</a> &amp;shape)</td></tr>
<tr class="memdesc:ae14ee764f2ae2ee9f8b600ac35c266f1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Only used for simple shapes.  <a href="classopen3d_1_1t_1_1geometry_1_1kernel_1_1_t-2#ae14ee764f2ae2ee9f8b600ac35c266f1">More...</a><br /></td></tr>
<tr class="separator:ae14ee764f2ae2ee9f8b600ac35c266f1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a66dc88225340efc7e88ac49a2a964978"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_c_u_d_a_utils_8h.html#a134fcda29ee61227f5883af2d33c00a1">OPEN3D_HOST_DEVICE</a> index_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1kernel_1_1_t-2#a66dc88225340efc7e88ac49a2a964978">ElementByteSize</a> ()</td></tr>
<tr class="separator:a66dc88225340efc7e88ac49a2a964978"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaf2eead00a9ef0d619f63d6c3cd50a77"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_c_u_d_a_utils_8h.html#a134fcda29ee61227f5883af2d33c00a1">OPEN3D_HOST_DEVICE</a> index_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1kernel_1_1_t-2#aaf2eead00a9ef0d619f63d6c3cd50a77">NumElements</a> ()</td></tr>
<tr class="separator:aaf2eead00a9ef0d619f63d6c3cd50a77"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d319b0541f70dbf1105cf47cd1bbca0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_c_u_d_a_utils_8h.html#a134fcda29ee61227f5883af2d33c00a1">OPEN3D_HOST_DEVICE</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1kernel_1_1_t-2#a3d319b0541f70dbf1105cf47cd1bbca0">CoordToWorkload</a> (index_t x_in, index_t y_in, index_t *workload) const</td></tr>
<tr class="memdesc:a3d319b0541f70dbf1105cf47cd1bbca0"><td class="mdescLeft">&#160;</td><td class="mdescRight">2D coordinate =&gt; workload  <a href="classopen3d_1_1t_1_1geometry_1_1kernel_1_1_t-2#a3d319b0541f70dbf1105cf47cd1bbca0">More...</a><br /></td></tr>
<tr class="separator:a3d319b0541f70dbf1105cf47cd1bbca0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9629307082de68156a831729d7ae6868"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_c_u_d_a_utils_8h.html#a134fcda29ee61227f5883af2d33c00a1">OPEN3D_HOST_DEVICE</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1kernel_1_1_t-2#a9629307082de68156a831729d7ae6868">CoordToWorkload</a> (index_t x_in, index_t y_in, index_t z_in, index_t *workload) const</td></tr>
<tr class="memdesc:a9629307082de68156a831729d7ae6868"><td class="mdescLeft">&#160;</td><td class="mdescRight">3D coordinate =&gt; workload  <a href="classopen3d_1_1t_1_1geometry_1_1kernel_1_1_t-2#a9629307082de68156a831729d7ae6868">More...</a><br /></td></tr>
<tr class="separator:a9629307082de68156a831729d7ae6868"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a18d9c4bf35063cc109fb188b0f9992cf"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_c_u_d_a_utils_8h.html#a134fcda29ee61227f5883af2d33c00a1">OPEN3D_HOST_DEVICE</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1kernel_1_1_t-2#a18d9c4bf35063cc109fb188b0f9992cf">CoordToWorkload</a> (index_t x_in, index_t y_in, index_t z_in, index_t t_in, index_t *workload) const</td></tr>
<tr class="memdesc:a18d9c4bf35063cc109fb188b0f9992cf"><td class="mdescLeft">&#160;</td><td class="mdescRight">4D coordinate =&gt; workload  <a href="classopen3d_1_1t_1_1geometry_1_1kernel_1_1_t-2#a18d9c4bf35063cc109fb188b0f9992cf">More...</a><br /></td></tr>
<tr class="separator:a18d9c4bf35063cc109fb188b0f9992cf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d6ece8e2209150c8f71c63d38c6a229"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_c_u_d_a_utils_8h.html#a134fcda29ee61227f5883af2d33c00a1">OPEN3D_HOST_DEVICE</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1kernel_1_1_t-2#a3d6ece8e2209150c8f71c63d38c6a229">WorkloadToCoord</a> (index_t workload, index_t *x_out, index_t *y_out) const</td></tr>
<tr class="memdesc:a3d6ece8e2209150c8f71c63d38c6a229"><td class="mdescLeft">&#160;</td><td class="mdescRight">Workload =&gt; 2D coordinate.  <a href="classopen3d_1_1t_1_1geometry_1_1kernel_1_1_t-2#a3d6ece8e2209150c8f71c63d38c6a229">More...</a><br /></td></tr>
<tr class="separator:a3d6ece8e2209150c8f71c63d38c6a229"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adf4015cff5a05e1c7437f0cafe9488c4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_c_u_d_a_utils_8h.html#a134fcda29ee61227f5883af2d33c00a1">OPEN3D_HOST_DEVICE</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1kernel_1_1_t-2#adf4015cff5a05e1c7437f0cafe9488c4">WorkloadToCoord</a> (index_t workload, index_t *x_out, index_t *y_out, index_t *z_out) const</td></tr>
<tr class="memdesc:adf4015cff5a05e1c7437f0cafe9488c4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Workload =&gt; 3D coordinate.  <a href="classopen3d_1_1t_1_1geometry_1_1kernel_1_1_t-2#adf4015cff5a05e1c7437f0cafe9488c4">More...</a><br /></td></tr>
<tr class="separator:adf4015cff5a05e1c7437f0cafe9488c4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a100e290272935bc412df38ae6005b692"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_c_u_d_a_utils_8h.html#a134fcda29ee61227f5883af2d33c00a1">OPEN3D_HOST_DEVICE</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1kernel_1_1_t-2#a100e290272935bc412df38ae6005b692">WorkloadToCoord</a> (index_t workload, index_t *x_out, index_t *y_out, index_t *z_out, index_t *t_out) const</td></tr>
<tr class="memdesc:a100e290272935bc412df38ae6005b692"><td class="mdescLeft">&#160;</td><td class="mdescRight">Workload =&gt; 4D coordinate.  <a href="classopen3d_1_1t_1_1geometry_1_1kernel_1_1_t-2#a100e290272935bc412df38ae6005b692">More...</a><br /></td></tr>
<tr class="separator:a100e290272935bc412df38ae6005b692"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a10ee178584535017f69379c89689fbf8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_c_u_d_a_utils_8h.html#a134fcda29ee61227f5883af2d33c00a1">OPEN3D_HOST_DEVICE</a> bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1kernel_1_1_t-2#a10ee178584535017f69379c89689fbf8">InBoundary</a> (float x, float y) const</td></tr>
<tr class="separator:a10ee178584535017f69379c89689fbf8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8c0f02b0a5a046edae9fcb5fc898374c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_c_u_d_a_utils_8h.html#a134fcda29ee61227f5883af2d33c00a1">OPEN3D_HOST_DEVICE</a> bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1kernel_1_1_t-2#a8c0f02b0a5a046edae9fcb5fc898374c">InBoundary</a> (float x, float y, float z) const</td></tr>
<tr class="separator:a8c0f02b0a5a046edae9fcb5fc898374c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acf8e374018415d200003aeaae8c6bc8f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_c_u_d_a_utils_8h.html#a134fcda29ee61227f5883af2d33c00a1">OPEN3D_HOST_DEVICE</a> bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1kernel_1_1_t-2#acf8e374018415d200003aeaae8c6bc8f">InBoundary</a> (float x, float y, float z, float t) const</td></tr>
<tr class="separator:acf8e374018415d200003aeaae8c6bc8f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa0cf66bf42a17228803cc54f160c1578"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_c_u_d_a_utils_8h.html#a134fcda29ee61227f5883af2d33c00a1">OPEN3D_HOST_DEVICE</a> index_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1kernel_1_1_t-2#aa0cf66bf42a17228803cc54f160c1578">GetShape</a> (int i) const</td></tr>
<tr class="separator:aa0cf66bf42a17228803cc54f160c1578"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a60a6d270803ae991a7b5673c0b017400"><td class="memItemLeft" align="right" valign="top"><a class="el" href="_c_u_d_a_utils_8h.html#a134fcda29ee61227f5883af2d33c00a1">OPEN3D_HOST_DEVICE</a> void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1kernel_1_1_t-2#a60a6d270803ae991a7b5673c0b017400">GetDataPtr</a> () const</td></tr>
<tr class="separator:a60a6d270803ae991a7b5673c0b017400"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adb83c438a1bcd5d19f53dbae144a86db"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:adb83c438a1bcd5d19f53dbae144a86db"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="_c_u_d_a_utils_8h.html#a134fcda29ee61227f5883af2d33c00a1">OPEN3D_HOST_DEVICE</a> T *&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1kernel_1_1_t-2#adb83c438a1bcd5d19f53dbae144a86db">GetDataPtr</a> (index_t x) const</td></tr>
<tr class="separator:adb83c438a1bcd5d19f53dbae144a86db"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7af4aadd85f2adccdbd1661f3bc11aea"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a7af4aadd85f2adccdbd1661f3bc11aea"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="_c_u_d_a_utils_8h.html#a134fcda29ee61227f5883af2d33c00a1">OPEN3D_HOST_DEVICE</a> T *&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1kernel_1_1_t-2#a7af4aadd85f2adccdbd1661f3bc11aea">GetDataPtr</a> (index_t x, index_t y) const</td></tr>
<tr class="separator:a7af4aadd85f2adccdbd1661f3bc11aea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac402baa5228c3777ed27d6f4b38d8639"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:ac402baa5228c3777ed27d6f4b38d8639"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="_c_u_d_a_utils_8h.html#a134fcda29ee61227f5883af2d33c00a1">OPEN3D_HOST_DEVICE</a> T *&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1kernel_1_1_t-2#ac402baa5228c3777ed27d6f4b38d8639">GetDataPtr</a> (index_t x, index_t y, index_t z) const</td></tr>
<tr class="separator:ac402baa5228c3777ed27d6f4b38d8639"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5ef7205e9db103ae1fd7850473066a92"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a5ef7205e9db103ae1fd7850473066a92"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="_c_u_d_a_utils_8h.html#a134fcda29ee61227f5883af2d33c00a1">OPEN3D_HOST_DEVICE</a> T *&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1kernel_1_1_t-2#a5ef7205e9db103ae1fd7850473066a92">GetDataPtr</a> (index_t x, index_t y, index_t z, index_t t) const</td></tr>
<tr class="separator:a5ef7205e9db103ae1fd7850473066a92"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a1336f4354123fa5fe83755bdf754a9f0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1336f4354123fa5fe83755bdf754a9f0">&#9670;&nbsp;</a></span>TArrayIndexer() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename index_t &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1kernel_1_1_t-2">open3d::t::geometry::kernel::TArrayIndexer</a>&lt; index_t &gt;::<a class="el" href="classopen3d_1_1t_1_1geometry_1_1kernel_1_1_t-2">TArrayIndexer</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a3aa17b1fc9815644ea600c8525f2cfa9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3aa17b1fc9815644ea600c8525f2cfa9">&#9670;&nbsp;</a></span>TArrayIndexer() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename index_t &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1kernel_1_1_t-2">open3d::t::geometry::kernel::TArrayIndexer</a>&lt; index_t &gt;::<a class="el" href="classopen3d_1_1t_1_1geometry_1_1kernel_1_1_t-2">TArrayIndexer</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>ndarray</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">index_t&#160;</td>
          <td class="paramname"><em>active_dims</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ae14ee764f2ae2ee9f8b600ac35c266f1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae14ee764f2ae2ee9f8b600ac35c266f1">&#9670;&nbsp;</a></span>TArrayIndexer() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename index_t &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1kernel_1_1_t-2">open3d::t::geometry::kernel::TArrayIndexer</a>&lt; index_t &gt;::<a class="el" href="classopen3d_1_1t_1_1geometry_1_1kernel_1_1_t-2">TArrayIndexer</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_size_vector.3b3.dela">core::SizeVector</a> &amp;&#160;</td>
          <td class="paramname"><em>shape</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Only used for simple shapes. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a3d319b0541f70dbf1105cf47cd1bbca0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3d319b0541f70dbf1105cf47cd1bbca0">&#9670;&nbsp;</a></span>CoordToWorkload() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename index_t &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="_c_u_d_a_utils_8h.html#a134fcda29ee61227f5883af2d33c00a1">OPEN3D_HOST_DEVICE</a> void <a class="el" href="classopen3d_1_1t_1_1geometry_1_1kernel_1_1_t-2">open3d::t::geometry::kernel::TArrayIndexer</a>&lt; index_t &gt;::CoordToWorkload </td>
          <td>(</td>
          <td class="paramtype">index_t&#160;</td>
          <td class="paramname"><em>x_in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">index_t&#160;</td>
          <td class="paramname"><em>y_in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">index_t *&#160;</td>
          <td class="paramname"><em>workload</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>2D coordinate =&gt; workload </p>

</div>
</div>
<a id="a9629307082de68156a831729d7ae6868"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9629307082de68156a831729d7ae6868">&#9670;&nbsp;</a></span>CoordToWorkload() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename index_t &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="_c_u_d_a_utils_8h.html#a134fcda29ee61227f5883af2d33c00a1">OPEN3D_HOST_DEVICE</a> void <a class="el" href="classopen3d_1_1t_1_1geometry_1_1kernel_1_1_t-2">open3d::t::geometry::kernel::TArrayIndexer</a>&lt; index_t &gt;::CoordToWorkload </td>
          <td>(</td>
          <td class="paramtype">index_t&#160;</td>
          <td class="paramname"><em>x_in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">index_t&#160;</td>
          <td class="paramname"><em>y_in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">index_t&#160;</td>
          <td class="paramname"><em>z_in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">index_t *&#160;</td>
          <td class="paramname"><em>workload</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>3D coordinate =&gt; workload </p>

</div>
</div>
<a id="a18d9c4bf35063cc109fb188b0f9992cf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a18d9c4bf35063cc109fb188b0f9992cf">&#9670;&nbsp;</a></span>CoordToWorkload() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename index_t &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="_c_u_d_a_utils_8h.html#a134fcda29ee61227f5883af2d33c00a1">OPEN3D_HOST_DEVICE</a> void <a class="el" href="classopen3d_1_1t_1_1geometry_1_1kernel_1_1_t-2">open3d::t::geometry::kernel::TArrayIndexer</a>&lt; index_t &gt;::CoordToWorkload </td>
          <td>(</td>
          <td class="paramtype">index_t&#160;</td>
          <td class="paramname"><em>x_in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">index_t&#160;</td>
          <td class="paramname"><em>y_in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">index_t&#160;</td>
          <td class="paramname"><em>z_in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">index_t&#160;</td>
          <td class="paramname"><em>t_in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">index_t *&#160;</td>
          <td class="paramname"><em>workload</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>4D coordinate =&gt; workload </p>

</div>
</div>
<a id="a66dc88225340efc7e88ac49a2a964978"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a66dc88225340efc7e88ac49a2a964978">&#9670;&nbsp;</a></span>ElementByteSize()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename index_t &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="_c_u_d_a_utils_8h.html#a134fcda29ee61227f5883af2d33c00a1">OPEN3D_HOST_DEVICE</a> index_t <a class="el" href="classopen3d_1_1t_1_1geometry_1_1kernel_1_1_t-2">open3d::t::geometry::kernel::TArrayIndexer</a>&lt; index_t &gt;::ElementByteSize </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a60a6d270803ae991a7b5673c0b017400"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a60a6d270803ae991a7b5673c0b017400">&#9670;&nbsp;</a></span>GetDataPtr() <span class="overload">[1/5]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename index_t &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="_c_u_d_a_utils_8h.html#a134fcda29ee61227f5883af2d33c00a1">OPEN3D_HOST_DEVICE</a> void* <a class="el" href="classopen3d_1_1t_1_1geometry_1_1kernel_1_1_t-2">open3d::t::geometry::kernel::TArrayIndexer</a>&lt; index_t &gt;::GetDataPtr </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="adb83c438a1bcd5d19f53dbae144a86db"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adb83c438a1bcd5d19f53dbae144a86db">&#9670;&nbsp;</a></span>GetDataPtr() <span class="overload">[2/5]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename index_t &gt; </div>
<div class="memtemplate">
template&lt;typename T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="_c_u_d_a_utils_8h.html#a134fcda29ee61227f5883af2d33c00a1">OPEN3D_HOST_DEVICE</a> T* <a class="el" href="classopen3d_1_1t_1_1geometry_1_1kernel_1_1_t-2">open3d::t::geometry::kernel::TArrayIndexer</a>&lt; index_t &gt;::GetDataPtr </td>
          <td>(</td>
          <td class="paramtype">index_t&#160;</td>
          <td class="paramname"><em>x</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a7af4aadd85f2adccdbd1661f3bc11aea"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7af4aadd85f2adccdbd1661f3bc11aea">&#9670;&nbsp;</a></span>GetDataPtr() <span class="overload">[3/5]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename index_t &gt; </div>
<div class="memtemplate">
template&lt;typename T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="_c_u_d_a_utils_8h.html#a134fcda29ee61227f5883af2d33c00a1">OPEN3D_HOST_DEVICE</a> T* <a class="el" href="classopen3d_1_1t_1_1geometry_1_1kernel_1_1_t-2">open3d::t::geometry::kernel::TArrayIndexer</a>&lt; index_t &gt;::GetDataPtr </td>
          <td>(</td>
          <td class="paramtype">index_t&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">index_t&#160;</td>
          <td class="paramname"><em>y</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ac402baa5228c3777ed27d6f4b38d8639"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac402baa5228c3777ed27d6f4b38d8639">&#9670;&nbsp;</a></span>GetDataPtr() <span class="overload">[4/5]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename index_t &gt; </div>
<div class="memtemplate">
template&lt;typename T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="_c_u_d_a_utils_8h.html#a134fcda29ee61227f5883af2d33c00a1">OPEN3D_HOST_DEVICE</a> T* <a class="el" href="classopen3d_1_1t_1_1geometry_1_1kernel_1_1_t-2">open3d::t::geometry::kernel::TArrayIndexer</a>&lt; index_t &gt;::GetDataPtr </td>
          <td>(</td>
          <td class="paramtype">index_t&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">index_t&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">index_t&#160;</td>
          <td class="paramname"><em>z</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a5ef7205e9db103ae1fd7850473066a92"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5ef7205e9db103ae1fd7850473066a92">&#9670;&nbsp;</a></span>GetDataPtr() <span class="overload">[5/5]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename index_t &gt; </div>
<div class="memtemplate">
template&lt;typename T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="_c_u_d_a_utils_8h.html#a134fcda29ee61227f5883af2d33c00a1">OPEN3D_HOST_DEVICE</a> T* <a class="el" href="classopen3d_1_1t_1_1geometry_1_1kernel_1_1_t-2">open3d::t::geometry::kernel::TArrayIndexer</a>&lt; index_t &gt;::GetDataPtr </td>
          <td>(</td>
          <td class="paramtype">index_t&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">index_t&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">index_t&#160;</td>
          <td class="paramname"><em>z</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">index_t&#160;</td>
          <td class="paramname"><em>t</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aa0cf66bf42a17228803cc54f160c1578"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa0cf66bf42a17228803cc54f160c1578">&#9670;&nbsp;</a></span>GetShape()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename index_t &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="_c_u_d_a_utils_8h.html#a134fcda29ee61227f5883af2d33c00a1">OPEN3D_HOST_DEVICE</a> index_t <a class="el" href="classopen3d_1_1t_1_1geometry_1_1kernel_1_1_t-2">open3d::t::geometry::kernel::TArrayIndexer</a>&lt; index_t &gt;::GetShape </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>i</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a10ee178584535017f69379c89689fbf8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a10ee178584535017f69379c89689fbf8">&#9670;&nbsp;</a></span>InBoundary() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename index_t &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="_c_u_d_a_utils_8h.html#a134fcda29ee61227f5883af2d33c00a1">OPEN3D_HOST_DEVICE</a> bool <a class="el" href="classopen3d_1_1t_1_1geometry_1_1kernel_1_1_t-2">open3d::t::geometry::kernel::TArrayIndexer</a>&lt; index_t &gt;::InBoundary </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>y</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a8c0f02b0a5a046edae9fcb5fc898374c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8c0f02b0a5a046edae9fcb5fc898374c">&#9670;&nbsp;</a></span>InBoundary() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename index_t &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="_c_u_d_a_utils_8h.html#a134fcda29ee61227f5883af2d33c00a1">OPEN3D_HOST_DEVICE</a> bool <a class="el" href="classopen3d_1_1t_1_1geometry_1_1kernel_1_1_t-2">open3d::t::geometry::kernel::TArrayIndexer</a>&lt; index_t &gt;::InBoundary </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>z</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="acf8e374018415d200003aeaae8c6bc8f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acf8e374018415d200003aeaae8c6bc8f">&#9670;&nbsp;</a></span>InBoundary() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename index_t &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="_c_u_d_a_utils_8h.html#a134fcda29ee61227f5883af2d33c00a1">OPEN3D_HOST_DEVICE</a> bool <a class="el" href="classopen3d_1_1t_1_1geometry_1_1kernel_1_1_t-2">open3d::t::geometry::kernel::TArrayIndexer</a>&lt; index_t &gt;::InBoundary </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>z</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>t</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aaf2eead00a9ef0d619f63d6c3cd50a77"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaf2eead00a9ef0d619f63d6c3cd50a77">&#9670;&nbsp;</a></span>NumElements()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename index_t &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="_c_u_d_a_utils_8h.html#a134fcda29ee61227f5883af2d33c00a1">OPEN3D_HOST_DEVICE</a> index_t <a class="el" href="classopen3d_1_1t_1_1geometry_1_1kernel_1_1_t-2">open3d::t::geometry::kernel::TArrayIndexer</a>&lt; index_t &gt;::NumElements </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a3d6ece8e2209150c8f71c63d38c6a229"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3d6ece8e2209150c8f71c63d38c6a229">&#9670;&nbsp;</a></span>WorkloadToCoord() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename index_t &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="_c_u_d_a_utils_8h.html#a134fcda29ee61227f5883af2d33c00a1">OPEN3D_HOST_DEVICE</a> void <a class="el" href="classopen3d_1_1t_1_1geometry_1_1kernel_1_1_t-2">open3d::t::geometry::kernel::TArrayIndexer</a>&lt; index_t &gt;::WorkloadToCoord </td>
          <td>(</td>
          <td class="paramtype">index_t&#160;</td>
          <td class="paramname"><em>workload</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">index_t *&#160;</td>
          <td class="paramname"><em>x_out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">index_t *&#160;</td>
          <td class="paramname"><em>y_out</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Workload =&gt; 2D coordinate. </p>

</div>
</div>
<a id="adf4015cff5a05e1c7437f0cafe9488c4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adf4015cff5a05e1c7437f0cafe9488c4">&#9670;&nbsp;</a></span>WorkloadToCoord() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename index_t &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="_c_u_d_a_utils_8h.html#a134fcda29ee61227f5883af2d33c00a1">OPEN3D_HOST_DEVICE</a> void <a class="el" href="classopen3d_1_1t_1_1geometry_1_1kernel_1_1_t-2">open3d::t::geometry::kernel::TArrayIndexer</a>&lt; index_t &gt;::WorkloadToCoord </td>
          <td>(</td>
          <td class="paramtype">index_t&#160;</td>
          <td class="paramname"><em>workload</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">index_t *&#160;</td>
          <td class="paramname"><em>x_out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">index_t *&#160;</td>
          <td class="paramname"><em>y_out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">index_t *&#160;</td>
          <td class="paramname"><em>z_out</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Workload =&gt; 3D coordinate. </p>

</div>
</div>
<a id="a100e290272935bc412df38ae6005b692"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a100e290272935bc412df38ae6005b692">&#9670;&nbsp;</a></span>WorkloadToCoord() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename index_t &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="_c_u_d_a_utils_8h.html#a134fcda29ee61227f5883af2d33c00a1">OPEN3D_HOST_DEVICE</a> void <a class="el" href="classopen3d_1_1t_1_1geometry_1_1kernel_1_1_t-2">open3d::t::geometry::kernel::TArrayIndexer</a>&lt; index_t &gt;::WorkloadToCoord </td>
          <td>(</td>
          <td class="paramtype">index_t&#160;</td>
          <td class="paramname"><em>workload</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">index_t *&#160;</td>
          <td class="paramname"><em>x_out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">index_t *&#160;</td>
          <td class="paramname"><em>y_out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">index_t *&#160;</td>
          <td class="paramname"><em>z_out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">index_t *&#160;</td>
          <td class="paramname"><em>t_out</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Workload =&gt; 4D coordinate. </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>/home/runner/work/Open3D/Open3D/cpp/open3d/t/geometry/kernel/<a class="el" href="_geometry_indexer_8h_source.html">GeometryIndexer.h (9238339 (Tue Mar 14 18:49:09 2023 -0700))</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1
</small></address>
</body>

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/classopen3d_1_1t_1_1geometry_1_1kernel_1_1_t_array_indexer.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 11:02:14 GMT -->
</html>
