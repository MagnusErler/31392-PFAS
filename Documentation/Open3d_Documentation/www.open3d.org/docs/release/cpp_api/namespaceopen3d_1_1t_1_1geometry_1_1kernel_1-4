<!-- HTML header for doxygen 1.8.20-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/namespaceopen3d_1_1t_1_1geometry_1_1kernel_1_1transform.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 11:02:13 GMT -->
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Open3D (C++ API): open3d::t::geometry::kernel::transform Namespace Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js", "TeX/AMSmath.html", "TeX/AMSsymbols.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="../../../../cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-3TQPKGV6Z3"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());
  gtag('config', 'G-3TQPKGV6Z3');
</script>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="open3d_logo.ico"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Open3D (C++ API)
   &#160;<span id="projectnumber">0.17.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.html');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.html','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceopen3d.html">open3d</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1t.html">t</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1t_1_1geometry.html">geometry</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel.4">kernel</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-4">transform</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">open3d::t::geometry::kernel::transform Namespace Reference</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a18773783b07c06eb02b4ba17e0081535"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-4#a18773783b07c06eb02b4ba17e0081535">TransformPoints</a> (const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;transformation, <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;<a class="el" href="io_2file__format_2_file_p_c_d_8cpp.375.delay#af7f8f4a4e39e09fdb5e9f02330ecabef">points</a>)</td></tr>
<tr class="separator:a18773783b07c06eb02b4ba17e0081535"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acf71d9bca148c611296c335f72290115"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-4#acf71d9bca148c611296c335f72290115">TransformNormals</a> (const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;transformation, <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;normals)</td></tr>
<tr class="separator:acf71d9bca148c611296c335f72290115"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8360badce5b2b91010dc05854fd73846"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-4#a8360badce5b2b91010dc05854fd73846">RotatePoints</a> (const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;R, <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;<a class="el" href="io_2file__format_2_file_p_c_d_8cpp.375.delay#af7f8f4a4e39e09fdb5e9f02330ecabef">points</a>, const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;center)</td></tr>
<tr class="separator:a8360badce5b2b91010dc05854fd73846"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a869eb2722c39b5d5756dc1fefe262097"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-4#a869eb2722c39b5d5756dc1fefe262097">RotateNormals</a> (const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;R, <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;normals)</td></tr>
<tr class="separator:a869eb2722c39b5d5756dc1fefe262097"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7dbfe8d8cb417f6356f9174c5704d62e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-4#a7dbfe8d8cb417f6356f9174c5704d62e">TransformPointsCPU</a> (const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;transformation, <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;<a class="el" href="io_2file__format_2_file_p_c_d_8cpp.375.delay#af7f8f4a4e39e09fdb5e9f02330ecabef">points</a>)</td></tr>
<tr class="separator:a7dbfe8d8cb417f6356f9174c5704d62e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9dc1c871f75db443bbd7eff419df6bac"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-4#a9dc1c871f75db443bbd7eff419df6bac">TransformNormalsCPU</a> (const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;transformation, <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;normals)</td></tr>
<tr class="separator:a9dc1c871f75db443bbd7eff419df6bac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a04649948be5d7360cb5631065bf5c575"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-4#a04649948be5d7360cb5631065bf5c575">RotatePointsCPU</a> (const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;R, <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;<a class="el" href="io_2file__format_2_file_p_c_d_8cpp.375.delay#af7f8f4a4e39e09fdb5e9f02330ecabef">points</a>, const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;center)</td></tr>
<tr class="separator:a04649948be5d7360cb5631065bf5c575"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a83cabf4c4bf1f74a2fbff4b1c6931e78"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-4#a83cabf4c4bf1f74a2fbff4b1c6931e78">RotateNormalsCPU</a> (const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;R, <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;normals)</td></tr>
<tr class="separator:a83cabf4c4bf1f74a2fbff4b1c6931e78"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab1252794adcf09c248fe05f832044702"><td class="memTemplParams" colspan="2">template&lt;typename scalar_t &gt; </td></tr>
<tr class="memitem:ab1252794adcf09c248fe05f832044702"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="_c_u_d_a_utils_8h.html#a134fcda29ee61227f5883af2d33c00a1">OPEN3D_HOST_DEVICE</a> <a class="el" href="_c_u_d_a_utils_8h.html#aa07d7d5ed80e72059d1ae591df918e39">OPEN3D_FORCE_INLINE</a> void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-4#ab1252794adcf09c248fe05f832044702">TransformPointsKernel</a> (const scalar_t *transformation_ptr, scalar_t *points_ptr)</td></tr>
<tr class="separator:ab1252794adcf09c248fe05f832044702"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaaeaebc2a3274766732956b6cdc86749"><td class="memTemplParams" colspan="2">template&lt;typename scalar_t &gt; </td></tr>
<tr class="memitem:aaaeaebc2a3274766732956b6cdc86749"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="_c_u_d_a_utils_8h.html#a134fcda29ee61227f5883af2d33c00a1">OPEN3D_HOST_DEVICE</a> <a class="el" href="_c_u_d_a_utils_8h.html#aa07d7d5ed80e72059d1ae591df918e39">OPEN3D_FORCE_INLINE</a> void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-4#aaaeaebc2a3274766732956b6cdc86749">TransformNormalsKernel</a> (const scalar_t *transformation_ptr, scalar_t *normals_ptr)</td></tr>
<tr class="separator:aaaeaebc2a3274766732956b6cdc86749"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac6a2f2ea9a2ce65ccc958ff440ed5b5a"><td class="memTemplParams" colspan="2">template&lt;typename scalar_t &gt; </td></tr>
<tr class="memitem:ac6a2f2ea9a2ce65ccc958ff440ed5b5a"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="_c_u_d_a_utils_8h.html#a134fcda29ee61227f5883af2d33c00a1">OPEN3D_HOST_DEVICE</a> <a class="el" href="_c_u_d_a_utils_8h.html#aa07d7d5ed80e72059d1ae591df918e39">OPEN3D_FORCE_INLINE</a> void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-4#ac6a2f2ea9a2ce65ccc958ff440ed5b5a">RotatePointsKernel</a> (const scalar_t *R_ptr, scalar_t *points_ptr, const scalar_t *center)</td></tr>
<tr class="separator:ac6a2f2ea9a2ce65ccc958ff440ed5b5a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aed51317383195319b05cda92173b7586"><td class="memTemplParams" colspan="2">template&lt;typename scalar_t &gt; </td></tr>
<tr class="memitem:aed51317383195319b05cda92173b7586"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="_c_u_d_a_utils_8h.html#a134fcda29ee61227f5883af2d33c00a1">OPEN3D_HOST_DEVICE</a> <a class="el" href="_c_u_d_a_utils_8h.html#aa07d7d5ed80e72059d1ae591df918e39">OPEN3D_FORCE_INLINE</a> void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespaceopen3d_1_1t_1_1geometry_1_1kernel_1-4#aed51317383195319b05cda92173b7586">RotateNormalsKernel</a> (const scalar_t *R_ptr, scalar_t *normals_ptr)</td></tr>
<tr class="separator:aed51317383195319b05cda92173b7586"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a id="a869eb2722c39b5d5756dc1fefe262097"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a869eb2722c39b5d5756dc1fefe262097">&#9670;&nbsp;</a></span>RotateNormals()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::t::geometry::kernel::transform::RotateNormals </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>R</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>normals</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a83cabf4c4bf1f74a2fbff4b1c6931e78"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a83cabf4c4bf1f74a2fbff4b1c6931e78">&#9670;&nbsp;</a></span>RotateNormalsCPU()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::t::geometry::kernel::transform::RotateNormalsCPU </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>R</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>normals</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="aed51317383195319b05cda92173b7586"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aed51317383195319b05cda92173b7586">&#9670;&nbsp;</a></span>RotateNormalsKernel()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename scalar_t &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="_c_u_d_a_utils_8h.html#a134fcda29ee61227f5883af2d33c00a1">OPEN3D_HOST_DEVICE</a> <a class="el" href="_c_u_d_a_utils_8h.html#aa07d7d5ed80e72059d1ae591df918e39">OPEN3D_FORCE_INLINE</a> void open3d::t::geometry::kernel::transform::RotateNormalsKernel </td>
          <td>(</td>
          <td class="paramtype">const scalar_t *&#160;</td>
          <td class="paramname"><em>R_ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">scalar_t *&#160;</td>
          <td class="paramname"><em>normals_ptr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a8360badce5b2b91010dc05854fd73846"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8360badce5b2b91010dc05854fd73846">&#9670;&nbsp;</a></span>RotatePoints()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::t::geometry::kernel::transform::RotatePoints </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>R</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>points</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>center</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a04649948be5d7360cb5631065bf5c575"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a04649948be5d7360cb5631065bf5c575">&#9670;&nbsp;</a></span>RotatePointsCPU()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::t::geometry::kernel::transform::RotatePointsCPU </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>R</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>points</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>center</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ac6a2f2ea9a2ce65ccc958ff440ed5b5a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac6a2f2ea9a2ce65ccc958ff440ed5b5a">&#9670;&nbsp;</a></span>RotatePointsKernel()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename scalar_t &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="_c_u_d_a_utils_8h.html#a134fcda29ee61227f5883af2d33c00a1">OPEN3D_HOST_DEVICE</a> <a class="el" href="_c_u_d_a_utils_8h.html#aa07d7d5ed80e72059d1ae591df918e39">OPEN3D_FORCE_INLINE</a> void open3d::t::geometry::kernel::transform::RotatePointsKernel </td>
          <td>(</td>
          <td class="paramtype">const scalar_t *&#160;</td>
          <td class="paramname"><em>R_ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">scalar_t *&#160;</td>
          <td class="paramname"><em>points_ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const scalar_t *&#160;</td>
          <td class="paramname"><em>center</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="acf71d9bca148c611296c335f72290115"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acf71d9bca148c611296c335f72290115">&#9670;&nbsp;</a></span>TransformNormals()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::t::geometry::kernel::transform::TransformNormals </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>transformation</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>normals</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a9dc1c871f75db443bbd7eff419df6bac"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9dc1c871f75db443bbd7eff419df6bac">&#9670;&nbsp;</a></span>TransformNormalsCPU()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::t::geometry::kernel::transform::TransformNormalsCPU </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>transformation</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>normals</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="aaaeaebc2a3274766732956b6cdc86749"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaaeaebc2a3274766732956b6cdc86749">&#9670;&nbsp;</a></span>TransformNormalsKernel()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename scalar_t &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="_c_u_d_a_utils_8h.html#a134fcda29ee61227f5883af2d33c00a1">OPEN3D_HOST_DEVICE</a> <a class="el" href="_c_u_d_a_utils_8h.html#aa07d7d5ed80e72059d1ae591df918e39">OPEN3D_FORCE_INLINE</a> void open3d::t::geometry::kernel::transform::TransformNormalsKernel </td>
          <td>(</td>
          <td class="paramtype">const scalar_t *&#160;</td>
          <td class="paramname"><em>transformation_ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">scalar_t *&#160;</td>
          <td class="paramname"><em>normals_ptr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a18773783b07c06eb02b4ba17e0081535"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a18773783b07c06eb02b4ba17e0081535">&#9670;&nbsp;</a></span>TransformPoints()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::t::geometry::kernel::transform::TransformPoints </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>transformation</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>points</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a7dbfe8d8cb417f6356f9174c5704d62e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7dbfe8d8cb417f6356f9174c5704d62e">&#9670;&nbsp;</a></span>TransformPointsCPU()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::t::geometry::kernel::transform::TransformPointsCPU </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>transformation</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>points</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ab1252794adcf09c248fe05f832044702"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab1252794adcf09c248fe05f832044702">&#9670;&nbsp;</a></span>TransformPointsKernel()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename scalar_t &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="_c_u_d_a_utils_8h.html#a134fcda29ee61227f5883af2d33c00a1">OPEN3D_HOST_DEVICE</a> <a class="el" href="_c_u_d_a_utils_8h.html#aa07d7d5ed80e72059d1ae591df918e39">OPEN3D_FORCE_INLINE</a> void open3d::t::geometry::kernel::transform::TransformPointsKernel </td>
          <td>(</td>
          <td class="paramtype">const scalar_t *&#160;</td>
          <td class="paramname"><em>transformation_ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">scalar_t *&#160;</td>
          <td class="paramname"><em>points_ptr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1
</small></address>
</body>

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/namespaceopen3d_1_1t_1_1geometry_1_1kernel_1_1transform.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 11:02:13 GMT -->
</html>
