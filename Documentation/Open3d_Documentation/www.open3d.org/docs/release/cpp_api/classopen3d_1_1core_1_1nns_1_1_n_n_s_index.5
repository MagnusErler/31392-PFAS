<!-- HTML header for doxygen 1.8.20-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/classopen3d_1_1core_1_1nns_1_1_n_n_s_index.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 10:59:56 GMT -->
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Open3D (C++ API): open3d::core::nns::NNSIndex Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js", "TeX/AMSmath.html", "TeX/AMSsymbols.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="../../../../cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-3TQPKGV6Z3"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());
  gtag('config', 'G-3TQPKGV6Z3');
</script>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="open3d_logo.ico"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Open3D (C++ API)
   &#160;<span id="projectnumber">0.17.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.html');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.html','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceopen3d.html">open3d</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1core.html">core</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1core_1_1nns.html">nns</a></li><li class="navelem"><a class="el" href="classopen3d_1_1core_1_1nns_1_1_n_n_s_index.5">NNSIndex</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a>  </div>
  <div class="headertitle">
<div class="title">open3d::core::nns::NNSIndex Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_n_n_s_index_8h_source.html">NNSIndex.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for open3d::core::nns::NNSIndex:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classopen3d_1_1core_1_1nns_1_1_n_n_s_index.9" usemap="#open3d::core::nns::NNSIndex_map" alt=""/>
  <map id="open3d::core::nns::NNSIndex_map" name="open3d::core::nns::NNSIndex_map">
<area href="classopen3d_1_1core_1_1nns_1_1_fixed_radius_" title="FixedRadiusIndex for nearest neighbor range search." alt="open3d::core::nns::FixedRadiusIndex" shape="rect" coords="0,56,217,80"/>
<area href="classopen3d_1_1core_1_1nns_1_1_knn_index.548" alt="open3d::core::nns::KnnIndex" shape="rect" coords="227,56,444,80"/>
<area href="classopen3d_1_1core_1_1nns_1_1_nano_flann_in" alt="open3d::core::nns::NanoFlannIndex" shape="rect" coords="454,56,671,80"/>
  </map>
</div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ac099491c556263aa442b21ec562a2f03"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1nns_1_1_n_n_s_index.5#ac099491c556263aa442b21ec562a2f03">NNSIndex</a> ()</td></tr>
<tr class="memdesc:ac099491c556263aa442b21ec562a2f03"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default Constructor.  <a href="classopen3d_1_1core_1_1nns_1_1_n_n_s_index.5#ac099491c556263aa442b21ec562a2f03">More...</a><br /></td></tr>
<tr class="separator:ac099491c556263aa442b21ec562a2f03"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3fd86f590ec6f5e8509394405bbaa45c"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1nns_1_1_n_n_s_index.5#a3fd86f590ec6f5e8509394405bbaa45c">~NNSIndex</a> ()</td></tr>
<tr class="separator:a3fd86f590ec6f5e8509394405bbaa45c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a422164ca0d6b7d76c8252d693dcc5121"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1nns_1_1_n_n_s_index.5#a422164ca0d6b7d76c8252d693dcc5121">NNSIndex</a> (const <a class="el" href="classopen3d_1_1core_1_1nns_1_1_n_n_s_index.5">NNSIndex</a> &amp;)=delete</td></tr>
<tr class="separator:a422164ca0d6b7d76c8252d693dcc5121"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5edc90912acc1a23033b0e97d0ef59d4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1core_1_1nns_1_1_n_n_s_index.5">NNSIndex</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1nns_1_1_n_n_s_index.5#a5edc90912acc1a23033b0e97d0ef59d4">operator=</a> (const <a class="el" href="classopen3d_1_1core_1_1nns_1_1_n_n_s_index.5">NNSIndex</a> &amp;)=delete</td></tr>
<tr class="separator:a5edc90912acc1a23033b0e97d0ef59d4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9c985bdd2ed49b8ded1bee6718d3d9b6"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1nns_1_1_n_n_s_index.5#a9c985bdd2ed49b8ded1bee6718d3d9b6">SetTensorData</a> (const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a> &amp;dataset_points, const <a class="el" href="classopen3d_1_1core_1_1_dtype.html">Dtype</a> &amp;index_dtype)=0</td></tr>
<tr class="separator:a9c985bdd2ed49b8ded1bee6718d3d9b6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af8e5c6e0f53256a405acb8931812c472"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1nns_1_1_n_n_s_index.5#af8e5c6e0f53256a405acb8931812c472">SetTensorData</a> (const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a> &amp;dataset_points, double radius, const <a class="el" href="classopen3d_1_1core_1_1_dtype.html">Dtype</a> &amp;index_dtype)=0</td></tr>
<tr class="separator:af8e5c6e0f53256a405acb8931812c472"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa72184505d4e2e094097f1e053ad7408"><td class="memItemLeft" align="right" valign="top">virtual std::pair&lt; <a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a>, <a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1nns_1_1_n_n_s_index.5#aa72184505d4e2e094097f1e053ad7408">SearchKnn</a> (const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a> &amp;query_points, int knn) const =0</td></tr>
<tr class="separator:aa72184505d4e2e094097f1e053ad7408"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a95c9e0bf0697f01e59fc3d3b222c8e63"><td class="memItemLeft" align="right" valign="top">virtual std::tuple&lt; <a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a>, <a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a>, <a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1nns_1_1_n_n_s_index.5#a95c9e0bf0697f01e59fc3d3b222c8e63">SearchRadius</a> (const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a> &amp;query_points, const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a> &amp;radii, bool sort) const =0</td></tr>
<tr class="separator:a95c9e0bf0697f01e59fc3d3b222c8e63"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a85bfb03ec5eeb56d6afa882dfc09be04"><td class="memItemLeft" align="right" valign="top">virtual std::tuple&lt; <a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a>, <a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a>, <a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1nns_1_1_n_n_s_index.5#a85bfb03ec5eeb56d6afa882dfc09be04">SearchRadius</a> (const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a> &amp;query_points, double radius, bool sort) const =0</td></tr>
<tr class="separator:a85bfb03ec5eeb56d6afa882dfc09be04"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a25e1a7ff3a43e5f18e63276a319331c4"><td class="memItemLeft" align="right" valign="top">virtual std::tuple&lt; <a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a>, <a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a>, <a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1nns_1_1_n_n_s_index.5#a25e1a7ff3a43e5f18e63276a319331c4">SearchHybrid</a> (const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a> &amp;query_points, double radius, int max_knn) const =0</td></tr>
<tr class="separator:a25e1a7ff3a43e5f18e63276a319331c4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad612b474b85f127fafcc7550d5578c21"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1nns_1_1_n_n_s_index.5#ad612b474b85f127fafcc7550d5578c21">GetDimension</a> () const</td></tr>
<tr class="separator:ad612b474b85f127fafcc7550d5578c21"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a682224cf19da5fff0bf52f09677dead2"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1nns_1_1_n_n_s_index.5#a682224cf19da5fff0bf52f09677dead2">GetDatasetSize</a> () const</td></tr>
<tr class="separator:a682224cf19da5fff0bf52f09677dead2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a173f04cbf05a5c21bbaa9999821835fe"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1core_1_1_dtype.html">Dtype</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1nns_1_1_n_n_s_index.5#a173f04cbf05a5c21bbaa9999821835fe">GetDtype</a> () const</td></tr>
<tr class="separator:a173f04cbf05a5c21bbaa9999821835fe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7b57a9654b2579c43bfd1cc16534c87d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1core_1_1_device.html">Device</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1nns_1_1_n_n_s_index.5#a7b57a9654b2579c43bfd1cc16534c87d">GetDevice</a> () const</td></tr>
<tr class="separator:a7b57a9654b2579c43bfd1cc16534c87d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad1fafc945ee7204374db937deece0557"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1core_1_1_dtype.html">Dtype</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1nns_1_1_n_n_s_index.5#ad1fafc945ee7204374db937deece0557">GetIndexDtype</a> () const</td></tr>
<tr class="separator:ad1fafc945ee7204374db937deece0557"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:ab8035cf175498aa54c79367e2d7d2b4a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1nns_1_1_n_n_s_index.5#ab8035cf175498aa54c79367e2d7d2b4a">dataset_points_</a></td></tr>
<tr class="separator:ab8035cf175498aa54c79367e2d7d2b4a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a114e7b361bfc7fa5b9d613d2a4711289"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1core_1_1_dtype.html">Dtype</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1nns_1_1_n_n_s_index.5#a114e7b361bfc7fa5b9d613d2a4711289">index_dtype_</a></td></tr>
<tr class="separator:a114e7b361bfc7fa5b9d613d2a4711289"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="ac099491c556263aa442b21ec562a2f03"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac099491c556263aa442b21ec562a2f03">&#9670;&nbsp;</a></span>NNSIndex() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">open3d::core::nns::NNSIndex::NNSIndex </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Default Constructor. </p>

</div>
</div>
<a id="a3fd86f590ec6f5e8509394405bbaa45c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3fd86f590ec6f5e8509394405bbaa45c">&#9670;&nbsp;</a></span>~NNSIndex()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual open3d::core::nns::NNSIndex::~NNSIndex </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a422164ca0d6b7d76c8252d693dcc5121"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a422164ca0d6b7d76c8252d693dcc5121">&#9670;&nbsp;</a></span>NNSIndex() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">open3d::core::nns::NNSIndex::NNSIndex </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1nns_1_1_n_n_s_index.5">NNSIndex</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a682224cf19da5fff0bf52f09677dead2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a682224cf19da5fff0bf52f09677dead2">&#9670;&nbsp;</a></span>GetDatasetSize()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">size_t open3d::core::nns::NNSIndex::GetDatasetSize </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Get size of the dataset points. </p><dl class="section return"><dt>Returns</dt><dd>number of points in dataset. </dd></dl>

</div>
</div>
<a id="a7b57a9654b2579c43bfd1cc16534c87d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7b57a9654b2579c43bfd1cc16534c87d">&#9670;&nbsp;</a></span>GetDevice()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1core_1_1_device.html">Device</a> open3d::core::nns::NNSIndex::GetDevice </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Get device of the dataset points. </p><dl class="section return"><dt>Returns</dt><dd>device of dataset points. </dd></dl>

</div>
</div>
<a id="ad612b474b85f127fafcc7550d5578c21"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad612b474b85f127fafcc7550d5578c21">&#9670;&nbsp;</a></span>GetDimension()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int open3d::core::nns::NNSIndex::GetDimension </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Get dimension of the dataset points. </p><dl class="section return"><dt>Returns</dt><dd>dimension of dataset points. </dd></dl>

</div>
</div>
<a id="a173f04cbf05a5c21bbaa9999821835fe"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a173f04cbf05a5c21bbaa9999821835fe">&#9670;&nbsp;</a></span>GetDtype()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1core_1_1_dtype.html">Dtype</a> open3d::core::nns::NNSIndex::GetDtype </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Get dtype of the dataset points. </p><dl class="section return"><dt>Returns</dt><dd>dtype of dataset points. </dd></dl>

</div>
</div>
<a id="ad1fafc945ee7204374db937deece0557"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad1fafc945ee7204374db937deece0557">&#9670;&nbsp;</a></span>GetIndexDtype()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1core_1_1_dtype.html">Dtype</a> open3d::core::nns::NNSIndex::GetIndexDtype </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Get dtype of indices. </p><dl class="section return"><dt>Returns</dt><dd>dtype of indices. </dd></dl>

</div>
</div>
<a id="a5edc90912acc1a23033b0e97d0ef59d4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5edc90912acc1a23033b0e97d0ef59d4">&#9670;&nbsp;</a></span>operator=()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1core_1_1nns_1_1_n_n_s_index.5">NNSIndex</a>&amp; open3d::core::nns::NNSIndex::operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1nns_1_1_n_n_s_index.5">NNSIndex</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a25e1a7ff3a43e5f18e63276a319331c4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a25e1a7ff3a43e5f18e63276a319331c4">&#9670;&nbsp;</a></span>SearchHybrid()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual std::tuple&lt;<a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a>, <a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a>, <a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a>&gt; open3d::core::nns::NNSIndex::SearchHybrid </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>query_points</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>radius</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>max_knn</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Perform hybrid search.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">query_points</td><td>Query points. Must be 2D, with shape {n, d}. </td></tr>
    <tr><td class="paramname">radius</td><td>Radius. </td></tr>
    <tr><td class="paramname">max_knn</td><td>Maximum number of neighbor to search per query point. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Tuple of Tensors, (indices, distances, counts):<ul>
<li>indices: <a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a> of shape {n, knn}, with dtype Int32.</li>
<li>distances: <a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a> of shape {n, knn}, with dtype Float32.</li>
<li>counts: <a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a> of shape {n, 1}, with dtype Int32. </li>
</ul>
</dd></dl>

<p>Implemented in <a class="el" href="classopen3d_1_1core_1_1nns_1_1_nano_flann_in#a797867c363f3984de044a3f65549a0ef">open3d::core::nns::NanoFlannIndex</a>, <a class="el" href="classopen3d_1_1core_1_1nns_1_1_fixed_radius_#a94d7e84a48431fe5cb453a9bb6701e43">open3d::core::nns::FixedRadiusIndex</a>, and <a class="el" href="classopen3d_1_1core_1_1nns_1_1_knn_index.548#a9f0271fabc580264ab59073d31b107eb">open3d::core::nns::KnnIndex</a>.</p>

</div>
</div>
<a id="aa72184505d4e2e094097f1e053ad7408"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa72184505d4e2e094097f1e053ad7408">&#9670;&nbsp;</a></span>SearchKnn()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual std::pair&lt;<a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a>, <a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a>&gt; open3d::core::nns::NNSIndex::SearchKnn </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>query_points</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>knn</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Perform K nearest neighbor search.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">query_points</td><td>Query points. Must be 2D, with shape {n, d}, same dtype with dataset_points. </td></tr>
    <tr><td class="paramname">knn</td><td>Number of nearest neighbor to search. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="structopen3d_1_1core_1_1_pair.html">Pair</a> of Tensors: (indices, distances):<ul>
<li>indices: <a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a> of shape {n, knn}, with dtype Int32.</li>
<li>distainces: <a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a> of shape {n, knn}, same dtype with dataset_points. </li>
</ul>
</dd></dl>

<p>Implemented in <a class="el" href="classopen3d_1_1core_1_1nns_1_1_nano_flann_in#a0d21fa815c4b41ebb02a7a9c1e866c8a">open3d::core::nns::NanoFlannIndex</a>, <a class="el" href="classopen3d_1_1core_1_1nns_1_1_knn_index.548#a03e91070b93296770bbb7c58383741c3">open3d::core::nns::KnnIndex</a>, and <a class="el" href="classopen3d_1_1core_1_1nns_1_1_fixed_radius_#a4e1370ddaef9c4cb58f93c10e5ce6e38">open3d::core::nns::FixedRadiusIndex</a>.</p>

</div>
</div>
<a id="a95c9e0bf0697f01e59fc3d3b222c8e63"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a95c9e0bf0697f01e59fc3d3b222c8e63">&#9670;&nbsp;</a></span>SearchRadius() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual std::tuple&lt;<a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a>, <a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a>, <a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a>&gt; open3d::core::nns::NNSIndex::SearchRadius </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>query_points</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>radii</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>sort</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Perform radius search with multiple radii.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">query_points</td><td>Query points. Must be 2D, with shape {n, d}, same dtype with dataset_points. </td></tr>
    <tr><td class="paramname">radii</td><td>list of radius. Must be 1D, with shape {n, }. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Tuple of Tensors: (indices, distances, num_neighbors):<ul>
<li>indicecs: <a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a> of shape {total_num_neighbors,}, dtype Int32.</li>
<li>distances: <a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a> of shape {total_num_neighbors,}, same dtype with dataset_points.</li>
<li>num_neighbors: <a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a> of shape {n,}, dtype Int32. </li>
</ul>
</dd></dl>

<p>Implemented in <a class="el" href="classopen3d_1_1core_1_1nns_1_1_nano_flann_in#ada95fbe5fa9133da23a8c16c8623e0d7">open3d::core::nns::NanoFlannIndex</a>, <a class="el" href="classopen3d_1_1core_1_1nns_1_1_fixed_radius_#a436c644423b8c529240d2f229c31b9d4">open3d::core::nns::FixedRadiusIndex</a>, and <a class="el" href="classopen3d_1_1core_1_1nns_1_1_knn_index.548#ae5279cab2c2100d90feb46294e2eab79">open3d::core::nns::KnnIndex</a>.</p>

</div>
</div>
<a id="a85bfb03ec5eeb56d6afa882dfc09be04"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a85bfb03ec5eeb56d6afa882dfc09be04">&#9670;&nbsp;</a></span>SearchRadius() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual std::tuple&lt;<a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a>, <a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a>, <a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a>&gt; open3d::core::nns::NNSIndex::SearchRadius </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>query_points</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>radius</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>sort</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Perform radius search.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">query_points</td><td>Query points. Must be 2D, with shape {n, d}, same dtype with dataset_points. </td></tr>
    <tr><td class="paramname">radius</td><td>Radius. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Tuple of Tensors, (indices, distances, num_neighbors):<ul>
<li>indicecs: <a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a> of shape {total_num_neighbors,}, dtype Int32.</li>
<li>distances: <a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a> of shape {total_num_neighbors,}, same dtype with dataset_points.</li>
<li>num_neighbors: <a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a> of shape {n}, dtype Int32. </li>
</ul>
</dd></dl>

<p>Implemented in <a class="el" href="classopen3d_1_1core_1_1nns_1_1_nano_flann_in#a79d153285e2a3add2bacd49dbb53dd37">open3d::core::nns::NanoFlannIndex</a>, <a class="el" href="classopen3d_1_1core_1_1nns_1_1_fixed_radius_#ac17a89f1e31d3cb13cea391323e49492">open3d::core::nns::FixedRadiusIndex</a>, and <a class="el" href="classopen3d_1_1core_1_1nns_1_1_knn_index.548#adfef40b4f55be8528ab6ce6b8c3262ce">open3d::core::nns::KnnIndex</a>.</p>

</div>
</div>
<a id="a9c985bdd2ed49b8ded1bee6718d3d9b6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9c985bdd2ed49b8ded1bee6718d3d9b6">&#9670;&nbsp;</a></span>SetTensorData() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool open3d::core::nns::NNSIndex::SetTensorData </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>dataset_points</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_dtype.html">Dtype</a> &amp;&#160;</td>
          <td class="paramname"><em>index_dtype</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Set the data for the nearest neighbor search.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">dataset_points</td><td>Dataset points for KDTree construction. Must be 2D, with shape {n, d}. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns true if the construction success, otherwise false. </dd></dl>

<p>Implemented in <a class="el" href="classopen3d_1_1core_1_1nns_1_1_nano_flann_in#a45a042ba43de0dcc68b43c84a835a0b1">open3d::core::nns::NanoFlannIndex</a>, <a class="el" href="classopen3d_1_1core_1_1nns_1_1_knn_index.548#ab262251f0c54d733bd73c5b58f8685e0">open3d::core::nns::KnnIndex</a>, and <a class="el" href="classopen3d_1_1core_1_1nns_1_1_fixed_radius_#a6b6bdb0c7c12f84e8b0dd36abdf74ef8">open3d::core::nns::FixedRadiusIndex</a>.</p>

</div>
</div>
<a id="af8e5c6e0f53256a405acb8931812c472"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af8e5c6e0f53256a405acb8931812c472">&#9670;&nbsp;</a></span>SetTensorData() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool open3d::core::nns::NNSIndex::SetTensorData </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>dataset_points</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>radius</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_dtype.html">Dtype</a> &amp;&#160;</td>
          <td class="paramname"><em>index_dtype</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Set the data for the nearest neighbor search.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">dataset_points</td><td>Dataset points for KDTree construction. Must be 2D, with shape {n, d}. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns true if the construction success, otherwise false. </dd></dl>

<p>Implemented in <a class="el" href="classopen3d_1_1core_1_1nns_1_1_nano_flann_in#a87ebc3a216890bae89bb0797042731a8">open3d::core::nns::NanoFlannIndex</a>, <a class="el" href="classopen3d_1_1core_1_1nns_1_1_knn_index.548#ac45db68ea650d613121bd2ddb235faa8">open3d::core::nns::KnnIndex</a>, and <a class="el" href="classopen3d_1_1core_1_1nns_1_1_fixed_radius_#a9b768563e565f6782f949e4dd8bc9950">open3d::core::nns::FixedRadiusIndex</a>.</p>

</div>
</div>
<h2 class="groupheader">Field Documentation</h2>
<a id="ab8035cf175498aa54c79367e2d7d2b4a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab8035cf175498aa54c79367e2d7d2b4a">&#9670;&nbsp;</a></span>dataset_points_</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a> open3d::core::nns::NNSIndex::dataset_points_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a114e7b361bfc7fa5b9d613d2a4711289"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a114e7b361bfc7fa5b9d613d2a4711289">&#9670;&nbsp;</a></span>index_dtype_</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1core_1_1_dtype.html">Dtype</a> open3d::core::nns::NNSIndex::index_dtype_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/runner/work/Open3D/Open3D/cpp/open3d/core/nns/<a class="el" href="_n_n_s_index_8h_source.html">NNSIndex.h (9238339 (Tue Mar 14 18:49:09 2023 -0700))</a></li>
<li>/home/runner/work/Open3D/Open3D/cpp/open3d/core/nns/<a class="el" href="_n_n_s_index_8cpp.html">NNSIndex.cpp (9238339 (Tue Mar 14 18:49:09 2023 -0700))</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1
</small></address>
</body>

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/classopen3d_1_1core_1_1nns_1_1_n_n_s_index.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 10:59:56 GMT -->
</html>
