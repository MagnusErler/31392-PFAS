<!-- HTML header for doxygen 1.8.20-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/_c_p_u_hash_backend_buffer_accessor_8hpp_source.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 10:59:57 GMT -->
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Open3D (C++ API): /home/runner/work/Open3D/Open3D/cpp/open3d/core/hashmap/CPU/CPUHashBackendBufferAccessor.hpp (9238339 (Tue Mar 14 18:49:09 2023 -0700)) Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js", "TeX/AMSmath.html", "TeX/AMSsymbols.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="../../../../cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-3TQPKGV6Z3"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());
  gtag('config', 'G-3TQPKGV6Z3');
</script>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="open3d_logo.ico"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Open3D (C++ API)
   &#160;<span id="projectnumber">0.17.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.html');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.html','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_df511e5bd85cec96854b39d5e1c27aa8.357.del">cpp</a></li><li class="navelem"><a class="el" href="dir_f8cc15b2217ff526bd336cf17635da2a.358.del">open3d</a></li><li class="navelem"><a class="el" href="dir_559a533dc613f808f5747b65451c8a78.48c.del">core</a></li><li class="navelem"><a class="el" href="dir_ffa67b2964f7855cb8806476a13cb367.5a0.del">hashmap</a></li><li class="navelem"><a class="el" href="dir_7517bd45ed468eeca2ffce853c28a378.5a1.del">CPU</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">CPUHashBackendBufferAccessor.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_c_p_u_hash_backend_buffer_accessor_8hpp.9d6">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">// ----------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// -                        Open3D: www.open3d.org                            -</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// ----------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">// The MIT License (MIT)</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">// Copyright (c) 2018-2023 www.open3d.org</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">// Permission is hereby granted, free of charge, to any person obtaining a copy</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">// of this software and associated documentation files (the &quot;Software&quot;), to deal</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">// in the Software without restriction, including without limitation the rights</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">// copies of the Software, and to permit persons to whom the Software is</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">// furnished to do so, subject to the following conditions:</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">// The above copyright notice and this permission notice shall be included in</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">// all copies or substantial portions of the Software.</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">// THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment">// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment">// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment">// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="comment">// IN THE SOFTWARE.</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="comment">// ----------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160; </div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160; </div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &lt;assert.h&gt;</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160; </div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &lt;atomic&gt;</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &lt;memory&gt;</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160; </div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_hash_backend_buffer_8h.html">open3d/core/hashmap/HashBackendBuffer.h</a>&quot;</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160; </div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceopen3d.html">open3d</a> {</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keyword">namespace </span>core {</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160; </div>
<div class="line"><a name="l00040"></a><span class="lineno"><a class="line" href="classopen3d_1_1core_1_1_c_p_u_hash_backend_b">   40</a></span>&#160;<span class="keyword">class </span><a class="code" href="classopen3d_1_1core_1_1_c_p_u_hash_backend_b">CPUHashBackendBufferAccessor</a> {</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00043"></a><span class="lineno"><a class="line" href="classopen3d_1_1core_1_1_c_p_u_hash_backend_b#a48e3de7b43d57ee654216aa185ce52c0">   43</a></span>&#160;    <a class="code" href="classopen3d_1_1core_1_1_c_p_u_hash_backend_b#a48e3de7b43d57ee654216aa185ce52c0">CPUHashBackendBufferAccessor</a>(<a class="code" href="classopen3d_1_1core_1_1_hash_backend_buffer">HashBackendBuffer</a> &amp;hashmap_buffer)</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;        : <a class="code" href="classopen3d_1_1core_1_1_c_p_u_hash_backend_b#af46a2104d28d570c603ce52dac3fccee">capacity_</a>(hashmap_buffer.GetCapacity()),</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;          <a class="code" href="classopen3d_1_1core_1_1_c_p_u_hash_backend_b#a447e79d6926904ab6f4e34267562cedc">key_dsize_</a>(hashmap_buffer.GetKeyDsize()),</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;          <a class="code" href="classopen3d_1_1core_1_1_c_p_u_hash_backend_b#aef861508b4d51ee3843963e0a5a41505">value_dsizes_</a>(hashmap_buffer.GetValueDsizes()),</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;          <a class="code" href="classopen3d_1_1core_1_1_c_p_u_hash_backend_b#a0bdcca6d9633dc8925a2ca645783a8e9">heap_</a>(hashmap_buffer.GetIndexHeap().GetDataPtr&lt;<a class="code" href="namespaceopen3d_1_1core.html#a2e24567ecd0819b60fcd901703289eec">buf_index_t</a>&gt;()),</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;          <a class="code" href="classopen3d_1_1core_1_1_c_p_u_hash_backend_b#aacf38c50ebcb7d081bb7e7480d5d9b20">key_buffer_ptr_</a>(hashmap_buffer.GetKeyBuffer().GetDataPtr&lt;uint8_t&gt;()) {</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;        std::vector&lt;Tensor&gt; value_buffers = hashmap_buffer.<a class="code" href="classopen3d_1_1core_1_1_hash_backend_buffer#afeaa58a31883621fe9e260973cacfee4">GetValueBuffers</a>();</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> i = 0; i &lt; value_buffers.size(); ++i) {</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;            <span class="keywordtype">void</span> *value_buffer_ptr = value_buffers[i].GetDataPtr();</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;            std::memset(value_buffer_ptr, 0, <a class="code" href="classopen3d_1_1core_1_1_c_p_u_hash_backend_b#af46a2104d28d570c603ce52dac3fccee">capacity_</a> * <a class="code" href="classopen3d_1_1core_1_1_c_p_u_hash_backend_b#aef861508b4d51ee3843963e0a5a41505">value_dsizes_</a>[i]);</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;            <a class="code" href="classopen3d_1_1core_1_1_c_p_u_hash_backend_b#a2212963e25f4e910b9d5e25fa8a50693">value_buffer_ptrs_</a>.push_back(</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;                    <span class="keyword">static_cast&lt;</span>uint8_t *<span class="keyword">&gt;</span>(value_buffer_ptr));</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;        }</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        <a class="code" href="classopen3d_1_1core_1_1_c_p_u_hash_backend_b#af5dc596529e08949e6450721a0282e2b">heap_top_</a> = &amp;(hashmap_buffer.<a class="code" href="classopen3d_1_1core_1_1_hash_backend_buffer#a9a0d900079ee04414f15d7a143d0389a">GetHeapTop</a>().<a class="code" href="structopen3d_1_1core_1_1_hash_backend_buffer#a1d5d6548e1e049f487d97d3afedcaf84">cpu</a>);</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    }</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160; </div>
<div class="line"><a name="l00059"></a><span class="lineno"><a class="line" href="classopen3d_1_1core_1_1_c_p_u_hash_backend_b#aeb0115df8b3ee1c71ebb7c376c2a1b2f">   59</a></span>&#160;    <a class="code" href="namespaceopen3d_1_1core.html#a2e24567ecd0819b60fcd901703289eec">buf_index_t</a> <a class="code" href="classopen3d_1_1core_1_1_c_p_u_hash_backend_b#aeb0115df8b3ee1c71ebb7c376c2a1b2f">DeviceAllocate</a>() { <span class="keywordflow">return</span> <a class="code" href="classopen3d_1_1core_1_1_c_p_u_hash_backend_b#a0bdcca6d9633dc8925a2ca645783a8e9">heap_</a>[(*heap_top_).fetch_add(1)]; }</div>
<div class="line"><a name="l00060"></a><span class="lineno"><a class="line" href="classopen3d_1_1core_1_1_c_p_u_hash_backend_b#a35379d5cba394dae17ff65d457e8f6c8">   60</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classopen3d_1_1core_1_1_c_p_u_hash_backend_b#a35379d5cba394dae17ff65d457e8f6c8">DeviceFree</a>(<a class="code" href="namespaceopen3d_1_1core.html#a2e24567ecd0819b60fcd901703289eec">buf_index_t</a> buf_index) {</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        <a class="code" href="classopen3d_1_1core_1_1_c_p_u_hash_backend_b#a0bdcca6d9633dc8925a2ca645783a8e9">heap_</a>[(*heap_top_).fetch_sub(1) - 1] = buf_index;</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    }</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160; </div>
<div class="line"><a name="l00064"></a><span class="lineno"><a class="line" href="classopen3d_1_1core_1_1_c_p_u_hash_backend_b#ad975146fd42815ffe639f3e9a1a9a838">   64</a></span>&#160;    <span class="keywordtype">void</span> *<a class="code" href="classopen3d_1_1core_1_1_c_p_u_hash_backend_b#ad975146fd42815ffe639f3e9a1a9a838">GetKeyPtr</a>(<a class="code" href="namespaceopen3d_1_1core.html#a2e24567ecd0819b60fcd901703289eec">buf_index_t</a> buf_index) {</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classopen3d_1_1core_1_1_c_p_u_hash_backend_b#aacf38c50ebcb7d081bb7e7480d5d9b20">key_buffer_ptr_</a> + buf_index * <a class="code" href="classopen3d_1_1core_1_1_c_p_u_hash_backend_b#a447e79d6926904ab6f4e34267562cedc">key_dsize_</a>;</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    }</div>
<div class="line"><a name="l00067"></a><span class="lineno"><a class="line" href="classopen3d_1_1core_1_1_c_p_u_hash_backend_b#aa9003b286317ab50d07a02b47425a267">   67</a></span>&#160;    <span class="keywordtype">void</span> *<a class="code" href="classopen3d_1_1core_1_1_c_p_u_hash_backend_b#aa9003b286317ab50d07a02b47425a267">GetValuePtr</a>(<a class="code" href="namespaceopen3d_1_1core.html#a2e24567ecd0819b60fcd901703289eec">buf_index_t</a> buf_index, <span class="keywordtype">int</span> value_idx = 0) {</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classopen3d_1_1core_1_1_c_p_u_hash_backend_b#a2212963e25f4e910b9d5e25fa8a50693">value_buffer_ptrs_</a>[value_idx] +</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;               buf_index * <a class="code" href="classopen3d_1_1core_1_1_c_p_u_hash_backend_b#aef861508b4d51ee3843963e0a5a41505">value_dsizes_</a>[value_idx];</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    }</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160; </div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00073"></a><span class="lineno"><a class="line" href="classopen3d_1_1core_1_1_c_p_u_hash_backend_b#af46a2104d28d570c603ce52dac3fccee">   73</a></span>&#160;    int64_t <a class="code" href="classopen3d_1_1core_1_1_c_p_u_hash_backend_b#af46a2104d28d570c603ce52dac3fccee">capacity_</a>;</div>
<div class="line"><a name="l00074"></a><span class="lineno"><a class="line" href="classopen3d_1_1core_1_1_c_p_u_hash_backend_b#a447e79d6926904ab6f4e34267562cedc">   74</a></span>&#160;    int64_t <a class="code" href="classopen3d_1_1core_1_1_c_p_u_hash_backend_b#a447e79d6926904ab6f4e34267562cedc">key_dsize_</a>;</div>
<div class="line"><a name="l00075"></a><span class="lineno"><a class="line" href="classopen3d_1_1core_1_1_c_p_u_hash_backend_b#aef861508b4d51ee3843963e0a5a41505">   75</a></span>&#160;    std::vector&lt;int64_t&gt; <a class="code" href="classopen3d_1_1core_1_1_c_p_u_hash_backend_b#aef861508b4d51ee3843963e0a5a41505">value_dsizes_</a>;</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160; </div>
<div class="line"><a name="l00077"></a><span class="lineno"><a class="line" href="classopen3d_1_1core_1_1_c_p_u_hash_backend_b#a0bdcca6d9633dc8925a2ca645783a8e9">   77</a></span>&#160;    <a class="code" href="namespaceopen3d_1_1core.html#a2e24567ecd0819b60fcd901703289eec">buf_index_t</a> *<a class="code" href="classopen3d_1_1core_1_1_c_p_u_hash_backend_b#a0bdcca6d9633dc8925a2ca645783a8e9">heap_</a>;          <span class="comment">/* [N] */</span></div>
<div class="line"><a name="l00078"></a><span class="lineno"><a class="line" href="classopen3d_1_1core_1_1_c_p_u_hash_backend_b#af5dc596529e08949e6450721a0282e2b">   78</a></span>&#160;    std::atomic&lt;int&gt; *<a class="code" href="classopen3d_1_1core_1_1_c_p_u_hash_backend_b#af5dc596529e08949e6450721a0282e2b">heap_top_</a>; <span class="comment">/* [1] */</span></div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160; </div>
<div class="line"><a name="l00080"></a><span class="lineno"><a class="line" href="classopen3d_1_1core_1_1_c_p_u_hash_backend_b#aacf38c50ebcb7d081bb7e7480d5d9b20">   80</a></span>&#160;    uint8_t *<a class="code" href="classopen3d_1_1core_1_1_c_p_u_hash_backend_b#aacf38c50ebcb7d081bb7e7480d5d9b20">key_buffer_ptr_</a>;                  <span class="comment">/* [N] * sizeof(Key) */</span></div>
<div class="line"><a name="l00081"></a><span class="lineno"><a class="line" href="classopen3d_1_1core_1_1_c_p_u_hash_backend_b#a2212963e25f4e910b9d5e25fa8a50693">   81</a></span>&#160;    std::vector&lt;uint8_t *&gt; <a class="code" href="classopen3d_1_1core_1_1_c_p_u_hash_backend_b#a2212963e25f4e910b9d5e25fa8a50693">value_buffer_ptrs_</a>; <span class="comment">/* [N] * sizeof(Value) */</span></div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;};</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160; </div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;}  <span class="comment">// namespace core</span></div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;}  <span class="comment">// namespace open3d</span></div>
<div class="ttc" id="a_hash_backend_buffer_8h_html"><div class="ttname"><a href="_hash_backend_buffer_8h.html">HashBackendBuffer.h</a></div></div>
<div class="ttc" id="aclassopen3d_1_1core_1_1_c_p_u_hash_backend_buffer_accessor_html"><div class="ttname"><a href="classopen3d_1_1core_1_1_c_p_u_hash_backend_b">open3d::core::CPUHashBackendBufferAccessor</a></div><div class="ttdef"><b>Definition:</b> CPUHashBackendBufferAccessor.hpp:40</div></div>
<div class="ttc" id="aclassopen3d_1_1core_1_1_c_p_u_hash_backend_buffer_accessor_html_a0bdcca6d9633dc8925a2ca645783a8e9"><div class="ttname"><a href="classopen3d_1_1core_1_1_c_p_u_hash_backend_b#a0bdcca6d9633dc8925a2ca645783a8e9">open3d::core::CPUHashBackendBufferAccessor::heap_</a></div><div class="ttdeci">buf_index_t * heap_</div><div class="ttdef"><b>Definition:</b> CPUHashBackendBufferAccessor.hpp:77</div></div>
<div class="ttc" id="aclassopen3d_1_1core_1_1_c_p_u_hash_backend_buffer_accessor_html_a2212963e25f4e910b9d5e25fa8a50693"><div class="ttname"><a href="classopen3d_1_1core_1_1_c_p_u_hash_backend_b#a2212963e25f4e910b9d5e25fa8a50693">open3d::core::CPUHashBackendBufferAccessor::value_buffer_ptrs_</a></div><div class="ttdeci">std::vector&lt; uint8_t * &gt; value_buffer_ptrs_</div><div class="ttdef"><b>Definition:</b> CPUHashBackendBufferAccessor.hpp:81</div></div>
<div class="ttc" id="aclassopen3d_1_1core_1_1_c_p_u_hash_backend_buffer_accessor_html_a35379d5cba394dae17ff65d457e8f6c8"><div class="ttname"><a href="classopen3d_1_1core_1_1_c_p_u_hash_backend_b#a35379d5cba394dae17ff65d457e8f6c8">open3d::core::CPUHashBackendBufferAccessor::DeviceFree</a></div><div class="ttdeci">void DeviceFree(buf_index_t buf_index)</div><div class="ttdef"><b>Definition:</b> CPUHashBackendBufferAccessor.hpp:60</div></div>
<div class="ttc" id="aclassopen3d_1_1core_1_1_c_p_u_hash_backend_buffer_accessor_html_a447e79d6926904ab6f4e34267562cedc"><div class="ttname"><a href="classopen3d_1_1core_1_1_c_p_u_hash_backend_b#a447e79d6926904ab6f4e34267562cedc">open3d::core::CPUHashBackendBufferAccessor::key_dsize_</a></div><div class="ttdeci">int64_t key_dsize_</div><div class="ttdef"><b>Definition:</b> CPUHashBackendBufferAccessor.hpp:74</div></div>
<div class="ttc" id="aclassopen3d_1_1core_1_1_c_p_u_hash_backend_buffer_accessor_html_a48e3de7b43d57ee654216aa185ce52c0"><div class="ttname"><a href="classopen3d_1_1core_1_1_c_p_u_hash_backend_b#a48e3de7b43d57ee654216aa185ce52c0">open3d::core::CPUHashBackendBufferAccessor::CPUHashBackendBufferAccessor</a></div><div class="ttdeci">CPUHashBackendBufferAccessor(HashBackendBuffer &amp;hashmap_buffer)</div><div class="ttdoc">Must initialize from a non-const buffer to grab the heap top.</div><div class="ttdef"><b>Definition:</b> CPUHashBackendBufferAccessor.hpp:43</div></div>
<div class="ttc" id="aclassopen3d_1_1core_1_1_c_p_u_hash_backend_buffer_accessor_html_aa9003b286317ab50d07a02b47425a267"><div class="ttname"><a href="classopen3d_1_1core_1_1_c_p_u_hash_backend_b#aa9003b286317ab50d07a02b47425a267">open3d::core::CPUHashBackendBufferAccessor::GetValuePtr</a></div><div class="ttdeci">void * GetValuePtr(buf_index_t buf_index, int value_idx=0)</div><div class="ttdef"><b>Definition:</b> CPUHashBackendBufferAccessor.hpp:67</div></div>
<div class="ttc" id="aclassopen3d_1_1core_1_1_c_p_u_hash_backend_buffer_accessor_html_aacf38c50ebcb7d081bb7e7480d5d9b20"><div class="ttname"><a href="classopen3d_1_1core_1_1_c_p_u_hash_backend_b#aacf38c50ebcb7d081bb7e7480d5d9b20">open3d::core::CPUHashBackendBufferAccessor::key_buffer_ptr_</a></div><div class="ttdeci">uint8_t * key_buffer_ptr_</div><div class="ttdef"><b>Definition:</b> CPUHashBackendBufferAccessor.hpp:80</div></div>
<div class="ttc" id="aclassopen3d_1_1core_1_1_c_p_u_hash_backend_buffer_accessor_html_ad975146fd42815ffe639f3e9a1a9a838"><div class="ttname"><a href="classopen3d_1_1core_1_1_c_p_u_hash_backend_b#ad975146fd42815ffe639f3e9a1a9a838">open3d::core::CPUHashBackendBufferAccessor::GetKeyPtr</a></div><div class="ttdeci">void * GetKeyPtr(buf_index_t buf_index)</div><div class="ttdef"><b>Definition:</b> CPUHashBackendBufferAccessor.hpp:64</div></div>
<div class="ttc" id="aclassopen3d_1_1core_1_1_c_p_u_hash_backend_buffer_accessor_html_aeb0115df8b3ee1c71ebb7c376c2a1b2f"><div class="ttname"><a href="classopen3d_1_1core_1_1_c_p_u_hash_backend_b#aeb0115df8b3ee1c71ebb7c376c2a1b2f">open3d::core::CPUHashBackendBufferAccessor::DeviceAllocate</a></div><div class="ttdeci">buf_index_t DeviceAllocate()</div><div class="ttdef"><b>Definition:</b> CPUHashBackendBufferAccessor.hpp:59</div></div>
<div class="ttc" id="aclassopen3d_1_1core_1_1_c_p_u_hash_backend_buffer_accessor_html_aef861508b4d51ee3843963e0a5a41505"><div class="ttname"><a href="classopen3d_1_1core_1_1_c_p_u_hash_backend_b#aef861508b4d51ee3843963e0a5a41505">open3d::core::CPUHashBackendBufferAccessor::value_dsizes_</a></div><div class="ttdeci">std::vector&lt; int64_t &gt; value_dsizes_</div><div class="ttdef"><b>Definition:</b> CPUHashBackendBufferAccessor.hpp:75</div></div>
<div class="ttc" id="aclassopen3d_1_1core_1_1_c_p_u_hash_backend_buffer_accessor_html_af46a2104d28d570c603ce52dac3fccee"><div class="ttname"><a href="classopen3d_1_1core_1_1_c_p_u_hash_backend_b#af46a2104d28d570c603ce52dac3fccee">open3d::core::CPUHashBackendBufferAccessor::capacity_</a></div><div class="ttdeci">int64_t capacity_</div><div class="ttdef"><b>Definition:</b> CPUHashBackendBufferAccessor.hpp:73</div></div>
<div class="ttc" id="aclassopen3d_1_1core_1_1_c_p_u_hash_backend_buffer_accessor_html_af5dc596529e08949e6450721a0282e2b"><div class="ttname"><a href="classopen3d_1_1core_1_1_c_p_u_hash_backend_b#af5dc596529e08949e6450721a0282e2b">open3d::core::CPUHashBackendBufferAccessor::heap_top_</a></div><div class="ttdeci">std::atomic&lt; int &gt; * heap_top_</div><div class="ttdef"><b>Definition:</b> CPUHashBackendBufferAccessor.hpp:78</div></div>
<div class="ttc" id="aclassopen3d_1_1core_1_1_hash_backend_buffer_html"><div class="ttname"><a href="classopen3d_1_1core_1_1_hash_backend_buffer">open3d::core::HashBackendBuffer</a></div><div class="ttdef"><b>Definition:</b> HashBackendBuffer.h:46</div></div>
<div class="ttc" id="aclassopen3d_1_1core_1_1_hash_backend_buffer_html_a9a0d900079ee04414f15d7a143d0389a"><div class="ttname"><a href="classopen3d_1_1core_1_1_hash_backend_buffer#a9a0d900079ee04414f15d7a143d0389a">open3d::core::HashBackendBuffer::GetHeapTop</a></div><div class="ttdeci">HeapTop &amp; GetHeapTop()</div><div class="ttdef"><b>Definition:</b> HashBackendBuffer.cpp:99</div></div>
<div class="ttc" id="aclassopen3d_1_1core_1_1_hash_backend_buffer_html_afeaa58a31883621fe9e260973cacfee4"><div class="ttname"><a href="classopen3d_1_1core_1_1_hash_backend_buffer#afeaa58a31883621fe9e260973cacfee4">open3d::core::HashBackendBuffer::GetValueBuffers</a></div><div class="ttdeci">std::vector&lt; Tensor &gt; GetValueBuffers() const</div><div class="ttdoc">Return the value buffer tensors.</div><div class="ttdef"><b>Definition:</b> HashBackendBuffer.cpp:112</div></div>
<div class="ttc" id="anamespaceopen3d_1_1core_html_a2e24567ecd0819b60fcd901703289eec"><div class="ttname"><a href="namespaceopen3d_1_1core.html#a2e24567ecd0819b60fcd901703289eec">open3d::core::buf_index_t</a></div><div class="ttdeci">uint32_t buf_index_t</div><div class="ttdef"><b>Definition:</b> HashBackendBuffer.h:44</div></div>
<div class="ttc" id="anamespaceopen3d_html"><div class="ttname"><a href="namespaceopen3d.html">open3d</a></div><div class="ttdef"><b>Definition:</b> PinholeCameraIntrinsic.cpp:16</div></div>
<div class="ttc" id="astructopen3d_1_1core_1_1_hash_backend_buffer_1_1_heap_top_html_a1d5d6548e1e049f487d97d3afedcaf84"><div class="ttname"><a href="structopen3d_1_1core_1_1_hash_backend_buffer#a1d5d6548e1e049f487d97d3afedcaf84">open3d::core::HashBackendBuffer::HeapTop::cpu</a></div><div class="ttdeci">std::atomic&lt; int &gt; cpu</div><div class="ttdef"><b>Definition:</b> HashBackendBuffer.h:50</div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1
</small></address>
</body>

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/_c_p_u_hash_backend_buffer_accessor_8hpp_source.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 10:59:57 GMT -->
</html>
