<!-- HTML header for doxygen 1.8.20-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/classopen3d_1_1t_1_1io_1_1_r_g_b_d_sensor.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 10:53:41 GMT -->
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Open3D (C++ API): open3d::t::io::RGBDSensor Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js", "TeX/AMSmath.html", "TeX/AMSsymbols.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="../../../../cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-3TQPKGV6Z3"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());
  gtag('config', 'G-3TQPKGV6Z3');
</script>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="open3d_logo.ico"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Open3D (C++ API)
   &#160;<span id="projectnumber">0.17.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.html');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.html','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceopen3d.html">open3d</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1t.html">t</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1t_1_1io.html">io</a></li><li class="navelem"><a class="el" href="classopen3d_1_1t_1_1io_1_1_r_g_b_d_sensor.34">RGBDSensor</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">open3d::t::io::RGBDSensor Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p>Interface class for control of RGBD cameras.  
 <a href="classopen3d_1_1t_1_1io_1_1_r_g_b_d_sensor.34#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="t_2io_2sensor_2_r_g_b_d_sensor_8h_source.4ab">RGBDSensor.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for open3d::t::io::RGBDSensor:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classopen3d_1_1t_1_1io_1_1_r_g_b_d_sensor.4a" usemap="#open3d::t::io::RGBDSensor_map" alt=""/>
  <map id="open3d::t::io::RGBDSensor_map" name="open3d::t::io::RGBDSensor_map">
<area href="classopen3d_1_1t_1_1io_1_1_real_sense_sensor" title="RealSense camera discovery, configuration, streaming and recording." alt="open3d::t::io::RealSenseSensor" shape="rect" coords="0,56,185,80"/>
  </map>
</div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a844297c3b3a25eebfa6df82f1898f38d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1io_1_1_r_g_b_d_sensor.34#a844297c3b3a25eebfa6df82f1898f38d">RGBDSensor</a> ()</td></tr>
<tr class="memdesc:a844297c3b3a25eebfa6df82f1898f38d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor. Initialize with default settings.  <a href="classopen3d_1_1t_1_1io_1_1_r_g_b_d_sensor.34#a844297c3b3a25eebfa6df82f1898f38d">More...</a><br /></td></tr>
<tr class="separator:a844297c3b3a25eebfa6df82f1898f38d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5eb8a9b51dc9cc54934ea87a30dd22b1"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1io_1_1_r_g_b_d_sensor.34#a5eb8a9b51dc9cc54934ea87a30dd22b1">~RGBDSensor</a> ()</td></tr>
<tr class="separator:a5eb8a9b51dc9cc54934ea87a30dd22b1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a627beb960a4a829cae79682842d0a53f"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1io_1_1_r_g_b_d_sensor.34#a627beb960a4a829cae79682842d0a53f">InitSensor</a> (const <a class="el" href="classopen3d_1_1io_1_1_r_g_b_d_sensor_config">RGBDSensorConfig</a> &amp;sensor_config, size_t sensor_index=0, const std::string &amp;filename=&quot;&quot;)=0</td></tr>
<tr class="separator:a627beb960a4a829cae79682842d0a53f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aed36bb194b86993ccb6d69984b820865"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1io_1_1_r_g_b_d_sensor.34#aed36bb194b86993ccb6d69984b820865">StartCapture</a> (bool start_record=false)=0</td></tr>
<tr class="separator:aed36bb194b86993ccb6d69984b820865"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a650adfe4e4eba4efd6376def3471270c"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1io_1_1_r_g_b_d_sensor.34#a650adfe4e4eba4efd6376def3471270c">PauseRecord</a> ()=0</td></tr>
<tr class="memdesc:a650adfe4e4eba4efd6376def3471270c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pause recording to the file.  <a href="classopen3d_1_1t_1_1io_1_1_r_g_b_d_sensor.34#a650adfe4e4eba4efd6376def3471270c">More...</a><br /></td></tr>
<tr class="separator:a650adfe4e4eba4efd6376def3471270c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5539c7376a2771e41318f9a3c4010782"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1io_1_1_r_g_b_d_sensor.34#a5539c7376a2771e41318f9a3c4010782">ResumeRecord</a> ()=0</td></tr>
<tr class="separator:a5539c7376a2771e41318f9a3c4010782"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a351119a6092c88425caaadfb88357f5e"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_r_g_b_d_ima">geometry::RGBDImage</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1io_1_1_r_g_b_d_sensor.34#a351119a6092c88425caaadfb88357f5e">CaptureFrame</a> (bool wait=true, bool align_depth_to_color=true)=0</td></tr>
<tr class="separator:a351119a6092c88425caaadfb88357f5e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7f83011f67bead35e112d9a0a2507981"><td class="memItemLeft" align="right" valign="top">virtual uint64_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1io_1_1_r_g_b_d_sensor.34#a7f83011f67bead35e112d9a0a2507981">GetTimestamp</a> () const =0</td></tr>
<tr class="memdesc:a7f83011f67bead35e112d9a0a2507981"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get current timestamp (in us).  <a href="classopen3d_1_1t_1_1io_1_1_r_g_b_d_sensor.34#a7f83011f67bead35e112d9a0a2507981">More...</a><br /></td></tr>
<tr class="separator:a7f83011f67bead35e112d9a0a2507981"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a42c8d2f3ed8500e2e85586ff77996463"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1io_1_1_r_g_b_d_sensor.34#a42c8d2f3ed8500e2e85586ff77996463">StopCapture</a> ()=0</td></tr>
<tr class="memdesc:a42c8d2f3ed8500e2e85586ff77996463"><td class="mdescLeft">&#160;</td><td class="mdescRight">Stop capturing frames.  <a href="classopen3d_1_1t_1_1io_1_1_r_g_b_d_sensor.34#a42c8d2f3ed8500e2e85586ff77996463">More...</a><br /></td></tr>
<tr class="separator:a42c8d2f3ed8500e2e85586ff77996463"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa78520457c00691cda623091d614e106"><td class="memItemLeft" align="right" valign="top">virtual const <a class="el" href="classopen3d_1_1t_1_1io_1_1_r_g_b_d_video_met">RGBDVideoMetadata</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1io_1_1_r_g_b_d_sensor.34#aa78520457c00691cda623091d614e106">GetMetadata</a> () const =0</td></tr>
<tr class="memdesc:aa78520457c00691cda623091d614e106"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get const reference to the metadata of the RGBD video capture.  <a href="classopen3d_1_1t_1_1io_1_1_r_g_b_d_sensor.34#aa78520457c00691cda623091d614e106">More...</a><br /></td></tr>
<tr class="separator:aa78520457c00691cda623091d614e106"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5739cca0b50068c3e0bfde936d4ca9ad"><td class="memItemLeft" align="right" valign="top">virtual std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1io_1_1_r_g_b_d_sensor.34#a5739cca0b50068c3e0bfde936d4ca9ad">GetFilename</a> () const =0</td></tr>
<tr class="memdesc:a5739cca0b50068c3e0bfde936d4ca9ad"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get filename being written.  <a href="classopen3d_1_1t_1_1io_1_1_r_g_b_d_sensor.34#a5739cca0b50068c3e0bfde936d4ca9ad">More...</a><br /></td></tr>
<tr class="separator:a5739cca0b50068c3e0bfde936d4ca9ad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa146e20fb56cfa080046161d6db7691d"><td class="memItemLeft" align="right" valign="top">virtual const std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1io_1_1_r_g_b_d_sensor.34#aa146e20fb56cfa080046161d6db7691d">ToString</a> () const</td></tr>
<tr class="memdesc:aa146e20fb56cfa080046161d6db7691d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Text Description.  <a href="classopen3d_1_1t_1_1io_1_1_r_g_b_d_sensor.34#aa146e20fb56cfa080046161d6db7691d">More...</a><br /></td></tr>
<tr class="separator:aa146e20fb56cfa080046161d6db7691d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Interface class for control of RGBD cameras. </p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a844297c3b3a25eebfa6df82f1898f38d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a844297c3b3a25eebfa6df82f1898f38d">&#9670;&nbsp;</a></span>RGBDSensor()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">open3d::t::io::RGBDSensor::RGBDSensor </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Default constructor. Initialize with default settings. </p>

</div>
</div>
<a id="a5eb8a9b51dc9cc54934ea87a30dd22b1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5eb8a9b51dc9cc54934ea87a30dd22b1">&#9670;&nbsp;</a></span>~RGBDSensor()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual open3d::t::io::RGBDSensor::~RGBDSensor </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a351119a6092c88425caaadfb88357f5e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a351119a6092c88425caaadfb88357f5e">&#9670;&nbsp;</a></span>CaptureFrame()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_r_g_b_d_ima">geometry::RGBDImage</a> open3d::t::io::RGBDSensor::CaptureFrame </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>wait</em> = <code>true</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>align_depth_to_color</em> = <code>true</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Acquire the next synchronized RGBD frameset from the camera.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">align_depth_to_color</td><td>Enable aligning WFOV depth image to the color image in visualizer. </td></tr>
    <tr><td class="paramname">wait</td><td>If true wait for the next frame set, else return immediately with an empty RGBDImage if it is not yet available </td></tr>
  </table>
  </dd>
</dl>

<p>Implemented in <a class="el" href="classopen3d_1_1t_1_1io_1_1_real_sense_sensor#a49abe7b2863fb15cdf60f76568b2df2a">open3d::t::io::RealSenseSensor</a>.</p>

</div>
</div>
<a id="a5739cca0b50068c3e0bfde936d4ca9ad"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5739cca0b50068c3e0bfde936d4ca9ad">&#9670;&nbsp;</a></span>GetFilename()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual std::string open3d::t::io::RGBDSensor::GetFilename </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get filename being written. </p>

<p>Implemented in <a class="el" href="classopen3d_1_1t_1_1io_1_1_real_sense_sensor#ac020ba98ba81326bc143f3ef3dfc9c73">open3d::t::io::RealSenseSensor</a>.</p>

</div>
</div>
<a id="aa78520457c00691cda623091d614e106"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa78520457c00691cda623091d614e106">&#9670;&nbsp;</a></span>GetMetadata()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const <a class="el" href="classopen3d_1_1t_1_1io_1_1_r_g_b_d_video_met">RGBDVideoMetadata</a>&amp; open3d::t::io::RGBDSensor::GetMetadata </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get const reference to the metadata of the RGBD video capture. </p>

<p>Implemented in <a class="el" href="classopen3d_1_1t_1_1io_1_1_real_sense_sensor#a8f165572d4f4630c983ad2b20ad902a8">open3d::t::io::RealSenseSensor</a>.</p>

</div>
</div>
<a id="a7f83011f67bead35e112d9a0a2507981"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7f83011f67bead35e112d9a0a2507981">&#9670;&nbsp;</a></span>GetTimestamp()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual uint64_t open3d::t::io::RGBDSensor::GetTimestamp </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get current timestamp (in us). </p>

<p>Implemented in <a class="el" href="classopen3d_1_1t_1_1io_1_1_real_sense_sensor#aa6d2d16ed496b4d07ac1c9a0658248f2">open3d::t::io::RealSenseSensor</a>.</p>

</div>
</div>
<a id="a627beb960a4a829cae79682842d0a53f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a627beb960a4a829cae79682842d0a53f">&#9670;&nbsp;</a></span>InitSensor()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool open3d::t::io::RGBDSensor::InitSensor </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1io_1_1_r_g_b_d_sensor_config">RGBDSensorConfig</a> &amp;&#160;</td>
          <td class="paramname"><em>sensor_config</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>sensor_index</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>filename</em> = <code>&quot;&quot;</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Initialize sensor (optional).</p>
<p>Configure sensor with custom settings. If this is skipped, default settings will be used. You can enable recording to a file by specifying a filename. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">sensor_config</td><td>Camera configuration, such as resolution and framerate. A serial number can be entered here to connect to a specific camera. </td></tr>
    <tr><td class="paramname">sensor_index</td><td>Connect to a camera at this position in the enumeration of RealSense cameras that are currently connected. Use EnumerateDevices() or ListDevices() to obtain a list of connected cameras and their capabilities. This is ignored if <code>sensor_config</code> contains a "serial" entry. </td></tr>
    <tr><td class="paramname">filename</td><td>Save frames to this file. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>true if a camera was found and initialized with the given settings, else false. </dd></dl>

<p>Implemented in <a class="el" href="classopen3d_1_1t_1_1io_1_1_real_sense_sensor#a9e8788b86ff9c3aaf3a16000c723989d">open3d::t::io::RealSenseSensor</a>.</p>

</div>
</div>
<a id="a650adfe4e4eba4efd6376def3471270c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a650adfe4e4eba4efd6376def3471270c">&#9670;&nbsp;</a></span>PauseRecord()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void open3d::t::io::RGBDSensor::PauseRecord </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Pause recording to the file. </p>

<p>Implemented in <a class="el" href="classopen3d_1_1t_1_1io_1_1_real_sense_sensor#a14dd69b1b28fd79abd51aefd91edbf06">open3d::t::io::RealSenseSensor</a>.</p>

</div>
</div>
<a id="a5539c7376a2771e41318f9a3c4010782"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5539c7376a2771e41318f9a3c4010782">&#9670;&nbsp;</a></span>ResumeRecord()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void open3d::t::io::RGBDSensor::ResumeRecord </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Resume recording to the file. The file will contain discontinuous segments. </p>

<p>Implemented in <a class="el" href="classopen3d_1_1t_1_1io_1_1_real_sense_sensor#a2a865e0b4b948ab566c47440edfadc42">open3d::t::io::RealSenseSensor</a>.</p>

</div>
</div>
<a id="aed36bb194b86993ccb6d69984b820865"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aed36bb194b86993ccb6d69984b820865">&#9670;&nbsp;</a></span>StartCapture()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool open3d::t::io::RGBDSensor::StartCapture </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>start_record</em> = <code>false</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Start capturing synchronized depth and color frames. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">start_record</td><td>start recording to the specified file as well. </td></tr>
  </table>
  </dd>
</dl>

<p>Implemented in <a class="el" href="classopen3d_1_1t_1_1io_1_1_real_sense_sensor#a98b52888e9d63b5c6d3ae4d124ec127f">open3d::t::io::RealSenseSensor</a>.</p>

</div>
</div>
<a id="a42c8d2f3ed8500e2e85586ff77996463"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a42c8d2f3ed8500e2e85586ff77996463">&#9670;&nbsp;</a></span>StopCapture()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void open3d::t::io::RGBDSensor::StopCapture </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Stop capturing frames. </p>

<p>Implemented in <a class="el" href="classopen3d_1_1t_1_1io_1_1_real_sense_sensor#a148ab87ea17c7e692b53721566744796">open3d::t::io::RealSenseSensor</a>.</p>

</div>
</div>
<a id="aa146e20fb56cfa080046161d6db7691d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa146e20fb56cfa080046161d6db7691d">&#9670;&nbsp;</a></span>ToString()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const std::string open3d::t::io::RGBDSensor::ToString </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Text Description. </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>/home/runner/work/Open3D/Open3D/cpp/open3d/t/io/sensor/<a class="el" href="t_2io_2sensor_2_r_g_b_d_sensor_8h_source.4ab">RGBDSensor.h (9238339 (Tue Mar 14 18:49:09 2023 -0700))</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1
</small></address>
</body>

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/classopen3d_1_1t_1_1io_1_1_r_g_b_d_sensor.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 10:53:41 GMT -->
</html>
