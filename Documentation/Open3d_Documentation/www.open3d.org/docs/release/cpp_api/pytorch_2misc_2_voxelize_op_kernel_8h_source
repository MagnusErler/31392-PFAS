<!-- HTML header for doxygen 1.8.20-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/pytorch_2misc_2_voxelize_op_kernel_8h_source.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 11:04:59 GMT -->
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Open3D (C++ API): /home/runner/work/Open3D/Open3D/cpp/open3d/ml/pytorch/misc/VoxelizeOpKernel.h (9238339 (Tue Mar 14 18:49:09 2023 -0700)) Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js", "TeX/AMSmath.html", "TeX/AMSsymbols.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="../../../../cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-3TQPKGV6Z3"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());
  gtag('config', 'G-3TQPKGV6Z3');
</script>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="open3d_logo.ico"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Open3D (C++ API)
   &#160;<span id="projectnumber">0.17.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.html');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.html','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_df511e5bd85cec96854b39d5e1c27aa8.357.del">cpp</a></li><li class="navelem"><a class="el" href="dir_f8cc15b2217ff526bd336cf17635da2a.358.del">open3d</a></li><li class="navelem"><a class="el" href="dir_b383250e6a9804e003b118f7109c729e.4d9.del">ml</a></li><li class="navelem"><a class="el" href="dir_1811a8209f8e715bc8a18e4feda91876.8e9.del">pytorch</a></li><li class="navelem"><a class="el" href="dir_f195b792b3849e3339f1e297afbbd646.c14.del">misc</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">VoxelizeOpKernel.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="pytorch_2misc_2_voxelize_op_kernel_8h.d16.de">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">// ----------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// -                        Open3D: www.open3d.org                            -</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// ----------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">// Copyright (c) 2018-2023 www.open3d.org</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">// SPDX-License-Identifier: MIT</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">// ----------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160; </div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_torch_helper_8h.html">open3d/ml/pytorch/TorchHelper.h</a>&quot;</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &quot;torch/script.h&quot;</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160; </div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> T&gt;</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="keywordtype">void</span> <a class="code" href="pytorch_2misc_2_voxelize_op_kernel_8h.d16.de#a8fd6eb54ee211521c5f6ea348d431fff">VoxelizeCPU</a>(<span class="keyword">const</span> torch::Tensor&amp; <a class="code" href="io_2file__format_2_file_p_c_d_8cpp.375.delay#af7f8f4a4e39e09fdb5e9f02330ecabef">points</a>,</div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;                 <span class="keyword">const</span> torch::Tensor&amp; row_splits,</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;                 <span class="keyword">const</span> torch::Tensor&amp; voxel_size,</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;                 <span class="keyword">const</span> torch::Tensor&amp; points_range_min,</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;                 <span class="keyword">const</span> torch::Tensor&amp; points_range_max,</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;                 <span class="keyword">const</span> int64_t max_points_per_voxel,</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;                 <span class="keyword">const</span> int64_t max_voxels,</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;                 torch::Tensor&amp; voxel_coords,</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;                 torch::Tensor&amp; voxel_point_indices,</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;                 torch::Tensor&amp; voxel_point_row_splits,</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;                 torch::Tensor&amp; voxel_batch_splits);</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160; </div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#ifdef BUILD_CUDA_MODULE</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> T&gt;</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="keywordtype">void</span> VoxelizeCUDA(<span class="keyword">const</span> torch::Tensor&amp; <a class="code" href="io_2file__format_2_file_p_c_d_8cpp.375.delay#af7f8f4a4e39e09fdb5e9f02330ecabef">points</a>,</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;                  <span class="keyword">const</span> torch::Tensor&amp; row_splits,</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;                  <span class="keyword">const</span> torch::Tensor&amp; voxel_size,</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;                  <span class="keyword">const</span> torch::Tensor&amp; points_range_min,</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;                  <span class="keyword">const</span> torch::Tensor&amp; points_range_max,</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;                  <span class="keyword">const</span> int64_t max_points_per_voxel,</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;                  <span class="keyword">const</span> int64_t max_voxels,</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;                  torch::Tensor&amp; voxel_coords,</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;                  torch::Tensor&amp; voxel_point_indices,</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;                  torch::Tensor&amp; voxel_point_row_splits,</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;                  torch::Tensor&amp; voxel_batch_splits);</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160; </div>
<div class="line"><a name="l00041"></a><span class="lineno"><a class="line" href="class_voxelize_output_allocator.html">   41</a></span>&#160;<span class="keyword">class </span><a class="code" href="class_voxelize_output_allocator.html">VoxelizeOutputAllocator</a> {</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00043"></a><span class="lineno"><a class="line" href="class_voxelize_output_allocator.html#aef045bf8c65eace9c3b9824f173f0551">   43</a></span>&#160;    <a class="code" href="class_voxelize_output_allocator.html#aef045bf8c65eace9c3b9824f173f0551">VoxelizeOutputAllocator</a>(torch::DeviceType device_type, <span class="keywordtype">int</span> device_idx)</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;        : device_type(device_type), device_idx(device_idx) {}</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160; </div>
<div class="line"><a name="l00046"></a><span class="lineno"><a class="line" href="class_voxelize_output_allocator.html#a427fd56ae5e8c870cf2816e9097d45f9">   46</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="class_voxelize_output_allocator.html#a427fd56ae5e8c870cf2816e9097d45f9">AllocVoxelCoords</a>(<a class="code" href="namespaceopen3d_1_1io_1_1k4a__plugin.362.del#ae370181c942cf5617f0d21e0a29e1fe3">int32_t</a>** ptr, int64_t rows, int64_t cols) {</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;        voxel_coords = torch::empty({rows, cols},</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;                                    torch::dtype(<a class="code" href="_torch_helper_8h.html#ad419a42ad2cf7e0c6f4a72cc50089580">ToTorchDtype&lt;int32_t&gt;</a>())</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;                                            .device(device_type, device_idx));</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;        *ptr = voxel_coords.data_ptr&lt;<a class="code" href="namespaceopen3d_1_1io_1_1k4a__plugin.362.del#ae370181c942cf5617f0d21e0a29e1fe3">int32_t</a>&gt;();</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    }</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160; </div>
<div class="line"><a name="l00053"></a><span class="lineno"><a class="line" href="class_voxelize_output_allocator.html#a7169c9d0309f30fdd21d2449f3f0b8ab">   53</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="class_voxelize_output_allocator.html#a7169c9d0309f30fdd21d2449f3f0b8ab">AllocVoxelPointIndices</a>(int64_t** ptr, int64_t num) {</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;        voxel_point_indices =</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;                torch::empty({num}, torch::dtype(<a class="code" href="_torch_helper_8h.html#a0abf43e7f245c284dd516f2f05f24408">ToTorchDtype&lt;int64_t&gt;</a>())</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;                                            .device(device_type, device_idx));</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        *ptr = voxel_point_indices.data_ptr&lt;int64_t&gt;();</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    }</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160; </div>
<div class="line"><a name="l00060"></a><span class="lineno"><a class="line" href="class_voxelize_output_allocator.html#a148295a6ee85c785c071fdde1b2d0565">   60</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="class_voxelize_output_allocator.html#a148295a6ee85c785c071fdde1b2d0565">AllocVoxelPointRowSplits</a>(int64_t** ptr, int64_t num) {</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        voxel_point_row_splits =</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;                torch::empty({num}, torch::dtype(<a class="code" href="_torch_helper_8h.html#a0abf43e7f245c284dd516f2f05f24408">ToTorchDtype&lt;int64_t&gt;</a>())</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;                                            .device(device_type, device_idx));</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        *ptr = voxel_point_row_splits.data_ptr&lt;int64_t&gt;();</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    }</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160; </div>
<div class="line"><a name="l00067"></a><span class="lineno"><a class="line" href="class_voxelize_output_allocator.html#a3becd2d90038fff7aa116d371b093771">   67</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="class_voxelize_output_allocator.html#a3becd2d90038fff7aa116d371b093771">AllocVoxelBatchSplits</a>(int64_t** ptr, int64_t num) {</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        voxel_batch_splits =</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;                torch::empty({num}, torch::dtype(<a class="code" href="_torch_helper_8h.html#a0abf43e7f245c284dd516f2f05f24408">ToTorchDtype&lt;int64_t&gt;</a>())</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;                                            .device(device_type, device_idx));</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        *ptr = voxel_batch_splits.data_ptr&lt;int64_t&gt;();</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    }</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160; </div>
<div class="line"><a name="l00074"></a><span class="lineno"><a class="line" href="class_voxelize_output_allocator.html#af52deaf5fe7d00022506d100010faa6d">   74</a></span>&#160;    <span class="keyword">const</span> torch::Tensor&amp; <a class="code" href="class_voxelize_output_allocator.html#af52deaf5fe7d00022506d100010faa6d">VoxelCoords</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> voxel_coords; }</div>
<div class="line"><a name="l00075"></a><span class="lineno"><a class="line" href="class_voxelize_output_allocator.html#aba6454762dca45b2221f0731d5cb0412">   75</a></span>&#160;    <span class="keyword">const</span> torch::Tensor&amp; <a class="code" href="class_voxelize_output_allocator.html#aba6454762dca45b2221f0731d5cb0412">VoxelPointIndices</a>()<span class="keyword"> const </span>{</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        <span class="keywordflow">return</span> voxel_point_indices;</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    }</div>
<div class="line"><a name="l00078"></a><span class="lineno"><a class="line" href="class_voxelize_output_allocator.html#a73ac0424161b520fbcffac05e2617150">   78</a></span>&#160;    <span class="keyword">const</span> torch::Tensor&amp; <a class="code" href="class_voxelize_output_allocator.html#a73ac0424161b520fbcffac05e2617150">VoxelPointRowSplits</a>()<span class="keyword"> const </span>{</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        <span class="keywordflow">return</span> voxel_point_row_splits;</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    }</div>
<div class="line"><a name="l00081"></a><span class="lineno"><a class="line" href="class_voxelize_output_allocator.html#ac9c095c6ebff4984ce8f533a1a7a9bce">   81</a></span>&#160;    <span class="keyword">const</span> torch::Tensor&amp; <a class="code" href="class_voxelize_output_allocator.html#ac9c095c6ebff4984ce8f533a1a7a9bce">VoxelBatchSplits</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> voxel_batch_splits; }</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160; </div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    torch::Tensor voxel_coords;</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    torch::Tensor voxel_point_indices;</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    torch::Tensor voxel_point_row_splits;</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    torch::Tensor voxel_batch_splits;</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    torch::DeviceType device_type;</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <span class="keywordtype">int</span> device_idx;</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;};</div>
<div class="ttc" id="a_torch_helper_8h_html"><div class="ttname"><a href="_torch_helper_8h.html">TorchHelper.h</a></div></div>
<div class="ttc" id="a_torch_helper_8h_html_a0abf43e7f245c284dd516f2f05f24408"><div class="ttname"><a href="_torch_helper_8h.html#a0abf43e7f245c284dd516f2f05f24408">ToTorchDtype&lt; int64_t &gt;</a></div><div class="ttdeci">TorchDtype_t ToTorchDtype&lt; int64_t &gt;()</div><div class="ttdef"><b>Definition:</b> TorchHelper.h:76</div></div>
<div class="ttc" id="a_torch_helper_8h_html_ad419a42ad2cf7e0c6f4a72cc50089580"><div class="ttname"><a href="_torch_helper_8h.html#ad419a42ad2cf7e0c6f4a72cc50089580">ToTorchDtype&lt; int32_t &gt;</a></div><div class="ttdeci">TorchDtype_t ToTorchDtype&lt; int32_t &gt;()</div><div class="ttdef"><b>Definition:</b> TorchHelper.h:72</div></div>
<div class="ttc" id="aclass_voxelize_output_allocator_html"><div class="ttname"><a href="class_voxelize_output_allocator.html">VoxelizeOutputAllocator</a></div><div class="ttdef"><b>Definition:</b> VoxelizeOpKernel.h:41</div></div>
<div class="ttc" id="aclass_voxelize_output_allocator_html_a148295a6ee85c785c071fdde1b2d0565"><div class="ttname"><a href="class_voxelize_output_allocator.html#a148295a6ee85c785c071fdde1b2d0565">VoxelizeOutputAllocator::AllocVoxelPointRowSplits</a></div><div class="ttdeci">void AllocVoxelPointRowSplits(int64_t **ptr, int64_t num)</div><div class="ttdef"><b>Definition:</b> VoxelizeOpKernel.h:60</div></div>
<div class="ttc" id="aclass_voxelize_output_allocator_html_a3becd2d90038fff7aa116d371b093771"><div class="ttname"><a href="class_voxelize_output_allocator.html#a3becd2d90038fff7aa116d371b093771">VoxelizeOutputAllocator::AllocVoxelBatchSplits</a></div><div class="ttdeci">void AllocVoxelBatchSplits(int64_t **ptr, int64_t num)</div><div class="ttdef"><b>Definition:</b> VoxelizeOpKernel.h:67</div></div>
<div class="ttc" id="aclass_voxelize_output_allocator_html_a427fd56ae5e8c870cf2816e9097d45f9"><div class="ttname"><a href="class_voxelize_output_allocator.html#a427fd56ae5e8c870cf2816e9097d45f9">VoxelizeOutputAllocator::AllocVoxelCoords</a></div><div class="ttdeci">void AllocVoxelCoords(int32_t **ptr, int64_t rows, int64_t cols)</div><div class="ttdef"><b>Definition:</b> VoxelizeOpKernel.h:46</div></div>
<div class="ttc" id="aclass_voxelize_output_allocator_html_a7169c9d0309f30fdd21d2449f3f0b8ab"><div class="ttname"><a href="class_voxelize_output_allocator.html#a7169c9d0309f30fdd21d2449f3f0b8ab">VoxelizeOutputAllocator::AllocVoxelPointIndices</a></div><div class="ttdeci">void AllocVoxelPointIndices(int64_t **ptr, int64_t num)</div><div class="ttdef"><b>Definition:</b> VoxelizeOpKernel.h:53</div></div>
<div class="ttc" id="aclass_voxelize_output_allocator_html_a73ac0424161b520fbcffac05e2617150"><div class="ttname"><a href="class_voxelize_output_allocator.html#a73ac0424161b520fbcffac05e2617150">VoxelizeOutputAllocator::VoxelPointRowSplits</a></div><div class="ttdeci">const torch::Tensor &amp; VoxelPointRowSplits() const</div><div class="ttdef"><b>Definition:</b> VoxelizeOpKernel.h:78</div></div>
<div class="ttc" id="aclass_voxelize_output_allocator_html_aba6454762dca45b2221f0731d5cb0412"><div class="ttname"><a href="class_voxelize_output_allocator.html#aba6454762dca45b2221f0731d5cb0412">VoxelizeOutputAllocator::VoxelPointIndices</a></div><div class="ttdeci">const torch::Tensor &amp; VoxelPointIndices() const</div><div class="ttdef"><b>Definition:</b> VoxelizeOpKernel.h:75</div></div>
<div class="ttc" id="aclass_voxelize_output_allocator_html_ac9c095c6ebff4984ce8f533a1a7a9bce"><div class="ttname"><a href="class_voxelize_output_allocator.html#ac9c095c6ebff4984ce8f533a1a7a9bce">VoxelizeOutputAllocator::VoxelBatchSplits</a></div><div class="ttdeci">const torch::Tensor &amp; VoxelBatchSplits() const</div><div class="ttdef"><b>Definition:</b> VoxelizeOpKernel.h:81</div></div>
<div class="ttc" id="aclass_voxelize_output_allocator_html_aef045bf8c65eace9c3b9824f173f0551"><div class="ttname"><a href="class_voxelize_output_allocator.html#aef045bf8c65eace9c3b9824f173f0551">VoxelizeOutputAllocator::VoxelizeOutputAllocator</a></div><div class="ttdeci">VoxelizeOutputAllocator(torch::DeviceType device_type, int device_idx)</div><div class="ttdef"><b>Definition:</b> VoxelizeOpKernel.h:43</div></div>
<div class="ttc" id="aclass_voxelize_output_allocator_html_af52deaf5fe7d00022506d100010faa6d"><div class="ttname"><a href="class_voxelize_output_allocator.html#af52deaf5fe7d00022506d100010faa6d">VoxelizeOutputAllocator::VoxelCoords</a></div><div class="ttdeci">const torch::Tensor &amp; VoxelCoords() const</div><div class="ttdef"><b>Definition:</b> VoxelizeOpKernel.h:74</div></div>
<div class="ttc" id="aio_2file__format_2_file_p_c_d_8cpp_html_af7f8f4a4e39e09fdb5e9f02330ecabef"><div class="ttname"><a href="io_2file__format_2_file_p_c_d_8cpp.375.delay#af7f8f4a4e39e09fdb5e9f02330ecabef">points</a></div><div class="ttdeci">int points</div><div class="ttdef"><b>Definition:</b> FilePCD.cpp:54</div></div>
<div class="ttc" id="anamespaceopen3d_1_1io_1_1k4a__plugin_html_ae370181c942cf5617f0d21e0a29e1fe3"><div class="ttname"><a href="namespaceopen3d_1_1io_1_1k4a__plugin.362.del#ae370181c942cf5617f0d21e0a29e1fe3">open3d::io::k4a_plugin::int32_t</a></div><div class="ttdeci">const char const char value recording_handle imu_sample recording_handle uint8_t size_t data_size k4a_record_configuration_t config target_format k4a_capture_t capture_handle k4a_imu_sample_t imu_sample playback_handle k4a_logging_message_cb_t void min_level device_handle k4a_imu_sample_t int32_t</div><div class="ttdef"><b>Definition:</b> K4aPlugin.cpp:395</div></div>
<div class="ttc" id="apytorch_2misc_2_voxelize_op_kernel_8h_html_a8fd6eb54ee211521c5f6ea348d431fff"><div class="ttname"><a href="pytorch_2misc_2_voxelize_op_kernel_8h.d16.de#a8fd6eb54ee211521c5f6ea348d431fff">VoxelizeCPU</a></div><div class="ttdeci">void VoxelizeCPU(const torch::Tensor &amp;points, const torch::Tensor &amp;row_splits, const torch::Tensor &amp;voxel_size, const torch::Tensor &amp;points_range_min, const torch::Tensor &amp;points_range_max, const int64_t max_points_per_voxel, const int64_t max_voxels, torch::Tensor &amp;voxel_coords, torch::Tensor &amp;voxel_point_indices, torch::Tensor &amp;voxel_point_row_splits, torch::Tensor &amp;voxel_batch_splits)</div><div class="ttdef"><b>Definition:</b> VoxelizeOpKernel.cpp:18</div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1
</small></address>
</body>

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/pytorch_2misc_2_voxelize_op_kernel_8h_source.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 11:04:59 GMT -->
</html>
