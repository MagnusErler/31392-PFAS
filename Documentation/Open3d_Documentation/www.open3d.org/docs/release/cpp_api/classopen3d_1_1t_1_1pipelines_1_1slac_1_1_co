<!-- HTML header for doxygen 1.8.20-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/classopen3d_1_1t_1_1pipelines_1_1slac_1_1_control_grid.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 11:02:18 GMT -->
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Open3D (C++ API): open3d::t::pipelines::slac::ControlGrid Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js", "TeX/AMSmath.html", "TeX/AMSsymbols.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="../../../../cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-3TQPKGV6Z3"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());
  gtag('config', 'G-3TQPKGV6Z3');
</script>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="open3d_logo.ico"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Open3D (C++ API)
   &#160;<span id="projectnumber">0.17.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.html');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.html','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceopen3d.html">open3d</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1t.html">t</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1t_1_1pipelines.33e.delaye">pipelines</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1t_1_1pipelines_1_1slac.49">slac</a></li><li class="navelem"><a class="el" href="classopen3d_1_1t_1_1pipelines_1_1slac_1_1_co">ControlGrid</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-attribs">Static Public Attributes</a>  </div>
  <div class="headertitle">
<div class="title">open3d::t::pipelines::slac::ControlGrid Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_control_grid_8h_source.html">ControlGrid.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a3e55059fe9bc204609765c8dbe574124"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1pipelines_1_1slac_1_1_co#a3e55059fe9bc204609765c8dbe574124">ControlGrid</a> ()=default</td></tr>
<tr class="memdesc:a3e55059fe9bc204609765c8dbe574124"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor.  <a href="classopen3d_1_1t_1_1pipelines_1_1slac_1_1_co#a3e55059fe9bc204609765c8dbe574124">More...</a><br /></td></tr>
<tr class="separator:a3e55059fe9bc204609765c8dbe574124"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a08f80efe9cd50d72735c54779a7e2f31"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1pipelines_1_1slac_1_1_co#a08f80efe9cd50d72735c54779a7e2f31">ControlGrid</a> (float grid_size, int64_t grid_count=1000, const <a class="el" href="classopen3d_1_1core_1_1_device.html">core::Device</a> &amp;device=<a class="el" href="classopen3d_1_1core_1_1_device.html">core::Device</a>(&quot;CPU:0&quot;))</td></tr>
<tr class="memdesc:a08f80efe9cd50d72735c54779a7e2f31"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor with initial grid size and grid count estimation.  <a href="classopen3d_1_1t_1_1pipelines_1_1slac_1_1_co#a08f80efe9cd50d72735c54779a7e2f31">More...</a><br /></td></tr>
<tr class="separator:a08f80efe9cd50d72735c54779a7e2f31"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aceed12fc93b645e134572f96fe68668f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1pipelines_1_1slac_1_1_co#aceed12fc93b645e134572f96fe68668f">ControlGrid</a> (float grid_size, const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;keys, const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;values, const <a class="el" href="classopen3d_1_1core_1_1_device.html">core::Device</a> &amp;device=<a class="el" href="classopen3d_1_1core_1_1_device.html">core::Device</a>(&quot;CPU:0&quot;))</td></tr>
<tr class="separator:aceed12fc93b645e134572f96fe68668f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a35586f4ed8f993ea584b3c69272be7cb"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1pipelines_1_1slac_1_1_co#a35586f4ed8f993ea584b3c69272be7cb">Touch</a> (const <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_point_cloud">geometry::PointCloud</a> &amp;pcd)</td></tr>
<tr class="memdesc:a35586f4ed8f993ea584b3c69272be7cb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allocate control grids in the shared camera space.  <a href="classopen3d_1_1t_1_1pipelines_1_1slac_1_1_co#a35586f4ed8f993ea584b3c69272be7cb">More...</a><br /></td></tr>
<tr class="separator:a35586f4ed8f993ea584b3c69272be7cb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af7a3696df27d7063199bcc050d81a056"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1pipelines_1_1slac_1_1_co#af7a3696df27d7063199bcc050d81a056">Compactify</a> ()</td></tr>
<tr class="separator:af7a3696df27d7063199bcc050d81a056"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac9fb0dead9a4b8c56f0047a563a7eca5"><td class="memItemLeft" align="right" valign="top">std::tuple&lt; <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a>, <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a>, <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1pipelines_1_1slac_1_1_co#ac9fb0dead9a4b8c56f0047a563a7eca5">GetNeighborGridMap</a> ()</td></tr>
<tr class="separator:ac9fb0dead9a4b8c56f0047a563a7eca5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae61bde559e754c1076335a54e0e33f76"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_point_cloud">geometry::PointCloud</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1pipelines_1_1slac_1_1_co#ae61bde559e754c1076335a54e0e33f76">Parameterize</a> (const <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_point_cloud">geometry::PointCloud</a> &amp;pcd)</td></tr>
<tr class="separator:ae61bde559e754c1076335a54e0e33f76"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0d157b93bee4d495f256ec66a7374c91"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_point_cloud">geometry::PointCloud</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1pipelines_1_1slac_1_1_co#a0d157b93bee4d495f256ec66a7374c91">Deform</a> (const <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_point_cloud">geometry::PointCloud</a> &amp;pcd)</td></tr>
<tr class="memdesc:a0d157b93bee4d495f256ec66a7374c91"><td class="mdescLeft">&#160;</td><td class="mdescRight">Non-rigidly deform a point cloud using the control grid.  <a href="classopen3d_1_1t_1_1pipelines_1_1slac_1_1_co#a0d157b93bee4d495f256ec66a7374c91">More...</a><br /></td></tr>
<tr class="separator:a0d157b93bee4d495f256ec66a7374c91"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9b08f5cf6e7e1d1751ddf240318c9c84"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_image.34e.d">geometry::Image</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1pipelines_1_1slac_1_1_co#a9b08f5cf6e7e1d1751ddf240318c9c84">Deform</a> (const <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_image.34e.d">geometry::Image</a> &amp;depth, const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;intrinsics, const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;extrinsics, float depth_scale, float depth_max)</td></tr>
<tr class="separator:a9b08f5cf6e7e1d1751ddf240318c9c84"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1588c3f73e9618a0f5e7113e7f3a7268"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_r_g_b_d_ima">geometry::RGBDImage</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1pipelines_1_1slac_1_1_co#a1588c3f73e9618a0f5e7113e7f3a7268">Deform</a> (const <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_r_g_b_d_ima">geometry::RGBDImage</a> &amp;rgbd, const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;intrinsics, const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;extrinsics, float depth_scale, float depth_max)</td></tr>
<tr class="separator:a1588c3f73e9618a0f5e7113e7f3a7268"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5e4c19daca8eca49df7eb54a3219634b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1pipelines_1_1slac_1_1_co#a5e4c19daca8eca49df7eb54a3219634b">GetInitPositions</a> ()</td></tr>
<tr class="memdesc:a5e4c19daca8eca49df7eb54a3219634b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get control grid original positions directly from tensor keys.  <a href="classopen3d_1_1t_1_1pipelines_1_1slac_1_1_co#a5e4c19daca8eca49df7eb54a3219634b">More...</a><br /></td></tr>
<tr class="separator:a5e4c19daca8eca49df7eb54a3219634b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a695c3b23862080deb1354e75948ba28c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1pipelines_1_1slac_1_1_co#a695c3b23862080deb1354e75948ba28c">GetCurrPositions</a> ()</td></tr>
<tr class="separator:a695c3b23862080deb1354e75948ba28c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3ed3230f931d1a47369e6dd883f63303"><td class="memItemLeft" align="right" valign="top">std::shared_ptr&lt; <a class="el" href="classopen3d_1_1core_1_1_hash_map.html">core::HashMap</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1pipelines_1_1slac_1_1_co#a3ed3230f931d1a47369e6dd883f63303">GetHashMap</a> ()</td></tr>
<tr class="separator:a3ed3230f931d1a47369e6dd883f63303"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa10b596e75942ef3fa1065737773304b"><td class="memItemLeft" align="right" valign="top">int64_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1pipelines_1_1slac_1_1_co#aa10b596e75942ef3fa1065737773304b">Size</a> ()</td></tr>
<tr class="separator:aa10b596e75942ef3fa1065737773304b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7aa4da7940ddcfc2bba066720e8607d7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1core_1_1_device.html">core::Device</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1pipelines_1_1slac_1_1_co#a7aa4da7940ddcfc2bba066720e8607d7">GetDevice</a> ()</td></tr>
<tr class="separator:a7aa4da7940ddcfc2bba066720e8607d7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a04f6bbe84ee18d4d251a8aec43a1de1b"><td class="memItemLeft" align="right" valign="top">int64_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1pipelines_1_1slac_1_1_co#a04f6bbe84ee18d4d251a8aec43a1de1b">GetAnchorIdx</a> ()</td></tr>
<tr class="separator:a04f6bbe84ee18d4d251a8aec43a1de1b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-attribs"></a>
Static Public Attributes</h2></td></tr>
<tr class="memitem:a070c2592ee4b64b8edacfb219ab1039f"><td class="memItemLeft" align="right" valign="top">static const std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1pipelines_1_1slac_1_1_co#a070c2592ee4b64b8edacfb219ab1039f">kGrid8NbIndices</a> = &quot;Grid8NbIndices&quot;</td></tr>
<tr class="separator:a070c2592ee4b64b8edacfb219ab1039f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2469152defdd394a8e243bae83f9cad2"><td class="memItemLeft" align="right" valign="top">static const std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1pipelines_1_1slac_1_1_co#a2469152defdd394a8e243bae83f9cad2">kGrid8NbVertexInterpRatios</a></td></tr>
<tr class="memdesc:a2469152defdd394a8e243bae83f9cad2"><td class="mdescLeft">&#160;</td><td class="mdescRight">8 neighbor grid interpolation ratio for vertex per point.  <a href="classopen3d_1_1t_1_1pipelines_1_1slac_1_1_co#a2469152defdd394a8e243bae83f9cad2">More...</a><br /></td></tr>
<tr class="separator:a2469152defdd394a8e243bae83f9cad2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac32e299de6f720a56c915414a5851812"><td class="memItemLeft" align="right" valign="top">static const std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1t_1_1pipelines_1_1slac_1_1_co#ac32e299de6f720a56c915414a5851812">kGrid8NbNormalInterpRatios</a></td></tr>
<tr class="memdesc:ac32e299de6f720a56c915414a5851812"><td class="mdescLeft">&#160;</td><td class="mdescRight">8 neighbor grid interpolation ratio for normal per point.  <a href="classopen3d_1_1t_1_1pipelines_1_1slac_1_1_co#ac32e299de6f720a56c915414a5851812">More...</a><br /></td></tr>
<tr class="separator:ac32e299de6f720a56c915414a5851812"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p><a class="el" href="classopen3d_1_1t_1_1pipelines_1_1slac_1_1_co">ControlGrid</a> is a spatially hashed voxel grid used for non-rigid point cloud registration and TSDF integration. Each grid stores a map from the initial grid location to the deformed location. You can imagine a control grid as a jelly that is warped upon perturbation with its overall shape preserved. Reference: <a href="https://github.com/qianyizh/ElasticReconstruction/blob/master/FragmentOptimizer/OptApp.cpp">https://github.com/qianyizh/ElasticReconstruction/blob/master/FragmentOptimizer/OptApp.cpp</a> <a href="http://vladlen.info/papers/elastic-fragments.pdf">http://vladlen.info/papers/elastic-fragments.pdf</a> </p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a3e55059fe9bc204609765c8dbe574124"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3e55059fe9bc204609765c8dbe574124">&#9670;&nbsp;</a></span>ControlGrid() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">open3d::t::pipelines::slac::ControlGrid::ControlGrid </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Default constructor. </p>

</div>
</div>
<a id="a08f80efe9cd50d72735c54779a7e2f31"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a08f80efe9cd50d72735c54779a7e2f31">&#9670;&nbsp;</a></span>ControlGrid() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">open3d::t::pipelines::slac::ControlGrid::ControlGrid </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>grid_size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int64_t&#160;</td>
          <td class="paramname"><em>grid_count</em> = <code>1000</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_device.html">core::Device</a> &amp;&#160;</td>
          <td class="paramname"><em>device</em> = <code><a class="el" href="classopen3d_1_1core_1_1_device.html">core::Device</a>(&quot;CPU:0&quot;)</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constructor with initial grid size and grid count estimation. </p>

</div>
</div>
<a id="aceed12fc93b645e134572f96fe68668f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aceed12fc93b645e134572f96fe68668f">&#9670;&nbsp;</a></span>ControlGrid() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">open3d::t::pipelines::slac::ControlGrid::ControlGrid </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>grid_size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>keys</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>values</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_device.html">core::Device</a> &amp;&#160;</td>
          <td class="paramname"><em>device</em> = <code><a class="el" href="classopen3d_1_1core_1_1_device.html">core::Device</a>(&quot;CPU:0&quot;)</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Constructor with known keys (Int32 x 3 positions) and values (Float32 x 3 shifted positions). </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="af7a3696df27d7063199bcc050d81a056"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af7a3696df27d7063199bcc050d81a056">&#9670;&nbsp;</a></span>Compactify()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::t::pipelines::slac::ControlGrid::Compactify </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Force rehashing, so that all entries are remapped to [0, size) and form a contiguous index map. </p>

</div>
</div>
<a id="a9b08f5cf6e7e1d1751ddf240318c9c84"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9b08f5cf6e7e1d1751ddf240318c9c84">&#9670;&nbsp;</a></span>Deform() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_image.34e.d">geometry::Image</a> open3d::t::pipelines::slac::ControlGrid::Deform </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_image.34e.d">geometry::Image</a> &amp;&#160;</td>
          <td class="paramname"><em>depth</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>intrinsics</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>extrinsics</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>depth_scale</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>depth_max</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Non-rigidly deform a depth image by</p><ul>
<li>unprojecting the depth image to a point cloud;</li>
<li>deform the point cloud;</li>
<li>project the deformed point cloud back to the image. </li>
</ul>

</div>
</div>
<a id="a0d157b93bee4d495f256ec66a7374c91"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0d157b93bee4d495f256ec66a7374c91">&#9670;&nbsp;</a></span>Deform() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_point_cloud">geometry::PointCloud</a> open3d::t::pipelines::slac::ControlGrid::Deform </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_point_cloud">geometry::PointCloud</a> &amp;&#160;</td>
          <td class="paramname"><em>pcd</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Non-rigidly deform a point cloud using the control grid. </p>

</div>
</div>
<a id="a1588c3f73e9618a0f5e7113e7f3a7268"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1588c3f73e9618a0f5e7113e7f3a7268">&#9670;&nbsp;</a></span>Deform() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_r_g_b_d_ima">geometry::RGBDImage</a> open3d::t::pipelines::slac::ControlGrid::Deform </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_r_g_b_d_ima">geometry::RGBDImage</a> &amp;&#160;</td>
          <td class="paramname"><em>rgbd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>intrinsics</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>extrinsics</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>depth_scale</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>depth_max</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Non-rigidly deform an RGBD image by</p><ul>
<li>unprojecting the depth image to a point cloud;</li>
<li>deform the point cloud;</li>
<li>project the deformed point cloud back to the image. </li>
</ul>

</div>
</div>
<a id="a04f6bbe84ee18d4d251a8aec43a1de1b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a04f6bbe84ee18d4d251a8aec43a1de1b">&#9670;&nbsp;</a></span>GetAnchorIdx()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int64_t open3d::t::pipelines::slac::ControlGrid::GetAnchorIdx </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a695c3b23862080deb1354e75948ba28c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a695c3b23862080deb1354e75948ba28c">&#9670;&nbsp;</a></span>GetCurrPositions()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> open3d::t::pipelines::slac::ControlGrid::GetCurrPositions </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Get control grid shifted positions from tensor values (optimized in-place). </p>

</div>
</div>
<a id="a7aa4da7940ddcfc2bba066720e8607d7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7aa4da7940ddcfc2bba066720e8607d7">&#9670;&nbsp;</a></span>GetDevice()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1core_1_1_device.html">core::Device</a> open3d::t::pipelines::slac::ControlGrid::GetDevice </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a3ed3230f931d1a47369e6dd883f63303"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3ed3230f931d1a47369e6dd883f63303">&#9670;&nbsp;</a></span>GetHashMap()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::shared_ptr&lt;<a class="el" href="classopen3d_1_1core_1_1_hash_map.html">core::HashMap</a>&gt; open3d::t::pipelines::slac::ControlGrid::GetHashMap </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a5e4c19daca8eca49df7eb54a3219634b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5e4c19daca8eca49df7eb54a3219634b">&#9670;&nbsp;</a></span>GetInitPositions()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> open3d::t::pipelines::slac::ControlGrid::GetInitPositions </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get control grid original positions directly from tensor keys. </p>

</div>
</div>
<a id="ac9fb0dead9a4b8c56f0047a563a7eca5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac9fb0dead9a4b8c56f0047a563a7eca5">&#9670;&nbsp;</a></span>GetNeighborGridMap()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::tuple&lt; <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a>, <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a>, <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &gt; open3d::t::pipelines::slac::ControlGrid::GetNeighborGridMap </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Get the neighbor indices per grid to construct the regularizer. </p><dl class="section return"><dt>Returns</dt><dd>A 6-way neighbor grid map for all the active entries of shape (N, ).<ul>
<li>buf_indices Active indices in the buffer of shape (N, )</li>
<li>buf_indices_nb Neighbor indices (including non-allocated entries) for the active entries of shape (N, 6).</li>
<li>masks_nb Corresponding neighbor masks of shape (N, 6). </li>
</ul>
</dd></dl>

</div>
</div>
<a id="ae61bde559e754c1076335a54e0e33f76"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae61bde559e754c1076335a54e0e33f76">&#9670;&nbsp;</a></span>Parameterize()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1t_1_1geometry_1_1_point_cloud">geometry::PointCloud</a> open3d::t::pipelines::slac::ControlGrid::Parameterize </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_point_cloud">geometry::PointCloud</a> &amp;&#160;</td>
          <td class="paramname"><em>pcd</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Parameterize an input point cloud by embedding each point in the grid with 8 corners via indexing and interpolation. </p><dl class="section return"><dt>Returns</dt><dd>A PointCloud with parameterization attributes:<ul>
<li>neighbors: Index of 8 neighbor control grid points of shape (8, ) in Int64.</li>
<li>ratios: Interpolation ratios of 8 neighbor control grid points of shape (8, ) in Float32. </li>
</ul>
</dd></dl>
<p>TODO(wei): allow entries with less than 8 neighbors, probably in a kernel. Now we simply discard them and only accepts points with all 8 neighbors in the control grid map.</p>

</div>
</div>
<a id="aa10b596e75942ef3fa1065737773304b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa10b596e75942ef3fa1065737773304b">&#9670;&nbsp;</a></span>Size()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int64_t open3d::t::pipelines::slac::ControlGrid::Size </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a35586f4ed8f993ea584b3c69272be7cb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a35586f4ed8f993ea584b3c69272be7cb">&#9670;&nbsp;</a></span>Touch()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::t::pipelines::slac::ControlGrid::Touch </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1t_1_1geometry_1_1_point_cloud">geometry::PointCloud</a> &amp;&#160;</td>
          <td class="paramname"><em>pcd</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Allocate control grids in the shared camera space. </p>

</div>
</div>
<h2 class="groupheader">Field Documentation</h2>
<a id="a070c2592ee4b64b8edacfb219ab1039f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a070c2592ee4b64b8edacfb219ab1039f">&#9670;&nbsp;</a></span>kGrid8NbIndices</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const std::string open3d::t::pipelines::slac::ControlGrid::kGrid8NbIndices = &quot;Grid8NbIndices&quot;</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Attributes used to extend the point cloud to support neighbor lookup. 8 neighbor grid index per point. </p>

</div>
</div>
<a id="ac32e299de6f720a56c915414a5851812"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac32e299de6f720a56c915414a5851812">&#9670;&nbsp;</a></span>kGrid8NbNormalInterpRatios</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const std::string open3d::t::pipelines::slac::ControlGrid::kGrid8NbNormalInterpRatios</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">=</div>
<div class="line">        <span class="stringliteral">&quot;Grid8NbNormalInterpRatios&quot;</span></div>
</div><!-- fragment -->
<p>8 neighbor grid interpolation ratio for normal per point. </p>

</div>
</div>
<a id="a2469152defdd394a8e243bae83f9cad2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2469152defdd394a8e243bae83f9cad2">&#9670;&nbsp;</a></span>kGrid8NbVertexInterpRatios</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const std::string open3d::t::pipelines::slac::ControlGrid::kGrid8NbVertexInterpRatios</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">=</div>
<div class="line">        <span class="stringliteral">&quot;Grid8NbVertexInterpRatios&quot;</span></div>
</div><!-- fragment -->
<p>8 neighbor grid interpolation ratio for vertex per point. </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/runner/work/Open3D/Open3D/cpp/open3d/t/pipelines/slac/<a class="el" href="_control_grid_8h_source.html">ControlGrid.h (9238339 (Tue Mar 14 18:49:09 2023 -0700))</a></li>
<li>/home/runner/work/Open3D/Open3D/cpp/open3d/t/pipelines/slac/<a class="el" href="_control_grid_8cpp.html">ControlGrid.cpp (9238339 (Tue Mar 14 18:49:09 2023 -0700))</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1
</small></address>
</body>

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/classopen3d_1_1t_1_1pipelines_1_1slac_1_1_control_grid.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 11:02:18 GMT -->
</html>
