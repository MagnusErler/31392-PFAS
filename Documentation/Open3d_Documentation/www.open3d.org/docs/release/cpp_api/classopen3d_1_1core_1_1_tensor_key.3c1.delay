<!-- HTML header for doxygen 1.8.20-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/classopen3d_1_1core_1_1_tensor_key.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 10:55:24 GMT -->
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Open3D (C++ API): open3d::core::TensorKey Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js", "TeX/AMSmath.html", "TeX/AMSsymbols.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="../../../../cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-3TQPKGV6Z3"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());
  gtag('config', 'G-3TQPKGV6Z3');
</script>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="open3d_logo.ico"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Open3D (C++ API)
   &#160;<span id="projectnumber">0.17.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.html');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.html','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceopen3d.html">open3d</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1core.html">core</a></li><li class="navelem"><a class="el" href="classopen3d_1_1core_1_1_tensor_key.3c1.delay">TensorKey</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">open3d::core::TensorKey Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><a class="el" href="classopen3d_1_1core_1_1_tensor_key.3c1.delay" title="TensorKey is used to represent single index, slice or advanced indexing on a Tensor.">TensorKey</a> is used to represent single index, slice or advanced indexing on a <a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a>.  
 <a href="classopen3d_1_1core_1_1_tensor_key.3c1.delay#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_tensor_key_8h_source.html">TensorKey.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_tensor_key_1_1_impl">Impl</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_tensor_key_1_1_index">IndexImpl</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_tensor_key_1_1_index-2">IndexTensorImpl</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_tensor_key_1_1_slice">SliceImpl</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a4a2628d6ae08ae1c99c444f22ea699dc"><td class="memItemLeft" align="right" valign="top">enum class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_tensor_key.3c1.delay#a4a2628d6ae08ae1c99c444f22ea699dc">TensorKeyMode</a> { <a class="el" href="classopen3d_1_1core_1_1_tensor_key.3c1.delay#a4a2628d6ae08ae1c99c444f22ea699dca88fa71f0a6e0dfedbb46d91cc0b37a50">Index</a>
, <a class="el" href="classopen3d_1_1core_1_1_tensor_key.3c1.delay#a4a2628d6ae08ae1c99c444f22ea699dcad140d37ad98c12ccd8e1c432f548bcdb">Slice</a>
, <a class="el" href="classopen3d_1_1core_1_1_tensor_key.3c1.delay#a4a2628d6ae08ae1c99c444f22ea699dca8c16fa230bf8f37addb91824af06f3f0">IndexTensor</a>
 }</td></tr>
<tr class="separator:a4a2628d6ae08ae1c99c444f22ea699dc"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a74ff7715b4c0bfe25a740a1295cbe910"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_tensor_key.3c1.delay#a74ff7715b4c0bfe25a740a1295cbe910">~TensorKey</a> ()</td></tr>
<tr class="separator:a74ff7715b4c0bfe25a740a1295cbe910"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a655a9c13efafd1e4cee2f49a05614348"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1core_1_1_tensor_key.3c1.delay#a4a2628d6ae08ae1c99c444f22ea699dc">TensorKeyMode</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_tensor_key.3c1.delay#a655a9c13efafd1e4cee2f49a05614348">GetMode</a> () const</td></tr>
<tr class="memdesc:a655a9c13efafd1e4cee2f49a05614348"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns <a class="el" href="classopen3d_1_1core_1_1_tensor_key.3c1.delay" title="TensorKey is used to represent single index, slice or advanced indexing on a Tensor.">TensorKey</a> mode.  <a href="classopen3d_1_1core_1_1_tensor_key.3c1.delay#a655a9c13efafd1e4cee2f49a05614348">More...</a><br /></td></tr>
<tr class="separator:a655a9c13efafd1e4cee2f49a05614348"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a074bb143cdef653cff2d2378f47fe030"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_tensor_key.3c1.delay#a074bb143cdef653cff2d2378f47fe030">ToString</a> () const</td></tr>
<tr class="memdesc:a074bb143cdef653cff2d2378f47fe030"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convert <a class="el" href="classopen3d_1_1core_1_1_tensor_key.3c1.delay" title="TensorKey is used to represent single index, slice or advanced indexing on a Tensor.">TensorKey</a> to a string representation.  <a href="classopen3d_1_1core_1_1_tensor_key.3c1.delay#a074bb143cdef653cff2d2378f47fe030">More...</a><br /></td></tr>
<tr class="separator:a074bb143cdef653cff2d2378f47fe030"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a19ff04b23747e7472b9a43093f9dd242"><td class="memItemLeft" align="right" valign="top">int64_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_tensor_key.3c1.delay#a19ff04b23747e7472b9a43093f9dd242">GetIndex</a> () const</td></tr>
<tr class="separator:a19ff04b23747e7472b9a43093f9dd242"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0084d140a91207dc9b5434f56973755b"><td class="memItemLeft" align="right" valign="top">int64_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_tensor_key.3c1.delay#a0084d140a91207dc9b5434f56973755b">GetStart</a> () const</td></tr>
<tr class="separator:a0084d140a91207dc9b5434f56973755b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1b6ca62a20715786b50647a62f898104"><td class="memItemLeft" align="right" valign="top">int64_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_tensor_key.3c1.delay#a1b6ca62a20715786b50647a62f898104">GetStop</a> () const</td></tr>
<tr class="separator:a1b6ca62a20715786b50647a62f898104"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad5892e13ef534a03380874b60b3bda8e"><td class="memItemLeft" align="right" valign="top">int64_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_tensor_key.3c1.delay#ad5892e13ef534a03380874b60b3bda8e">GetStep</a> () const</td></tr>
<tr class="separator:ad5892e13ef534a03380874b60b3bda8e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a98561488d91e5ee8bcd0cf221eddb745"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1core_1_1_tensor_key.3c1.delay">TensorKey</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_tensor_key.3c1.delay#a98561488d91e5ee8bcd0cf221eddb745">InstantiateDimSize</a> (int64_t dim_size) const</td></tr>
<tr class="separator:a98561488d91e5ee8bcd0cf221eddb745"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1a70731550e51b88e9819c37ab68baf3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_tensor_key.3c1.delay#a1a70731550e51b88e9819c37ab68baf3">GetIndexTensor</a> () const</td></tr>
<tr class="separator:a1a70731550e51b88e9819c37ab68baf3"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a11d5aaa50141748080c034822964a13b"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classopen3d_1_1core_1_1_tensor_key.3c1.delay">TensorKey</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_tensor_key.3c1.delay#a11d5aaa50141748080c034822964a13b">Index</a> (int64_t index)</td></tr>
<tr class="separator:a11d5aaa50141748080c034822964a13b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3c26ded7888007ebdb4154bd97e488e4"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classopen3d_1_1core_1_1_tensor_key.3c1.delay">TensorKey</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_tensor_key.3c1.delay#a3c26ded7888007ebdb4154bd97e488e4">Slice</a> (<a class="el" href="classopen3d_1_1utility_1_1optional.3c6.delay">utility::optional</a>&lt; int64_t &gt; start, <a class="el" href="classopen3d_1_1utility_1_1optional.3c6.delay">utility::optional</a>&lt; int64_t &gt; stop, <a class="el" href="classopen3d_1_1utility_1_1optional.3c6.delay">utility::optional</a>&lt; int64_t &gt; step)</td></tr>
<tr class="separator:a3c26ded7888007ebdb4154bd97e488e4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7228b06764b43b9c4b84ce1e1f342d08"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classopen3d_1_1core_1_1_tensor_key.3c1.delay">TensorKey</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1core_1_1_tensor_key.3c1.delay#a7228b06764b43b9c4b84ce1e1f342d08">IndexTensor</a> (const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a> &amp;index_tensor)</td></tr>
<tr class="separator:a7228b06764b43b9c4b84ce1e1f342d08"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p><a class="el" href="classopen3d_1_1core_1_1_tensor_key.3c1.delay" title="TensorKey is used to represent single index, slice or advanced indexing on a Tensor.">TensorKey</a> is used to represent single index, slice or advanced indexing on a <a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a>. </p>
<p>See <a href="https://numpy.org/doc/stable/reference/arrays.indexing.html">https://numpy.org/doc/stable/reference/arrays.indexing.html</a> for details. </p>
</div><h2 class="groupheader">Member Enumeration Documentation</h2>
<a id="a4a2628d6ae08ae1c99c444f22ea699dc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4a2628d6ae08ae1c99c444f22ea699dc">&#9670;&nbsp;</a></span>TensorKeyMode</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="classopen3d_1_1core_1_1_tensor_key.3c1.delay#a4a2628d6ae08ae1c99c444f22ea699dc">open3d::core::TensorKey::TensorKeyMode</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a4a2628d6ae08ae1c99c444f22ea699dca88fa71f0a6e0dfedbb46d91cc0b37a50"></a>Index&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a4a2628d6ae08ae1c99c444f22ea699dcad140d37ad98c12ccd8e1c432f548bcdb"></a>Slice&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a4a2628d6ae08ae1c99c444f22ea699dca8c16fa230bf8f37addb91824af06f3f0"></a>IndexTensor&#160;</td><td class="fielddoc"></td></tr>
</table>

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a74ff7715b4c0bfe25a740a1295cbe910"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a74ff7715b4c0bfe25a740a1295cbe910">&#9670;&nbsp;</a></span>~TensorKey()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">open3d::core::TensorKey::~TensorKey </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a19ff04b23747e7472b9a43093f9dd242"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a19ff04b23747e7472b9a43093f9dd242">&#9670;&nbsp;</a></span>GetIndex()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int64_t open3d::core::TensorKey::GetIndex </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Get (single) index. For <a class="el" href="classopen3d_1_1core_1_1_tensor_key.3c1.delay#a4a2628d6ae08ae1c99c444f22ea699dca88fa71f0a6e0dfedbb46d91cc0b37a50">TensorKeyMode::Index</a> only. </p>

</div>
</div>
<a id="a1a70731550e51b88e9819c37ab68baf3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1a70731550e51b88e9819c37ab68baf3">&#9670;&nbsp;</a></span>GetIndexTensor()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a> open3d::core::TensorKey::GetIndexTensor </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Get advanced indexing tensor. For <a class="el" href="classopen3d_1_1core_1_1_tensor_key.3c1.delay#a4a2628d6ae08ae1c99c444f22ea699dca8c16fa230bf8f37addb91824af06f3f0">TensorKeyMode::IndexTensor</a> only. </p>

</div>
</div>
<a id="a655a9c13efafd1e4cee2f49a05614348"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a655a9c13efafd1e4cee2f49a05614348">&#9670;&nbsp;</a></span>GetMode()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1core_1_1_tensor_key.3c1.delay#a4a2628d6ae08ae1c99c444f22ea699dc">TensorKey::TensorKeyMode</a> open3d::core::TensorKey::GetMode </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns <a class="el" href="classopen3d_1_1core_1_1_tensor_key.3c1.delay" title="TensorKey is used to represent single index, slice or advanced indexing on a Tensor.">TensorKey</a> mode. </p>

</div>
</div>
<a id="a0084d140a91207dc9b5434f56973755b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0084d140a91207dc9b5434f56973755b">&#9670;&nbsp;</a></span>GetStart()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int64_t open3d::core::TensorKey::GetStart </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Get start index. Throws exception if start is None. For <a class="el" href="classopen3d_1_1core_1_1_tensor_key.3c1.delay#a4a2628d6ae08ae1c99c444f22ea699dcad140d37ad98c12ccd8e1c432f548bcdb">TensorKeyMode::Slice</a> only. </p>

</div>
</div>
<a id="ad5892e13ef534a03380874b60b3bda8e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad5892e13ef534a03380874b60b3bda8e">&#9670;&nbsp;</a></span>GetStep()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int64_t open3d::core::TensorKey::GetStep </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Get step index. Throws exception if start is None. For <a class="el" href="classopen3d_1_1core_1_1_tensor_key.3c1.delay#a4a2628d6ae08ae1c99c444f22ea699dcad140d37ad98c12ccd8e1c432f548bcdb">TensorKeyMode::Slice</a> only. </p>

</div>
</div>
<a id="a1b6ca62a20715786b50647a62f898104"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1b6ca62a20715786b50647a62f898104">&#9670;&nbsp;</a></span>GetStop()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int64_t open3d::core::TensorKey::GetStop </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Get stop index. Throws exception if start is None. For <a class="el" href="classopen3d_1_1core_1_1_tensor_key.3c1.delay#a4a2628d6ae08ae1c99c444f22ea699dcad140d37ad98c12ccd8e1c432f548bcdb">TensorKeyMode::Slice</a> only. </p>

</div>
</div>
<a id="a11d5aaa50141748080c034822964a13b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a11d5aaa50141748080c034822964a13b">&#9670;&nbsp;</a></span>Index()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1core_1_1_tensor_key.3c1.delay">TensorKey</a> open3d::core::TensorKey::Index </td>
          <td>(</td>
          <td class="paramtype">int64_t&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Instantiates a <a class="el" href="classopen3d_1_1core_1_1_tensor_key.3c1.delay" title="TensorKey is used to represent single index, slice or advanced indexing on a Tensor.">TensorKey</a> with single index mode.</p>
<div class="fragment"><div class="line">t[0]   : t.GetItem({<a class="code" href="classopen3d_1_1core_1_1_tensor_key.3c1.delay#a11d5aaa50141748080c034822964a13b">TensorKey::Index</a>(0)})</div>
<div class="line">t[2]   : t.GetItem({<a class="code" href="classopen3d_1_1core_1_1_tensor_key.3c1.delay#a11d5aaa50141748080c034822964a13b">TensorKey::Index</a>(2)})</div>
<div class="line">t[2, 3]: t.GetItem({<a class="code" href="classopen3d_1_1core_1_1_tensor_key.3c1.delay#a11d5aaa50141748080c034822964a13b">TensorKey::Index</a>(2), <a class="code" href="classopen3d_1_1core_1_1_tensor_key.3c1.delay#a11d5aaa50141748080c034822964a13b">TensorKey::Index</a>(3)})</div>
<div class="ttc" id="aclassopen3d_1_1core_1_1_tensor_key_html_a11d5aaa50141748080c034822964a13b"><div class="ttname"><a href="classopen3d_1_1core_1_1_tensor_key.3c1.delay#a11d5aaa50141748080c034822964a13b">open3d::core::TensorKey::Index</a></div><div class="ttdeci">static TensorKey Index(int64_t index)</div><div class="ttdef"><b>Definition:</b> TensorKey.cpp:133</div></div>
</div><!-- fragment --><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">index</td><td>Index to the tensor. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a7228b06764b43b9c4b84ce1e1f342d08"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7228b06764b43b9c4b84ce1e1f342d08">&#9670;&nbsp;</a></span>IndexTensor()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1core_1_1_tensor_key.3c1.delay">TensorKey</a> open3d::core::TensorKey::IndexTensor </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopen3d_1_1core_1_1_tensor.html">Tensor</a> &amp;&#160;</td>
          <td class="paramname"><em>index_tensor</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Instantiates a <a class="el" href="classopen3d_1_1core_1_1_tensor_key.3c1.delay" title="TensorKey is used to represent single index, slice or advanced indexing on a Tensor.">TensorKey</a> with tensor-index (advanced indexing) mode.</p>
<div class="fragment"><div class="line">[[1, 2], [3:]]: advanced indexing on dim-0, slicing on dim-1.</div>
<div class="line">t.GetItem({</div>
<div class="line">    <a class="code" href="classopen3d_1_1core_1_1_tensor_key.3c1.delay#a7228b06764b43b9c4b84ce1e1f342d08">TensorKey::IndexTensor</a>(Tensor::Init&lt;int64_t&gt;({1, 2}, device),</div>
<div class="line">    <a class="code" href="classopen3d_1_1core_1_1_tensor_key.3c1.delay#a3c26ded7888007ebdb4154bd97e488e4">TensorKey::Slice</a>(3, <a class="code" href="namespaceopen3d_1_1core.html#aa4eba33af248e87bc8b587f043f4fe21">None</a>, <a class="code" href="namespaceopen3d_1_1core.html#aa4eba33af248e87bc8b587f043f4fe21">None</a>),</div>
<div class="line">});</div>
<div class="ttc" id="aclassopen3d_1_1core_1_1_tensor_key_html_a3c26ded7888007ebdb4154bd97e488e4"><div class="ttname"><a href="classopen3d_1_1core_1_1_tensor_key.3c1.delay#a3c26ded7888007ebdb4154bd97e488e4">open3d::core::TensorKey::Slice</a></div><div class="ttdeci">static TensorKey Slice(utility::optional&lt; int64_t &gt; start, utility::optional&lt; int64_t &gt; stop, utility::optional&lt; int64_t &gt; step)</div><div class="ttdef"><b>Definition:</b> TensorKey.cpp:137</div></div>
<div class="ttc" id="aclassopen3d_1_1core_1_1_tensor_key_html_a7228b06764b43b9c4b84ce1e1f342d08"><div class="ttname"><a href="classopen3d_1_1core_1_1_tensor_key.3c1.delay#a7228b06764b43b9c4b84ce1e1f342d08">open3d::core::TensorKey::IndexTensor</a></div><div class="ttdeci">static TensorKey IndexTensor(const Tensor &amp;index_tensor)</div><div class="ttdef"><b>Definition:</b> TensorKey.cpp:143</div></div>
<div class="ttc" id="anamespaceopen3d_1_1core_html_aa4eba33af248e87bc8b587f043f4fe21"><div class="ttname"><a href="namespaceopen3d_1_1core.html#aa4eba33af248e87bc8b587f043f4fe21">open3d::core::None</a></div><div class="ttdeci">constexpr utility::nullopt_t None</div><div class="ttdef"><b>Definition:</b> TensorKey.h:20</div></div>
</div><!-- fragment --><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">index_tensor</td><td>Indexing tensor of dtype int64_t or bool. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a98561488d91e5ee8bcd0cf221eddb745"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a98561488d91e5ee8bcd0cf221eddb745">&#9670;&nbsp;</a></span>InstantiateDimSize()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1core_1_1_tensor_key.3c1.delay">TensorKey</a> open3d::core::TensorKey::InstantiateDimSize </td>
          <td>(</td>
          <td class="paramtype">int64_t&#160;</td>
          <td class="paramname"><em>dim_size</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>When dim_size is know, convert the None values in start, stop, step with to concrete values and returns a new <a class="el" href="classopen3d_1_1core_1_1_tensor_key.3c1.delay" title="TensorKey is used to represent single index, slice or advanced indexing on a Tensor.">TensorKey</a>. </p><div class="fragment"><div class="line">E.g. <span class="keywordflow">if</span> t.shape == (5,), t[:4]:</div>
<div class="line">     before compute: <a class="code" href="classopen3d_1_1core_1_1_tensor_key.3c1.delay#a3c26ded7888007ebdb4154bd97e488e4">Slice</a>(<a class="code" href="namespaceopen3d_1_1core.html#aa4eba33af248e87bc8b587f043f4fe21">None</a>,    4, <a class="code" href="namespaceopen3d_1_1core.html#aa4eba33af248e87bc8b587f043f4fe21">None</a>)</div>
<div class="line">     after compute : <a class="code" href="classopen3d_1_1core_1_1_tensor_key.3c1.delay#a3c26ded7888007ebdb4154bd97e488e4">Slice</a>(   0,    4,    1)</div>
<div class="line">E.g. if t.shape == (5,), t[1:]:</div>
<div class="line">     before compute: <a class="code" href="classopen3d_1_1core_1_1_tensor_key.3c1.delay#a3c26ded7888007ebdb4154bd97e488e4">Slice</a>(   1, <a class="code" href="namespaceopen3d_1_1core.html#aa4eba33af248e87bc8b587f043f4fe21">None</a>, <a class="code" href="namespaceopen3d_1_1core.html#aa4eba33af248e87bc8b587f043f4fe21">None</a>)</div>
<div class="line">     after compute : <a class="code" href="classopen3d_1_1core_1_1_tensor_key.3c1.delay#a3c26ded7888007ebdb4154bd97e488e4">Slice</a>(   1,    5,    1)</div>
</div><!-- fragment --><p> For <a class="el" href="classopen3d_1_1core_1_1_tensor_key.3c1.delay#a4a2628d6ae08ae1c99c444f22ea699dcad140d37ad98c12ccd8e1c432f548bcdb">TensorKeyMode::Slice</a> only. </p>

</div>
</div>
<a id="a3c26ded7888007ebdb4154bd97e488e4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3c26ded7888007ebdb4154bd97e488e4">&#9670;&nbsp;</a></span>Slice()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopen3d_1_1core_1_1_tensor_key.3c1.delay">TensorKey</a> open3d::core::TensorKey::Slice </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1utility_1_1optional.3c6.delay">utility::optional</a>&lt; int64_t &gt;&#160;</td>
          <td class="paramname"><em>start</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1utility_1_1optional.3c6.delay">utility::optional</a>&lt; int64_t &gt;&#160;</td>
          <td class="paramname"><em>stop</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classopen3d_1_1utility_1_1optional.3c6.delay">utility::optional</a>&lt; int64_t &gt;&#160;</td>
          <td class="paramname"><em>step</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Instantiates a <a class="el" href="classopen3d_1_1core_1_1_tensor_key.3c1.delay" title="TensorKey is used to represent single index, slice or advanced indexing on a Tensor.">TensorKey</a> with slice mode.</p>
<div class="fragment"><div class="line">t[0:10:2]: t.GetItem({<a class="code" href="classopen3d_1_1core_1_1_tensor_key.3c1.delay#a3c26ded7888007ebdb4154bd97e488e4">TensorKey::Slice</a>(0    , 10  , 2   )})</div>
<div class="line">t[:-1]   : t.Getitem({<a class="code" href="classopen3d_1_1core_1_1_tensor_key.3c1.delay#a3c26ded7888007ebdb4154bd97e488e4">TensorKey::Slice</a>(<a class="code" href="namespaceopen3d_1_1core.html#aa4eba33af248e87bc8b587f043f4fe21">None</a> , <a class="code" href="namespaceopen3d_1_1core.html#aa4eba33af248e87bc8b587f043f4fe21">None</a>, -1  )})</div>
<div class="line">t[3:]    : t.GetItem({<a class="code" href="classopen3d_1_1core_1_1_tensor_key.3c1.delay#a3c26ded7888007ebdb4154bd97e488e4">TensorKey::Slice</a>(3    , <a class="code" href="namespaceopen3d_1_1core.html#aa4eba33af248e87bc8b587f043f4fe21">None</a>, <a class="code" href="namespaceopen3d_1_1core.html#aa4eba33af248e87bc8b587f043f4fe21">None</a>)})</div>
</div><!-- fragment --><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">start</td><td>Start index. None means starting from the 0-th element. </td></tr>
    <tr><td class="paramname">stop</td><td>Stop index. None means stopping at the last element. </td></tr>
    <tr><td class="paramname">step</td><td>Step size. None means step size 1. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a074bb143cdef653cff2d2378f47fe030"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a074bb143cdef653cff2d2378f47fe030">&#9670;&nbsp;</a></span>ToString()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string open3d::core::TensorKey::ToString </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Convert <a class="el" href="classopen3d_1_1core_1_1_tensor_key.3c1.delay" title="TensorKey is used to represent single index, slice or advanced indexing on a Tensor.">TensorKey</a> to a string representation. </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/runner/work/Open3D/Open3D/cpp/open3d/core/<a class="el" href="_tensor_key_8h_source.html">TensorKey.h (9238339 (Tue Mar 14 18:49:09 2023 -0700))</a></li>
<li>/home/runner/work/Open3D/Open3D/cpp/open3d/core/<a class="el" href="_tensor_key_8cpp.html">TensorKey.cpp (9238339 (Tue Mar 14 18:49:09 2023 -0700))</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1
</small></address>
</body>

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/classopen3d_1_1core_1_1_tensor_key.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 10:55:25 GMT -->
</html>
