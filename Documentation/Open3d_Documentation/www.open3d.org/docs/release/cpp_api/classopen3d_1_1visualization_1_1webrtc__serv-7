<!-- HTML header for doxygen 1.8.20-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/classopen3d_1_1visualization_1_1webrtc__server_1_1_peer_connection_manager.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 11:01:49 GMT -->
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Open3D (C++ API): open3d::visualization::webrtc_server::PeerConnectionManager Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js", "TeX/AMSmath.html", "TeX/AMSsymbols.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="../../../../cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-3TQPKGV6Z3"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());
  gtag('config', 'G-3TQPKGV6Z3');
</script>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="open3d_logo.ico"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Open3D (C++ API)
   &#160;<span id="projectnumber">0.17.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.html');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.html','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceopen3d.html">open3d</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1visualization.html">visualization</a></li><li class="navelem"><a class="el" href="namespaceopen3d_1_1visualization_1_1webrtc__">webrtc_server</a></li><li class="navelem"><a class="el" href="classopen3d_1_1visualization_1_1webrtc__serv-7">PeerConnectionManager</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a>  </div>
  <div class="headertitle">
<div class="title">open3d::visualization::webrtc_server::PeerConnectionManager Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_peer_connection_manager_8h_source.b5f.delay">PeerConnectionManager.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a0d27dd70d291d761fcd37d3c369beb50"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1webrtc__serv-7#a0d27dd70d291d761fcd37d3c369beb50">PeerConnectionManager</a> (const std::list&lt; std::string &gt; &amp;ice_server_list, const Json::Value &amp;config, const std::string &amp;publish_filter, const std::string &amp;webrtc_udp_port_range)</td></tr>
<tr class="separator:a0d27dd70d291d761fcd37d3c369beb50"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a30b150c203c35039364ce008bcde52f9"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1webrtc__serv-7#a30b150c203c35039364ce008bcde52f9">~PeerConnectionManager</a> ()</td></tr>
<tr class="separator:a30b150c203c35039364ce008bcde52f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a646bdb4d9accfd80b5e90e29685c85a1"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1webrtc__serv-7#a646bdb4d9accfd80b5e90e29685c85a1">InitializePeerConnection</a> ()</td></tr>
<tr class="separator:a646bdb4d9accfd80b5e90e29685c85a1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8feb9565a278354ad921764fb4a52d54"><td class="memItemLeft" align="right" valign="top">const std::map&lt; std::string, <a class="el" href="classopen3d_1_1visualization_1_1webrtc__serv-4#a570676625d191ddd8e39f1cd211e4e39">HttpServerRequestHandler::HttpFunction</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1webrtc__serv-7#a8feb9565a278354ad921764fb4a52d54">GetHttpApi</a> ()</td></tr>
<tr class="separator:a8feb9565a278354ad921764fb4a52d54"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6ca0b42beb6bbb8f059c9d55e8a92926"><td class="memItemLeft" align="right" valign="top">const Json::Value&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1webrtc__serv-7#a6ca0b42beb6bbb8f059c9d55e8a92926">GetIceCandidateList</a> (const std::string &amp;peerid)</td></tr>
<tr class="separator:a6ca0b42beb6bbb8f059c9d55e8a92926"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a12531c10889782f267f28f59ff79b540"><td class="memItemLeft" align="right" valign="top">const Json::Value&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1webrtc__serv-7#a12531c10889782f267f28f59ff79b540">AddIceCandidate</a> (const std::string &amp;peerid, const Json::Value &amp;json_message)</td></tr>
<tr class="separator:a12531c10889782f267f28f59ff79b540"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7b19130f4b277e458ec8907b9713686a"><td class="memItemLeft" align="right" valign="top">const Json::Value&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1webrtc__serv-7#a7b19130f4b277e458ec8907b9713686a">GetMediaList</a> ()</td></tr>
<tr class="separator:a7b19130f4b277e458ec8907b9713686a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6e151280fbb2ec5784a7cfd7adb03369"><td class="memItemLeft" align="right" valign="top">const Json::Value&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1webrtc__serv-7#a6e151280fbb2ec5784a7cfd7adb03369">HangUp</a> (const std::string &amp;peerid)</td></tr>
<tr class="separator:a6e151280fbb2ec5784a7cfd7adb03369"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5ff6a0794f6203d8a5e73ca07b56986f"><td class="memItemLeft" align="right" valign="top">const Json::Value&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1webrtc__serv-7#a5ff6a0794f6203d8a5e73ca07b56986f">Call</a> (const std::string &amp;peerid, const std::string &amp;window_uid, const std::string &amp;options, const Json::Value &amp;json_message)</td></tr>
<tr class="separator:a5ff6a0794f6203d8a5e73ca07b56986f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8c3733a0dbcf10b5f327d8c547a51f64"><td class="memItemLeft" align="right" valign="top">const Json::Value&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1webrtc__serv-7#a8c3733a0dbcf10b5f327d8c547a51f64">GetIceServers</a> ()</td></tr>
<tr class="separator:a8c3733a0dbcf10b5f327d8c547a51f64"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a684722fb9b78a553c119604da3993e63"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1webrtc__serv-7#a684722fb9b78a553c119604da3993e63">SendInitFramesToPeer</a> (const std::string &amp;peerid)</td></tr>
<tr class="separator:a684722fb9b78a553c119604da3993e63"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab675115f60c67684698116bfbd122a13"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1webrtc__serv-7#ab675115f60c67684698116bfbd122a13">CloseWindowConnections</a> (const std::string &amp;window_uid)</td></tr>
<tr class="separator:ab675115f60c67684698116bfbd122a13"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a81734e3949f1ec94df6a59032ab519ea"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1webrtc__serv-7#a81734e3949f1ec94df6a59032ab519ea">OnFrame</a> (const std::string &amp;window_uid, const std::shared_ptr&lt; <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &gt; &amp;im)</td></tr>
<tr class="separator:a81734e3949f1ec94df6a59032ab519ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:abe3458943cf1c49c763e7e2124ed6d83"><td class="memItemLeft" align="right" valign="top">rtc::scoped_refptr&lt; <a class="el" href="classopen3d_1_1visualization_1_1webrtc__serv">BitmapTrackSourceInterface</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1webrtc__serv-7#abe3458943cf1c49c763e7e2124ed6d83">GetVideoTrackSource</a> (const std::string &amp;window_uid)</td></tr>
<tr class="separator:abe3458943cf1c49c763e7e2124ed6d83"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2cde2efbffc4e4adebe73dd735303d61"><td class="memItemLeft" align="right" valign="top">PeerConnectionObserver *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1webrtc__serv-7#a2cde2efbffc4e4adebe73dd735303d61">CreatePeerConnection</a> (const std::string &amp;peerid)</td></tr>
<tr class="separator:a2cde2efbffc4e4adebe73dd735303d61"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abe46ba622bb3e8545304a2a319459b56"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1webrtc__serv-7#abe46ba622bb3e8545304a2a319459b56">AddStreams</a> (webrtc::PeerConnectionInterface *peer_connection, const std::string &amp;window_uid, const std::string &amp;options)</td></tr>
<tr class="separator:abe46ba622bb3e8545304a2a319459b56"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a43e5f58acd3ba06a96d8b719f4ec8f37"><td class="memItemLeft" align="right" valign="top">rtc::scoped_refptr&lt; <a class="el" href="classopen3d_1_1visualization_1_1webrtc__serv">BitmapTrackSourceInterface</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1webrtc__serv-7#a43e5f58acd3ba06a96d8b719f4ec8f37">CreateVideoSource</a> (const std::string &amp;window_uid, const std::map&lt; std::string, std::string &gt; &amp;opts)</td></tr>
<tr class="separator:a43e5f58acd3ba06a96d8b719f4ec8f37"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a45d65597ecb07fb380c47764b24b7cf0"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1webrtc__serv-7#a45d65597ecb07fb380c47764b24b7cf0">WindowStillUsed</a> (const std::string &amp;window_uid)</td></tr>
<tr class="separator:a45d65597ecb07fb380c47764b24b7cf0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab6d9b7fd46ca3abf1d48cb603a346088"><td class="memItemLeft" align="right" valign="top">rtc::scoped_refptr&lt; webrtc::PeerConnectionInterface &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1webrtc__serv-7#ab6d9b7fd46ca3abf1d48cb603a346088">GetPeerConnection</a> (const std::string &amp;peerid)</td></tr>
<tr class="separator:ab6d9b7fd46ca3abf1d48cb603a346088"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:a6138dd8aa589cf55e0a597166b24df2a"><td class="memItemLeft" align="right" valign="top">std::unique_ptr&lt; webrtc::TaskQueueFactory &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1webrtc__serv-7#a6138dd8aa589cf55e0a597166b24df2a">task_queue_factory_</a></td></tr>
<tr class="separator:a6138dd8aa589cf55e0a597166b24df2a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aece058dc5d0d0d8f56c19e4a1362e386"><td class="memItemLeft" align="right" valign="top">rtc::scoped_refptr&lt; webrtc::PeerConnectionFactoryInterface &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1webrtc__serv-7#aece058dc5d0d0d8f56c19e4a1362e386">peer_connection_factory_</a></td></tr>
<tr class="separator:aece058dc5d0d0d8f56c19e4a1362e386"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aafc0f87c23017ec87d52b3d794b09317"><td class="memItemLeft" align="right" valign="top">std::unordered_map&lt; std::string, PeerConnectionObserver * &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1webrtc__serv-7#aafc0f87c23017ec87d52b3d794b09317">peerid_to_connection_</a></td></tr>
<tr class="separator:aafc0f87c23017ec87d52b3d794b09317"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5ef0a0c0462bdff5adf1ddf6b7cf13d9"><td class="memItemLeft" align="right" valign="top">std::mutex&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1webrtc__serv-7#a5ef0a0c0462bdff5adf1ddf6b7cf13d9">peerid_to_connection_mutex_</a></td></tr>
<tr class="separator:a5ef0a0c0462bdff5adf1ddf6b7cf13d9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abaec225c975efe1f830853058760ec57"><td class="memItemLeft" align="right" valign="top">std::unordered_set&lt; std::string &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1webrtc__serv-7#abaec225c975efe1f830853058760ec57">peerid_data_channel_ready_</a></td></tr>
<tr class="separator:abaec225c975efe1f830853058760ec57"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1c06d9ab9a02fe9180458fc26aa0a18a"><td class="memItemLeft" align="right" valign="top">std::mutex&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1webrtc__serv-7#a1c06d9ab9a02fe9180458fc26aa0a18a">peerid_data_channel_mutex_</a></td></tr>
<tr class="separator:a1c06d9ab9a02fe9180458fc26aa0a18a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae9a6f59d49336985c435bc200b64e93f"><td class="memItemLeft" align="right" valign="top">std::unordered_map&lt; std::string, rtc::scoped_refptr&lt; <a class="el" href="classopen3d_1_1visualization_1_1webrtc__serv">BitmapTrackSourceInterface</a> &gt; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1webrtc__serv-7#ae9a6f59d49336985c435bc200b64e93f">window_uid_to_track_source_</a></td></tr>
<tr class="separator:ae9a6f59d49336985c435bc200b64e93f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aca306e12f0230846114ad6b50195a5c4"><td class="memItemLeft" align="right" valign="top">std::mutex&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1webrtc__serv-7#aca306e12f0230846114ad6b50195a5c4">window_uid_to_track_source_mutex_</a></td></tr>
<tr class="separator:aca306e12f0230846114ad6b50195a5c4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a61d5045a9a202aff7329e4ddd1e4eba7"><td class="memItemLeft" align="right" valign="top">std::unordered_map&lt; std::string, std::set&lt; std::string &gt; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1webrtc__serv-7#a61d5045a9a202aff7329e4ddd1e4eba7">window_uid_to_peerids_</a></td></tr>
<tr class="separator:a61d5045a9a202aff7329e4ddd1e4eba7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6b7de85b5e1f8c205fe106423cbe5532"><td class="memItemLeft" align="right" valign="top">std::unordered_map&lt; std::string, std::string &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1webrtc__serv-7#a6b7de85b5e1f8c205fe106423cbe5532">peerid_to_window_uid_</a></td></tr>
<tr class="separator:a6b7de85b5e1f8c205fe106423cbe5532"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3401a6662db6bf1730520fe370a74198"><td class="memItemLeft" align="right" valign="top">std::mutex&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1webrtc__serv-7#a3401a6662db6bf1730520fe370a74198">window_uid_to_peerids_mutex_</a></td></tr>
<tr class="separator:a3401a6662db6bf1730520fe370a74198"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a83eeec0c4398926f933daecdcc707a2d"><td class="memItemLeft" align="right" valign="top">std::list&lt; std::string &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1webrtc__serv-7#a83eeec0c4398926f933daecdcc707a2d">ice_server_list_</a></td></tr>
<tr class="separator:a83eeec0c4398926f933daecdcc707a2d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae7a93eca636c6d9386c4e2082eab5ef2"><td class="memItemLeft" align="right" valign="top">const Json::Value&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1webrtc__serv-7#ae7a93eca636c6d9386c4e2082eab5ef2">config_</a></td></tr>
<tr class="separator:ae7a93eca636c6d9386c4e2082eab5ef2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abd6433cb8c2dde4abd21b3bc322608fd"><td class="memItemLeft" align="right" valign="top">const std::regex&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1webrtc__serv-7#abd6433cb8c2dde4abd21b3bc322608fd">publish_filter_</a></td></tr>
<tr class="separator:abd6433cb8c2dde4abd21b3bc322608fd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a981f9bf06d1a1c5b279f62873db43a93"><td class="memItemLeft" align="right" valign="top">std::map&lt; std::string, <a class="el" href="classopen3d_1_1visualization_1_1webrtc__serv-4#a570676625d191ddd8e39f1cd211e4e39">HttpServerRequestHandler::HttpFunction</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1webrtc__serv-7#a981f9bf06d1a1c5b279f62873db43a93">func_</a></td></tr>
<tr class="separator:a981f9bf06d1a1c5b279f62873db43a93"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa27d45cc525e4002dd8b8f9d39937f9"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopen3d_1_1visualization_1_1webrtc__serv-7#aaa27d45cc525e4002dd8b8f9d39937f9">webrtc_port_range_</a></td></tr>
<tr class="separator:aaa27d45cc525e4002dd8b8f9d39937f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p><a class="el" href="classopen3d_1_1visualization_1_1webrtc__serv-7">PeerConnectionManager</a> manages WebRTC signaling (i.e. handshake), data channel and video streams.</p>
<p>[Stage 1: Signaling] Signaling is the handshake process to establish a WebRTC connection. See <a href="https://developer.mozilla.org/en-US/docs/Web/API/WebRTC_API/Connectivity#signaling">https://developer.mozilla.org/en-US/docs/Web/API/WebRTC_API/Connectivity#signaling</a> for more information. In <a class="el" href="classopen3d_1_1visualization_1_1webrtc__serv-7">PeerConnectionManager</a>, a WebRTC client (e.g. JavaScript video player) calls the following HTTP APIs:</p><ul>
<li>/api/getMediaList: Returns a list of active Open3D visualizer windows.</li>
<li>/api/getIceServers: Returns a list of ICE (STUN/TURN) servers. The ICE server is used to forward requests through the remote peer's NAT layer. We use publicly available STUN servers. In certain network configurations (e.g. if the peers are behind certain type of firewalls), STUN server may fail to resolve and in this case, we'll need to implement and host a separate TURN server.</li>
<li>/api/call: Connect to a specific media (Open3D visualizer window).</li>
<li>/api/addIceCandidate (multiple calls): Client sends ICE candidate proposals.</li>
<li>/api/getIceCandidate: the client gets a list of ICE candidate associated with a PeerConnection.</li>
</ul>
<p>[Stage 2: Sending video streams and send/recv with data channel]</p><ul>
<li><a class="el" href="classopen3d_1_1visualization_1_1webrtc__serv-7#a81734e3949f1ec94df6a59032ab519ea">PeerConnectionManager::OnFrame()</a> shall be called when a frame is ready. This will send a video frame to all peers connected to the target window.</li>
<li>DataChannelObserver::OnMessage() will be called when the server receives a message from the data channel. The <a class="el" href="classopen3d_1_1visualization_1_1webrtc__serv-7">PeerConnectionManager</a> then forwards the message to the correct event handler and eventually events (such as mouse click)can be triggered.</li>
</ul>
<p>[Stage 3: Hangup] The client calls /api/hangup to close the WebRTC connection. This does not close the Open3D Window as a Window can be connected to 0 or more peers.</p>
<p>TODO (yixing): Use PImpl. </p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a0d27dd70d291d761fcd37d3c369beb50"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0d27dd70d291d761fcd37d3c369beb50">&#9670;&nbsp;</a></span>PeerConnectionManager()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">open3d::visualization::webrtc_server::PeerConnectionManager::PeerConnectionManager </td>
          <td>(</td>
          <td class="paramtype">const std::list&lt; std::string &gt; &amp;&#160;</td>
          <td class="paramname"><em>ice_server_list</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const Json::Value &amp;&#160;</td>
          <td class="paramname"><em>config</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>publish_filter</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>webrtc_udp_port_range</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a30b150c203c35039364ce008bcde52f9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a30b150c203c35039364ce008bcde52f9">&#9670;&nbsp;</a></span>~PeerConnectionManager()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">open3d::visualization::webrtc_server::PeerConnectionManager::~PeerConnectionManager </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a12531c10889782f267f28f59ff79b540"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a12531c10889782f267f28f59ff79b540">&#9670;&nbsp;</a></span>AddIceCandidate()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const Json::Value open3d::visualization::webrtc_server::PeerConnectionManager::AddIceCandidate </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>peerid</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const Json::Value &amp;&#160;</td>
          <td class="paramname"><em>json_message</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="abe46ba622bb3e8545304a2a319459b56"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abe46ba622bb3e8545304a2a319459b56">&#9670;&nbsp;</a></span>AddStreams()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool open3d::visualization::webrtc_server::PeerConnectionManager::AddStreams </td>
          <td>(</td>
          <td class="paramtype">webrtc::PeerConnectionInterface *&#160;</td>
          <td class="paramname"><em>peer_connection</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>window_uid</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>options</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a5ff6a0794f6203d8a5e73ca07b56986f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5ff6a0794f6203d8a5e73ca07b56986f">&#9670;&nbsp;</a></span>Call()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const Json::Value open3d::visualization::webrtc_server::PeerConnectionManager::Call </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>peerid</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>window_uid</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>options</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const Json::Value &amp;&#160;</td>
          <td class="paramname"><em>json_message</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ab675115f60c67684698116bfbd122a13"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab675115f60c67684698116bfbd122a13">&#9670;&nbsp;</a></span>CloseWindowConnections()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::webrtc_server::PeerConnectionManager::CloseWindowConnections </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>window_uid</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a2cde2efbffc4e4adebe73dd735303d61"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2cde2efbffc4e4adebe73dd735303d61">&#9670;&nbsp;</a></span>CreatePeerConnection()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">PeerConnectionManager::PeerConnectionObserver * open3d::visualization::webrtc_server::PeerConnectionManager::CreatePeerConnection </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>peerid</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a43e5f58acd3ba06a96d8b719f4ec8f37"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a43e5f58acd3ba06a96d8b719f4ec8f37">&#9670;&nbsp;</a></span>CreateVideoSource()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">rtc::scoped_refptr&lt; <a class="el" href="classopen3d_1_1visualization_1_1webrtc__serv">BitmapTrackSourceInterface</a> &gt; open3d::visualization::webrtc_server::PeerConnectionManager::CreateVideoSource </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>window_uid</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::map&lt; std::string, std::string &gt; &amp;&#160;</td>
          <td class="paramname"><em>opts</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a8feb9565a278354ad921764fb4a52d54"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8feb9565a278354ad921764fb4a52d54">&#9670;&nbsp;</a></span>GetHttpApi()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const std::map&lt; std::string, <a class="el" href="classopen3d_1_1visualization_1_1webrtc__serv-4#a570676625d191ddd8e39f1cd211e4e39">HttpServerRequestHandler::HttpFunction</a> &gt; open3d::visualization::webrtc_server::PeerConnectionManager::GetHttpApi </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a6ca0b42beb6bbb8f059c9d55e8a92926"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6ca0b42beb6bbb8f059c9d55e8a92926">&#9670;&nbsp;</a></span>GetIceCandidateList()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const Json::Value open3d::visualization::webrtc_server::PeerConnectionManager::GetIceCandidateList </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>peerid</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a8c3733a0dbcf10b5f327d8c547a51f64"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8c3733a0dbcf10b5f327d8c547a51f64">&#9670;&nbsp;</a></span>GetIceServers()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const Json::Value open3d::visualization::webrtc_server::PeerConnectionManager::GetIceServers </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a7b19130f4b277e458ec8907b9713686a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7b19130f4b277e458ec8907b9713686a">&#9670;&nbsp;</a></span>GetMediaList()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const Json::Value open3d::visualization::webrtc_server::PeerConnectionManager::GetMediaList </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ab6d9b7fd46ca3abf1d48cb603a346088"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab6d9b7fd46ca3abf1d48cb603a346088">&#9670;&nbsp;</a></span>GetPeerConnection()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">rtc::scoped_refptr&lt; webrtc::PeerConnectionInterface &gt; open3d::visualization::webrtc_server::PeerConnectionManager::GetPeerConnection </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>peerid</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="abe3458943cf1c49c763e7e2124ed6d83"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abe3458943cf1c49c763e7e2124ed6d83">&#9670;&nbsp;</a></span>GetVideoTrackSource()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">rtc::scoped_refptr&lt; <a class="el" href="classopen3d_1_1visualization_1_1webrtc__serv">BitmapTrackSourceInterface</a> &gt; open3d::visualization::webrtc_server::PeerConnectionManager::GetVideoTrackSource </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>window_uid</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a6e151280fbb2ec5784a7cfd7adb03369"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6e151280fbb2ec5784a7cfd7adb03369">&#9670;&nbsp;</a></span>HangUp()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const Json::Value open3d::visualization::webrtc_server::PeerConnectionManager::HangUp </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>peerid</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a646bdb4d9accfd80b5e90e29685c85a1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a646bdb4d9accfd80b5e90e29685c85a1">&#9670;&nbsp;</a></span>InitializePeerConnection()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool open3d::visualization::webrtc_server::PeerConnectionManager::InitializePeerConnection </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a81734e3949f1ec94df6a59032ab519ea"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a81734e3949f1ec94df6a59032ab519ea">&#9670;&nbsp;</a></span>OnFrame()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::webrtc_server::PeerConnectionManager::OnFrame </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>window_uid</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::shared_ptr&lt; <a class="el" href="classopen3d_1_1core_1_1_tensor.html">core::Tensor</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>im</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a684722fb9b78a553c119604da3993e63"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a684722fb9b78a553c119604da3993e63">&#9670;&nbsp;</a></span>SendInitFramesToPeer()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void open3d::visualization::webrtc_server::PeerConnectionManager::SendInitFramesToPeer </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>peerid</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a45d65597ecb07fb380c47764b24b7cf0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a45d65597ecb07fb380c47764b24b7cf0">&#9670;&nbsp;</a></span>WindowStillUsed()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool open3d::visualization::webrtc_server::PeerConnectionManager::WindowStillUsed </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>window_uid</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Field Documentation</h2>
<a id="ae7a93eca636c6d9386c4e2082eab5ef2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae7a93eca636c6d9386c4e2082eab5ef2">&#9670;&nbsp;</a></span>config_</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const Json::Value open3d::visualization::webrtc_server::PeerConnectionManager::config_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a981f9bf06d1a1c5b279f62873db43a93"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a981f9bf06d1a1c5b279f62873db43a93">&#9670;&nbsp;</a></span>func_</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::map&lt;std::string, <a class="el" href="classopen3d_1_1visualization_1_1webrtc__serv-4#a570676625d191ddd8e39f1cd211e4e39">HttpServerRequestHandler::HttpFunction</a>&gt; open3d::visualization::webrtc_server::PeerConnectionManager::func_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a83eeec0c4398926f933daecdcc707a2d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a83eeec0c4398926f933daecdcc707a2d">&#9670;&nbsp;</a></span>ice_server_list_</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::list&lt;std::string&gt; open3d::visualization::webrtc_server::PeerConnectionManager::ice_server_list_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aece058dc5d0d0d8f56c19e4a1362e386"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aece058dc5d0d0d8f56c19e4a1362e386">&#9670;&nbsp;</a></span>peer_connection_factory_</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">rtc::scoped_refptr&lt;webrtc::PeerConnectionFactoryInterface&gt; open3d::visualization::webrtc_server::PeerConnectionManager::peer_connection_factory_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a1c06d9ab9a02fe9180458fc26aa0a18a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1c06d9ab9a02fe9180458fc26aa0a18a">&#9670;&nbsp;</a></span>peerid_data_channel_mutex_</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::mutex open3d::visualization::webrtc_server::PeerConnectionManager::peerid_data_channel_mutex_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="abaec225c975efe1f830853058760ec57"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abaec225c975efe1f830853058760ec57">&#9670;&nbsp;</a></span>peerid_data_channel_ready_</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::unordered_set&lt;std::string&gt; open3d::visualization::webrtc_server::PeerConnectionManager::peerid_data_channel_ready_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aafc0f87c23017ec87d52b3d794b09317"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aafc0f87c23017ec87d52b3d794b09317">&#9670;&nbsp;</a></span>peerid_to_connection_</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::unordered_map&lt;std::string, PeerConnectionObserver*&gt; open3d::visualization::webrtc_server::PeerConnectionManager::peerid_to_connection_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a5ef0a0c0462bdff5adf1ddf6b7cf13d9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5ef0a0c0462bdff5adf1ddf6b7cf13d9">&#9670;&nbsp;</a></span>peerid_to_connection_mutex_</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::mutex open3d::visualization::webrtc_server::PeerConnectionManager::peerid_to_connection_mutex_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a6b7de85b5e1f8c205fe106423cbe5532"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6b7de85b5e1f8c205fe106423cbe5532">&#9670;&nbsp;</a></span>peerid_to_window_uid_</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::unordered_map&lt;std::string, std::string&gt; open3d::visualization::webrtc_server::PeerConnectionManager::peerid_to_window_uid_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="abd6433cb8c2dde4abd21b3bc322608fd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abd6433cb8c2dde4abd21b3bc322608fd">&#9670;&nbsp;</a></span>publish_filter_</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const std::regex open3d::visualization::webrtc_server::PeerConnectionManager::publish_filter_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a6138dd8aa589cf55e0a597166b24df2a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6138dd8aa589cf55e0a597166b24df2a">&#9670;&nbsp;</a></span>task_queue_factory_</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::unique_ptr&lt;webrtc::TaskQueueFactory&gt; open3d::visualization::webrtc_server::PeerConnectionManager::task_queue_factory_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aaa27d45cc525e4002dd8b8f9d39937f9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaa27d45cc525e4002dd8b8f9d39937f9">&#9670;&nbsp;</a></span>webrtc_port_range_</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::string open3d::visualization::webrtc_server::PeerConnectionManager::webrtc_port_range_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a61d5045a9a202aff7329e4ddd1e4eba7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a61d5045a9a202aff7329e4ddd1e4eba7">&#9670;&nbsp;</a></span>window_uid_to_peerids_</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::unordered_map&lt;std::string, std::set&lt;std::string&gt; &gt; open3d::visualization::webrtc_server::PeerConnectionManager::window_uid_to_peerids_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a3401a6662db6bf1730520fe370a74198"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3401a6662db6bf1730520fe370a74198">&#9670;&nbsp;</a></span>window_uid_to_peerids_mutex_</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::mutex open3d::visualization::webrtc_server::PeerConnectionManager::window_uid_to_peerids_mutex_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ae9a6f59d49336985c435bc200b64e93f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae9a6f59d49336985c435bc200b64e93f">&#9670;&nbsp;</a></span>window_uid_to_track_source_</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::unordered_map&lt;std::string, rtc::scoped_refptr&lt;<a class="el" href="classopen3d_1_1visualization_1_1webrtc__serv">BitmapTrackSourceInterface</a>&gt; &gt; open3d::visualization::webrtc_server::PeerConnectionManager::window_uid_to_track_source_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aca306e12f0230846114ad6b50195a5c4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aca306e12f0230846114ad6b50195a5c4">&#9670;&nbsp;</a></span>window_uid_to_track_source_mutex_</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::mutex open3d::visualization::webrtc_server::PeerConnectionManager::window_uid_to_track_source_mutex_</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/runner/work/Open3D/Open3D/cpp/open3d/visualization/webrtc_server/<a class="el" href="_peer_connection_manager_8h_source.b5f.delay">PeerConnectionManager.h (9238339 (Tue Mar 14 18:49:09 2023 -0700))</a></li>
<li>/home/runner/work/Open3D/Open3D/cpp/open3d/visualization/webrtc_server/<a class="el" href="_peer_connection_manager_8cpp.html">PeerConnectionManager.cpp (9238339 (Tue Mar 14 18:49:09 2023 -0700))</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1
</small></address>
</body>

<!-- Mirrored from www.open3d.org/docs/release/cpp_api/classopen3d_1_1visualization_1_1webrtc__server_1_1_peer_connection_manager.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 11:01:49 GMT -->
</html>
