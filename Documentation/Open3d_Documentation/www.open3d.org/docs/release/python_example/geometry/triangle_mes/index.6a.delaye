

<!DOCTYPE html>
<!--[if IE 8]><html class="no-js lt-ie9" lang="en" > <![endif]-->
<!--[if gt IE 8]><!--> <html class="no-js" lang="en" > <!--<![endif]-->

<!-- Mirrored from www.open3d.org/docs/release/python_example/geometry/triangle_mesh/index.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 10:51:50 GMT -->
<head>
  <meta charset="utf-8">
  
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  
  <title>Triangle Mesh &mdash; Open3D 0.17.0 documentation</title>
  

  
  
    <link rel="shortcut icon" href="../../../_static/open3d_logo.ico"/>
  
  
  

  
  <script type="text/javascript" src="../../../_static/js/modernizr.min.js"></script>
  
    
      <script type="text/javascript" id="documentation_options" data-url_root="../../../" src="../../../_static/documentation_options.js"></script>
        <script src="../../../_static/jquery.js"></script>
        <script src="../../../_static/underscore.js"></script>
        <script src="../../../_static/doctools.js"></script>
        <script src="../../../_static/language_data.js"></script>
        <script async="async" src="https://www.googletagmanager.com/gtag/js?id=G-3TQPKGV6Z3"></script>
        <script >
        window.dataLayer = window.dataLayer || [];
        function gtag(){dataLayer.push(arguments);}
        gtag('js', new Date());
        gtag('config', 'G-3TQPKGV6Z3');</script>
        <script crossorigin="anonymous" integrity="sha256-Ae2Vz/4ePdIu6ZyI/5ZGsYnb+m0JlOmKPjt6XZ9JJkA=" src="../../../../../../cdnjs.cloudflare.com/ajax/libs/require.js/2.3.4/require.min.js"></script>
        <script async="async" src="../../../../../../cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.7/latestdda6.js?config=TeX-AMS-MML_HTMLorMML"></script>
        <script type="text/x-mathjax-config">MathJax.Hub.Config({"tex2jax": {"inlineMath": [["$", "$"], ["\\(", "\\)"]], "processEscapes": true, "ignoreClass": "document", "processClass": "math|output_area"}})</script>
    
    <script type="text/javascript" src="../../../_static/js/theme.js"></script>

    

  
  <link rel="stylesheet" href="../../../_static/css/theme.css" type="text/css" />
  <link rel="stylesheet" href="../../../_static/pygments.css" type="text/css" />
  <link rel="stylesheet" href="../../../_static/theme_overrides.css" type="text/css" />
    <link rel="index" title="Index" href="../../../genindex.html" />
    <link rel="search" title="Search" href="../../../search.html" />
    <link rel="next" title="Voxel Grid" href="../voxel_grid/index.html" />
    <link rel="prev" title="RGBD Image" href="../rgbd/index.html" /> 
</head>

<body class="wy-body-for-nav">

   
  <div class="wy-grid-for-nav">
    
    <nav data-toggle="wy-nav-shift" class="wy-nav-side">
      <div class="wy-side-scroll">
        <div class="wy-side-nav-search" >
          

          
            <a href="../../../index-2.html" class="icon icon-home"> Open3D
          

          
          </a>

          
            
            
              <div class="version">
                0.17.0
              </div>
            
          

          
<div role="search">
  <form id="rtd-search-form" class="wy-form" action="http://www.open3d.org/docs/release/search.html" method="get">
    <input type="text" name="q" placeholder="Search docs" />
    <input type="hidden" name="check_keywords" value="yes" />
    <input type="hidden" name="area" value="default" />
  </form>
</div>

          
        </div>

        <div class="wy-menu wy-menu-vertical" data-spy="affix" role="navigation" aria-label="main navigation">
          
            
            
              
            
            
              <p class="caption"><span class="caption-text">Getting Started</span></p>
<ul>
<li class="toctree-l1"><a class="reference internal" href="../../../introduction.html">Introduction</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../../getting_started.html">Getting started</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../../compilation.html">Build from source</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../../cpp_project.html">Link Open3D in C++ projects</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../../builddocs.html">Build documentation</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../../open3d_ml.html">Open3D-ML</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../../arm.html">ARM support</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../../docker.html">Docker</a></li>
</ul>
<p class="caption"><span class="caption-text">Tutorial</span></p>
<ul>
<li class="toctree-l1"><a class="reference internal" href="../../../tutorial/geometry/index.html">Geometry</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../../tutorial/t_geometry/index.html">Geometry (Tensor)</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../../tutorial/pipelines/index.html">Pipelines</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../../tutorial/t_pipelines/index.html">Pipelines (Tensor)</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../../tutorial/visualization/index.html">Visualization</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../../tutorial/core/index.html">Core</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../../tutorial/data/index.html">Dataset</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../../tutorial/reconstruction_system/index.html">Reconstruction system</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../../tutorial/t_reconstruction_system/index.html">Reconstruction system (Tensor)</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../../tutorial/sensor/index.html">Sensor</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../../tutorial/reference.html">Reference</a></li>
</ul>
<p class="caption"><span class="caption-text">Contribute</span></p>
<ul>
<li class="toctree-l1"><a class="reference internal" href="../../../contribute/contribute.html">Contributing to Open3D</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../../contribute/contribution_recipes.html">Contribution methods</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../../contribute/styleguide.html">Open3D style guide</a></li>
</ul>
<p class="caption"><span class="caption-text">C++ API</span></p>
<ul>
<li class="toctree-l1"><a class="reference internal" href="../../../cpp_api.html">C++ documentation</a></li>
</ul>
<p class="caption"><span class="caption-text">Python API</span></p>
<ul>
<li class="toctree-l1"><a class="reference internal" href="../../../python_api/open3d.camera.html">open3d.camera</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../../python_api/open3d.core.html">open3d.core</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../../python_api/open3d.data.html">open3d.data</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../../python_api/open3d.geometry.html">open3d.geometry</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../../python_api/open3d.io.html">open3d.io</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../../python_api/open3d.t.html">open3d.t</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../../python_api/open3d.ml.html">open3d.ml</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../../python_api/open3d.pipelines.html">open3d.pipelines</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../../python_api/open3d.utility.html">open3d.utility</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../../python_api/open3d.visualization.html">open3d.visualization</a></li>
</ul>
<p class="caption"><span class="caption-text">Python Examples</span></p>
<ul class="current">
<li class="toctree-l1"><a class="reference internal" href="../../camera/index.html">Camera</a></li>
<li class="toctree-l1 current"><a class="reference internal" href="../index.html">Geometry</a><ul class="current">
<li class="toctree-l2"><a class="reference internal" href="../image/index.html">Image</a></li>
<li class="toctree-l2"><a class="reference internal" href="../kd_tree/index.html">KD Tree</a></li>
<li class="toctree-l2"><a class="reference internal" href="../octree/index.html">Octree</a></li>
<li class="toctree-l2"><a class="reference internal" href="../point_cloud/index.html">Point Cloud</a></li>
<li class="toctree-l2"><a class="reference internal" href="../ray_casting/index.html">Ray Casting</a></li>
<li class="toctree-l2"><a class="reference internal" href="../rgbd/index.html">RGBD Image</a></li>
<li class="toctree-l2 current"><a class="current reference internal" href="#">Triangle Mesh</a><ul>
<li class="toctree-l3"><a class="reference internal" href="#triangle-mesh-connected-components-py">triangle_mesh_connected_components.py</a></li>
<li class="toctree-l3"><a class="reference internal" href="#triangle-mesh-cropping-py">triangle_mesh_cropping.py</a></li>
<li class="toctree-l3"><a class="reference internal" href="#triangle-mesh-deformation-py">triangle_mesh_deformation.py</a></li>
<li class="toctree-l3"><a class="reference internal" href="#triangle-mesh-filtering-average-py">triangle_mesh_filtering_average.py</a></li>
<li class="toctree-l3"><a class="reference internal" href="#triangle-mesh-from-point-cloud-alpha-shapes-py">triangle_mesh_from_point_cloud_alpha_shapes.py</a></li>
<li class="toctree-l3"><a class="reference internal" href="#triangle-mesh-from-point-cloud-ball-pivoting-py">triangle_mesh_from_point_cloud_ball_pivoting.py</a></li>
<li class="toctree-l3"><a class="reference internal" href="#triangle-mesh-from-point-cloud-poisson-py">triangle_mesh_from_point_cloud_poisson.py</a></li>
<li class="toctree-l3"><a class="reference internal" href="#triangle-mesh-normal-estimation-py">triangle_mesh_normal_estimation.py</a></li>
<li class="toctree-l3"><a class="reference internal" href="#triangle-mesh-properties-py">triangle_mesh_properties.py</a></li>
<li class="toctree-l3"><a class="reference internal" href="#triangle-mesh-sampling-py">triangle_mesh_sampling.py</a></li>
<li class="toctree-l3"><a class="reference internal" href="#triangle-mesh-simplification-decimation-py">triangle_mesh_simplification_decimation.py</a></li>
<li class="toctree-l3"><a class="reference internal" href="#triangle-mesh-simplification-vertex-clustering-py">triangle_mesh_simplification_vertex_clustering.py</a></li>
<li class="toctree-l3"><a class="reference internal" href="#triangle-mesh-subdivision-py">triangle_mesh_subdivision.py</a></li>
<li class="toctree-l3"><a class="reference internal" href="#triangle-mesh-transformation-py">triangle_mesh_transformation.py</a></li>
<li class="toctree-l3"><a class="reference internal" href="#triangle-mesh-with-numpy-py">triangle_mesh_with_numpy.py</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../voxel_grid/index.html">Voxel Grid</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../../io/index.html">IO</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../pipelines/index.html">Pipelines</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../utility/index.html">Utility</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../visualization/index.html">Visualization</a></li>
</ul>

            
          
        </div>
      </div>
    </nav>

    <section data-toggle="wy-nav-shift" class="wy-nav-content-wrap">

      
      <nav class="wy-nav-top" aria-label="top navigation">
        
          <i data-toggle="wy-nav-top" class="fa fa-bars"></i>
          <a href="../../../index-2.html">Open3D</a>
        
      </nav>


      <div class="wy-nav-content">
        
        <div class="rst-content">
        
          















<div role="navigation" aria-label="breadcrumbs navigation">

  <ul class="wy-breadcrumbs">
    
      <li><a href="../../../index-2.html">Docs</a> &raquo;</li>
        
          <li><a href="../index.html">Geometry</a> &raquo;</li>
        
      <li>Triangle Mesh</li>
    
    
      <li class="wy-breadcrumbs-aside">
        
            
        
      </li>
    
  </ul>

  
  <hr/>
</div>
          <div role="main" class="document" itemscope="itemscope" itemtype="http://schema.org/Article">
           <div itemprop="articleBody">
            
  
<style>
/* CSS overrides for sphinx_rtd_theme */

/* 24px margin */
.nbinput.nblast.container,
.nboutput.nblast.container {
    margin-bottom: 19px;  /* padding has already 5px */
}

/* ... except between code cells! */
.nblast.container + .nbinput.container {
    margin-top: -19px;
}

.admonition > p:before {
    margin-right: 4px;  /* make room for the exclamation icon */
}

/* Fix math alignment, see https://github.com/rtfd/sphinx_rtd_theme/pull/686 */
.math {
    text-align: unset;
}
</style>
<div class="section" id="triangle-mesh">
<h1>Triangle Mesh<a class="headerlink" href="#triangle-mesh" title="Permalink to this headline">¶</a></h1>
<div class="section" id="triangle-mesh-connected-components-py">
<h2>triangle_mesh_connected_components.py<a class="headerlink" href="#triangle-mesh-connected-components-py" title="Permalink to this headline">¶</a></h2>
<div class="highlight-python notranslate"><div class="highlight"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre><span class="normal"> 1</span>
<span class="normal"> 2</span>
<span class="normal"> 3</span>
<span class="normal"> 4</span>
<span class="normal"> 5</span>
<span class="normal"> 6</span>
<span class="normal"> 7</span>
<span class="normal"> 8</span>
<span class="normal"> 9</span>
<span class="normal">10</span>
<span class="normal">11</span>
<span class="normal">12</span>
<span class="normal">13</span>
<span class="normal">14</span>
<span class="normal">15</span>
<span class="normal">16</span>
<span class="normal">17</span>
<span class="normal">18</span>
<span class="normal">19</span>
<span class="normal">20</span>
<span class="normal">21</span>
<span class="normal">22</span>
<span class="normal">23</span>
<span class="normal">24</span>
<span class="normal">25</span>
<span class="normal">26</span>
<span class="normal">27</span>
<span class="normal">28</span>
<span class="normal">29</span>
<span class="normal">30</span>
<span class="normal">31</span>
<span class="normal">32</span>
<span class="normal">33</span>
<span class="normal">34</span>
<span class="normal">35</span>
<span class="normal">36</span>
<span class="normal">37</span>
<span class="normal">38</span>
<span class="normal">39</span>
<span class="normal">40</span>
<span class="normal">41</span>
<span class="normal">42</span>
<span class="normal">43</span>
<span class="normal">44</span>
<span class="normal">45</span>
<span class="normal">46</span>
<span class="normal">47</span>
<span class="normal">48</span>
<span class="normal">49</span></pre></div></td><td class="code"><div><pre><span></span><span class="c1"># ----------------------------------------------------------------------------</span>
<span class="c1"># -                        Open3D: www.open3d.org                            -</span>
<span class="c1"># ----------------------------------------------------------------------------</span>
<span class="c1"># Copyright (c) 2018-2023 www.open3d.org</span>
<span class="c1"># SPDX-License-Identifier: MIT</span>
<span class="c1"># ----------------------------------------------------------------------------</span>

<span class="kn">import</span> <span class="nn">open3d</span> <span class="k">as</span> <span class="nn">o3d</span>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="nn">np</span>
<span class="kn">import</span> <span class="nn">copy</span>

<span class="k">if</span> <span class="vm">__name__</span> <span class="o">==</span> <span class="s2">&quot;__main__&quot;</span><span class="p">:</span>
    <span class="n">bunny</span> <span class="o">=</span> <span class="n">o3d</span><span class="o">.</span><span class="n">data</span><span class="o">.</span><span class="n">BunnyMesh</span><span class="p">()</span>
    <span class="n">mesh</span> <span class="o">=</span> <span class="n">o3d</span><span class="o">.</span><span class="n">io</span><span class="o">.</span><span class="n">read_triangle_mesh</span><span class="p">(</span><span class="n">bunny</span><span class="o">.</span><span class="n">path</span><span class="p">)</span>
    <span class="n">mesh</span><span class="o">.</span><span class="n">compute_vertex_normals</span><span class="p">()</span>

    <span class="n">mesh</span> <span class="o">=</span> <span class="n">mesh</span><span class="o">.</span><span class="n">subdivide_midpoint</span><span class="p">(</span><span class="n">number_of_iterations</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span>
    <span class="n">vert</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">asarray</span><span class="p">(</span><span class="n">mesh</span><span class="o">.</span><span class="n">vertices</span><span class="p">)</span>
    <span class="n">min_vert</span><span class="p">,</span> <span class="n">max_vert</span> <span class="o">=</span> <span class="n">vert</span><span class="o">.</span><span class="n">min</span><span class="p">(</span><span class="n">axis</span><span class="o">=</span><span class="mi">0</span><span class="p">),</span> <span class="n">vert</span><span class="o">.</span><span class="n">max</span><span class="p">(</span><span class="n">axis</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>
    <span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">30</span><span class="p">):</span>
        <span class="n">cube</span> <span class="o">=</span> <span class="n">o3d</span><span class="o">.</span><span class="n">geometry</span><span class="o">.</span><span class="n">TriangleMesh</span><span class="o">.</span><span class="n">create_box</span><span class="p">()</span>
        <span class="n">cube</span><span class="o">.</span><span class="n">scale</span><span class="p">(</span><span class="mf">0.005</span><span class="p">,</span> <span class="n">center</span><span class="o">=</span><span class="n">cube</span><span class="o">.</span><span class="n">get_center</span><span class="p">())</span>
        <span class="n">cube</span><span class="o">.</span><span class="n">translate</span><span class="p">(</span>
            <span class="p">(</span>
                <span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">uniform</span><span class="p">(</span><span class="n">min_vert</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="n">max_vert</span><span class="p">[</span><span class="mi">0</span><span class="p">]),</span>
                <span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">uniform</span><span class="p">(</span><span class="n">min_vert</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="n">max_vert</span><span class="p">[</span><span class="mi">1</span><span class="p">]),</span>
                <span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">uniform</span><span class="p">(</span><span class="n">min_vert</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span> <span class="n">max_vert</span><span class="p">[</span><span class="mi">2</span><span class="p">]),</span>
            <span class="p">),</span>
            <span class="n">relative</span><span class="o">=</span><span class="kc">False</span><span class="p">,</span>
        <span class="p">)</span>
        <span class="n">mesh</span> <span class="o">+=</span> <span class="n">cube</span>
    <span class="n">mesh</span><span class="o">.</span><span class="n">compute_vertex_normals</span><span class="p">()</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Displaying input mesh ...&quot;</span><span class="p">)</span>
    <span class="n">o3d</span><span class="o">.</span><span class="n">visualization</span><span class="o">.</span><span class="n">draw</span><span class="p">([</span><span class="n">mesh</span><span class="p">])</span>

    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Clustering connected triangles ...&quot;</span><span class="p">)</span>
    <span class="k">with</span> <span class="n">o3d</span><span class="o">.</span><span class="n">utility</span><span class="o">.</span><span class="n">VerbosityContextManager</span><span class="p">(</span>
            <span class="n">o3d</span><span class="o">.</span><span class="n">utility</span><span class="o">.</span><span class="n">VerbosityLevel</span><span class="o">.</span><span class="n">Debug</span><span class="p">)</span> <span class="k">as</span> <span class="n">cm</span><span class="p">:</span>
        <span class="n">triangle_clusters</span><span class="p">,</span> <span class="n">cluster_n_triangles</span><span class="p">,</span> <span class="n">cluster_area</span> <span class="o">=</span> <span class="p">(</span>
            <span class="n">mesh</span><span class="o">.</span><span class="n">cluster_connected_triangles</span><span class="p">())</span>
    <span class="n">triangle_clusters</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">asarray</span><span class="p">(</span><span class="n">triangle_clusters</span><span class="p">)</span>
    <span class="n">cluster_n_triangles</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">asarray</span><span class="p">(</span><span class="n">cluster_n_triangles</span><span class="p">)</span>
    <span class="n">cluster_area</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">asarray</span><span class="p">(</span><span class="n">cluster_area</span><span class="p">)</span>

    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Displaying mesh with small clusters removed ...&quot;</span><span class="p">)</span>
    <span class="n">mesh_0</span> <span class="o">=</span> <span class="n">copy</span><span class="o">.</span><span class="n">deepcopy</span><span class="p">(</span><span class="n">mesh</span><span class="p">)</span>
    <span class="n">triangles_to_remove</span> <span class="o">=</span> <span class="n">cluster_n_triangles</span><span class="p">[</span><span class="n">triangle_clusters</span><span class="p">]</span> <span class="o">&lt;</span> <span class="mi">100</span>
    <span class="n">mesh_0</span><span class="o">.</span><span class="n">remove_triangles_by_mask</span><span class="p">(</span><span class="n">triangles_to_remove</span><span class="p">)</span>
    <span class="n">o3d</span><span class="o">.</span><span class="n">visualization</span><span class="o">.</span><span class="n">draw</span><span class="p">([</span><span class="n">mesh_0</span><span class="p">])</span>
</pre></div></td></tr></table></div>
</div>
</div>
<div class="section" id="triangle-mesh-cropping-py">
<h2>triangle_mesh_cropping.py<a class="headerlink" href="#triangle-mesh-cropping-py" title="Permalink to this headline">¶</a></h2>
<div class="highlight-python notranslate"><div class="highlight"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre><span class="normal"> 1</span>
<span class="normal"> 2</span>
<span class="normal"> 3</span>
<span class="normal"> 4</span>
<span class="normal"> 5</span>
<span class="normal"> 6</span>
<span class="normal"> 7</span>
<span class="normal"> 8</span>
<span class="normal"> 9</span>
<span class="normal">10</span>
<span class="normal">11</span>
<span class="normal">12</span>
<span class="normal">13</span>
<span class="normal">14</span>
<span class="normal">15</span>
<span class="normal">16</span>
<span class="normal">17</span>
<span class="normal">18</span>
<span class="normal">19</span>
<span class="normal">20</span>
<span class="normal">21</span>
<span class="normal">22</span>
<span class="normal">23</span>
<span class="normal">24</span>
<span class="normal">25</span>
<span class="normal">26</span>
<span class="normal">27</span>
<span class="normal">28</span></pre></div></td><td class="code"><div><pre><span></span><span class="c1"># ----------------------------------------------------------------------------</span>
<span class="c1"># -                        Open3D: www.open3d.org                            -</span>
<span class="c1"># ----------------------------------------------------------------------------</span>
<span class="c1"># Copyright (c) 2018-2023 www.open3d.org</span>
<span class="c1"># SPDX-License-Identifier: MIT</span>
<span class="c1"># ----------------------------------------------------------------------------</span>

<span class="kn">import</span> <span class="nn">open3d</span> <span class="k">as</span> <span class="nn">o3d</span>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="nn">np</span>
<span class="kn">import</span> <span class="nn">copy</span>

<span class="k">if</span> <span class="vm">__name__</span> <span class="o">==</span> <span class="s2">&quot;__main__&quot;</span><span class="p">:</span>
    <span class="n">knot_mesh</span> <span class="o">=</span> <span class="n">o3d</span><span class="o">.</span><span class="n">data</span><span class="o">.</span><span class="n">KnotMesh</span><span class="p">()</span>
    <span class="n">mesh</span> <span class="o">=</span> <span class="n">o3d</span><span class="o">.</span><span class="n">io</span><span class="o">.</span><span class="n">read_triangle_mesh</span><span class="p">(</span><span class="n">knot_mesh</span><span class="o">.</span><span class="n">path</span><span class="p">)</span>
    <span class="n">mesh</span><span class="o">.</span><span class="n">compute_vertex_normals</span><span class="p">()</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Displaying original mesh ...&quot;</span><span class="p">)</span>
    <span class="n">o3d</span><span class="o">.</span><span class="n">visualization</span><span class="o">.</span><span class="n">draw</span><span class="p">([</span><span class="n">mesh</span><span class="p">])</span>

    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Displaying mesh of only the first half triangles ...&quot;</span><span class="p">)</span>
    <span class="n">mesh_cropped</span> <span class="o">=</span> <span class="n">copy</span><span class="o">.</span><span class="n">deepcopy</span><span class="p">(</span><span class="n">mesh</span><span class="p">)</span>
    <span class="n">mesh_cropped</span><span class="o">.</span><span class="n">triangles</span> <span class="o">=</span> <span class="n">o3d</span><span class="o">.</span><span class="n">utility</span><span class="o">.</span><span class="n">Vector3iVector</span><span class="p">(</span>
        <span class="n">np</span><span class="o">.</span><span class="n">asarray</span><span class="p">(</span><span class="n">mesh_cropped</span><span class="o">.</span><span class="n">triangles</span><span class="p">)[:</span><span class="nb">len</span><span class="p">(</span><span class="n">mesh_cropped</span><span class="o">.</span><span class="n">triangles</span><span class="p">)</span> <span class="o">//</span>
                                           <span class="mi">2</span><span class="p">,</span> <span class="p">:])</span>
    <span class="n">mesh_cropped</span><span class="o">.</span><span class="n">triangle_normals</span> <span class="o">=</span> <span class="n">o3d</span><span class="o">.</span><span class="n">utility</span><span class="o">.</span><span class="n">Vector3dVector</span><span class="p">(</span>
        <span class="n">np</span><span class="o">.</span><span class="n">asarray</span><span class="p">(</span><span class="n">mesh_cropped</span><span class="o">.</span><span class="n">triangle_normals</span><span class="p">)</span>
        <span class="p">[:</span><span class="nb">len</span><span class="p">(</span><span class="n">mesh_cropped</span><span class="o">.</span><span class="n">triangle_normals</span><span class="p">)</span> <span class="o">//</span> <span class="mi">2</span><span class="p">,</span> <span class="p">:])</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">mesh_cropped</span><span class="o">.</span><span class="n">triangles</span><span class="p">)</span>
    <span class="n">o3d</span><span class="o">.</span><span class="n">visualization</span><span class="o">.</span><span class="n">draw</span><span class="p">([</span><span class="n">mesh_cropped</span><span class="p">])</span>
</pre></div></td></tr></table></div>
</div>
</div>
<div class="section" id="triangle-mesh-deformation-py">
<h2>triangle_mesh_deformation.py<a class="headerlink" href="#triangle-mesh-deformation-py" title="Permalink to this headline">¶</a></h2>
<div class="highlight-python notranslate"><div class="highlight"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre><span class="normal"> 1</span>
<span class="normal"> 2</span>
<span class="normal"> 3</span>
<span class="normal"> 4</span>
<span class="normal"> 5</span>
<span class="normal"> 6</span>
<span class="normal"> 7</span>
<span class="normal"> 8</span>
<span class="normal"> 9</span>
<span class="normal">10</span>
<span class="normal">11</span>
<span class="normal">12</span>
<span class="normal">13</span>
<span class="normal">14</span>
<span class="normal">15</span>
<span class="normal">16</span>
<span class="normal">17</span>
<span class="normal">18</span>
<span class="normal">19</span>
<span class="normal">20</span>
<span class="normal">21</span>
<span class="normal">22</span>
<span class="normal">23</span>
<span class="normal">24</span>
<span class="normal">25</span>
<span class="normal">26</span>
<span class="normal">27</span>
<span class="normal">28</span>
<span class="normal">29</span>
<span class="normal">30</span>
<span class="normal">31</span>
<span class="normal">32</span>
<span class="normal">33</span>
<span class="normal">34</span>
<span class="normal">35</span>
<span class="normal">36</span>
<span class="normal">37</span>
<span class="normal">38</span>
<span class="normal">39</span>
<span class="normal">40</span>
<span class="normal">41</span>
<span class="normal">42</span>
<span class="normal">43</span>
<span class="normal">44</span>
<span class="normal">45</span>
<span class="normal">46</span>
<span class="normal">47</span>
<span class="normal">48</span>
<span class="normal">49</span>
<span class="normal">50</span>
<span class="normal">51</span>
<span class="normal">52</span>
<span class="normal">53</span>
<span class="normal">54</span>
<span class="normal">55</span>
<span class="normal">56</span>
<span class="normal">57</span>
<span class="normal">58</span>
<span class="normal">59</span>
<span class="normal">60</span>
<span class="normal">61</span>
<span class="normal">62</span>
<span class="normal">63</span>
<span class="normal">64</span>
<span class="normal">65</span>
<span class="normal">66</span>
<span class="normal">67</span>
<span class="normal">68</span>
<span class="normal">69</span>
<span class="normal">70</span>
<span class="normal">71</span>
<span class="normal">72</span>
<span class="normal">73</span>
<span class="normal">74</span>
<span class="normal">75</span>
<span class="normal">76</span>
<span class="normal">77</span>
<span class="normal">78</span>
<span class="normal">79</span>
<span class="normal">80</span>
<span class="normal">81</span>
<span class="normal">82</span>
<span class="normal">83</span>
<span class="normal">84</span>
<span class="normal">85</span>
<span class="normal">86</span>
<span class="normal">87</span>
<span class="normal">88</span></pre></div></td><td class="code"><div><pre><span></span><span class="c1"># ----------------------------------------------------------------------------</span>
<span class="c1"># -                        Open3D: www.open3d.org                            -</span>
<span class="c1"># ----------------------------------------------------------------------------</span>
<span class="c1"># Copyright (c) 2018-2023 www.open3d.org</span>
<span class="c1"># SPDX-License-Identifier: MIT</span>
<span class="c1"># ----------------------------------------------------------------------------</span>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="nn">np</span>
<span class="kn">import</span> <span class="nn">open3d</span> <span class="k">as</span> <span class="nn">o3d</span>
<span class="kn">import</span> <span class="nn">time</span>
<span class="kn">import</span> <span class="nn">os</span>
<span class="kn">import</span> <span class="nn">sys</span>

<span class="n">pyexample_path</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">dirname</span><span class="p">(</span><span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">dirname</span><span class="p">(</span><span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">abspath</span><span class="p">(</span><span class="vm">__file__</span><span class="p">)))</span>
<span class="n">sys</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">pyexample_path</span><span class="p">)</span>

<span class="kn">import</span> <span class="nn">open3d_example</span> <span class="k">as</span> <span class="nn">o3dex</span>


<span class="k">def</span> <span class="nf">problem0</span><span class="p">():</span>
    <span class="n">mesh</span> <span class="o">=</span> <span class="n">o3dex</span><span class="o">.</span><span class="n">get_plane_mesh</span><span class="p">(</span><span class="n">height</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">width</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
    <span class="n">mesh</span> <span class="o">=</span> <span class="n">mesh</span><span class="o">.</span><span class="n">subdivide_midpoint</span><span class="p">(</span><span class="mi">3</span><span class="p">)</span>
    <span class="n">vertices</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">asarray</span><span class="p">(</span><span class="n">mesh</span><span class="o">.</span><span class="n">vertices</span><span class="p">)</span>
    <span class="n">static_ids</span> <span class="o">=</span> <span class="p">[</span>
        <span class="mi">1</span><span class="p">,</span> <span class="mi">46</span><span class="p">,</span> <span class="mi">47</span><span class="p">,</span> <span class="mi">48</span><span class="p">,</span> <span class="mi">16</span><span class="p">,</span> <span class="mi">51</span><span class="p">,</span> <span class="mi">49</span><span class="p">,</span> <span class="mi">50</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">31</span><span class="p">,</span> <span class="mi">33</span><span class="p">,</span> <span class="mi">32</span><span class="p">,</span> <span class="mi">11</span><span class="p">,</span> <span class="mi">26</span><span class="p">,</span> <span class="mi">27</span><span class="p">,</span> <span class="mi">25</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">64</span><span class="p">,</span> <span class="mi">65</span><span class="p">,</span>
        <span class="mi">20</span><span class="p">,</span> <span class="mi">66</span><span class="p">,</span> <span class="mi">68</span><span class="p">,</span> <span class="mi">67</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">69</span><span class="p">,</span> <span class="mi">71</span><span class="p">,</span> <span class="mi">70</span><span class="p">,</span> <span class="mi">22</span><span class="p">,</span> <span class="mi">72</span><span class="p">,</span> <span class="mi">74</span><span class="p">,</span> <span class="mi">73</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">15</span><span class="p">,</span> <span class="mi">44</span><span class="p">,</span> <span class="mi">43</span><span class="p">,</span> <span class="mi">45</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">41</span><span class="p">,</span>
        <span class="mi">40</span><span class="p">,</span> <span class="mi">42</span><span class="p">,</span> <span class="mi">13</span><span class="p">,</span> <span class="mi">39</span><span class="p">,</span> <span class="mi">37</span><span class="p">,</span> <span class="mi">38</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">56</span><span class="p">,</span> <span class="mi">55</span><span class="p">,</span> <span class="mi">19</span><span class="p">,</span> <span class="mi">61</span><span class="p">,</span> <span class="mi">60</span><span class="p">,</span> <span class="mi">59</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">76</span><span class="p">,</span> <span class="mi">75</span><span class="p">,</span> <span class="mi">77</span><span class="p">,</span> <span class="mi">23</span>
    <span class="p">]</span>
    <span class="n">static_positions</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="k">for</span> <span class="nb">id</span> <span class="ow">in</span> <span class="n">static_ids</span><span class="p">:</span>
        <span class="n">static_positions</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">vertices</span><span class="p">[</span><span class="nb">id</span><span class="p">])</span>
    <span class="n">handle_ids</span> <span class="o">=</span> <span class="p">[</span><span class="mi">4</span><span class="p">]</span>
    <span class="n">handle_positions</span> <span class="o">=</span> <span class="p">[</span><span class="n">vertices</span><span class="p">[</span><span class="mi">4</span><span class="p">]</span> <span class="o">+</span> <span class="n">np</span><span class="o">.</span><span class="n">array</span><span class="p">((</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">))]</span>

    <span class="k">return</span> <span class="n">mesh</span><span class="p">,</span> <span class="n">static_ids</span> <span class="o">+</span> <span class="n">handle_ids</span><span class="p">,</span> <span class="n">static_positions</span> <span class="o">+</span> <span class="n">handle_positions</span>


<span class="k">def</span> <span class="nf">problem1</span><span class="p">():</span>
    <span class="n">mesh</span> <span class="o">=</span> <span class="n">o3dex</span><span class="o">.</span><span class="n">get_plane_mesh</span><span class="p">(</span><span class="n">height</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">width</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
    <span class="n">mesh</span> <span class="o">=</span> <span class="n">mesh</span><span class="o">.</span><span class="n">subdivide_midpoint</span><span class="p">(</span><span class="mi">3</span><span class="p">)</span>
    <span class="n">vertices</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">asarray</span><span class="p">(</span><span class="n">mesh</span><span class="o">.</span><span class="n">vertices</span><span class="p">)</span>
    <span class="n">static_ids</span> <span class="o">=</span> <span class="p">[</span>
        <span class="mi">1</span><span class="p">,</span> <span class="mi">46</span><span class="p">,</span> <span class="mi">15</span><span class="p">,</span> <span class="mi">43</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">40</span><span class="p">,</span> <span class="mi">13</span><span class="p">,</span> <span class="mi">38</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">56</span><span class="p">,</span> <span class="mi">37</span><span class="p">,</span> <span class="mi">39</span><span class="p">,</span> <span class="mi">42</span><span class="p">,</span> <span class="mi">41</span><span class="p">,</span> <span class="mi">45</span><span class="p">,</span> <span class="mi">44</span><span class="p">,</span> <span class="mi">48</span><span class="p">,</span> <span class="mi">47</span>
    <span class="p">]</span>
    <span class="n">static_positions</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="k">for</span> <span class="nb">id</span> <span class="ow">in</span> <span class="n">static_ids</span><span class="p">:</span>
        <span class="n">static_positions</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">vertices</span><span class="p">[</span><span class="nb">id</span><span class="p">])</span>
    <span class="n">handle_ids</span> <span class="o">=</span> <span class="p">[</span><span class="mi">21</span><span class="p">]</span>
    <span class="n">handle_positions</span> <span class="o">=</span> <span class="p">[</span><span class="n">vertices</span><span class="p">[</span><span class="mi">21</span><span class="p">]</span> <span class="o">+</span> <span class="n">np</span><span class="o">.</span><span class="n">array</span><span class="p">((</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">))]</span>

    <span class="k">return</span> <span class="n">mesh</span><span class="p">,</span> <span class="n">static_ids</span> <span class="o">+</span> <span class="n">handle_ids</span><span class="p">,</span> <span class="n">static_positions</span> <span class="o">+</span> <span class="n">handle_positions</span>


<span class="k">def</span> <span class="nf">problem2</span><span class="p">():</span>
    <span class="n">armadillo_data</span> <span class="o">=</span> <span class="n">o3d</span><span class="o">.</span><span class="n">data</span><span class="o">.</span><span class="n">ArmadilloMesh</span><span class="p">()</span>
    <span class="n">mesh</span> <span class="o">=</span> <span class="n">o3d</span><span class="o">.</span><span class="n">io</span><span class="o">.</span><span class="n">read_triangle_mesh</span><span class="p">(</span><span class="n">armadillo_data</span><span class="o">.</span><span class="n">path</span><span class="p">)</span>
    <span class="n">vertices</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">asarray</span><span class="p">(</span><span class="n">mesh</span><span class="o">.</span><span class="n">vertices</span><span class="p">)</span>
    <span class="n">static_ids</span> <span class="o">=</span> <span class="p">[</span><span class="n">idx</span> <span class="k">for</span> <span class="n">idx</span> <span class="ow">in</span> <span class="n">np</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="n">vertices</span><span class="p">[:,</span> <span class="mi">1</span><span class="p">]</span> <span class="o">&lt;</span> <span class="o">-</span><span class="mi">30</span><span class="p">)[</span><span class="mi">0</span><span class="p">]]</span>
    <span class="n">static_positions</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="k">for</span> <span class="nb">id</span> <span class="ow">in</span> <span class="n">static_ids</span><span class="p">:</span>
        <span class="n">static_positions</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">vertices</span><span class="p">[</span><span class="nb">id</span><span class="p">])</span>
    <span class="n">handle_ids</span> <span class="o">=</span> <span class="p">[</span><span class="mi">2490</span><span class="p">]</span>
    <span class="n">handle_positions</span> <span class="o">=</span> <span class="p">[</span><span class="n">vertices</span><span class="p">[</span><span class="mi">2490</span><span class="p">]</span> <span class="o">+</span> <span class="n">np</span><span class="o">.</span><span class="n">array</span><span class="p">((</span><span class="o">-</span><span class="mi">40</span><span class="p">,</span> <span class="o">-</span><span class="mi">40</span><span class="p">,</span> <span class="o">-</span><span class="mi">40</span><span class="p">))]</span>

    <span class="k">return</span> <span class="n">mesh</span><span class="p">,</span> <span class="n">static_ids</span> <span class="o">+</span> <span class="n">handle_ids</span><span class="p">,</span> <span class="n">static_positions</span> <span class="o">+</span> <span class="n">handle_positions</span>


<span class="k">if</span> <span class="vm">__name__</span> <span class="o">==</span> <span class="s2">&quot;__main__&quot;</span><span class="p">:</span>
    <span class="n">o3d</span><span class="o">.</span><span class="n">utility</span><span class="o">.</span><span class="n">set_verbosity_level</span><span class="p">(</span><span class="n">o3d</span><span class="o">.</span><span class="n">utility</span><span class="o">.</span><span class="n">Debug</span><span class="p">)</span>

    <span class="k">for</span> <span class="n">mesh</span><span class="p">,</span> <span class="n">constraint_ids</span><span class="p">,</span> <span class="n">constraint_pos</span> <span class="ow">in</span> <span class="p">[</span>
            <span class="n">problem0</span><span class="p">(),</span> <span class="n">problem1</span><span class="p">(),</span> <span class="n">problem2</span><span class="p">()</span>
    <span class="p">]:</span>
        <span class="n">constraint_ids</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">array</span><span class="p">(</span><span class="n">constraint_ids</span><span class="p">,</span> <span class="n">dtype</span><span class="o">=</span><span class="n">np</span><span class="o">.</span><span class="n">int32</span><span class="p">)</span>
        <span class="n">constraint_pos</span> <span class="o">=</span> <span class="n">o3d</span><span class="o">.</span><span class="n">utility</span><span class="o">.</span><span class="n">Vector3dVector</span><span class="p">(</span><span class="n">constraint_pos</span><span class="p">)</span>
        <span class="n">tic</span> <span class="o">=</span> <span class="n">time</span><span class="o">.</span><span class="n">time</span><span class="p">()</span>
        <span class="n">mesh_prime</span> <span class="o">=</span> <span class="n">mesh</span><span class="o">.</span><span class="n">deform_as_rigid_as_possible</span><span class="p">(</span>
            <span class="n">o3d</span><span class="o">.</span><span class="n">utility</span><span class="o">.</span><span class="n">IntVector</span><span class="p">(</span><span class="n">constraint_ids</span><span class="p">),</span> <span class="n">constraint_pos</span><span class="p">,</span> <span class="n">max_iter</span><span class="o">=</span><span class="mi">50</span><span class="p">)</span>
        <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;deform took </span><span class="si">{}</span><span class="s2">[s]&quot;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">time</span><span class="o">.</span><span class="n">time</span><span class="p">()</span> <span class="o">-</span> <span class="n">tic</span><span class="p">))</span>
        <span class="n">mesh_prime</span><span class="o">.</span><span class="n">compute_vertex_normals</span><span class="p">()</span>

        <span class="n">mesh</span><span class="o">.</span><span class="n">paint_uniform_color</span><span class="p">((</span><span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">))</span>
        <span class="n">handles</span> <span class="o">=</span> <span class="n">o3d</span><span class="o">.</span><span class="n">geometry</span><span class="o">.</span><span class="n">PointCloud</span><span class="p">()</span>
        <span class="n">handles</span><span class="o">.</span><span class="n">points</span> <span class="o">=</span> <span class="n">constraint_pos</span>
        <span class="n">handles</span><span class="o">.</span><span class="n">paint_uniform_color</span><span class="p">((</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">))</span>
        <span class="n">o3d</span><span class="o">.</span><span class="n">visualization</span><span class="o">.</span><span class="n">draw_geometries</span><span class="p">([</span><span class="n">mesh</span><span class="p">,</span> <span class="n">mesh_prime</span><span class="p">,</span> <span class="n">handles</span><span class="p">])</span>

    <span class="n">o3d</span><span class="o">.</span><span class="n">utility</span><span class="o">.</span><span class="n">set_verbosity_level</span><span class="p">(</span><span class="n">o3d</span><span class="o">.</span><span class="n">utility</span><span class="o">.</span><span class="n">Info</span><span class="p">)</span>
</pre></div></td></tr></table></div>
</div>
</div>
<div class="section" id="triangle-mesh-filtering-average-py">
<h2>triangle_mesh_filtering_average.py<a class="headerlink" href="#triangle-mesh-filtering-average-py" title="Permalink to this headline">¶</a></h2>
<div class="highlight-python notranslate"><div class="highlight"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre><span class="normal"> 1</span>
<span class="normal"> 2</span>
<span class="normal"> 3</span>
<span class="normal"> 4</span>
<span class="normal"> 5</span>
<span class="normal"> 6</span>
<span class="normal"> 7</span>
<span class="normal"> 8</span>
<span class="normal"> 9</span>
<span class="normal">10</span>
<span class="normal">11</span>
<span class="normal">12</span>
<span class="normal">13</span>
<span class="normal">14</span>
<span class="normal">15</span>
<span class="normal">16</span>
<span class="normal">17</span>
<span class="normal">18</span>
<span class="normal">19</span>
<span class="normal">20</span>
<span class="normal">21</span>
<span class="normal">22</span>
<span class="normal">23</span>
<span class="normal">24</span>
<span class="normal">25</span>
<span class="normal">26</span>
<span class="normal">27</span>
<span class="normal">28</span>
<span class="normal">29</span>
<span class="normal">30</span>
<span class="normal">31</span>
<span class="normal">32</span>
<span class="normal">33</span>
<span class="normal">34</span>
<span class="normal">35</span>
<span class="normal">36</span>
<span class="normal">37</span>
<span class="normal">38</span>
<span class="normal">39</span>
<span class="normal">40</span>
<span class="normal">41</span>
<span class="normal">42</span>
<span class="normal">43</span>
<span class="normal">44</span>
<span class="normal">45</span>
<span class="normal">46</span>
<span class="normal">47</span>
<span class="normal">48</span>
<span class="normal">49</span>
<span class="normal">50</span>
<span class="normal">51</span>
<span class="normal">52</span>
<span class="normal">53</span>
<span class="normal">54</span>
<span class="normal">55</span>
<span class="normal">56</span>
<span class="normal">57</span>
<span class="normal">58</span>
<span class="normal">59</span>
<span class="normal">60</span>
<span class="normal">61</span>
<span class="normal">62</span>
<span class="normal">63</span>
<span class="normal">64</span>
<span class="normal">65</span>
<span class="normal">66</span>
<span class="normal">67</span>
<span class="normal">68</span>
<span class="normal">69</span>
<span class="normal">70</span>
<span class="normal">71</span>
<span class="normal">72</span>
<span class="normal">73</span>
<span class="normal">74</span>
<span class="normal">75</span>
<span class="normal">76</span>
<span class="normal">77</span>
<span class="normal">78</span>
<span class="normal">79</span>
<span class="normal">80</span>
<span class="normal">81</span>
<span class="normal">82</span>
<span class="normal">83</span>
<span class="normal">84</span>
<span class="normal">85</span></pre></div></td><td class="code"><div><pre><span></span><span class="c1"># ----------------------------------------------------------------------------</span>
<span class="c1"># -                        Open3D: www.open3d.org                            -</span>
<span class="c1"># ----------------------------------------------------------------------------</span>
<span class="c1"># Copyright (c) 2018-2023 www.open3d.org</span>
<span class="c1"># SPDX-License-Identifier: MIT</span>
<span class="c1"># ----------------------------------------------------------------------------</span>

<span class="kn">from</span> <span class="nn">numpy.random.mtrand</span> <span class="kn">import</span> <span class="n">laplace</span>
<span class="kn">import</span> <span class="nn">open3d</span> <span class="k">as</span> <span class="nn">o3d</span>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="nn">np</span>


<span class="k">def</span> <span class="nf">average_filtering</span><span class="p">():</span>
    <span class="c1"># Create noisy mesh.</span>
    <span class="n">knot_mesh</span> <span class="o">=</span> <span class="n">o3d</span><span class="o">.</span><span class="n">data</span><span class="o">.</span><span class="n">KnotMesh</span><span class="p">()</span>
    <span class="n">mesh_in</span> <span class="o">=</span> <span class="n">o3d</span><span class="o">.</span><span class="n">io</span><span class="o">.</span><span class="n">read_triangle_mesh</span><span class="p">(</span><span class="n">knot_mesh</span><span class="o">.</span><span class="n">path</span><span class="p">)</span>
    <span class="n">vertices</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">asarray</span><span class="p">(</span><span class="n">mesh_in</span><span class="o">.</span><span class="n">vertices</span><span class="p">)</span>
    <span class="n">noise</span> <span class="o">=</span> <span class="mi">5</span>
    <span class="n">vertices</span> <span class="o">+=</span> <span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">uniform</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="n">noise</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="n">vertices</span><span class="o">.</span><span class="n">shape</span><span class="p">)</span>
    <span class="n">mesh_in</span><span class="o">.</span><span class="n">vertices</span> <span class="o">=</span> <span class="n">o3d</span><span class="o">.</span><span class="n">utility</span><span class="o">.</span><span class="n">Vector3dVector</span><span class="p">(</span><span class="n">vertices</span><span class="p">)</span>
    <span class="n">mesh_in</span><span class="o">.</span><span class="n">compute_vertex_normals</span><span class="p">()</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Displaying input mesh ...&quot;</span><span class="p">)</span>
    <span class="n">o3d</span><span class="o">.</span><span class="n">visualization</span><span class="o">.</span><span class="n">draw_geometries</span><span class="p">([</span><span class="n">mesh_in</span><span class="p">])</span>

    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Displaying output of average mesh filter after 1 iteration ...&quot;</span><span class="p">)</span>
    <span class="n">mesh_out</span> <span class="o">=</span> <span class="n">mesh_in</span><span class="o">.</span><span class="n">filter_smooth_simple</span><span class="p">(</span><span class="n">number_of_iterations</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
    <span class="n">mesh_out</span><span class="o">.</span><span class="n">compute_vertex_normals</span><span class="p">()</span>
    <span class="n">o3d</span><span class="o">.</span><span class="n">visualization</span><span class="o">.</span><span class="n">draw_geometries</span><span class="p">([</span><span class="n">mesh_out</span><span class="p">])</span>

    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Displaying output of average mesh filter after 5 iteration ...&quot;</span><span class="p">)</span>
    <span class="n">mesh_out</span> <span class="o">=</span> <span class="n">mesh_in</span><span class="o">.</span><span class="n">filter_smooth_simple</span><span class="p">(</span><span class="n">number_of_iterations</span><span class="o">=</span><span class="mi">5</span><span class="p">)</span>
    <span class="n">mesh_out</span><span class="o">.</span><span class="n">compute_vertex_normals</span><span class="p">()</span>
    <span class="n">o3d</span><span class="o">.</span><span class="n">visualization</span><span class="o">.</span><span class="n">draw_geometries</span><span class="p">([</span><span class="n">mesh_out</span><span class="p">])</span>


<span class="k">def</span> <span class="nf">laplace_filtering</span><span class="p">():</span>
    <span class="c1"># Create noisy mesh.</span>
    <span class="n">knot_mesh</span> <span class="o">=</span> <span class="n">o3d</span><span class="o">.</span><span class="n">data</span><span class="o">.</span><span class="n">KnotMesh</span><span class="p">()</span>
    <span class="n">mesh_in</span> <span class="o">=</span> <span class="n">o3d</span><span class="o">.</span><span class="n">io</span><span class="o">.</span><span class="n">read_triangle_mesh</span><span class="p">(</span><span class="n">knot_mesh</span><span class="o">.</span><span class="n">path</span><span class="p">)</span>
    <span class="n">vertices</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">asarray</span><span class="p">(</span><span class="n">mesh_in</span><span class="o">.</span><span class="n">vertices</span><span class="p">)</span>
    <span class="n">noise</span> <span class="o">=</span> <span class="mi">5</span>
    <span class="n">vertices</span> <span class="o">+=</span> <span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">uniform</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="n">noise</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="n">vertices</span><span class="o">.</span><span class="n">shape</span><span class="p">)</span>
    <span class="n">mesh_in</span><span class="o">.</span><span class="n">vertices</span> <span class="o">=</span> <span class="n">o3d</span><span class="o">.</span><span class="n">utility</span><span class="o">.</span><span class="n">Vector3dVector</span><span class="p">(</span><span class="n">vertices</span><span class="p">)</span>
    <span class="n">mesh_in</span><span class="o">.</span><span class="n">compute_vertex_normals</span><span class="p">()</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Displaying input mesh ...&quot;</span><span class="p">)</span>
    <span class="n">o3d</span><span class="o">.</span><span class="n">visualization</span><span class="o">.</span><span class="n">draw_geometries</span><span class="p">([</span><span class="n">mesh_in</span><span class="p">])</span>

    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Displaying output of Laplace mesh filter after 10 iteration ...&quot;</span><span class="p">)</span>
    <span class="n">mesh_out</span> <span class="o">=</span> <span class="n">mesh_in</span><span class="o">.</span><span class="n">filter_smooth_laplacian</span><span class="p">(</span><span class="n">number_of_iterations</span><span class="o">=</span><span class="mi">10</span><span class="p">)</span>
    <span class="n">mesh_out</span><span class="o">.</span><span class="n">compute_vertex_normals</span><span class="p">()</span>
    <span class="n">o3d</span><span class="o">.</span><span class="n">visualization</span><span class="o">.</span><span class="n">draw_geometries</span><span class="p">([</span><span class="n">mesh_out</span><span class="p">])</span>

    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Displaying output of Laplace mesh filter after 50 iteration ...&quot;</span><span class="p">)</span>
    <span class="n">mesh_out</span> <span class="o">=</span> <span class="n">mesh_in</span><span class="o">.</span><span class="n">filter_smooth_laplacian</span><span class="p">(</span><span class="n">number_of_iterations</span><span class="o">=</span><span class="mi">50</span><span class="p">)</span>
    <span class="n">mesh_out</span><span class="o">.</span><span class="n">compute_vertex_normals</span><span class="p">()</span>
    <span class="n">o3d</span><span class="o">.</span><span class="n">visualization</span><span class="o">.</span><span class="n">draw_geometries</span><span class="p">([</span><span class="n">mesh_out</span><span class="p">])</span>


<span class="k">def</span> <span class="nf">taubin_filtering</span><span class="p">():</span>
    <span class="c1"># Create noisy mesh.</span>
    <span class="n">knot_mesh</span> <span class="o">=</span> <span class="n">o3d</span><span class="o">.</span><span class="n">data</span><span class="o">.</span><span class="n">KnotMesh</span><span class="p">()</span>
    <span class="n">mesh_in</span> <span class="o">=</span> <span class="n">o3d</span><span class="o">.</span><span class="n">io</span><span class="o">.</span><span class="n">read_triangle_mesh</span><span class="p">(</span><span class="n">knot_mesh</span><span class="o">.</span><span class="n">path</span><span class="p">)</span>
    <span class="n">vertices</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">asarray</span><span class="p">(</span><span class="n">mesh_in</span><span class="o">.</span><span class="n">vertices</span><span class="p">)</span>
    <span class="n">noise</span> <span class="o">=</span> <span class="mi">5</span>
    <span class="n">vertices</span> <span class="o">+=</span> <span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">uniform</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="n">noise</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="n">vertices</span><span class="o">.</span><span class="n">shape</span><span class="p">)</span>
    <span class="n">mesh_in</span><span class="o">.</span><span class="n">vertices</span> <span class="o">=</span> <span class="n">o3d</span><span class="o">.</span><span class="n">utility</span><span class="o">.</span><span class="n">Vector3dVector</span><span class="p">(</span><span class="n">vertices</span><span class="p">)</span>
    <span class="n">mesh_in</span><span class="o">.</span><span class="n">compute_vertex_normals</span><span class="p">()</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Displaying input mesh ...&quot;</span><span class="p">)</span>
    <span class="n">o3d</span><span class="o">.</span><span class="n">visualization</span><span class="o">.</span><span class="n">draw_geometries</span><span class="p">([</span><span class="n">mesh_in</span><span class="p">])</span>

    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Displaying output of Taubin mesh filter after 10 iteration ...&quot;</span><span class="p">)</span>
    <span class="n">mesh_out</span> <span class="o">=</span> <span class="n">mesh_in</span><span class="o">.</span><span class="n">filter_smooth_taubin</span><span class="p">(</span><span class="n">number_of_iterations</span><span class="o">=</span><span class="mi">10</span><span class="p">)</span>
    <span class="n">mesh_out</span><span class="o">.</span><span class="n">compute_vertex_normals</span><span class="p">()</span>
    <span class="n">o3d</span><span class="o">.</span><span class="n">visualization</span><span class="o">.</span><span class="n">draw_geometries</span><span class="p">([</span><span class="n">mesh_out</span><span class="p">])</span>

    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Displaying output of Taubin mesh filter after 100 iteration ...&quot;</span><span class="p">)</span>
    <span class="n">mesh_out</span> <span class="o">=</span> <span class="n">mesh_in</span><span class="o">.</span><span class="n">filter_smooth_taubin</span><span class="p">(</span><span class="n">number_of_iterations</span><span class="o">=</span><span class="mi">100</span><span class="p">)</span>
    <span class="n">mesh_out</span><span class="o">.</span><span class="n">compute_vertex_normals</span><span class="p">()</span>
    <span class="n">o3d</span><span class="o">.</span><span class="n">visualization</span><span class="o">.</span><span class="n">draw_geometries</span><span class="p">([</span><span class="n">mesh_out</span><span class="p">])</span>


<span class="k">if</span> <span class="vm">__name__</span> <span class="o">==</span> <span class="s2">&quot;__main__&quot;</span><span class="p">:</span>
    <span class="n">average_filtering</span><span class="p">()</span>
    <span class="n">laplace_filtering</span><span class="p">()</span>
    <span class="n">taubin_filtering</span><span class="p">()</span>
</pre></div></td></tr></table></div>
</div>
</div>
<div class="section" id="triangle-mesh-from-point-cloud-alpha-shapes-py">
<h2>triangle_mesh_from_point_cloud_alpha_shapes.py<a class="headerlink" href="#triangle-mesh-from-point-cloud-alpha-shapes-py" title="Permalink to this headline">¶</a></h2>
<div class="highlight-python notranslate"><div class="highlight"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre><span class="normal"> 1</span>
<span class="normal"> 2</span>
<span class="normal"> 3</span>
<span class="normal"> 4</span>
<span class="normal"> 5</span>
<span class="normal"> 6</span>
<span class="normal"> 7</span>
<span class="normal"> 8</span>
<span class="normal"> 9</span>
<span class="normal">10</span>
<span class="normal">11</span>
<span class="normal">12</span>
<span class="normal">13</span>
<span class="normal">14</span>
<span class="normal">15</span>
<span class="normal">16</span>
<span class="normal">17</span>
<span class="normal">18</span>
<span class="normal">19</span>
<span class="normal">20</span>
<span class="normal">21</span>
<span class="normal">22</span>
<span class="normal">23</span>
<span class="normal">24</span>
<span class="normal">25</span></pre></div></td><td class="code"><div><pre><span></span><span class="c1"># ----------------------------------------------------------------------------</span>
<span class="c1"># -                        Open3D: www.open3d.org                            -</span>
<span class="c1"># ----------------------------------------------------------------------------</span>
<span class="c1"># Copyright (c) 2018-2023 www.open3d.org</span>
<span class="c1"># SPDX-License-Identifier: MIT</span>
<span class="c1"># ----------------------------------------------------------------------------</span>

<span class="kn">import</span> <span class="nn">open3d</span> <span class="k">as</span> <span class="nn">o3d</span>

<span class="k">if</span> <span class="vm">__name__</span> <span class="o">==</span> <span class="s2">&quot;__main__&quot;</span><span class="p">:</span>
    <span class="n">bunny</span> <span class="o">=</span> <span class="n">o3d</span><span class="o">.</span><span class="n">data</span><span class="o">.</span><span class="n">BunnyMesh</span><span class="p">()</span>
    <span class="n">mesh</span> <span class="o">=</span> <span class="n">o3d</span><span class="o">.</span><span class="n">io</span><span class="o">.</span><span class="n">read_triangle_mesh</span><span class="p">(</span><span class="n">bunny</span><span class="o">.</span><span class="n">path</span><span class="p">)</span>
    <span class="n">mesh</span><span class="o">.</span><span class="n">compute_vertex_normals</span><span class="p">()</span>

    <span class="n">pcd</span> <span class="o">=</span> <span class="n">mesh</span><span class="o">.</span><span class="n">sample_points_poisson_disk</span><span class="p">(</span><span class="mi">750</span><span class="p">)</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Displaying input pointcloud ...&quot;</span><span class="p">)</span>
    <span class="n">o3d</span><span class="o">.</span><span class="n">visualization</span><span class="o">.</span><span class="n">draw_geometries</span><span class="p">([</span><span class="n">pcd</span><span class="p">])</span>
    <span class="n">alpha</span> <span class="o">=</span> <span class="mf">0.03</span>
    <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&quot;alpha=</span><span class="si">{</span><span class="n">alpha</span><span class="si">:</span><span class="s2">.3f</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">)</span>
    <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;Running alpha shapes surface reconstruction ...&#39;</span><span class="p">)</span>
    <span class="n">mesh</span> <span class="o">=</span> <span class="n">o3d</span><span class="o">.</span><span class="n">geometry</span><span class="o">.</span><span class="n">TriangleMesh</span><span class="o">.</span><span class="n">create_from_point_cloud_alpha_shape</span><span class="p">(</span>
        <span class="n">pcd</span><span class="p">,</span> <span class="n">alpha</span><span class="p">)</span>
    <span class="n">mesh</span><span class="o">.</span><span class="n">compute_triangle_normals</span><span class="p">(</span><span class="n">normalized</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Displaying reconstructed mesh ...&quot;</span><span class="p">)</span>
    <span class="n">o3d</span><span class="o">.</span><span class="n">visualization</span><span class="o">.</span><span class="n">draw_geometries</span><span class="p">([</span><span class="n">mesh</span><span class="p">],</span> <span class="n">mesh_show_back_face</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
</pre></div></td></tr></table></div>
</div>
</div>
<div class="section" id="triangle-mesh-from-point-cloud-ball-pivoting-py">
<h2>triangle_mesh_from_point_cloud_ball_pivoting.py<a class="headerlink" href="#triangle-mesh-from-point-cloud-ball-pivoting-py" title="Permalink to this headline">¶</a></h2>
<div class="highlight-python notranslate"><div class="highlight"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre><span class="normal"> 1</span>
<span class="normal"> 2</span>
<span class="normal"> 3</span>
<span class="normal"> 4</span>
<span class="normal"> 5</span>
<span class="normal"> 6</span>
<span class="normal"> 7</span>
<span class="normal"> 8</span>
<span class="normal"> 9</span>
<span class="normal">10</span>
<span class="normal">11</span>
<span class="normal">12</span>
<span class="normal">13</span>
<span class="normal">14</span>
<span class="normal">15</span>
<span class="normal">16</span>
<span class="normal">17</span>
<span class="normal">18</span>
<span class="normal">19</span>
<span class="normal">20</span>
<span class="normal">21</span>
<span class="normal">22</span>
<span class="normal">23</span>
<span class="normal">24</span></pre></div></td><td class="code"><div><pre><span></span><span class="c1"># ----------------------------------------------------------------------------</span>
<span class="c1"># -                        Open3D: www.open3d.org                            -</span>
<span class="c1"># ----------------------------------------------------------------------------</span>
<span class="c1"># Copyright (c) 2018-2023 www.open3d.org</span>
<span class="c1"># SPDX-License-Identifier: MIT</span>
<span class="c1"># ----------------------------------------------------------------------------</span>

<span class="kn">import</span> <span class="nn">open3d</span> <span class="k">as</span> <span class="nn">o3d</span>

<span class="k">if</span> <span class="vm">__name__</span> <span class="o">==</span> <span class="s2">&quot;__main__&quot;</span><span class="p">:</span>
    <span class="n">bunny</span> <span class="o">=</span> <span class="n">o3d</span><span class="o">.</span><span class="n">data</span><span class="o">.</span><span class="n">BunnyMesh</span><span class="p">()</span>
    <span class="n">gt_mesh</span> <span class="o">=</span> <span class="n">o3d</span><span class="o">.</span><span class="n">io</span><span class="o">.</span><span class="n">read_triangle_mesh</span><span class="p">(</span><span class="n">bunny</span><span class="o">.</span><span class="n">path</span><span class="p">)</span>
    <span class="n">gt_mesh</span><span class="o">.</span><span class="n">compute_vertex_normals</span><span class="p">()</span>

    <span class="n">pcd</span> <span class="o">=</span> <span class="n">gt_mesh</span><span class="o">.</span><span class="n">sample_points_poisson_disk</span><span class="p">(</span><span class="mi">3000</span><span class="p">)</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Displaying input pointcloud ...&quot;</span><span class="p">)</span>
    <span class="n">o3d</span><span class="o">.</span><span class="n">visualization</span><span class="o">.</span><span class="n">draw</span><span class="p">([</span><span class="n">pcd</span><span class="p">],</span> <span class="n">point_size</span><span class="o">=</span><span class="mi">5</span><span class="p">)</span>

    <span class="n">radii</span> <span class="o">=</span> <span class="p">[</span><span class="mf">0.005</span><span class="p">,</span> <span class="mf">0.01</span><span class="p">,</span> <span class="mf">0.02</span><span class="p">,</span> <span class="mf">0.04</span><span class="p">]</span>
    <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;Running ball pivoting surface reconstruction ...&#39;</span><span class="p">)</span>
    <span class="n">rec_mesh</span> <span class="o">=</span> <span class="n">o3d</span><span class="o">.</span><span class="n">geometry</span><span class="o">.</span><span class="n">TriangleMesh</span><span class="o">.</span><span class="n">create_from_point_cloud_ball_pivoting</span><span class="p">(</span>
        <span class="n">pcd</span><span class="p">,</span> <span class="n">o3d</span><span class="o">.</span><span class="n">utility</span><span class="o">.</span><span class="n">DoubleVector</span><span class="p">(</span><span class="n">radii</span><span class="p">))</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Displaying reconstructed mesh ...&quot;</span><span class="p">)</span>
    <span class="n">o3d</span><span class="o">.</span><span class="n">visualization</span><span class="o">.</span><span class="n">draw</span><span class="p">([</span><span class="n">rec_mesh</span><span class="p">])</span>
</pre></div></td></tr></table></div>
</div>
</div>
<div class="section" id="triangle-mesh-from-point-cloud-poisson-py">
<h2>triangle_mesh_from_point_cloud_poisson.py<a class="headerlink" href="#triangle-mesh-from-point-cloud-poisson-py" title="Permalink to this headline">¶</a></h2>
<div class="highlight-python notranslate"><div class="highlight"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre><span class="normal"> 1</span>
<span class="normal"> 2</span>
<span class="normal"> 3</span>
<span class="normal"> 4</span>
<span class="normal"> 5</span>
<span class="normal"> 6</span>
<span class="normal"> 7</span>
<span class="normal"> 8</span>
<span class="normal"> 9</span>
<span class="normal">10</span>
<span class="normal">11</span>
<span class="normal">12</span>
<span class="normal">13</span>
<span class="normal">14</span>
<span class="normal">15</span>
<span class="normal">16</span>
<span class="normal">17</span>
<span class="normal">18</span>
<span class="normal">19</span>
<span class="normal">20</span>
<span class="normal">21</span>
<span class="normal">22</span>
<span class="normal">23</span></pre></div></td><td class="code"><div><pre><span></span><span class="c1"># ----------------------------------------------------------------------------</span>
<span class="c1"># -                        Open3D: www.open3d.org                            -</span>
<span class="c1"># ----------------------------------------------------------------------------</span>
<span class="c1"># Copyright (c) 2018-2023 www.open3d.org</span>
<span class="c1"># SPDX-License-Identifier: MIT</span>
<span class="c1"># ----------------------------------------------------------------------------</span>

<span class="kn">import</span> <span class="nn">open3d</span> <span class="k">as</span> <span class="nn">o3d</span>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="nn">np</span>

<span class="k">if</span> <span class="vm">__name__</span> <span class="o">==</span> <span class="s2">&quot;__main__&quot;</span><span class="p">:</span>
    <span class="n">eagle</span> <span class="o">=</span> <span class="n">o3d</span><span class="o">.</span><span class="n">data</span><span class="o">.</span><span class="n">EaglePointCloud</span><span class="p">()</span>
    <span class="n">pcd</span> <span class="o">=</span> <span class="n">o3d</span><span class="o">.</span><span class="n">io</span><span class="o">.</span><span class="n">read_point_cloud</span><span class="p">(</span><span class="n">eagle</span><span class="o">.</span><span class="n">path</span><span class="p">)</span>
    <span class="n">R</span> <span class="o">=</span> <span class="n">pcd</span><span class="o">.</span><span class="n">get_rotation_matrix_from_xyz</span><span class="p">((</span><span class="n">np</span><span class="o">.</span><span class="n">pi</span><span class="p">,</span> <span class="o">-</span><span class="n">np</span><span class="o">.</span><span class="n">pi</span> <span class="o">/</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">0</span><span class="p">))</span>
    <span class="n">pcd</span><span class="o">.</span><span class="n">rotate</span><span class="p">(</span><span class="n">R</span><span class="p">,</span> <span class="n">center</span><span class="o">=</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">))</span>
    <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;Displaying input pointcloud ...&#39;</span><span class="p">)</span>
    <span class="n">o3d</span><span class="o">.</span><span class="n">visualization</span><span class="o">.</span><span class="n">draw</span><span class="p">([</span><span class="n">pcd</span><span class="p">])</span>

    <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;Running Poisson surface reconstruction ...&#39;</span><span class="p">)</span>
    <span class="n">mesh</span><span class="p">,</span> <span class="n">densities</span> <span class="o">=</span> <span class="n">o3d</span><span class="o">.</span><span class="n">geometry</span><span class="o">.</span><span class="n">TriangleMesh</span><span class="o">.</span><span class="n">create_from_point_cloud_poisson</span><span class="p">(</span>
        <span class="n">pcd</span><span class="p">,</span> <span class="n">depth</span><span class="o">=</span><span class="mi">9</span><span class="p">)</span>
    <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;Displaying reconstructed mesh ...&#39;</span><span class="p">)</span>
    <span class="n">o3d</span><span class="o">.</span><span class="n">visualization</span><span class="o">.</span><span class="n">draw</span><span class="p">([</span><span class="n">mesh</span><span class="p">])</span>
</pre></div></td></tr></table></div>
</div>
</div>
<div class="section" id="triangle-mesh-normal-estimation-py">
<h2>triangle_mesh_normal_estimation.py<a class="headerlink" href="#triangle-mesh-normal-estimation-py" title="Permalink to this headline">¶</a></h2>
<div class="highlight-python notranslate"><div class="highlight"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre><span class="normal"> 1</span>
<span class="normal"> 2</span>
<span class="normal"> 3</span>
<span class="normal"> 4</span>
<span class="normal"> 5</span>
<span class="normal"> 6</span>
<span class="normal"> 7</span>
<span class="normal"> 8</span>
<span class="normal"> 9</span>
<span class="normal">10</span>
<span class="normal">11</span>
<span class="normal">12</span>
<span class="normal">13</span>
<span class="normal">14</span>
<span class="normal">15</span>
<span class="normal">16</span>
<span class="normal">17</span>
<span class="normal">18</span>
<span class="normal">19</span>
<span class="normal">20</span>
<span class="normal">21</span>
<span class="normal">22</span>
<span class="normal">23</span></pre></div></td><td class="code"><div><pre><span></span><span class="c1"># ----------------------------------------------------------------------------</span>
<span class="c1"># -                        Open3D: www.open3d.org                            -</span>
<span class="c1"># ----------------------------------------------------------------------------</span>
<span class="c1"># Copyright (c) 2018-2023 www.open3d.org</span>
<span class="c1"># SPDX-License-Identifier: MIT</span>
<span class="c1"># ----------------------------------------------------------------------------</span>

<span class="kn">import</span> <span class="nn">open3d</span> <span class="k">as</span> <span class="nn">o3d</span>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="nn">np</span>

<span class="k">if</span> <span class="vm">__name__</span> <span class="o">==</span> <span class="s2">&quot;__main__&quot;</span><span class="p">:</span>
    <span class="n">knot_mesh</span> <span class="o">=</span> <span class="n">o3d</span><span class="o">.</span><span class="n">data</span><span class="o">.</span><span class="n">KnotMesh</span><span class="p">()</span>
    <span class="n">mesh</span> <span class="o">=</span> <span class="n">o3d</span><span class="o">.</span><span class="n">io</span><span class="o">.</span><span class="n">read_triangle_mesh</span><span class="p">(</span><span class="n">knot_mesh</span><span class="o">.</span><span class="n">path</span><span class="p">)</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Displaying mesh without normals ...&quot;</span><span class="p">)</span>
    <span class="c1"># Invalidate existing normals.</span>
    <span class="n">mesh</span><span class="o">.</span><span class="n">triangle_normals</span> <span class="o">=</span> <span class="n">o3d</span><span class="o">.</span><span class="n">utility</span><span class="o">.</span><span class="n">Vector3dVector</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">zeros</span><span class="p">((</span><span class="mi">1</span><span class="p">,</span> <span class="mi">3</span><span class="p">)))</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;normals: </span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">,</span> <span class="n">np</span><span class="o">.</span><span class="n">asarray</span><span class="p">(</span><span class="n">mesh</span><span class="o">.</span><span class="n">triangle_normals</span><span class="p">))</span>
    <span class="n">o3d</span><span class="o">.</span><span class="n">visualization</span><span class="o">.</span><span class="n">draw</span><span class="p">([</span><span class="n">mesh</span><span class="p">])</span>

    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Computing normals and rendering it ...&quot;</span><span class="p">)</span>
    <span class="n">mesh</span><span class="o">.</span><span class="n">compute_vertex_normals</span><span class="p">()</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;normals: </span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">,</span> <span class="n">np</span><span class="o">.</span><span class="n">asarray</span><span class="p">(</span><span class="n">mesh</span><span class="o">.</span><span class="n">triangle_normals</span><span class="p">))</span>
    <span class="n">o3d</span><span class="o">.</span><span class="n">visualization</span><span class="o">.</span><span class="n">draw</span><span class="p">([</span><span class="n">mesh</span><span class="p">])</span>
</pre></div></td></tr></table></div>
</div>
</div>
<div class="section" id="triangle-mesh-properties-py">
<h2>triangle_mesh_properties.py<a class="headerlink" href="#triangle-mesh-properties-py" title="Permalink to this headline">¶</a></h2>
<div class="highlight-python notranslate"><div class="highlight"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre><span class="normal"> 1</span>
<span class="normal"> 2</span>
<span class="normal"> 3</span>
<span class="normal"> 4</span>
<span class="normal"> 5</span>
<span class="normal"> 6</span>
<span class="normal"> 7</span>
<span class="normal"> 8</span>
<span class="normal"> 9</span>
<span class="normal">10</span>
<span class="normal">11</span>
<span class="normal">12</span>
<span class="normal">13</span>
<span class="normal">14</span>
<span class="normal">15</span>
<span class="normal">16</span>
<span class="normal">17</span>
<span class="normal">18</span>
<span class="normal">19</span>
<span class="normal">20</span>
<span class="normal">21</span>
<span class="normal">22</span>
<span class="normal">23</span>
<span class="normal">24</span>
<span class="normal">25</span>
<span class="normal">26</span>
<span class="normal">27</span>
<span class="normal">28</span>
<span class="normal">29</span>
<span class="normal">30</span>
<span class="normal">31</span>
<span class="normal">32</span>
<span class="normal">33</span>
<span class="normal">34</span>
<span class="normal">35</span>
<span class="normal">36</span>
<span class="normal">37</span>
<span class="normal">38</span>
<span class="normal">39</span>
<span class="normal">40</span>
<span class="normal">41</span>
<span class="normal">42</span>
<span class="normal">43</span>
<span class="normal">44</span>
<span class="normal">45</span>
<span class="normal">46</span>
<span class="normal">47</span>
<span class="normal">48</span>
<span class="normal">49</span>
<span class="normal">50</span>
<span class="normal">51</span>
<span class="normal">52</span>
<span class="normal">53</span>
<span class="normal">54</span>
<span class="normal">55</span>
<span class="normal">56</span>
<span class="normal">57</span>
<span class="normal">58</span>
<span class="normal">59</span>
<span class="normal">60</span>
<span class="normal">61</span>
<span class="normal">62</span>
<span class="normal">63</span>
<span class="normal">64</span>
<span class="normal">65</span>
<span class="normal">66</span>
<span class="normal">67</span>
<span class="normal">68</span>
<span class="normal">69</span>
<span class="normal">70</span>
<span class="normal">71</span>
<span class="normal">72</span>
<span class="normal">73</span>
<span class="normal">74</span>
<span class="normal">75</span>
<span class="normal">76</span>
<span class="normal">77</span></pre></div></td><td class="code"><div><pre><span></span><span class="c1"># ----------------------------------------------------------------------------</span>
<span class="c1"># -                        Open3D: www.open3d.org                            -</span>
<span class="c1"># ----------------------------------------------------------------------------</span>
<span class="c1"># Copyright (c) 2018-2023 www.open3d.org</span>
<span class="c1"># SPDX-License-Identifier: MIT</span>
<span class="c1"># ----------------------------------------------------------------------------</span>

<span class="kn">import</span> <span class="nn">open3d</span> <span class="k">as</span> <span class="nn">o3d</span>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="nn">np</span>
<span class="kn">import</span> <span class="nn">os</span>
<span class="kn">import</span> <span class="nn">sys</span>

<span class="n">pyexample_path</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">dirname</span><span class="p">(</span><span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">dirname</span><span class="p">(</span><span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">abspath</span><span class="p">(</span><span class="vm">__file__</span><span class="p">)))</span>
<span class="n">sys</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">pyexample_path</span><span class="p">)</span>

<span class="kn">import</span> <span class="nn">open3d_example</span> <span class="k">as</span> <span class="nn">o3dex</span>


<span class="k">def</span> <span class="nf">check_properties</span><span class="p">(</span><span class="n">name</span><span class="p">,</span> <span class="n">mesh</span><span class="p">):</span>
    <span class="n">mesh</span><span class="o">.</span><span class="n">compute_vertex_normals</span><span class="p">()</span>

    <span class="n">edge_manifold</span> <span class="o">=</span> <span class="n">mesh</span><span class="o">.</span><span class="n">is_edge_manifold</span><span class="p">(</span><span class="n">allow_boundary_edges</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
    <span class="n">edge_manifold_boundary</span> <span class="o">=</span> <span class="n">mesh</span><span class="o">.</span><span class="n">is_edge_manifold</span><span class="p">(</span><span class="n">allow_boundary_edges</span><span class="o">=</span><span class="kc">False</span><span class="p">)</span>
    <span class="n">vertex_manifold</span> <span class="o">=</span> <span class="n">mesh</span><span class="o">.</span><span class="n">is_vertex_manifold</span><span class="p">()</span>
    <span class="n">self_intersecting</span> <span class="o">=</span> <span class="n">mesh</span><span class="o">.</span><span class="n">is_self_intersecting</span><span class="p">()</span>
    <span class="n">watertight</span> <span class="o">=</span> <span class="n">mesh</span><span class="o">.</span><span class="n">is_watertight</span><span class="p">()</span>
    <span class="n">orientable</span> <span class="o">=</span> <span class="n">mesh</span><span class="o">.</span><span class="n">is_orientable</span><span class="p">()</span>

    <span class="nb">print</span><span class="p">(</span><span class="n">name</span><span class="p">)</span>
    <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&quot;  edge_manifold:          </span><span class="si">{</span><span class="n">edge_manifold</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">)</span>
    <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&quot;  edge_manifold_boundary: </span><span class="si">{</span><span class="n">edge_manifold_boundary</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">)</span>
    <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&quot;  vertex_manifold:        </span><span class="si">{</span><span class="n">vertex_manifold</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">)</span>
    <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&quot;  self_intersecting:      </span><span class="si">{</span><span class="n">self_intersecting</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">)</span>
    <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&quot;  watertight:             </span><span class="si">{</span><span class="n">watertight</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">)</span>
    <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&quot;  orientable:             </span><span class="si">{</span><span class="n">orientable</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">)</span>

    <span class="n">geoms</span> <span class="o">=</span> <span class="p">[</span><span class="n">mesh</span><span class="p">]</span>
    <span class="k">if</span> <span class="ow">not</span> <span class="n">edge_manifold</span><span class="p">:</span>
        <span class="n">edges</span> <span class="o">=</span> <span class="n">mesh</span><span class="o">.</span><span class="n">get_non_manifold_edges</span><span class="p">(</span><span class="n">allow_boundary_edges</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
        <span class="n">geoms</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">o3dex</span><span class="o">.</span><span class="n">edges_to_lineset</span><span class="p">(</span><span class="n">mesh</span><span class="p">,</span> <span class="n">edges</span><span class="p">,</span> <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">)))</span>
    <span class="k">if</span> <span class="ow">not</span> <span class="n">edge_manifold_boundary</span><span class="p">:</span>
        <span class="n">edges</span> <span class="o">=</span> <span class="n">mesh</span><span class="o">.</span><span class="n">get_non_manifold_edges</span><span class="p">(</span><span class="n">allow_boundary_edges</span><span class="o">=</span><span class="kc">False</span><span class="p">)</span>
        <span class="n">geoms</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">o3dex</span><span class="o">.</span><span class="n">edges_to_lineset</span><span class="p">(</span><span class="n">mesh</span><span class="p">,</span> <span class="n">edges</span><span class="p">,</span> <span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">)))</span>
    <span class="k">if</span> <span class="ow">not</span> <span class="n">vertex_manifold</span><span class="p">:</span>
        <span class="n">verts</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">asarray</span><span class="p">(</span><span class="n">mesh</span><span class="o">.</span><span class="n">get_non_manifold_vertices</span><span class="p">())</span>
        <span class="n">pcl</span> <span class="o">=</span> <span class="n">o3d</span><span class="o">.</span><span class="n">geometry</span><span class="o">.</span><span class="n">PointCloud</span><span class="p">(</span>
            <span class="n">points</span><span class="o">=</span><span class="n">o3d</span><span class="o">.</span><span class="n">utility</span><span class="o">.</span><span class="n">Vector3dVector</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">asarray</span><span class="p">(</span><span class="n">mesh</span><span class="o">.</span><span class="n">vertices</span><span class="p">)[</span><span class="n">verts</span><span class="p">]))</span>
        <span class="n">pcl</span><span class="o">.</span><span class="n">paint_uniform_color</span><span class="p">((</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">))</span>
        <span class="n">geoms</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">pcl</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">self_intersecting</span><span class="p">:</span>
        <span class="n">intersecting_triangles</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">asarray</span><span class="p">(</span>
            <span class="n">mesh</span><span class="o">.</span><span class="n">get_self_intersecting_triangles</span><span class="p">())</span>
        <span class="n">intersecting_triangles</span> <span class="o">=</span> <span class="n">intersecting_triangles</span><span class="p">[</span><span class="mi">0</span><span class="p">:</span><span class="mi">1</span><span class="p">]</span>
        <span class="n">intersecting_triangles</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">unique</span><span class="p">(</span><span class="n">intersecting_triangles</span><span class="p">)</span>
        <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;  # visualize self-intersecting triangles&quot;</span><span class="p">)</span>
        <span class="n">triangles</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">asarray</span><span class="p">(</span><span class="n">mesh</span><span class="o">.</span><span class="n">triangles</span><span class="p">)[</span><span class="n">intersecting_triangles</span><span class="p">]</span>
        <span class="n">edges</span> <span class="o">=</span> <span class="p">[</span>
            <span class="n">np</span><span class="o">.</span><span class="n">vstack</span><span class="p">((</span><span class="n">triangles</span><span class="p">[:,</span> <span class="n">i</span><span class="p">],</span> <span class="n">triangles</span><span class="p">[:,</span> <span class="n">j</span><span class="p">]))</span>
            <span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">j</span> <span class="ow">in</span> <span class="p">[(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">),</span> <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">),</span> <span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="mi">0</span><span class="p">)]</span>
        <span class="p">]</span>
        <span class="n">edges</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">hstack</span><span class="p">(</span><span class="n">edges</span><span class="p">)</span><span class="o">.</span><span class="n">T</span>
        <span class="n">edges</span> <span class="o">=</span> <span class="n">o3d</span><span class="o">.</span><span class="n">utility</span><span class="o">.</span><span class="n">Vector2iVector</span><span class="p">(</span><span class="n">edges</span><span class="p">)</span>
        <span class="n">geoms</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">o3dex</span><span class="o">.</span><span class="n">edges_to_lineset</span><span class="p">(</span><span class="n">mesh</span><span class="p">,</span> <span class="n">edges</span><span class="p">,</span> <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">)))</span>
    <span class="n">o3d</span><span class="o">.</span><span class="n">visualization</span><span class="o">.</span><span class="n">draw_geometries</span><span class="p">(</span><span class="n">geoms</span><span class="p">,</span> <span class="n">mesh_show_back_face</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>


<span class="k">if</span> <span class="vm">__name__</span> <span class="o">==</span> <span class="s2">&quot;__main__&quot;</span><span class="p">:</span>
    <span class="n">knot_mesh</span> <span class="o">=</span> <span class="n">o3d</span><span class="o">.</span><span class="n">data</span><span class="o">.</span><span class="n">KnotMesh</span><span class="p">()</span>
    <span class="n">mesh</span> <span class="o">=</span> <span class="n">o3d</span><span class="o">.</span><span class="n">io</span><span class="o">.</span><span class="n">read_triangle_mesh</span><span class="p">(</span><span class="n">knot_mesh</span><span class="o">.</span><span class="n">path</span><span class="p">)</span>
    <span class="n">check_properties</span><span class="p">(</span><span class="s1">&#39;KnotMesh&#39;</span><span class="p">,</span> <span class="n">mesh</span><span class="p">)</span>
    <span class="n">check_properties</span><span class="p">(</span><span class="s1">&#39;Mobius&#39;</span><span class="p">,</span>
                     <span class="n">o3d</span><span class="o">.</span><span class="n">geometry</span><span class="o">.</span><span class="n">TriangleMesh</span><span class="o">.</span><span class="n">create_mobius</span><span class="p">(</span><span class="n">twists</span><span class="o">=</span><span class="mi">1</span><span class="p">))</span>
    <span class="n">check_properties</span><span class="p">(</span><span class="s2">&quot;non-manifold edge&quot;</span><span class="p">,</span> <span class="n">o3dex</span><span class="o">.</span><span class="n">get_non_manifold_edge_mesh</span><span class="p">())</span>
    <span class="n">check_properties</span><span class="p">(</span><span class="s2">&quot;non-manifold vertex&quot;</span><span class="p">,</span>
                     <span class="n">o3dex</span><span class="o">.</span><span class="n">get_non_manifold_vertex_mesh</span><span class="p">())</span>
    <span class="n">check_properties</span><span class="p">(</span><span class="s2">&quot;open box&quot;</span><span class="p">,</span> <span class="n">o3dex</span><span class="o">.</span><span class="n">get_open_box_mesh</span><span class="p">())</span>
    <span class="n">check_properties</span><span class="p">(</span><span class="s2">&quot;intersecting_boxes&quot;</span><span class="p">,</span> <span class="n">o3dex</span><span class="o">.</span><span class="n">get_intersecting_boxes_mesh</span><span class="p">())</span>
</pre></div></td></tr></table></div>
</div>
</div>
<div class="section" id="triangle-mesh-sampling-py">
<h2>triangle_mesh_sampling.py<a class="headerlink" href="#triangle-mesh-sampling-py" title="Permalink to this headline">¶</a></h2>
<div class="highlight-python notranslate"><div class="highlight"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre><span class="normal"> 1</span>
<span class="normal"> 2</span>
<span class="normal"> 3</span>
<span class="normal"> 4</span>
<span class="normal"> 5</span>
<span class="normal"> 6</span>
<span class="normal"> 7</span>
<span class="normal"> 8</span>
<span class="normal"> 9</span>
<span class="normal">10</span>
<span class="normal">11</span>
<span class="normal">12</span>
<span class="normal">13</span>
<span class="normal">14</span>
<span class="normal">15</span>
<span class="normal">16</span>
<span class="normal">17</span>
<span class="normal">18</span>
<span class="normal">19</span>
<span class="normal">20</span>
<span class="normal">21</span>
<span class="normal">22</span>
<span class="normal">23</span>
<span class="normal">24</span></pre></div></td><td class="code"><div><pre><span></span><span class="c1"># ----------------------------------------------------------------------------</span>
<span class="c1"># -                        Open3D: www.open3d.org                            -</span>
<span class="c1"># ----------------------------------------------------------------------------</span>
<span class="c1"># Copyright (c) 2018-2023 www.open3d.org</span>
<span class="c1"># SPDX-License-Identifier: MIT</span>
<span class="c1"># ----------------------------------------------------------------------------</span>

<span class="kn">import</span> <span class="nn">open3d</span> <span class="k">as</span> <span class="nn">o3d</span>

<span class="k">if</span> <span class="vm">__name__</span> <span class="o">==</span> <span class="s2">&quot;__main__&quot;</span><span class="p">:</span>
    <span class="n">bunny</span> <span class="o">=</span> <span class="n">o3d</span><span class="o">.</span><span class="n">data</span><span class="o">.</span><span class="n">BunnyMesh</span><span class="p">()</span>
    <span class="n">mesh</span> <span class="o">=</span> <span class="n">o3d</span><span class="o">.</span><span class="n">io</span><span class="o">.</span><span class="n">read_triangle_mesh</span><span class="p">(</span><span class="n">bunny</span><span class="o">.</span><span class="n">path</span><span class="p">)</span>
    <span class="n">mesh</span><span class="o">.</span><span class="n">compute_vertex_normals</span><span class="p">()</span>

    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Displaying input mesh ...&quot;</span><span class="p">)</span>
    <span class="n">o3d</span><span class="o">.</span><span class="n">visualization</span><span class="o">.</span><span class="n">draw</span><span class="p">([</span><span class="n">mesh</span><span class="p">])</span>

    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Displaying pointcloud using uniform sampling ...&quot;</span><span class="p">)</span>
    <span class="n">pcd</span> <span class="o">=</span> <span class="n">mesh</span><span class="o">.</span><span class="n">sample_points_uniformly</span><span class="p">(</span><span class="n">number_of_points</span><span class="o">=</span><span class="mi">1000</span><span class="p">)</span>
    <span class="n">o3d</span><span class="o">.</span><span class="n">visualization</span><span class="o">.</span><span class="n">draw</span><span class="p">([</span><span class="n">pcd</span><span class="p">],</span> <span class="n">point_size</span><span class="o">=</span><span class="mi">5</span><span class="p">)</span>

    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Displaying pointcloud using Poisson disk sampling ...&quot;</span><span class="p">)</span>
    <span class="n">pcd</span> <span class="o">=</span> <span class="n">mesh</span><span class="o">.</span><span class="n">sample_points_poisson_disk</span><span class="p">(</span><span class="n">number_of_points</span><span class="o">=</span><span class="mi">1000</span><span class="p">,</span> <span class="n">init_factor</span><span class="o">=</span><span class="mi">5</span><span class="p">)</span>
    <span class="n">o3d</span><span class="o">.</span><span class="n">visualization</span><span class="o">.</span><span class="n">draw</span><span class="p">([</span><span class="n">pcd</span><span class="p">],</span> <span class="n">point_size</span><span class="o">=</span><span class="mi">5</span><span class="p">)</span>
</pre></div></td></tr></table></div>
</div>
</div>
<div class="section" id="triangle-mesh-simplification-decimation-py">
<h2>triangle_mesh_simplification_decimation.py<a class="headerlink" href="#triangle-mesh-simplification-decimation-py" title="Permalink to this headline">¶</a></h2>
<div class="highlight-python notranslate"><div class="highlight"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre><span class="normal"> 1</span>
<span class="normal"> 2</span>
<span class="normal"> 3</span>
<span class="normal"> 4</span>
<span class="normal"> 5</span>
<span class="normal"> 6</span>
<span class="normal"> 7</span>
<span class="normal"> 8</span>
<span class="normal"> 9</span>
<span class="normal">10</span>
<span class="normal">11</span>
<span class="normal">12</span>
<span class="normal">13</span>
<span class="normal">14</span>
<span class="normal">15</span>
<span class="normal">16</span>
<span class="normal">17</span>
<span class="normal">18</span>
<span class="normal">19</span>
<span class="normal">20</span>
<span class="normal">21</span>
<span class="normal">22</span>
<span class="normal">23</span>
<span class="normal">24</span>
<span class="normal">25</span>
<span class="normal">26</span></pre></div></td><td class="code"><div><pre><span></span><span class="c1"># ----------------------------------------------------------------------------</span>
<span class="c1"># -                        Open3D: www.open3d.org                            -</span>
<span class="c1"># ----------------------------------------------------------------------------</span>
<span class="c1"># Copyright (c) 2018-2023 www.open3d.org</span>
<span class="c1"># SPDX-License-Identifier: MIT</span>
<span class="c1"># ----------------------------------------------------------------------------</span>

<span class="kn">import</span> <span class="nn">open3d</span> <span class="k">as</span> <span class="nn">o3d</span>

<span class="k">if</span> <span class="vm">__name__</span> <span class="o">==</span> <span class="s2">&quot;__main__&quot;</span><span class="p">:</span>
    <span class="n">bunny</span> <span class="o">=</span> <span class="n">o3d</span><span class="o">.</span><span class="n">data</span><span class="o">.</span><span class="n">BunnyMesh</span><span class="p">()</span>
    <span class="n">mesh_in</span> <span class="o">=</span> <span class="n">o3d</span><span class="o">.</span><span class="n">io</span><span class="o">.</span><span class="n">read_triangle_mesh</span><span class="p">(</span><span class="n">bunny</span><span class="o">.</span><span class="n">path</span><span class="p">)</span>
    <span class="n">mesh_in</span><span class="o">.</span><span class="n">compute_vertex_normals</span><span class="p">()</span>

    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Before Simplification: &quot;</span><span class="p">,</span> <span class="n">mesh_in</span><span class="p">)</span>
    <span class="n">o3d</span><span class="o">.</span><span class="n">visualization</span><span class="o">.</span><span class="n">draw_geometries</span><span class="p">([</span><span class="n">mesh_in</span><span class="p">])</span>

    <span class="n">mesh_smp</span> <span class="o">=</span> <span class="n">mesh_in</span><span class="o">.</span><span class="n">simplify_quadric_decimation</span><span class="p">(</span>
        <span class="n">target_number_of_triangles</span><span class="o">=</span><span class="mi">6500</span><span class="p">)</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;After Simplification target number of triangles = 6500:</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">,</span> <span class="n">mesh_smp</span><span class="p">)</span>
    <span class="n">o3d</span><span class="o">.</span><span class="n">visualization</span><span class="o">.</span><span class="n">draw_geometries</span><span class="p">([</span><span class="n">mesh_smp</span><span class="p">])</span>

    <span class="n">mesh_smp</span> <span class="o">=</span> <span class="n">mesh_in</span><span class="o">.</span><span class="n">simplify_quadric_decimation</span><span class="p">(</span>
        <span class="n">target_number_of_triangles</span><span class="o">=</span><span class="mi">1700</span><span class="p">)</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;After Simplification target number of triangles = 1700:</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">,</span> <span class="n">mesh_smp</span><span class="p">)</span>
    <span class="n">o3d</span><span class="o">.</span><span class="n">visualization</span><span class="o">.</span><span class="n">draw_geometries</span><span class="p">([</span><span class="n">mesh_smp</span><span class="p">])</span>
</pre></div></td></tr></table></div>
</div>
</div>
<div class="section" id="triangle-mesh-simplification-vertex-clustering-py">
<h2>triangle_mesh_simplification_vertex_clustering.py<a class="headerlink" href="#triangle-mesh-simplification-vertex-clustering-py" title="Permalink to this headline">¶</a></h2>
<div class="highlight-python notranslate"><div class="highlight"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre><span class="normal"> 1</span>
<span class="normal"> 2</span>
<span class="normal"> 3</span>
<span class="normal"> 4</span>
<span class="normal"> 5</span>
<span class="normal"> 6</span>
<span class="normal"> 7</span>
<span class="normal"> 8</span>
<span class="normal"> 9</span>
<span class="normal">10</span>
<span class="normal">11</span>
<span class="normal">12</span>
<span class="normal">13</span>
<span class="normal">14</span>
<span class="normal">15</span>
<span class="normal">16</span>
<span class="normal">17</span>
<span class="normal">18</span>
<span class="normal">19</span>
<span class="normal">20</span>
<span class="normal">21</span>
<span class="normal">22</span>
<span class="normal">23</span>
<span class="normal">24</span>
<span class="normal">25</span>
<span class="normal">26</span>
<span class="normal">27</span>
<span class="normal">28</span>
<span class="normal">29</span>
<span class="normal">30</span></pre></div></td><td class="code"><div><pre><span></span><span class="c1"># ----------------------------------------------------------------------------</span>
<span class="c1"># -                        Open3D: www.open3d.org                            -</span>
<span class="c1"># ----------------------------------------------------------------------------</span>
<span class="c1"># Copyright (c) 2018-2023 www.open3d.org</span>
<span class="c1"># SPDX-License-Identifier: MIT</span>
<span class="c1"># ----------------------------------------------------------------------------</span>

<span class="kn">import</span> <span class="nn">open3d</span> <span class="k">as</span> <span class="nn">o3d</span>

<span class="k">if</span> <span class="vm">__name__</span> <span class="o">==</span> <span class="s2">&quot;__main__&quot;</span><span class="p">:</span>
    <span class="n">bunny</span> <span class="o">=</span> <span class="n">o3d</span><span class="o">.</span><span class="n">data</span><span class="o">.</span><span class="n">BunnyMesh</span><span class="p">()</span>
    <span class="n">mesh_in</span> <span class="o">=</span> <span class="n">o3d</span><span class="o">.</span><span class="n">io</span><span class="o">.</span><span class="n">read_triangle_mesh</span><span class="p">(</span><span class="n">bunny</span><span class="o">.</span><span class="n">path</span><span class="p">)</span>
    <span class="n">mesh_in</span><span class="o">.</span><span class="n">compute_vertex_normals</span><span class="p">()</span>

    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Before Simplification: &quot;</span><span class="p">,</span> <span class="n">mesh_in</span><span class="p">)</span>
    <span class="n">o3d</span><span class="o">.</span><span class="n">visualization</span><span class="o">.</span><span class="n">draw_geometries</span><span class="p">([</span><span class="n">mesh_in</span><span class="p">])</span>

    <span class="n">voxel_size</span> <span class="o">=</span> <span class="nb">max</span><span class="p">(</span><span class="n">mesh_in</span><span class="o">.</span><span class="n">get_max_bound</span><span class="p">()</span> <span class="o">-</span> <span class="n">mesh_in</span><span class="o">.</span><span class="n">get_min_bound</span><span class="p">())</span> <span class="o">/</span> <span class="mi">32</span>
    <span class="n">mesh_smp</span> <span class="o">=</span> <span class="n">mesh_in</span><span class="o">.</span><span class="n">simplify_vertex_clustering</span><span class="p">(</span>
        <span class="n">voxel_size</span><span class="o">=</span><span class="n">voxel_size</span><span class="p">,</span>
        <span class="n">contraction</span><span class="o">=</span><span class="n">o3d</span><span class="o">.</span><span class="n">geometry</span><span class="o">.</span><span class="n">SimplificationContraction</span><span class="o">.</span><span class="n">Average</span><span class="p">)</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;After Simplification with voxel size =&quot;</span><span class="p">,</span> <span class="n">voxel_size</span><span class="p">,</span> <span class="s2">&quot;:</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">,</span> <span class="n">mesh_smp</span><span class="p">)</span>
    <span class="n">o3d</span><span class="o">.</span><span class="n">visualization</span><span class="o">.</span><span class="n">draw_geometries</span><span class="p">([</span><span class="n">mesh_smp</span><span class="p">])</span>

    <span class="n">voxel_size</span> <span class="o">=</span> <span class="nb">max</span><span class="p">(</span><span class="n">mesh_in</span><span class="o">.</span><span class="n">get_max_bound</span><span class="p">()</span> <span class="o">-</span> <span class="n">mesh_in</span><span class="o">.</span><span class="n">get_min_bound</span><span class="p">())</span> <span class="o">/</span> <span class="mi">16</span>
    <span class="n">mesh_smp</span> <span class="o">=</span> <span class="n">mesh_in</span><span class="o">.</span><span class="n">simplify_vertex_clustering</span><span class="p">(</span>
        <span class="n">voxel_size</span><span class="o">=</span><span class="n">voxel_size</span><span class="p">,</span>
        <span class="n">contraction</span><span class="o">=</span><span class="n">o3d</span><span class="o">.</span><span class="n">geometry</span><span class="o">.</span><span class="n">SimplificationContraction</span><span class="o">.</span><span class="n">Average</span><span class="p">)</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;After Simplification with voxel size =&quot;</span><span class="p">,</span> <span class="n">voxel_size</span><span class="p">,</span> <span class="s2">&quot;:</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">,</span> <span class="n">mesh_smp</span><span class="p">)</span>
    <span class="n">o3d</span><span class="o">.</span><span class="n">visualization</span><span class="o">.</span><span class="n">draw_geometries</span><span class="p">([</span><span class="n">mesh_smp</span><span class="p">])</span>
</pre></div></td></tr></table></div>
</div>
</div>
<div class="section" id="triangle-mesh-subdivision-py">
<h2>triangle_mesh_subdivision.py<a class="headerlink" href="#triangle-mesh-subdivision-py" title="Permalink to this headline">¶</a></h2>
<div class="highlight-python notranslate"><div class="highlight"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre><span class="normal"> 1</span>
<span class="normal"> 2</span>
<span class="normal"> 3</span>
<span class="normal"> 4</span>
<span class="normal"> 5</span>
<span class="normal"> 6</span>
<span class="normal"> 7</span>
<span class="normal"> 8</span>
<span class="normal"> 9</span>
<span class="normal">10</span>
<span class="normal">11</span>
<span class="normal">12</span>
<span class="normal">13</span>
<span class="normal">14</span>
<span class="normal">15</span>
<span class="normal">16</span>
<span class="normal">17</span>
<span class="normal">18</span>
<span class="normal">19</span>
<span class="normal">20</span></pre></div></td><td class="code"><div><pre><span></span><span class="c1"># ----------------------------------------------------------------------------</span>
<span class="c1"># -                        Open3D: www.open3d.org                            -</span>
<span class="c1"># ----------------------------------------------------------------------------</span>
<span class="c1"># Copyright (c) 2018-2023 www.open3d.org</span>
<span class="c1"># SPDX-License-Identifier: MIT</span>
<span class="c1"># ----------------------------------------------------------------------------</span>

<span class="kn">import</span> <span class="nn">open3d</span> <span class="k">as</span> <span class="nn">o3d</span>

<span class="k">if</span> <span class="vm">__name__</span> <span class="o">==</span> <span class="s2">&quot;__main__&quot;</span><span class="p">:</span>
    <span class="n">knot_mesh</span> <span class="o">=</span> <span class="n">o3d</span><span class="o">.</span><span class="n">data</span><span class="o">.</span><span class="n">KnotMesh</span><span class="p">()</span>
    <span class="n">mesh</span> <span class="o">=</span> <span class="n">o3d</span><span class="o">.</span><span class="n">io</span><span class="o">.</span><span class="n">read_triangle_mesh</span><span class="p">(</span><span class="n">knot_mesh</span><span class="o">.</span><span class="n">path</span><span class="p">)</span>
    <span class="n">mesh</span><span class="o">.</span><span class="n">compute_vertex_normals</span><span class="p">()</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Before Subdivision: &quot;</span><span class="p">,</span> <span class="n">mesh</span><span class="p">)</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Displaying input mesh ...&quot;</span><span class="p">)</span>
    <span class="n">o3d</span><span class="o">.</span><span class="n">visualization</span><span class="o">.</span><span class="n">draw_geometries</span><span class="p">([</span><span class="n">mesh</span><span class="p">],</span> <span class="n">mesh_show_wireframe</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
    <span class="n">mesh</span> <span class="o">=</span> <span class="n">mesh</span><span class="o">.</span><span class="n">subdivide_loop</span><span class="p">(</span><span class="n">number_of_iterations</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;After Subdivision: &quot;</span><span class="p">,</span> <span class="n">mesh</span><span class="p">)</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Displaying subdivided mesh ...&quot;</span><span class="p">)</span>
    <span class="n">o3d</span><span class="o">.</span><span class="n">visualization</span><span class="o">.</span><span class="n">draw_geometries</span><span class="p">([</span><span class="n">mesh</span><span class="p">],</span> <span class="n">mesh_show_wireframe</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
</pre></div></td></tr></table></div>
</div>
</div>
<div class="section" id="triangle-mesh-transformation-py">
<h2>triangle_mesh_transformation.py<a class="headerlink" href="#triangle-mesh-transformation-py" title="Permalink to this headline">¶</a></h2>
<div class="highlight-python notranslate"><div class="highlight"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre><span class="normal"> 1</span>
<span class="normal"> 2</span>
<span class="normal"> 3</span>
<span class="normal"> 4</span>
<span class="normal"> 5</span>
<span class="normal"> 6</span>
<span class="normal"> 7</span>
<span class="normal"> 8</span>
<span class="normal"> 9</span>
<span class="normal">10</span>
<span class="normal">11</span>
<span class="normal">12</span>
<span class="normal">13</span>
<span class="normal">14</span>
<span class="normal">15</span>
<span class="normal">16</span>
<span class="normal">17</span>
<span class="normal">18</span>
<span class="normal">19</span>
<span class="normal">20</span>
<span class="normal">21</span>
<span class="normal">22</span>
<span class="normal">23</span>
<span class="normal">24</span>
<span class="normal">25</span>
<span class="normal">26</span>
<span class="normal">27</span>
<span class="normal">28</span>
<span class="normal">29</span>
<span class="normal">30</span>
<span class="normal">31</span>
<span class="normal">32</span>
<span class="normal">33</span>
<span class="normal">34</span>
<span class="normal">35</span>
<span class="normal">36</span>
<span class="normal">37</span>
<span class="normal">38</span>
<span class="normal">39</span>
<span class="normal">40</span>
<span class="normal">41</span>
<span class="normal">42</span>
<span class="normal">43</span>
<span class="normal">44</span>
<span class="normal">45</span>
<span class="normal">46</span>
<span class="normal">47</span>
<span class="normal">48</span>
<span class="normal">49</span>
<span class="normal">50</span>
<span class="normal">51</span>
<span class="normal">52</span>
<span class="normal">53</span>
<span class="normal">54</span>
<span class="normal">55</span>
<span class="normal">56</span>
<span class="normal">57</span>
<span class="normal">58</span>
<span class="normal">59</span>
<span class="normal">60</span>
<span class="normal">61</span>
<span class="normal">62</span>
<span class="normal">63</span>
<span class="normal">64</span>
<span class="normal">65</span>
<span class="normal">66</span>
<span class="normal">67</span>
<span class="normal">68</span>
<span class="normal">69</span>
<span class="normal">70</span>
<span class="normal">71</span>
<span class="normal">72</span>
<span class="normal">73</span>
<span class="normal">74</span>
<span class="normal">75</span>
<span class="normal">76</span>
<span class="normal">77</span>
<span class="normal">78</span>
<span class="normal">79</span>
<span class="normal">80</span>
<span class="normal">81</span>
<span class="normal">82</span>
<span class="normal">83</span>
<span class="normal">84</span>
<span class="normal">85</span>
<span class="normal">86</span></pre></div></td><td class="code"><div><pre><span></span><span class="c1"># ----------------------------------------------------------------------------</span>
<span class="c1"># -                        Open3D: www.open3d.org                            -</span>
<span class="c1"># ----------------------------------------------------------------------------</span>
<span class="c1"># Copyright (c) 2018-2023 www.open3d.org</span>
<span class="c1"># SPDX-License-Identifier: MIT</span>
<span class="c1"># ----------------------------------------------------------------------------</span>

<span class="kn">import</span> <span class="nn">open3d</span> <span class="k">as</span> <span class="nn">o3d</span>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="nn">np</span>
<span class="kn">import</span> <span class="nn">copy</span>


<span class="k">def</span> <span class="nf">translate</span><span class="p">():</span>
    <span class="n">mesh</span> <span class="o">=</span> <span class="n">o3d</span><span class="o">.</span><span class="n">geometry</span><span class="o">.</span><span class="n">TriangleMesh</span><span class="o">.</span><span class="n">create_coordinate_frame</span><span class="p">()</span>
    <span class="n">mesh_tx</span> <span class="o">=</span> <span class="n">copy</span><span class="o">.</span><span class="n">deepcopy</span><span class="p">(</span><span class="n">mesh</span><span class="p">)</span><span class="o">.</span><span class="n">translate</span><span class="p">((</span><span class="mf">1.3</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">))</span>
    <span class="n">mesh_ty</span> <span class="o">=</span> <span class="n">copy</span><span class="o">.</span><span class="n">deepcopy</span><span class="p">(</span><span class="n">mesh</span><span class="p">)</span><span class="o">.</span><span class="n">translate</span><span class="p">((</span><span class="mi">0</span><span class="p">,</span> <span class="mf">1.3</span><span class="p">,</span> <span class="mi">0</span><span class="p">))</span>
    <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;Displaying original and translated geometries ...&#39;</span><span class="p">)</span>
    <span class="n">o3d</span><span class="o">.</span><span class="n">visualization</span><span class="o">.</span><span class="n">draw</span><span class="p">([{</span>
        <span class="s2">&quot;name&quot;</span><span class="p">:</span> <span class="s2">&quot;Original Geometry&quot;</span><span class="p">,</span>
        <span class="s2">&quot;geometry&quot;</span><span class="p">:</span> <span class="n">mesh</span>
    <span class="p">},</span> <span class="p">{</span>
        <span class="s2">&quot;name&quot;</span><span class="p">:</span> <span class="s2">&quot;Translated (in X) Geometry&quot;</span><span class="p">,</span>
        <span class="s2">&quot;geometry&quot;</span><span class="p">:</span> <span class="n">mesh_tx</span>
    <span class="p">},</span> <span class="p">{</span>
        <span class="s2">&quot;name&quot;</span><span class="p">:</span> <span class="s2">&quot;Translated (in Y) Geometry&quot;</span><span class="p">,</span>
        <span class="s2">&quot;geometry&quot;</span><span class="p">:</span> <span class="n">mesh_ty</span>
    <span class="p">}],</span>
                           <span class="n">show_ui</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>


<span class="k">def</span> <span class="nf">rotate</span><span class="p">():</span>
    <span class="n">mesh</span> <span class="o">=</span> <span class="n">o3d</span><span class="o">.</span><span class="n">geometry</span><span class="o">.</span><span class="n">TriangleMesh</span><span class="o">.</span><span class="n">create_coordinate_frame</span><span class="p">()</span>
    <span class="n">mesh_r</span> <span class="o">=</span> <span class="n">copy</span><span class="o">.</span><span class="n">deepcopy</span><span class="p">(</span><span class="n">mesh</span><span class="p">)</span>
    <span class="n">R</span> <span class="o">=</span> <span class="n">mesh</span><span class="o">.</span><span class="n">get_rotation_matrix_from_xyz</span><span class="p">((</span><span class="n">np</span><span class="o">.</span><span class="n">pi</span> <span class="o">/</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">np</span><span class="o">.</span><span class="n">pi</span> <span class="o">/</span> <span class="mi">4</span><span class="p">))</span>
    <span class="n">mesh_r</span><span class="o">.</span><span class="n">rotate</span><span class="p">(</span><span class="n">R</span><span class="p">,</span> <span class="n">center</span><span class="o">=</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">))</span>
    <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;Displaying original and rotated geometries ...&#39;</span><span class="p">)</span>
    <span class="n">o3d</span><span class="o">.</span><span class="n">visualization</span><span class="o">.</span><span class="n">draw</span><span class="p">([{</span>
        <span class="s2">&quot;name&quot;</span><span class="p">:</span> <span class="s2">&quot;Original Geometry&quot;</span><span class="p">,</span>
        <span class="s2">&quot;geometry&quot;</span><span class="p">:</span> <span class="n">mesh</span>
    <span class="p">},</span> <span class="p">{</span>
        <span class="s2">&quot;name&quot;</span><span class="p">:</span> <span class="s2">&quot;Rotated Geometry&quot;</span><span class="p">,</span>
        <span class="s2">&quot;geometry&quot;</span><span class="p">:</span> <span class="n">mesh_r</span>
    <span class="p">}],</span>
                           <span class="n">show_ui</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>


<span class="k">def</span> <span class="nf">scale</span><span class="p">():</span>
    <span class="n">mesh</span> <span class="o">=</span> <span class="n">o3d</span><span class="o">.</span><span class="n">geometry</span><span class="o">.</span><span class="n">TriangleMesh</span><span class="o">.</span><span class="n">create_coordinate_frame</span><span class="p">()</span>
    <span class="n">mesh_s</span> <span class="o">=</span> <span class="n">copy</span><span class="o">.</span><span class="n">deepcopy</span><span class="p">(</span><span class="n">mesh</span><span class="p">)</span><span class="o">.</span><span class="n">translate</span><span class="p">((</span><span class="mi">2</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">))</span>
    <span class="n">mesh_s</span><span class="o">.</span><span class="n">scale</span><span class="p">(</span><span class="mf">0.5</span><span class="p">,</span> <span class="n">center</span><span class="o">=</span><span class="n">mesh_s</span><span class="o">.</span><span class="n">get_center</span><span class="p">())</span>
    <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;Displaying original and scaled geometries ...&#39;</span><span class="p">)</span>
    <span class="n">o3d</span><span class="o">.</span><span class="n">visualization</span><span class="o">.</span><span class="n">draw</span><span class="p">([{</span>
        <span class="s2">&quot;name&quot;</span><span class="p">:</span> <span class="s2">&quot;Original Geometry&quot;</span><span class="p">,</span>
        <span class="s2">&quot;geometry&quot;</span><span class="p">:</span> <span class="n">mesh</span>
    <span class="p">},</span> <span class="p">{</span>
        <span class="s2">&quot;name&quot;</span><span class="p">:</span> <span class="s2">&quot;Scaled Geometry&quot;</span><span class="p">,</span>
        <span class="s2">&quot;geometry&quot;</span><span class="p">:</span> <span class="n">mesh_s</span>
    <span class="p">}],</span>
                           <span class="n">show_ui</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>


<span class="k">def</span> <span class="nf">transform</span><span class="p">():</span>
    <span class="n">mesh</span> <span class="o">=</span> <span class="n">o3d</span><span class="o">.</span><span class="n">geometry</span><span class="o">.</span><span class="n">TriangleMesh</span><span class="o">.</span><span class="n">create_coordinate_frame</span><span class="p">()</span>
    <span class="n">T</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">eye</span><span class="p">(</span><span class="mi">4</span><span class="p">)</span>
    <span class="n">T</span><span class="p">[:</span><span class="mi">3</span><span class="p">,</span> <span class="p">:</span><span class="mi">3</span><span class="p">]</span> <span class="o">=</span> <span class="n">mesh</span><span class="o">.</span><span class="n">get_rotation_matrix_from_xyz</span><span class="p">((</span><span class="mi">0</span><span class="p">,</span> <span class="n">np</span><span class="o">.</span><span class="n">pi</span> <span class="o">/</span> <span class="mi">3</span><span class="p">,</span> <span class="n">np</span><span class="o">.</span><span class="n">pi</span> <span class="o">/</span> <span class="mi">2</span><span class="p">))</span>
    <span class="n">T</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">3</span><span class="p">]</span> <span class="o">=</span> <span class="mi">1</span>
    <span class="n">T</span><span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">3</span><span class="p">]</span> <span class="o">=</span> <span class="mf">1.3</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">T</span><span class="p">)</span>
    <span class="n">mesh_t</span> <span class="o">=</span> <span class="n">copy</span><span class="o">.</span><span class="n">deepcopy</span><span class="p">(</span><span class="n">mesh</span><span class="p">)</span><span class="o">.</span><span class="n">transform</span><span class="p">(</span><span class="n">T</span><span class="p">)</span>
    <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;Displaying original and transformed geometries ...&#39;</span><span class="p">)</span>
    <span class="n">o3d</span><span class="o">.</span><span class="n">visualization</span><span class="o">.</span><span class="n">draw</span><span class="p">([{</span>
        <span class="s2">&quot;name&quot;</span><span class="p">:</span> <span class="s2">&quot;Original Geometry&quot;</span><span class="p">,</span>
        <span class="s2">&quot;geometry&quot;</span><span class="p">:</span> <span class="n">mesh</span>
    <span class="p">},</span> <span class="p">{</span>
        <span class="s2">&quot;name&quot;</span><span class="p">:</span> <span class="s2">&quot;Transformed Geometry&quot;</span><span class="p">,</span>
        <span class="s2">&quot;geometry&quot;</span><span class="p">:</span> <span class="n">mesh_t</span>
    <span class="p">}],</span>
                           <span class="n">show_ui</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>


<span class="k">if</span> <span class="vm">__name__</span> <span class="o">==</span> <span class="s2">&quot;__main__&quot;</span><span class="p">:</span>

    <span class="n">translate</span><span class="p">()</span>
    <span class="n">rotate</span><span class="p">()</span>
    <span class="n">scale</span><span class="p">()</span>
    <span class="n">transform</span><span class="p">()</span>
</pre></div></td></tr></table></div>
</div>
</div>
<div class="section" id="triangle-mesh-with-numpy-py">
<h2>triangle_mesh_with_numpy.py<a class="headerlink" href="#triangle-mesh-with-numpy-py" title="Permalink to this headline">¶</a></h2>
<div class="highlight-python notranslate"><div class="highlight"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre><span class="normal"> 1</span>
<span class="normal"> 2</span>
<span class="normal"> 3</span>
<span class="normal"> 4</span>
<span class="normal"> 5</span>
<span class="normal"> 6</span>
<span class="normal"> 7</span>
<span class="normal"> 8</span>
<span class="normal"> 9</span>
<span class="normal">10</span>
<span class="normal">11</span>
<span class="normal">12</span>
<span class="normal">13</span>
<span class="normal">14</span>
<span class="normal">15</span>
<span class="normal">16</span>
<span class="normal">17</span>
<span class="normal">18</span>
<span class="normal">19</span>
<span class="normal">20</span>
<span class="normal">21</span>
<span class="normal">22</span>
<span class="normal">23</span>
<span class="normal">24</span>
<span class="normal">25</span>
<span class="normal">26</span>
<span class="normal">27</span>
<span class="normal">28</span>
<span class="normal">29</span>
<span class="normal">30</span>
<span class="normal">31</span>
<span class="normal">32</span>
<span class="normal">33</span>
<span class="normal">34</span>
<span class="normal">35</span>
<span class="normal">36</span>
<span class="normal">37</span>
<span class="normal">38</span>
<span class="normal">39</span>
<span class="normal">40</span>
<span class="normal">41</span>
<span class="normal">42</span>
<span class="normal">43</span></pre></div></td><td class="code"><div><pre><span></span><span class="c1"># ----------------------------------------------------------------------------</span>
<span class="c1"># -                        Open3D: www.open3d.org                            -</span>
<span class="c1"># ----------------------------------------------------------------------------</span>
<span class="c1"># Copyright (c) 2018-2023 www.open3d.org</span>
<span class="c1"># SPDX-License-Identifier: MIT</span>
<span class="c1"># ----------------------------------------------------------------------------</span>

<span class="kn">import</span> <span class="nn">open3d</span> <span class="k">as</span> <span class="nn">o3d</span>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="nn">np</span>

<span class="k">if</span> <span class="vm">__name__</span> <span class="o">==</span> <span class="s2">&quot;__main__&quot;</span><span class="p">:</span>
    <span class="c1"># Read a mesh and get its data as numpy arrays.</span>
    <span class="n">knot_mesh</span> <span class="o">=</span> <span class="n">o3d</span><span class="o">.</span><span class="n">data</span><span class="o">.</span><span class="n">KnotMesh</span><span class="p">()</span>
    <span class="n">mesh</span> <span class="o">=</span> <span class="n">o3d</span><span class="o">.</span><span class="n">io</span><span class="o">.</span><span class="n">read_triangle_mesh</span><span class="p">(</span><span class="n">knot_mesh</span><span class="o">.</span><span class="n">path</span><span class="p">)</span>
    <span class="n">mesh</span><span class="o">.</span><span class="n">paint_uniform_color</span><span class="p">([</span><span class="mf">0.5</span><span class="p">,</span> <span class="mf">0.1</span><span class="p">,</span> <span class="mf">0.3</span><span class="p">])</span>
    <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;Vertices:&#39;</span><span class="p">)</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">asarray</span><span class="p">(</span><span class="n">mesh</span><span class="o">.</span><span class="n">vertices</span><span class="p">))</span>
    <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;Vertex Colors:&#39;</span><span class="p">)</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">asarray</span><span class="p">(</span><span class="n">mesh</span><span class="o">.</span><span class="n">vertex_colors</span><span class="p">))</span>
    <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;Vertex Normals:&#39;</span><span class="p">)</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">asarray</span><span class="p">(</span><span class="n">mesh</span><span class="o">.</span><span class="n">vertex_normals</span><span class="p">))</span>
    <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;Triangles:&#39;</span><span class="p">)</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">asarray</span><span class="p">(</span><span class="n">mesh</span><span class="o">.</span><span class="n">triangles</span><span class="p">))</span>
    <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;Triangle Normals:&#39;</span><span class="p">)</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">asarray</span><span class="p">(</span><span class="n">mesh</span><span class="o">.</span><span class="n">triangle_normals</span><span class="p">))</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Displaying mesh ...&quot;</span><span class="p">)</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">mesh</span><span class="p">)</span>
    <span class="n">o3d</span><span class="o">.</span><span class="n">visualization</span><span class="o">.</span><span class="n">draw</span><span class="p">([</span><span class="n">mesh</span><span class="p">])</span>

    <span class="c1"># Create a mesh using numpy arrays with random colors.</span>
    <span class="n">N</span> <span class="o">=</span> <span class="mi">5</span>
    <span class="n">vertices</span> <span class="o">=</span> <span class="n">o3d</span><span class="o">.</span><span class="n">utility</span><span class="o">.</span><span class="n">Vector3dVector</span><span class="p">(</span>
        <span class="n">np</span><span class="o">.</span><span class="n">array</span><span class="p">([[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">],</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">],</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">],</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">],</span> <span class="p">[</span><span class="mf">0.5</span><span class="p">,</span> <span class="mf">0.5</span><span class="p">,</span> <span class="mf">0.5</span><span class="p">]]))</span>
    <span class="n">triangles</span> <span class="o">=</span> <span class="n">o3d</span><span class="o">.</span><span class="n">utility</span><span class="o">.</span><span class="n">Vector3iVector</span><span class="p">(</span>
        <span class="n">np</span><span class="o">.</span><span class="n">array</span><span class="p">([[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">],</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">],</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">1</span><span class="p">],</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">2</span><span class="p">],</span> <span class="p">[</span><span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">],</span>
                  <span class="p">[</span><span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">0</span><span class="p">]]))</span>
    <span class="n">mesh_np</span> <span class="o">=</span> <span class="n">o3d</span><span class="o">.</span><span class="n">geometry</span><span class="o">.</span><span class="n">TriangleMesh</span><span class="p">(</span><span class="n">vertices</span><span class="p">,</span> <span class="n">triangles</span><span class="p">)</span>
    <span class="n">mesh_np</span><span class="o">.</span><span class="n">vertex_colors</span> <span class="o">=</span> <span class="n">o3d</span><span class="o">.</span><span class="n">utility</span><span class="o">.</span><span class="n">Vector3dVector</span><span class="p">(</span>
        <span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">uniform</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="p">(</span><span class="n">N</span><span class="p">,</span> <span class="mi">3</span><span class="p">)))</span>
    <span class="n">mesh_np</span><span class="o">.</span><span class="n">compute_vertex_normals</span><span class="p">()</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">asarray</span><span class="p">(</span><span class="n">mesh_np</span><span class="o">.</span><span class="n">triangle_normals</span><span class="p">))</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Displaying mesh made using numpy ...&quot;</span><span class="p">)</span>
    <span class="n">o3d</span><span class="o">.</span><span class="n">visualization</span><span class="o">.</span><span class="n">draw_geometries</span><span class="p">([</span><span class="n">mesh_np</span><span class="p">])</span>
</pre></div></td></tr></table></div>
</div>
</div>
</div>


           </div>
           
          </div>
          <footer>
  
    <div class="rst-footer-buttons" role="navigation" aria-label="footer navigation">
      
        <a href="../voxel_grid/index.html" class="btn btn-neutral float-right" title="Voxel Grid" accesskey="n" rel="next">Next <span class="fa fa-arrow-circle-right"></span></a>
      
      
        <a href="../rgbd/index.html" class="btn btn-neutral float-left" title="RGBD Image" accesskey="p" rel="prev"><span class="fa fa-arrow-circle-left"></span> Previous</a>
      
    </div>
  

  <hr/>

  <div role="contentinfo">
    <p>
        &copy; Copyright 2018 - 2021, www.open3d.org

    </p>
  </div>
  Built with <a href="http://sphinx-doc.org/">Sphinx</a> using a <a href="https://github.com/rtfd/sphinx_rtd_theme">theme</a> provided by <a href="https://readthedocs.org/">Read the Docs</a>. 

</footer>

        </div>
      </div>

    </section>

  </div>
  
<div class="rst-versions" data-toggle="rst-versions" role="note" aria-label="versions">
<span class="rst-current-version" data-toggle="rst-current-version">
    <span class="fa fa-book"> Docs version</span>
    0.17.0
    <span class="fa fa-caret-down"></span>
</span>

<!-- A hack to include an external page to get around CORS policy -->
<!-- https://stackoverflow.com/a/15250208/1255535 -->
<div class="rst-other-versions">
    <dl>
    <dt>Versions</dt>
        <dd><ul>
            <script src="../../../../versions.js"></script>
        </ul></dd>
    </dl>
</div>

  <script type="text/javascript">
      jQuery(function () {
          SphinxRtdTheme.Navigation.enable(true);
      });
  </script>

  
  
    
   

</body>

<!-- Mirrored from www.open3d.org/docs/release/python_example/geometry/triangle_mesh/index.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 10:51:50 GMT -->
</html>