

<!DOCTYPE html>
<!--[if IE 8]><html class="no-js lt-ie9" lang="en" > <![endif]-->
<!--[if gt IE 8]><!--> <html class="no-js" lang="en" > <!--<![endif]-->

<!-- Mirrored from www.open3d.org/docs/release/tutorial/visualization/interactive_visualization.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 10:33:52 GMT -->
<head>
  <meta charset="utf-8">
  
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  
  <title>Interactive visualization &mdash; Open3D 0.17.0 documentation</title>
  

  
  
    <link rel="shortcut icon" href="../../_static/open3d_logo.ico"/>
  
  
  

  
  <script type="text/javascript" src="../../_static/js/modernizr.min.js"></script>
  
    
      <script type="text/javascript" id="documentation_options" data-url_root="../../" src="../../_static/documentation_options.js"></script>
        <script src="../../_static/jquery.js"></script>
        <script src="../../_static/underscore.js"></script>
        <script src="../../_static/doctools.js"></script>
        <script src="../../_static/language_data.js"></script>
        <script async="async" src="https://www.googletagmanager.com/gtag/js?id=G-3TQPKGV6Z3"></script>
        <script >
        window.dataLayer = window.dataLayer || [];
        function gtag(){dataLayer.push(arguments);}
        gtag('js', new Date());
        gtag('config', 'G-3TQPKGV6Z3');</script>
        <script crossorigin="anonymous" integrity="sha256-Ae2Vz/4ePdIu6ZyI/5ZGsYnb+m0JlOmKPjt6XZ9JJkA=" src="../../../../../cdnjs.cloudflare.com/ajax/libs/require.js/2.3.4/require.min.js"></script>
        <script async="async" src="../../../../../cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.7/latestdda6.js?config=TeX-AMS-MML_HTMLorMML"></script>
        <script type="text/x-mathjax-config">MathJax.Hub.Config({"tex2jax": {"inlineMath": [["$", "$"], ["\\(", "\\)"]], "processEscapes": true, "ignoreClass": "document", "processClass": "math|output_area"}})</script>
    
    <script type="text/javascript" src="../../_static/js/theme.js"></script>

    

  
  <link rel="stylesheet" href="../../_static/css/theme.css" type="text/css" />
  <link rel="stylesheet" href="../../_static/pygments.css" type="text/css" />
  <link rel="stylesheet" href="../../_static/theme_overrides.css" type="text/css" />
    <link rel="index" title="Index" href="../../genindex.html" />
    <link rel="search" title="Search" href="../../search.html" />
    <link rel="next" title="Non-blocking visualization" href="non_blocking_visualization.55" />
    <link rel="prev" title="Customized visualization" href="customized_visualization.53.d" /> 
</head>

<body class="wy-body-for-nav">

   
  <div class="wy-grid-for-nav">
    
    <nav data-toggle="wy-nav-shift" class="wy-nav-side">
      <div class="wy-side-scroll">
        <div class="wy-side-nav-search" >
          

          
            <a href="../../index-2.html" class="icon icon-home"> Open3D
          

          
          </a>

          
            
            
              <div class="version">
                0.17.0
              </div>
            
          

          
<div role="search">
  <form id="rtd-search-form" class="wy-form" action="http://www.open3d.org/docs/release/search.html" method="get">
    <input type="text" name="q" placeholder="Search docs" />
    <input type="hidden" name="check_keywords" value="yes" />
    <input type="hidden" name="area" value="default" />
  </form>
</div>

          
        </div>

        <div class="wy-menu wy-menu-vertical" data-spy="affix" role="navigation" aria-label="main navigation">
          
            
            
              
            
            
              <p class="caption"><span class="caption-text">Getting Started</span></p>
<ul>
<li class="toctree-l1"><a class="reference internal" href="../../introduction.html">Introduction</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../getting_started.html">Getting started</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../compilation.html">Build from source</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../cpp_project.html">Link Open3D in C++ projects</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../builddocs.html">Build documentation</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../open3d_ml.html">Open3D-ML</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../arm.html">ARM support</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../docker.html">Docker</a></li>
</ul>
<p class="caption"><span class="caption-text">Tutorial</span></p>
<ul class="current">
<li class="toctree-l1"><a class="reference internal" href="../geometry/index.html">Geometry</a></li>
<li class="toctree-l1"><a class="reference internal" href="../t_geometry/index.html">Geometry (Tensor)</a></li>
<li class="toctree-l1"><a class="reference internal" href="../pipelines/index.html">Pipelines</a></li>
<li class="toctree-l1"><a class="reference internal" href="../t_pipelines/index.html">Pipelines (Tensor)</a></li>
<li class="toctree-l1 current"><a class="reference internal" href="index.html">Visualization</a><ul class="current">
<li class="toctree-l2"><a class="reference internal" href="visualization.html">Visualization</a></li>
<li class="toctree-l2"><a class="reference internal" href="customized_visualization.53.d">Customized visualization</a></li>
<li class="toctree-l2 current"><a class="current reference internal" href="#">Interactive visualization</a><ul>
<li class="toctree-l3"><a class="reference internal" href="#crop-geometry">Crop geometry</a></li>
<li class="toctree-l3"><a class="reference internal" href="#manual-registration">Manual registration</a><ul>
<li class="toctree-l4"><a class="reference internal" href="#select-correspondences">Select correspondences</a></li>
<li class="toctree-l4"><a class="reference internal" href="#registration-using-user-correspondences">Registration using user correspondences</a></li>
</ul>
</li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="non_blocking_visualization.55">Non-blocking visualization</a></li>
<li class="toctree-l2"><a class="reference internal" href="headless_rendering.html">Headless rendering</a></li>
<li class="toctree-l2"><a class="reference internal" href="cpu_rendering.html">CPU (Software) Rendering</a></li>
<li class="toctree-l2"><a class="reference internal" href="web_visualizer.html">Web visualizer and Jupyter</a></li>
<li class="toctree-l2"><a class="reference internal" href="tensorboard_plugin.html">Open3D for TensorBoard</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../core/index.html">Core</a></li>
<li class="toctree-l1"><a class="reference internal" href="../data/index.html">Dataset</a></li>
<li class="toctree-l1"><a class="reference internal" href="../reconstruction_system/index.html">Reconstruction system</a></li>
<li class="toctree-l1"><a class="reference internal" href="../t_reconstruction_system/index.html">Reconstruction system (Tensor)</a></li>
<li class="toctree-l1"><a class="reference internal" href="../sensor/index.html">Sensor</a></li>
<li class="toctree-l1"><a class="reference internal" href="../reference.html">Reference</a></li>
</ul>
<p class="caption"><span class="caption-text">Contribute</span></p>
<ul>
<li class="toctree-l1"><a class="reference internal" href="../../contribute/contribute.html">Contributing to Open3D</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../contribute/contribution_recipes.html">Contribution methods</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../contribute/styleguide.html">Open3D style guide</a></li>
</ul>
<p class="caption"><span class="caption-text">C++ API</span></p>
<ul>
<li class="toctree-l1"><a class="reference internal" href="../../cpp_api.html">C++ documentation</a></li>
</ul>
<p class="caption"><span class="caption-text">Python API</span></p>
<ul>
<li class="toctree-l1"><a class="reference internal" href="../../python_api/open3d.camera.html">open3d.camera</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../python_api/open3d.core.html">open3d.core</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../python_api/open3d.data.html">open3d.data</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../python_api/open3d.geometry.html">open3d.geometry</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../python_api/open3d.io.html">open3d.io</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../python_api/open3d.t.html">open3d.t</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../python_api/open3d.ml.html">open3d.ml</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../python_api/open3d.pipelines.html">open3d.pipelines</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../python_api/open3d.utility.html">open3d.utility</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../python_api/open3d.visualization.html">open3d.visualization</a></li>
</ul>
<p class="caption"><span class="caption-text">Python Examples</span></p>
<ul>
<li class="toctree-l1"><a class="reference internal" href="../../python_example/camera/index.html">Camera</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../python_example/geometry/index.html">Geometry</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../python_example/io/index.html">IO</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../python_example/pipelines/index.html">Pipelines</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../python_example/utility/index.html">Utility</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../python_example/visualization/index.html">Visualization</a></li>
</ul>

            
          
        </div>
      </div>
    </nav>

    <section data-toggle="wy-nav-shift" class="wy-nav-content-wrap">

      
      <nav class="wy-nav-top" aria-label="top navigation">
        
          <i data-toggle="wy-nav-top" class="fa fa-bars"></i>
          <a href="../../index-2.html">Open3D</a>
        
      </nav>


      <div class="wy-nav-content">
        
        <div class="rst-content">
        
          















<div role="navigation" aria-label="breadcrumbs navigation">

  <ul class="wy-breadcrumbs">
    
      <li><a href="../../index-2.html">Docs</a> &raquo;</li>
        
          <li><a href="index.html">Visualization</a> &raquo;</li>
        
      <li>Interactive visualization</li>
    
    
      <li class="wy-breadcrumbs-aside">
        
            
        
      </li>
    
  </ul>

  
  <hr/>
</div>
          <div role="main" class="document" itemscope="itemscope" itemtype="http://schema.org/Article">
           <div itemprop="articleBody">
            
  
<style>
/* CSS overrides for sphinx_rtd_theme */

/* 24px margin */
.nbinput.nblast.container,
.nboutput.nblast.container {
    margin-bottom: 19px;  /* padding has already 5px */
}

/* ... except between code cells! */
.nblast.container + .nbinput.container {
    margin-top: -19px;
}

.admonition > p:before {
    margin-right: 4px;  /* make room for the exclamation icon */
}

/* Fix math alignment, see https://github.com/rtfd/sphinx_rtd_theme/pull/686 */
.math {
    text-align: unset;
}
</style>
<div class="section" id="interactive-visualization">
<span id="id1"></span><h1>Interactive visualization<a class="headerlink" href="#interactive-visualization" title="Permalink to this headline">¶</a></h1>
<p>This tutorial introduces user interaction features of the visualizer window.</p>
<div class="highlight-python notranslate"><div class="highlight"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre><span class="normal">27</span>
<span class="normal">28</span>
<span class="normal">29</span>
<span class="normal">30</span>
<span class="normal">31</span>
<span class="normal">32</span>
<span class="normal">33</span>
<span class="normal">34</span>
<span class="normal">35</span>
<span class="normal">36</span>
<span class="normal">37</span>
<span class="normal">38</span>
<span class="normal">39</span>
<span class="normal">40</span>
<span class="normal">41</span>
<span class="normal">42</span>
<span class="normal">43</span>
<span class="normal">44</span>
<span class="normal">45</span>
<span class="normal">46</span>
<span class="normal">47</span>
<span class="normal">48</span>
<span class="normal">49</span>
<span class="normal">50</span>
<span class="normal">51</span>
<span class="normal">52</span>
<span class="normal">53</span>
<span class="normal">54</span>
<span class="normal">55</span>
<span class="normal">56</span>
<span class="normal">57</span>
<span class="normal">58</span>
<span class="normal">59</span>
<span class="normal">60</span>
<span class="normal">61</span>
<span class="normal">62</span>
<span class="normal">63</span>
<span class="normal">64</span>
<span class="normal">65</span>
<span class="normal">66</span>
<span class="normal">67</span>
<span class="normal">68</span>
<span class="normal">69</span>
<span class="normal">70</span>
<span class="normal">71</span>
<span class="normal">72</span>
<span class="normal">73</span>
<span class="normal">74</span>
<span class="normal">75</span>
<span class="normal">76</span>
<span class="normal">77</span>
<span class="normal">78</span>
<span class="normal">79</span>
<span class="normal">80</span>
<span class="normal">81</span>
<span class="normal">82</span>
<span class="normal">83</span>
<span class="normal">84</span>
<span class="normal">85</span>
<span class="normal">86</span>
<span class="normal">87</span>
<span class="normal">88</span>
<span class="normal">89</span>
<span class="normal">90</span>
<span class="normal">91</span></pre></div></td><td class="code"><div><pre><span></span>    <span class="n">pcd</span> <span class="o">=</span> <span class="n">o3d</span><span class="o">.</span><span class="n">io</span><span class="o">.</span><span class="n">read_point_cloud</span><span class="p">(</span><span class="n">pcd_data</span><span class="o">.</span><span class="n">paths</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>
    <span class="n">o3d</span><span class="o">.</span><span class="n">visualization</span><span class="o">.</span><span class="n">draw_geometries_with_editing</span><span class="p">([</span><span class="n">pcd</span><span class="p">])</span>


<span class="k">def</span> <span class="nf">draw_registration_result</span><span class="p">(</span><span class="n">source</span><span class="p">,</span> <span class="n">target</span><span class="p">,</span> <span class="n">transformation</span><span class="p">):</span>
    <span class="n">source_temp</span> <span class="o">=</span> <span class="n">copy</span><span class="o">.</span><span class="n">deepcopy</span><span class="p">(</span><span class="n">source</span><span class="p">)</span>
    <span class="n">target_temp</span> <span class="o">=</span> <span class="n">copy</span><span class="o">.</span><span class="n">deepcopy</span><span class="p">(</span><span class="n">target</span><span class="p">)</span>
    <span class="n">source_temp</span><span class="o">.</span><span class="n">paint_uniform_color</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span> <span class="mf">0.706</span><span class="p">,</span> <span class="mi">0</span><span class="p">])</span>
    <span class="n">target_temp</span><span class="o">.</span><span class="n">paint_uniform_color</span><span class="p">([</span><span class="mi">0</span><span class="p">,</span> <span class="mf">0.651</span><span class="p">,</span> <span class="mf">0.929</span><span class="p">])</span>
    <span class="n">source_temp</span><span class="o">.</span><span class="n">transform</span><span class="p">(</span><span class="n">transformation</span><span class="p">)</span>
    <span class="n">o3d</span><span class="o">.</span><span class="n">visualization</span><span class="o">.</span><span class="n">draw_geometries</span><span class="p">([</span><span class="n">source_temp</span><span class="p">,</span> <span class="n">target_temp</span><span class="p">])</span>


<span class="k">def</span> <span class="nf">pick_points</span><span class="p">(</span><span class="n">pcd</span><span class="p">):</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">)</span>
    <span class="nb">print</span><span class="p">(</span>
        <span class="s2">&quot;1) Please pick at least three correspondences using [shift + left click]&quot;</span>
    <span class="p">)</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;   Press [shift + right click] to undo point picking&quot;</span><span class="p">)</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;2) After picking points, press &#39;Q&#39; to close the window&quot;</span><span class="p">)</span>
    <span class="n">vis</span> <span class="o">=</span> <span class="n">o3d</span><span class="o">.</span><span class="n">visualization</span><span class="o">.</span><span class="n">VisualizerWithEditing</span><span class="p">()</span>
    <span class="n">vis</span><span class="o">.</span><span class="n">create_window</span><span class="p">()</span>
    <span class="n">vis</span><span class="o">.</span><span class="n">add_geometry</span><span class="p">(</span><span class="n">pcd</span><span class="p">)</span>
    <span class="n">vis</span><span class="o">.</span><span class="n">run</span><span class="p">()</span>  <span class="c1"># user picks points</span>
    <span class="n">vis</span><span class="o">.</span><span class="n">destroy_window</span><span class="p">()</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">vis</span><span class="o">.</span><span class="n">get_picked_points</span><span class="p">()</span>


<span class="k">def</span> <span class="nf">demo_manual_registration</span><span class="p">():</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Demo for manual ICP&quot;</span><span class="p">)</span>
    <span class="n">pcd_data</span> <span class="o">=</span> <span class="n">o3d</span><span class="o">.</span><span class="n">data</span><span class="o">.</span><span class="n">DemoICPPointClouds</span><span class="p">()</span>
    <span class="n">source</span> <span class="o">=</span> <span class="n">o3d</span><span class="o">.</span><span class="n">io</span><span class="o">.</span><span class="n">read_point_cloud</span><span class="p">(</span><span class="n">pcd_data</span><span class="o">.</span><span class="n">paths</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>
    <span class="n">target</span> <span class="o">=</span> <span class="n">o3d</span><span class="o">.</span><span class="n">io</span><span class="o">.</span><span class="n">read_point_cloud</span><span class="p">(</span><span class="n">pcd_data</span><span class="o">.</span><span class="n">paths</span><span class="p">[</span><span class="mi">2</span><span class="p">])</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Visualization of two point clouds before manual alignment&quot;</span><span class="p">)</span>
    <span class="n">draw_registration_result</span><span class="p">(</span><span class="n">source</span><span class="p">,</span> <span class="n">target</span><span class="p">,</span> <span class="n">np</span><span class="o">.</span><span class="n">identity</span><span class="p">(</span><span class="mi">4</span><span class="p">))</span>

    <span class="c1"># pick points from two point clouds and builds correspondences</span>
    <span class="n">picked_id_source</span> <span class="o">=</span> <span class="n">pick_points</span><span class="p">(</span><span class="n">source</span><span class="p">)</span>
    <span class="n">picked_id_target</span> <span class="o">=</span> <span class="n">pick_points</span><span class="p">(</span><span class="n">target</span><span class="p">)</span>
    <span class="k">assert</span> <span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">picked_id_source</span><span class="p">)</span> <span class="o">&gt;=</span> <span class="mi">3</span> <span class="ow">and</span> <span class="nb">len</span><span class="p">(</span><span class="n">picked_id_target</span><span class="p">)</span> <span class="o">&gt;=</span> <span class="mi">3</span><span class="p">)</span>
    <span class="k">assert</span> <span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">picked_id_source</span><span class="p">)</span> <span class="o">==</span> <span class="nb">len</span><span class="p">(</span><span class="n">picked_id_target</span><span class="p">))</span>
    <span class="n">corr</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">zeros</span><span class="p">((</span><span class="nb">len</span><span class="p">(</span><span class="n">picked_id_source</span><span class="p">),</span> <span class="mi">2</span><span class="p">))</span>
    <span class="n">corr</span><span class="p">[:,</span> <span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="n">picked_id_source</span>
    <span class="n">corr</span><span class="p">[:,</span> <span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="n">picked_id_target</span>

    <span class="c1"># estimate rough transformation using correspondences</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Compute a rough transform using the correspondences given by user&quot;</span><span class="p">)</span>
    <span class="n">p2p</span> <span class="o">=</span> <span class="n">o3d</span><span class="o">.</span><span class="n">pipelines</span><span class="o">.</span><span class="n">registration</span><span class="o">.</span><span class="n">TransformationEstimationPointToPoint</span><span class="p">()</span>
    <span class="n">trans_init</span> <span class="o">=</span> <span class="n">p2p</span><span class="o">.</span><span class="n">compute_transformation</span><span class="p">(</span><span class="n">source</span><span class="p">,</span> <span class="n">target</span><span class="p">,</span>
                                            <span class="n">o3d</span><span class="o">.</span><span class="n">utility</span><span class="o">.</span><span class="n">Vector2iVector</span><span class="p">(</span><span class="n">corr</span><span class="p">))</span>

    <span class="c1"># point-to-point ICP for refinement</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Perform point-to-point ICP refinement&quot;</span><span class="p">)</span>
    <span class="n">threshold</span> <span class="o">=</span> <span class="mf">0.03</span>  <span class="c1"># 3cm distance threshold</span>
    <span class="n">reg_p2p</span> <span class="o">=</span> <span class="n">o3d</span><span class="o">.</span><span class="n">pipelines</span><span class="o">.</span><span class="n">registration</span><span class="o">.</span><span class="n">registration_icp</span><span class="p">(</span>
        <span class="n">source</span><span class="p">,</span> <span class="n">target</span><span class="p">,</span> <span class="n">threshold</span><span class="p">,</span> <span class="n">trans_init</span><span class="p">,</span>
        <span class="n">o3d</span><span class="o">.</span><span class="n">pipelines</span><span class="o">.</span><span class="n">registration</span><span class="o">.</span><span class="n">TransformationEstimationPointToPoint</span><span class="p">())</span>
    <span class="n">draw_registration_result</span><span class="p">(</span><span class="n">source</span><span class="p">,</span> <span class="n">target</span><span class="p">,</span> <span class="n">reg_p2p</span><span class="o">.</span><span class="n">transformation</span><span class="p">)</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">)</span>


<span class="k">if</span> <span class="vm">__name__</span> <span class="o">==</span> <span class="s2">&quot;__main__&quot;</span><span class="p">:</span>
    <span class="n">demo_crop_geometry</span><span class="p">()</span>
    <span class="n">demo_manual_registration</span><span class="p">()</span>
</pre></div></td></tr></table></div>
</div>
<p>This script executes two applications of user interaction: <code class="docutils literal notranslate"><span class="pre">demo_crop_geometry</span></code> and <code class="docutils literal notranslate"><span class="pre">demo_manual_registration</span></code>.</p>
<div class="section" id="crop-geometry">
<span id="id2"></span><h2>Crop geometry<a class="headerlink" href="#crop-geometry" title="Permalink to this headline">¶</a></h2>
<div class="highlight-python notranslate"><div class="highlight"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre><span class="normal">37</span>
<span class="normal">38</span>
<span class="normal">39</span>
<span class="normal">40</span>
<span class="normal">41</span>
<span class="normal">42</span>
<span class="normal">43</span>
<span class="normal">44</span>
<span class="normal">45</span>
<span class="normal">46</span>
<span class="normal">47</span>
<span class="normal">48</span>
<span class="normal">49</span>
<span class="normal">50</span>
<span class="normal">51</span></pre></div></td><td class="code"><div><pre><span></span>    <span class="n">o3d</span><span class="o">.</span><span class="n">visualization</span><span class="o">.</span><span class="n">draw_geometries</span><span class="p">([</span><span class="n">source_temp</span><span class="p">,</span> <span class="n">target_temp</span><span class="p">])</span>


<span class="k">def</span> <span class="nf">pick_points</span><span class="p">(</span><span class="n">pcd</span><span class="p">):</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">)</span>
    <span class="nb">print</span><span class="p">(</span>
        <span class="s2">&quot;1) Please pick at least three correspondences using [shift + left click]&quot;</span>
    <span class="p">)</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;   Press [shift + right click] to undo point picking&quot;</span><span class="p">)</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;2) After picking points, press &#39;Q&#39; to close the window&quot;</span><span class="p">)</span>
    <span class="n">vis</span> <span class="o">=</span> <span class="n">o3d</span><span class="o">.</span><span class="n">visualization</span><span class="o">.</span><span class="n">VisualizerWithEditing</span><span class="p">()</span>
    <span class="n">vis</span><span class="o">.</span><span class="n">create_window</span><span class="p">()</span>
    <span class="n">vis</span><span class="o">.</span><span class="n">add_geometry</span><span class="p">(</span><span class="n">pcd</span><span class="p">)</span>
    <span class="n">vis</span><span class="o">.</span><span class="n">run</span><span class="p">()</span>  <span class="c1"># user picks points</span>
    <span class="n">vis</span><span class="o">.</span><span class="n">destroy_window</span><span class="p">()</span>
</pre></div></td></tr></table></div>
</div>
<p>This function simply reads a point cloud and calls <code class="docutils literal notranslate"><span class="pre">draw_geometries_with_editing</span></code>. This function provides vertex selection and cropping.</p>
<div class="admonition note">
<p class="admonition-title">Note</p>
<p>Open3D has a <code class="docutils literal notranslate"><span class="pre">VisualizerWithEditing</span></code> class that inherits <code class="docutils literal notranslate"><span class="pre">Visualizer</span></code> class. It adds graphic user interaction features. Likewise examples in <a class="reference internal" href="customized_visualization.53.d#customized-visualization"><span class="std std-ref">Customized visualization</span></a>, <code class="docutils literal notranslate"><span class="pre">VisualizerWithEditing()</span></code> can be explicitly used instead of <code class="docutils literal notranslate"><span class="pre">draw_geometries_with_editing([pcd])</span></code>.</p>
</div>
<p>Once a geometry is displayed, press <code class="docutils literal notranslate"><span class="pre">Y</span></code> twice to align geometry with negative direction of y-axis. After adjusting viewing orientation, press <code class="docutils literal notranslate"><span class="pre">K</span></code> to lock screen and to switch to the selection mode.</p>
<a class="reference internal image-reference" href="../../_images/crop_lock.png"><img alt="../../_images/crop_lock.png" src="../../_images/crop_lock.png" style="width: 400px;" /></a>
<div class="admonition tip">
<p class="admonition-title">Tip</p>
<p>The practical step for selecting area is to align the geometry with arbitrary axis using orthographic projection model. This trick makes selection easier, because it avoids self-occlusion hassle due to perspective projection.</p>
</div>
<p>To select a region, use either <code class="docutils literal notranslate"><span class="pre">mouse</span> <span class="pre">drag</span></code> (rectangle selection) or <code class="docutils literal notranslate"><span class="pre">ctrl</span> <span class="pre">+</span> <span class="pre">left</span> <span class="pre">mouse</span> <span class="pre">click</span></code> (polygon selection). The below example shows a selected area using a polygon.</p>
<a class="reference internal image-reference" href="../../_images/crop_selection.png"><img alt="../../_images/crop_selection.png" src="../../_images/crop_selection.png" style="width: 400px;" /></a>
<p>Note that the selected area is dark shaded. To keep the selected area and discard the rest, press <code class="docutils literal notranslate"><span class="pre">C</span></code>. A dialog box appears, which can be used to save the cropped geometry. The cropping result is shown after saving.</p>
<a class="reference internal image-reference" href="../../_images/crop_save.png"><img alt="../../_images/crop_save.png" src="../../_images/crop_save.png" style="width: 200px;" /></a>
<a class="reference internal image-reference" href="../../_images/crop_result.png"><img alt="../../_images/crop_result.png" src="../../_images/crop_result.png" style="width: 400px;" /></a>
<p>To finish selection mode, press <code class="docutils literal notranslate"><span class="pre">F</span></code> to switch to freeview mode.</p>
<a class="reference internal image-reference" href="../../_images/crop_freeview.png"><img alt="../../_images/crop_freeview.png" src="../../_images/crop_freeview.png" style="width: 400px;" /></a>
</div>
<div class="section" id="manual-registration">
<span id="id3"></span><h2>Manual registration<a class="headerlink" href="#manual-registration" title="Permalink to this headline">¶</a></h2>
<div class="section" id="select-correspondences">
<h3>Select correspondences<a class="headerlink" href="#select-correspondences" title="Permalink to this headline">¶</a></h3>
<p>The following script registers two point clouds using point-to-point ICP. It gets initial alignment via user interaction.</p>
<div class="highlight-python notranslate"><div class="highlight"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre><span class="normal">61</span>
<span class="normal">62</span>
<span class="normal">63</span>
<span class="normal">64</span>
<span class="normal">65</span>
<span class="normal">66</span>
<span class="normal">67</span>
<span class="normal">68</span>
<span class="normal">69</span>
<span class="normal">70</span>
<span class="normal">71</span>
<span class="normal">72</span>
<span class="normal">73</span>
<span class="normal">74</span>
<span class="normal">75</span>
<span class="normal">76</span></pre></div></td><td class="code"><div><pre><span></span>    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Visualization of two point clouds before manual alignment&quot;</span><span class="p">)</span>
    <span class="n">draw_registration_result</span><span class="p">(</span><span class="n">source</span><span class="p">,</span> <span class="n">target</span><span class="p">,</span> <span class="n">np</span><span class="o">.</span><span class="n">identity</span><span class="p">(</span><span class="mi">4</span><span class="p">))</span>

    <span class="c1"># pick points from two point clouds and builds correspondences</span>
    <span class="n">picked_id_source</span> <span class="o">=</span> <span class="n">pick_points</span><span class="p">(</span><span class="n">source</span><span class="p">)</span>
    <span class="n">picked_id_target</span> <span class="o">=</span> <span class="n">pick_points</span><span class="p">(</span><span class="n">target</span><span class="p">)</span>
    <span class="k">assert</span> <span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">picked_id_source</span><span class="p">)</span> <span class="o">&gt;=</span> <span class="mi">3</span> <span class="ow">and</span> <span class="nb">len</span><span class="p">(</span><span class="n">picked_id_target</span><span class="p">)</span> <span class="o">&gt;=</span> <span class="mi">3</span><span class="p">)</span>
    <span class="k">assert</span> <span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">picked_id_source</span><span class="p">)</span> <span class="o">==</span> <span class="nb">len</span><span class="p">(</span><span class="n">picked_id_target</span><span class="p">))</span>
    <span class="n">corr</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">zeros</span><span class="p">((</span><span class="nb">len</span><span class="p">(</span><span class="n">picked_id_source</span><span class="p">),</span> <span class="mi">2</span><span class="p">))</span>
    <span class="n">corr</span><span class="p">[:,</span> <span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="n">picked_id_source</span>
    <span class="n">corr</span><span class="p">[:,</span> <span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="n">picked_id_target</span>

    <span class="c1"># estimate rough transformation using correspondences</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Compute a rough transform using the correspondences given by user&quot;</span><span class="p">)</span>
    <span class="n">p2p</span> <span class="o">=</span> <span class="n">o3d</span><span class="o">.</span><span class="n">pipelines</span><span class="o">.</span><span class="n">registration</span><span class="o">.</span><span class="n">TransformationEstimationPointToPoint</span><span class="p">()</span>
    <span class="n">trans_init</span> <span class="o">=</span> <span class="n">p2p</span><span class="o">.</span><span class="n">compute_transformation</span><span class="p">(</span><span class="n">source</span><span class="p">,</span> <span class="n">target</span><span class="p">,</span>
</pre></div></td></tr></table></div>
</div>
<p>The script reads two point clouds, and visualizes the point clouds before alignment.</p>
<a class="reference internal image-reference" href="../../_images/manual_icp_initial.png"><img alt="../../_images/manual_icp_initial.png" src="../../_images/manual_icp_initial.png" style="width: 400px;" /></a>
<div class="highlight-python notranslate"><div class="highlight"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre><span class="normal">52</span>
<span class="normal">53</span>
<span class="normal">54</span>
<span class="normal">55</span>
<span class="normal">56</span>
<span class="normal">57</span>
<span class="normal">58</span>
<span class="normal">59</span>
<span class="normal">60</span></pre></div></td><td class="code"><div><pre><span></span>    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">vis</span><span class="o">.</span><span class="n">get_picked_points</span><span class="p">()</span>


<span class="k">def</span> <span class="nf">demo_manual_registration</span><span class="p">():</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Demo for manual ICP&quot;</span><span class="p">)</span>
    <span class="n">pcd_data</span> <span class="o">=</span> <span class="n">o3d</span><span class="o">.</span><span class="n">data</span><span class="o">.</span><span class="n">DemoICPPointClouds</span><span class="p">()</span>
    <span class="n">source</span> <span class="o">=</span> <span class="n">o3d</span><span class="o">.</span><span class="n">io</span><span class="o">.</span><span class="n">read_point_cloud</span><span class="p">(</span><span class="n">pcd_data</span><span class="o">.</span><span class="n">paths</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>
    <span class="n">target</span> <span class="o">=</span> <span class="n">o3d</span><span class="o">.</span><span class="n">io</span><span class="o">.</span><span class="n">read_point_cloud</span><span class="p">(</span><span class="n">pcd_data</span><span class="o">.</span><span class="n">paths</span><span class="p">[</span><span class="mi">2</span><span class="p">])</span>
</pre></div></td></tr></table></div>
</div>
<p>The function <code class="docutils literal notranslate"><span class="pre">pick_points(pcd)</span></code> makes an instance of <code class="docutils literal notranslate"><span class="pre">VisualizerWithEditing</span></code>. To mimic <code class="docutils literal notranslate"><span class="pre">draw_geometries</span></code>, it creates windows, adds the geometry, visualizes the geometry, and then terminates. A novel interface function from <code class="docutils literal notranslate"><span class="pre">VisualizerWithEditing</span></code> is <code class="docutils literal notranslate"><span class="pre">get_picked_points()</span></code> that returns the indices of user-picked vertices.</p>
<p>To pick a vertex, press <code class="docutils literal notranslate"><span class="pre">shift</span> <span class="pre">+</span> <span class="pre">left</span> <span class="pre">click</span></code> on a window. If a vertex is selected, the visualizer window overlays a sphere on a selected vertex. For example, after picking three vertices in the source point cloud, it shows:</p>
<a class="reference internal image-reference" href="../../_images/manual_icp_source.png"><img alt="../../_images/manual_icp_source.png" src="../../_images/manual_icp_source.png" style="width: 400px;" /></a>
<p>This will print:</p>
<div class="highlight-sh notranslate"><div class="highlight"><pre><span></span>Picked<span class="w"> </span>point<span class="w"> </span><span class="c1">#58481 (2.14, 1.56, 1.53) to add in queue.</span>
Picked<span class="w"> </span>point<span class="w"> </span><span class="c1">#77321 (2.86, 1.92, 1.09) to add in queue.</span>
Picked<span class="w"> </span>point<span class="w"> </span><span class="c1">#42639 (3.28, 1.53, 1.45) to add in queue.</span>
</pre></div>
</div>
<p>Press <code class="docutils literal notranslate"><span class="pre">Q</span></code> to close the window. The next step is to pick the same correspondences in the target point cloud. The color of the sphere helps to identify the same correspondence.</p>
<a class="reference internal image-reference" href="../../_images/manual_icp_target.png"><img alt="../../_images/manual_icp_target.png" src="../../_images/manual_icp_target.png" style="width: 400px;" /></a>
<p>This will print:</p>
<div class="highlight-sh notranslate"><div class="highlight"><pre><span></span>Picked<span class="w"> </span>point<span class="w"> </span><span class="c1">#54028 (1.62, 1.81, 1.23) to add in queue.</span>
Picked<span class="w"> </span>point<span class="w"> </span><span class="c1">#97115 (2.45, 2.19, 1.11) to add in queue.</span>
Picked<span class="w"> </span>point<span class="w"> </span><span class="c1">#47467 (2.75, 1.71, 1.45) to add in queue.</span>
</pre></div>
</div>
<div class="admonition tip">
<p class="admonition-title">Tip</p>
<p>To get a good registration result, try to pick more than three points that are well-distributed in the scene. Using a vertex in the corner region is a good way to easily pick the right correspondence.</p>
</div>
</div>
<div class="section" id="registration-using-user-correspondences">
<h3>Registration using user correspondences<a class="headerlink" href="#registration-using-user-correspondences" title="Permalink to this headline">¶</a></h3>
<div class="highlight-python notranslate"><div class="highlight"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre><span class="normal">77</span>
<span class="normal">78</span>
<span class="normal">79</span>
<span class="normal">80</span>
<span class="normal">81</span>
<span class="normal">82</span>
<span class="normal">83</span>
<span class="normal">84</span>
<span class="normal">85</span>
<span class="normal">86</span>
<span class="normal">87</span>
<span class="normal">88</span>
<span class="normal">89</span>
<span class="normal">90</span>
<span class="normal">91</span></pre></div></td><td class="code"><div><pre><span></span>                                            <span class="n">o3d</span><span class="o">.</span><span class="n">utility</span><span class="o">.</span><span class="n">Vector2iVector</span><span class="p">(</span><span class="n">corr</span><span class="p">))</span>

    <span class="c1"># point-to-point ICP for refinement</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Perform point-to-point ICP refinement&quot;</span><span class="p">)</span>
    <span class="n">threshold</span> <span class="o">=</span> <span class="mf">0.03</span>  <span class="c1"># 3cm distance threshold</span>
    <span class="n">reg_p2p</span> <span class="o">=</span> <span class="n">o3d</span><span class="o">.</span><span class="n">pipelines</span><span class="o">.</span><span class="n">registration</span><span class="o">.</span><span class="n">registration_icp</span><span class="p">(</span>
        <span class="n">source</span><span class="p">,</span> <span class="n">target</span><span class="p">,</span> <span class="n">threshold</span><span class="p">,</span> <span class="n">trans_init</span><span class="p">,</span>
        <span class="n">o3d</span><span class="o">.</span><span class="n">pipelines</span><span class="o">.</span><span class="n">registration</span><span class="o">.</span><span class="n">TransformationEstimationPointToPoint</span><span class="p">())</span>
    <span class="n">draw_registration_result</span><span class="p">(</span><span class="n">source</span><span class="p">,</span> <span class="n">target</span><span class="p">,</span> <span class="n">reg_p2p</span><span class="o">.</span><span class="n">transformation</span><span class="p">)</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">)</span>


<span class="k">if</span> <span class="vm">__name__</span> <span class="o">==</span> <span class="s2">&quot;__main__&quot;</span><span class="p">:</span>
    <span class="n">demo_crop_geometry</span><span class="p">()</span>
    <span class="n">demo_manual_registration</span><span class="p">()</span>
</pre></div></td></tr></table></div>
</div>
<p>The later part of the demo computes an initial transformation based on the user-provided correspondences. This script builds pairs of correspondences using <code class="docutils literal notranslate"><span class="pre">Vector2iVector(corr)</span></code>. It utilizes <code class="docutils literal notranslate"><span class="pre">TransformationEstimationPointToPoint.compute_transformation</span></code> to compute the initial transformation from the correspondences. The initial transformation is refined using <code class="docutils literal notranslate"><span class="pre">registration_icp</span></code>.</p>
<p>The registration result is as follows:</p>
<a class="reference internal image-reference" href="../../_images/manual_icp_alignment.png"><img alt="../../_images/manual_icp_alignment.png" src="../../_images/manual_icp_alignment.png" style="width: 400px;" /></a>
</div>
</div>
</div>


           </div>
           
          </div>
          <footer>
  
    <div class="rst-footer-buttons" role="navigation" aria-label="footer navigation">
      
        <a href="non_blocking_visualization.55" class="btn btn-neutral float-right" title="Non-blocking visualization" accesskey="n" rel="next">Next <span class="fa fa-arrow-circle-right"></span></a>
      
      
        <a href="customized_visualization.53.d" class="btn btn-neutral float-left" title="Customized visualization" accesskey="p" rel="prev"><span class="fa fa-arrow-circle-left"></span> Previous</a>
      
    </div>
  

  <hr/>

  <div role="contentinfo">
    <p>
        &copy; Copyright 2018 - 2021, www.open3d.org

    </p>
  </div>
  Built with <a href="http://sphinx-doc.org/">Sphinx</a> using a <a href="https://github.com/rtfd/sphinx_rtd_theme">theme</a> provided by <a href="https://readthedocs.org/">Read the Docs</a>. 

</footer>

        </div>
      </div>

    </section>

  </div>
  
<div class="rst-versions" data-toggle="rst-versions" role="note" aria-label="versions">
<span class="rst-current-version" data-toggle="rst-current-version">
    <span class="fa fa-book"> Docs version</span>
    0.17.0
    <span class="fa fa-caret-down"></span>
</span>

<!-- A hack to include an external page to get around CORS policy -->
<!-- https://stackoverflow.com/a/15250208/1255535 -->
<div class="rst-other-versions">
    <dl>
    <dt>Versions</dt>
        <dd><ul>
            <script src="../../../versions.js"></script>
        </ul></dd>
    </dl>
</div>

  <script type="text/javascript">
      jQuery(function () {
          SphinxRtdTheme.Navigation.enable(true);
      });
  </script>

  
  
    
   

</body>

<!-- Mirrored from www.open3d.org/docs/release/tutorial/visualization/interactive_visualization.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 10:40:24 GMT -->
</html>