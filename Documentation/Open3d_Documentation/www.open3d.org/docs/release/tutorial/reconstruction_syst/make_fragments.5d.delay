

<!DOCTYPE html>
<!--[if IE 8]><html class="no-js lt-ie9" lang="en" > <![endif]-->
<!--[if gt IE 8]><!--> <html class="no-js" lang="en" > <!--<![endif]-->

<!-- Mirrored from www.open3d.org/docs/release/tutorial/reconstruction_system/make_fragments.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 10:46:42 GMT -->
<head>
  <meta charset="utf-8">
  
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  
  <title>Make fragments &mdash; Open3D 0.17.0 documentation</title>
  

  
  
    <link rel="shortcut icon" href="../../_static/open3d_logo.ico"/>
  
  
  

  
  <script type="text/javascript" src="../../_static/js/modernizr.min.js"></script>
  
    
      <script type="text/javascript" id="documentation_options" data-url_root="../../" src="../../_static/documentation_options.js"></script>
        <script src="../../_static/jquery.js"></script>
        <script src="../../_static/underscore.js"></script>
        <script src="../../_static/doctools.js"></script>
        <script src="../../_static/language_data.js"></script>
        <script async="async" src="https://www.googletagmanager.com/gtag/js?id=G-3TQPKGV6Z3"></script>
        <script >
        window.dataLayer = window.dataLayer || [];
        function gtag(){dataLayer.push(arguments);}
        gtag('js', new Date());
        gtag('config', 'G-3TQPKGV6Z3');</script>
        <script crossorigin="anonymous" integrity="sha256-Ae2Vz/4ePdIu6ZyI/5ZGsYnb+m0JlOmKPjt6XZ9JJkA=" src="../../../../../cdnjs.cloudflare.com/ajax/libs/require.js/2.3.4/require.min.js"></script>
        <script async="async" src="../../../../../cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.7/latestdda6.js?config=TeX-AMS-MML_HTMLorMML"></script>
        <script type="text/x-mathjax-config">MathJax.Hub.Config({"tex2jax": {"inlineMath": [["$", "$"], ["\\(", "\\)"]], "processEscapes": true, "ignoreClass": "document", "processClass": "math|output_area"}})</script>
    
    <script type="text/javascript" src="../../_static/js/theme.js"></script>

    

  
  <link rel="stylesheet" href="../../_static/css/theme.css" type="text/css" />
  <link rel="stylesheet" href="../../_static/pygments.css" type="text/css" />
  <link rel="stylesheet" href="../../_static/theme_overrides.css" type="text/css" />
    <link rel="index" title="Index" href="../../genindex.html" />
    <link rel="search" title="Search" href="../../search.html" />
    <link rel="next" title="Register fragments" href="register_fragments.5e.d" />
    <link rel="prev" title="System overview" href="system_overview.5c.dela" /> 
</head>

<body class="wy-body-for-nav">

   
  <div class="wy-grid-for-nav">
    
    <nav data-toggle="wy-nav-shift" class="wy-nav-side">
      <div class="wy-side-scroll">
        <div class="wy-side-nav-search" >
          

          
            <a href="../../index-2.html" class="icon icon-home"> Open3D
          

          
          </a>

          
            
            
              <div class="version">
                0.17.0
              </div>
            
          

          
<div role="search">
  <form id="rtd-search-form" class="wy-form" action="http://www.open3d.org/docs/release/search.html" method="get">
    <input type="text" name="q" placeholder="Search docs" />
    <input type="hidden" name="check_keywords" value="yes" />
    <input type="hidden" name="area" value="default" />
  </form>
</div>

          
        </div>

        <div class="wy-menu wy-menu-vertical" data-spy="affix" role="navigation" aria-label="main navigation">
          
            
            
              
            
            
              <p class="caption"><span class="caption-text">Getting Started</span></p>
<ul>
<li class="toctree-l1"><a class="reference internal" href="../../introduction.html">Introduction</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../getting_started.html">Getting started</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../compilation.html">Build from source</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../cpp_project.html">Link Open3D in C++ projects</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../builddocs.html">Build documentation</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../open3d_ml.html">Open3D-ML</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../arm.html">ARM support</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../docker.html">Docker</a></li>
</ul>
<p class="caption"><span class="caption-text">Tutorial</span></p>
<ul class="current">
<li class="toctree-l1"><a class="reference internal" href="../geometry/index.html">Geometry</a></li>
<li class="toctree-l1"><a class="reference internal" href="../t_geometry/index.html">Geometry (Tensor)</a></li>
<li class="toctree-l1"><a class="reference internal" href="../pipelines/index.html">Pipelines</a></li>
<li class="toctree-l1"><a class="reference internal" href="../t_pipelines/index.html">Pipelines (Tensor)</a></li>
<li class="toctree-l1"><a class="reference internal" href="../visualization/index.html">Visualization</a></li>
<li class="toctree-l1"><a class="reference internal" href="../core/index.html">Core</a></li>
<li class="toctree-l1"><a class="reference internal" href="../data/index.html">Dataset</a></li>
<li class="toctree-l1 current"><a class="reference internal" href="../reconstruction_system/index.html">Reconstruction system</a><ul class="current">
<li class="toctree-l2"><a class="reference internal" href="system_overview.5c.dela">System overview</a></li>
<li class="toctree-l2 current"><a class="current reference internal" href="#">Make fragments</a><ul>
<li class="toctree-l3"><a class="reference internal" href="#input-arguments">Input arguments</a></li>
<li class="toctree-l3"><a class="reference internal" href="#register-rgbd-image-pairs">Register RGBD image pairs</a></li>
<li class="toctree-l3"><a class="reference internal" href="#multiway-registration">Multiway registration</a></li>
<li class="toctree-l3"><a class="reference internal" href="#make-a-fragment">Make a fragment</a></li>
<li class="toctree-l3"><a class="reference internal" href="#batch-processing">Batch processing</a></li>
<li class="toctree-l3"><a class="reference internal" href="#results">Results</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="register_fragments.5e.d">Register fragments</a></li>
<li class="toctree-l2"><a class="reference internal" href="refine_registration.5f">Refine registration</a></li>
<li class="toctree-l2"><a class="reference internal" href="integrate_scene.60.dela">Integrate scene</a></li>
<li class="toctree-l2"><a class="reference internal" href="capture_your_own_datase">Capture your own dataset</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../t_reconstruction_system/index.html">Reconstruction system (Tensor)</a></li>
<li class="toctree-l1"><a class="reference internal" href="../sensor/index.html">Sensor</a></li>
<li class="toctree-l1"><a class="reference internal" href="../reference.html">Reference</a></li>
</ul>
<p class="caption"><span class="caption-text">Contribute</span></p>
<ul>
<li class="toctree-l1"><a class="reference internal" href="../../contribute/contribute.html">Contributing to Open3D</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../contribute/contribution_recipes.html">Contribution methods</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../contribute/styleguide.html">Open3D style guide</a></li>
</ul>
<p class="caption"><span class="caption-text">C++ API</span></p>
<ul>
<li class="toctree-l1"><a class="reference internal" href="../../cpp_api.html">C++ documentation</a></li>
</ul>
<p class="caption"><span class="caption-text">Python API</span></p>
<ul>
<li class="toctree-l1"><a class="reference internal" href="../../python_api/open3d.camera.html">open3d.camera</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../python_api/open3d.core.html">open3d.core</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../python_api/open3d.data.html">open3d.data</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../python_api/open3d.geometry.html">open3d.geometry</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../python_api/open3d.io.html">open3d.io</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../python_api/open3d.t.html">open3d.t</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../python_api/open3d.ml.html">open3d.ml</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../python_api/open3d.pipelines.html">open3d.pipelines</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../python_api/open3d.utility.html">open3d.utility</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../python_api/open3d.visualization.html">open3d.visualization</a></li>
</ul>
<p class="caption"><span class="caption-text">Python Examples</span></p>
<ul>
<li class="toctree-l1"><a class="reference internal" href="../../python_example/camera/index.html">Camera</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../python_example/geometry/index.html">Geometry</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../python_example/io/index.html">IO</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../python_example/pipelines/index.html">Pipelines</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../python_example/utility/index.html">Utility</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../python_example/visualization/index.html">Visualization</a></li>
</ul>

            
          
        </div>
      </div>
    </nav>

    <section data-toggle="wy-nav-shift" class="wy-nav-content-wrap">

      
      <nav class="wy-nav-top" aria-label="top navigation">
        
          <i data-toggle="wy-nav-top" class="fa fa-bars"></i>
          <a href="../../index-2.html">Open3D</a>
        
      </nav>


      <div class="wy-nav-content">
        
        <div class="rst-content">
        
          















<div role="navigation" aria-label="breadcrumbs navigation">

  <ul class="wy-breadcrumbs">
    
      <li><a href="../../index-2.html">Docs</a> &raquo;</li>
        
          <li><a href="../reconstruction_system/index.html">Reconstruction system</a> &raquo;</li>
        
      <li>Make fragments</li>
    
    
      <li class="wy-breadcrumbs-aside">
        
            
        
      </li>
    
  </ul>

  
  <hr/>
</div>
          <div role="main" class="document" itemscope="itemscope" itemtype="http://schema.org/Article">
           <div itemprop="articleBody">
            
  
<style>
/* CSS overrides for sphinx_rtd_theme */

/* 24px margin */
.nbinput.nblast.container,
.nboutput.nblast.container {
    margin-bottom: 19px;  /* padding has already 5px */
}

/* ... except between code cells! */
.nblast.container + .nbinput.container {
    margin-top: -19px;
}

.admonition > p:before {
    margin-right: 4px;  /* make room for the exclamation icon */
}

/* Fix math alignment, see https://github.com/rtfd/sphinx_rtd_theme/pull/686 */
.math {
    text-align: unset;
}
</style>
<div class="section" id="make-fragments">
<span id="reconstruction-system-make-fragments"></span><h1>Make fragments<a class="headerlink" href="#make-fragments" title="Permalink to this headline">¶</a></h1>
<p>The first step of the scene reconstruction system is to create fragments from
short RGBD sequences.</p>
<div class="section" id="input-arguments">
<h2>Input arguments<a class="headerlink" href="#input-arguments" title="Permalink to this headline">¶</a></h2>
<p>The script runs with <code class="docutils literal notranslate"><span class="pre">python</span> <span class="pre">run_system.py</span> <span class="pre">[config]</span> <span class="pre">--make</span></code>. In <code class="docutils literal notranslate"><span class="pre">[config]</span></code>,
<code class="docutils literal notranslate"><span class="pre">[&quot;path_dataset&quot;]</span></code> should have subfolders <code class="docutils literal notranslate"><span class="pre">image</span></code> and <code class="docutils literal notranslate"><span class="pre">depth</span></code> to store the
color images and depth images respectively. We assume the color images and the
depth images are synchronized and registered. In <code class="docutils literal notranslate"><span class="pre">[config]</span></code>, the optional
argument <code class="docutils literal notranslate"><span class="pre">[&quot;path_intrinsic&quot;]</span></code> specifies the path to a json file that stores
the camera intrinsic matrix (See
<a class="reference internal" href="../pipelines/rgbd_odometry.html#Read-camera-intrinsic"><span class="std std-ref">Read camera intrinsic</span></a> for
details). If it is not given, the PrimeSense factory setting is used instead.</p>
</div>
<div class="section" id="register-rgbd-image-pairs">
<span id="make-fragments-register-rgbd-image-pairs"></span><h2>Register RGBD image pairs<a class="headerlink" href="#register-rgbd-image-pairs" title="Permalink to this headline">¶</a></h2>
<div class="highlight-python notranslate"><div class="highlight"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre><span class="normal">46</span>
<span class="normal">47</span>
<span class="normal">48</span>
<span class="normal">49</span>
<span class="normal">50</span>
<span class="normal">51</span>
<span class="normal">52</span>
<span class="normal">53</span>
<span class="normal">54</span>
<span class="normal">55</span>
<span class="normal">56</span>
<span class="normal">57</span>
<span class="normal">58</span>
<span class="normal">59</span>
<span class="normal">60</span>
<span class="normal">61</span>
<span class="normal">62</span>
<span class="normal">63</span>
<span class="normal">64</span>
<span class="normal">65</span>
<span class="normal">66</span>
<span class="normal">67</span>
<span class="normal">68</span>
<span class="normal">69</span>
<span class="normal">70</span>
<span class="normal">71</span>
<span class="normal">72</span>
<span class="normal">73</span>
<span class="normal">74</span>
<span class="normal">75</span>
<span class="normal">76</span></pre></div></td><td class="code"><div><pre><span></span>
                    <span class="n">o3d</span><span class="o">.</span><span class="n">pipelines</span><span class="o">.</span><span class="n">odometry</span><span class="o">.</span><span class="n">RGBDOdometryJacobianFromHybridTerm</span><span class="p">(),</span>
                    <span class="n">option</span><span class="p">)</span>
                <span class="k">return</span> <span class="p">[</span><span class="n">success</span><span class="p">,</span> <span class="n">trans</span><span class="p">,</span> <span class="n">info</span><span class="p">]</span>
        <span class="k">return</span> <span class="p">[</span><span class="kc">False</span><span class="p">,</span> <span class="n">np</span><span class="o">.</span><span class="n">identity</span><span class="p">(</span><span class="mi">4</span><span class="p">),</span> <span class="n">np</span><span class="o">.</span><span class="n">identity</span><span class="p">(</span><span class="mi">6</span><span class="p">)]</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="n">odo_init</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">identity</span><span class="p">(</span><span class="mi">4</span><span class="p">)</span>
        <span class="p">[</span><span class="n">success</span><span class="p">,</span> <span class="n">trans</span><span class="p">,</span> <span class="n">info</span><span class="p">]</span> <span class="o">=</span> <span class="n">o3d</span><span class="o">.</span><span class="n">pipelines</span><span class="o">.</span><span class="n">odometry</span><span class="o">.</span><span class="n">compute_rgbd_odometry</span><span class="p">(</span>
            <span class="n">source_rgbd_image</span><span class="p">,</span> <span class="n">target_rgbd_image</span><span class="p">,</span> <span class="n">intrinsic</span><span class="p">,</span> <span class="n">odo_init</span><span class="p">,</span>
            <span class="n">o3d</span><span class="o">.</span><span class="n">pipelines</span><span class="o">.</span><span class="n">odometry</span><span class="o">.</span><span class="n">RGBDOdometryJacobianFromHybridTerm</span><span class="p">(),</span> <span class="n">option</span><span class="p">)</span>
        <span class="k">return</span> <span class="p">[</span><span class="n">success</span><span class="p">,</span> <span class="n">trans</span><span class="p">,</span> <span class="n">info</span><span class="p">]</span>


<span class="k">def</span> <span class="nf">make_posegraph_for_fragment</span><span class="p">(</span><span class="n">path_dataset</span><span class="p">,</span> <span class="n">sid</span><span class="p">,</span> <span class="n">eid</span><span class="p">,</span> <span class="n">color_files</span><span class="p">,</span>
                                <span class="n">depth_files</span><span class="p">,</span> <span class="n">fragment_id</span><span class="p">,</span> <span class="n">n_fragments</span><span class="p">,</span>
                                <span class="n">intrinsic</span><span class="p">,</span> <span class="n">with_opencv</span><span class="p">,</span> <span class="n">config</span><span class="p">):</span>
    <span class="n">o3d</span><span class="o">.</span><span class="n">utility</span><span class="o">.</span><span class="n">set_verbosity_level</span><span class="p">(</span><span class="n">o3d</span><span class="o">.</span><span class="n">utility</span><span class="o">.</span><span class="n">VerbosityLevel</span><span class="o">.</span><span class="n">Error</span><span class="p">)</span>
    <span class="n">pose_graph</span> <span class="o">=</span> <span class="n">o3d</span><span class="o">.</span><span class="n">pipelines</span><span class="o">.</span><span class="n">registration</span><span class="o">.</span><span class="n">PoseGraph</span><span class="p">()</span>
    <span class="n">trans_odometry</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">identity</span><span class="p">(</span><span class="mi">4</span><span class="p">)</span>
    <span class="n">pose_graph</span><span class="o">.</span><span class="n">nodes</span><span class="o">.</span><span class="n">append</span><span class="p">(</span>
        <span class="n">o3d</span><span class="o">.</span><span class="n">pipelines</span><span class="o">.</span><span class="n">registration</span><span class="o">.</span><span class="n">PoseGraphNode</span><span class="p">(</span><span class="n">trans_odometry</span><span class="p">))</span>
    <span class="k">for</span> <span class="n">s</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">sid</span><span class="p">,</span> <span class="n">eid</span><span class="p">):</span>
        <span class="k">for</span> <span class="n">t</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">s</span> <span class="o">+</span> <span class="mi">1</span><span class="p">,</span> <span class="n">eid</span><span class="p">):</span>
            <span class="c1"># odometry</span>
            <span class="k">if</span> <span class="n">t</span> <span class="o">==</span> <span class="n">s</span> <span class="o">+</span> <span class="mi">1</span><span class="p">:</span>
                <span class="nb">print</span><span class="p">(</span>
                    <span class="s2">&quot;Fragment </span><span class="si">%03d</span><span class="s2"> / </span><span class="si">%03d</span><span class="s2"> :: RGBD matching between frame : </span><span class="si">%d</span><span class="s2"> and </span><span class="si">%d</span><span class="s2">&quot;</span>
                    <span class="o">%</span> <span class="p">(</span><span class="n">fragment_id</span><span class="p">,</span> <span class="n">n_fragments</span> <span class="o">-</span> <span class="mi">1</span><span class="p">,</span> <span class="n">s</span><span class="p">,</span> <span class="n">t</span><span class="p">))</span>
                <span class="p">[</span><span class="n">success</span><span class="p">,</span> <span class="n">trans</span><span class="p">,</span>
                 <span class="n">info</span><span class="p">]</span> <span class="o">=</span> <span class="n">register_one_rgbd_pair</span><span class="p">(</span><span class="n">s</span><span class="p">,</span> <span class="n">t</span><span class="p">,</span> <span class="n">color_files</span><span class="p">,</span> <span class="n">depth_files</span><span class="p">,</span>
                                                <span class="n">intrinsic</span><span class="p">,</span> <span class="n">with_opencv</span><span class="p">,</span> <span class="n">config</span><span class="p">)</span>
</pre></div></td></tr></table></div>
</div>
<p>The function reads a pair of RGBD images and registers the <code class="docutils literal notranslate"><span class="pre">source_rgbd_image</span></code>
to the <code class="docutils literal notranslate"><span class="pre">target_rgbd_image</span></code>. The Open3D function <code class="docutils literal notranslate"><span class="pre">compute_rgbd_odometry</span></code> is
called to align the RGBD images. For adjacent RGBD images, an identity matrix is
used as the initialization. For non-adjacent RGBD images, wide baseline matching
is used as the initialization. In particular, the function <code class="docutils literal notranslate"><span class="pre">pose_estimation</span></code>
computes OpenCV ORB feature to match sparse features over wide baseline images,
then performs 5-point RANSAC to estimate a rough alignment, which is used as
the initialization of <code class="docutils literal notranslate"><span class="pre">compute_rgbd_odometry</span></code>.</p>
</div>
<div class="section" id="multiway-registration">
<span id="make-fragments-make-a-posegraph"></span><h2>Multiway registration<a class="headerlink" href="#multiway-registration" title="Permalink to this headline">¶</a></h2>
<div class="highlight-python notranslate"><div class="highlight"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre><span class="normal"> 76</span>
<span class="normal"> 77</span>
<span class="normal"> 78</span>
<span class="normal"> 79</span>
<span class="normal"> 80</span>
<span class="normal"> 81</span>
<span class="normal"> 82</span>
<span class="normal"> 83</span>
<span class="normal"> 84</span>
<span class="normal"> 85</span>
<span class="normal"> 86</span>
<span class="normal"> 87</span>
<span class="normal"> 88</span>
<span class="normal"> 89</span>
<span class="normal"> 90</span>
<span class="normal"> 91</span>
<span class="normal"> 92</span>
<span class="normal"> 93</span>
<span class="normal"> 94</span>
<span class="normal"> 95</span>
<span class="normal"> 96</span>
<span class="normal"> 97</span>
<span class="normal"> 98</span>
<span class="normal"> 99</span>
<span class="normal">100</span>
<span class="normal">101</span>
<span class="normal">102</span>
<span class="normal">103</span>
<span class="normal">104</span>
<span class="normal">105</span>
<span class="normal">106</span>
<span class="normal">107</span>
<span class="normal">108</span>
<span class="normal">109</span>
<span class="normal">110</span>
<span class="normal">111</span>
<span class="normal">112</span>
<span class="normal">113</span>
<span class="normal">114</span>
<span class="normal">115</span>
<span class="normal">116</span>
<span class="normal">117</span>
<span class="normal">118</span>
<span class="normal">119</span>
<span class="normal">120</span>
<span class="normal">121</span>
<span class="normal">122</span>
<span class="normal">123</span></pre></div></td><td class="code"><div><pre><span></span>
                <span class="n">trans_odometry</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">dot</span><span class="p">(</span><span class="n">trans</span><span class="p">,</span> <span class="n">trans_odometry</span><span class="p">)</span>
                <span class="n">trans_odometry_inv</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">linalg</span><span class="o">.</span><span class="n">inv</span><span class="p">(</span><span class="n">trans_odometry</span><span class="p">)</span>
                <span class="n">pose_graph</span><span class="o">.</span><span class="n">nodes</span><span class="o">.</span><span class="n">append</span><span class="p">(</span>
                    <span class="n">o3d</span><span class="o">.</span><span class="n">pipelines</span><span class="o">.</span><span class="n">registration</span><span class="o">.</span><span class="n">PoseGraphNode</span><span class="p">(</span>
                        <span class="n">trans_odometry_inv</span><span class="p">))</span>
                <span class="n">pose_graph</span><span class="o">.</span><span class="n">edges</span><span class="o">.</span><span class="n">append</span><span class="p">(</span>
                    <span class="n">o3d</span><span class="o">.</span><span class="n">pipelines</span><span class="o">.</span><span class="n">registration</span><span class="o">.</span><span class="n">PoseGraphEdge</span><span class="p">(</span><span class="n">s</span> <span class="o">-</span> <span class="n">sid</span><span class="p">,</span>
                                                             <span class="n">t</span> <span class="o">-</span> <span class="n">sid</span><span class="p">,</span>
                                                             <span class="n">trans</span><span class="p">,</span>
                                                             <span class="n">info</span><span class="p">,</span>
                                                             <span class="n">uncertain</span><span class="o">=</span><span class="kc">False</span><span class="p">))</span>

            <span class="c1"># keyframe loop closure</span>
            <span class="k">if</span> <span class="n">s</span> <span class="o">%</span> <span class="n">config</span><span class="p">[</span><span class="s1">&#39;n_keyframes_per_n_frame&#39;</span><span class="p">]</span> <span class="o">==</span> <span class="mi">0</span> \
                    <span class="ow">and</span> <span class="n">t</span> <span class="o">%</span> <span class="n">config</span><span class="p">[</span><span class="s1">&#39;n_keyframes_per_n_frame&#39;</span><span class="p">]</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
                <span class="nb">print</span><span class="p">(</span>
                    <span class="s2">&quot;Fragment </span><span class="si">%03d</span><span class="s2"> / </span><span class="si">%03d</span><span class="s2"> :: RGBD matching between frame : </span><span class="si">%d</span><span class="s2"> and </span><span class="si">%d</span><span class="s2">&quot;</span>
                    <span class="o">%</span> <span class="p">(</span><span class="n">fragment_id</span><span class="p">,</span> <span class="n">n_fragments</span> <span class="o">-</span> <span class="mi">1</span><span class="p">,</span> <span class="n">s</span><span class="p">,</span> <span class="n">t</span><span class="p">))</span>
                <span class="p">[</span><span class="n">success</span><span class="p">,</span> <span class="n">trans</span><span class="p">,</span>
                 <span class="n">info</span><span class="p">]</span> <span class="o">=</span> <span class="n">register_one_rgbd_pair</span><span class="p">(</span><span class="n">s</span><span class="p">,</span> <span class="n">t</span><span class="p">,</span> <span class="n">color_files</span><span class="p">,</span> <span class="n">depth_files</span><span class="p">,</span>
                                                <span class="n">intrinsic</span><span class="p">,</span> <span class="n">with_opencv</span><span class="p">,</span> <span class="n">config</span><span class="p">)</span>
                <span class="k">if</span> <span class="n">success</span><span class="p">:</span>
                    <span class="n">pose_graph</span><span class="o">.</span><span class="n">edges</span><span class="o">.</span><span class="n">append</span><span class="p">(</span>
                        <span class="n">o3d</span><span class="o">.</span><span class="n">pipelines</span><span class="o">.</span><span class="n">registration</span><span class="o">.</span><span class="n">PoseGraphEdge</span><span class="p">(</span>
                            <span class="n">s</span> <span class="o">-</span> <span class="n">sid</span><span class="p">,</span> <span class="n">t</span> <span class="o">-</span> <span class="n">sid</span><span class="p">,</span> <span class="n">trans</span><span class="p">,</span> <span class="n">info</span><span class="p">,</span> <span class="n">uncertain</span><span class="o">=</span><span class="kc">True</span><span class="p">))</span>
    <span class="n">o3d</span><span class="o">.</span><span class="n">io</span><span class="o">.</span><span class="n">write_pose_graph</span><span class="p">(</span>
        <span class="n">join</span><span class="p">(</span><span class="n">path_dataset</span><span class="p">,</span> <span class="n">config</span><span class="p">[</span><span class="s2">&quot;template_fragment_posegraph&quot;</span><span class="p">]</span> <span class="o">%</span> <span class="n">fragment_id</span><span class="p">),</span>
        <span class="n">pose_graph</span><span class="p">)</span>


<span class="k">def</span> <span class="nf">integrate_rgb_frames_for_fragment</span><span class="p">(</span><span class="n">color_files</span><span class="p">,</span> <span class="n">depth_files</span><span class="p">,</span> <span class="n">fragment_id</span><span class="p">,</span>
                                      <span class="n">n_fragments</span><span class="p">,</span> <span class="n">pose_graph_name</span><span class="p">,</span> <span class="n">intrinsic</span><span class="p">,</span>
                                      <span class="n">config</span><span class="p">):</span>
    <span class="n">pose_graph</span> <span class="o">=</span> <span class="n">o3d</span><span class="o">.</span><span class="n">io</span><span class="o">.</span><span class="n">read_pose_graph</span><span class="p">(</span><span class="n">pose_graph_name</span><span class="p">)</span>
    <span class="n">volume</span> <span class="o">=</span> <span class="n">o3d</span><span class="o">.</span><span class="n">pipelines</span><span class="o">.</span><span class="n">integration</span><span class="o">.</span><span class="n">ScalableTSDFVolume</span><span class="p">(</span>
        <span class="n">voxel_length</span><span class="o">=</span><span class="n">config</span><span class="p">[</span><span class="s2">&quot;tsdf_cubic_size&quot;</span><span class="p">]</span> <span class="o">/</span> <span class="mf">512.0</span><span class="p">,</span>
        <span class="n">sdf_trunc</span><span class="o">=</span><span class="mf">0.04</span><span class="p">,</span>
        <span class="n">color_type</span><span class="o">=</span><span class="n">o3d</span><span class="o">.</span><span class="n">pipelines</span><span class="o">.</span><span class="n">integration</span><span class="o">.</span><span class="n">TSDFVolumeColorType</span><span class="o">.</span><span class="n">RGB8</span><span class="p">)</span>
    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">pose_graph</span><span class="o">.</span><span class="n">nodes</span><span class="p">)):</span>
        <span class="n">i_abs</span> <span class="o">=</span> <span class="n">fragment_id</span> <span class="o">*</span> <span class="n">config</span><span class="p">[</span><span class="s1">&#39;n_frames_per_fragment&#39;</span><span class="p">]</span> <span class="o">+</span> <span class="n">i</span>
        <span class="nb">print</span><span class="p">(</span>
            <span class="s2">&quot;Fragment </span><span class="si">%03d</span><span class="s2"> / </span><span class="si">%03d</span><span class="s2"> :: integrate rgbd frame </span><span class="si">%d</span><span class="s2"> (</span><span class="si">%d</span><span class="s2"> of </span><span class="si">%d</span><span class="s2">).&quot;</span> <span class="o">%</span>
            <span class="p">(</span><span class="n">fragment_id</span><span class="p">,</span> <span class="n">n_fragments</span> <span class="o">-</span> <span class="mi">1</span><span class="p">,</span> <span class="n">i_abs</span><span class="p">,</span> <span class="n">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">pose_graph</span><span class="o">.</span><span class="n">nodes</span><span class="p">)))</span>
        <span class="n">rgbd</span> <span class="o">=</span> <span class="n">read_rgbd_image</span><span class="p">(</span><span class="n">color_files</span><span class="p">[</span><span class="n">i_abs</span><span class="p">],</span> <span class="n">depth_files</span><span class="p">[</span><span class="n">i_abs</span><span class="p">],</span> <span class="kc">False</span><span class="p">,</span>
                               <span class="n">config</span><span class="p">)</span>
        <span class="n">pose</span> <span class="o">=</span> <span class="n">pose_graph</span><span class="o">.</span><span class="n">nodes</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">.</span><span class="n">pose</span>
        <span class="n">volume</span><span class="o">.</span><span class="n">integrate</span><span class="p">(</span><span class="n">rgbd</span><span class="p">,</span> <span class="n">intrinsic</span><span class="p">,</span> <span class="n">np</span><span class="o">.</span><span class="n">linalg</span><span class="o">.</span><span class="n">inv</span><span class="p">(</span><span class="n">pose</span><span class="p">))</span>
</pre></div></td></tr></table></div>
</div>
<p>This script uses the technique demonstrated in
<a class="reference internal" href="../pipelines/multiway_registration.html"><span class="std std-ref">Multiway registration</span></a>. The function
<code class="docutils literal notranslate"><span class="pre">make_posegraph_for_fragment</span></code> builds a pose graph for multiway registration of
all RGBD images in this sequence. Each graph node represents an RGBD image and
its pose which transforms the geometry to the global fragment space.
For efficiency, only key frames are used.</p>
<p>Once a pose graph is created, multiway registration is performed by calling the
function <code class="docutils literal notranslate"><span class="pre">optimize_posegraph_for_fragment</span></code>.</p>
<div class="highlight-python notranslate"><div class="highlight"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre><span class="normal">51</span>
<span class="normal">52</span>
<span class="normal">53</span>
<span class="normal">54</span>
<span class="normal">55</span>
<span class="normal">56</span>
<span class="normal">57</span>
<span class="normal">58</span>
<span class="normal">59</span>
<span class="normal">60</span>
<span class="normal">61</span>
<span class="normal">62</span>
<span class="normal">63</span></pre></div></td><td class="code"><div><pre><span></span>    <span class="n">pose_graph</span> <span class="o">=</span> <span class="n">o3d</span><span class="o">.</span><span class="n">io</span><span class="o">.</span><span class="n">read_pose_graph</span><span class="p">(</span><span class="n">pose_graph_name</span><span class="p">)</span>
            <span class="n">preference_loop_closure</span> <span class="o">=</span> \
            <span class="n">config</span><span class="p">[</span><span class="s2">&quot;preference_loop_closure_registration&quot;</span><span class="p">])</span>


<span class="k">def</span> <span class="nf">optimize_posegraph_for_refined_scene</span><span class="p">(</span><span class="n">path_dataset</span><span class="p">,</span> <span class="n">config</span><span class="p">):</span>
    <span class="n">pose_graph_name</span> <span class="o">=</span> <span class="n">join</span><span class="p">(</span><span class="n">path_dataset</span><span class="p">,</span> <span class="n">config</span><span class="p">[</span><span class="s2">&quot;template_refined_posegraph&quot;</span><span class="p">])</span>
    <span class="n">pose_graph_optimized_name</span> <span class="o">=</span> <span class="n">join</span><span class="p">(</span>
        <span class="n">path_dataset</span><span class="p">,</span> <span class="n">config</span><span class="p">[</span><span class="s2">&quot;template_refined_posegraph_optimized&quot;</span><span class="p">])</span>
    <span class="n">run_posegraph_optimization</span><span class="p">(</span><span class="n">pose_graph_name</span><span class="p">,</span> <span class="n">pose_graph_optimized_name</span><span class="p">,</span>
            <span class="n">max_correspondence_distance</span> <span class="o">=</span> <span class="n">config</span><span class="p">[</span><span class="s2">&quot;voxel_size&quot;</span><span class="p">]</span> <span class="o">*</span> <span class="mf">1.4</span><span class="p">,</span>
            <span class="n">preference_loop_closure</span> <span class="o">=</span> \
            <span class="n">config</span><span class="p">[</span><span class="s2">&quot;preference_loop_closure_registration&quot;</span><span class="p">])</span>
</pre></div></td></tr></table></div>
</div>
<p>This function calls <code class="docutils literal notranslate"><span class="pre">global_optimization</span></code> to estimate poses of the RGBD images.</p>
</div>
<div class="section" id="make-a-fragment">
<span id="make-fragments-make-a-fragment"></span><h2>Make a fragment<a class="headerlink" href="#make-a-fragment" title="Permalink to this headline">¶</a></h2>
<div class="highlight-python notranslate"><div class="highlight"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre><span class="normal">124</span>
<span class="normal">125</span>
<span class="normal">126</span>
<span class="normal">127</span>
<span class="normal">128</span>
<span class="normal">129</span>
<span class="normal">130</span>
<span class="normal">131</span>
<span class="normal">132</span>
<span class="normal">133</span>
<span class="normal">134</span>
<span class="normal">135</span>
<span class="normal">136</span>
<span class="normal">137</span>
<span class="normal">138</span>
<span class="normal">139</span>
<span class="normal">140</span>
<span class="normal">141</span>
<span class="normal">142</span>
<span class="normal">143</span>
<span class="normal">144</span>
<span class="normal">145</span>
<span class="normal">146</span></pre></div></td><td class="code"><div><pre><span></span>
    <span class="n">mesh</span><span class="o">.</span><span class="n">compute_vertex_normals</span><span class="p">()</span>
    <span class="k">return</span> <span class="n">mesh</span>


<span class="k">def</span> <span class="nf">make_pointcloud_for_fragment</span><span class="p">(</span><span class="n">path_dataset</span><span class="p">,</span> <span class="n">color_files</span><span class="p">,</span> <span class="n">depth_files</span><span class="p">,</span>
                                 <span class="n">fragment_id</span><span class="p">,</span> <span class="n">n_fragments</span><span class="p">,</span> <span class="n">intrinsic</span><span class="p">,</span> <span class="n">config</span><span class="p">):</span>
    <span class="n">mesh</span> <span class="o">=</span> <span class="n">integrate_rgb_frames_for_fragment</span><span class="p">(</span>
        <span class="n">color_files</span><span class="p">,</span> <span class="n">depth_files</span><span class="p">,</span> <span class="n">fragment_id</span><span class="p">,</span> <span class="n">n_fragments</span><span class="p">,</span>
        <span class="n">join</span><span class="p">(</span><span class="n">path_dataset</span><span class="p">,</span>
             <span class="n">config</span><span class="p">[</span><span class="s2">&quot;template_fragment_posegraph_optimized&quot;</span><span class="p">]</span> <span class="o">%</span> <span class="n">fragment_id</span><span class="p">),</span>
        <span class="n">intrinsic</span><span class="p">,</span> <span class="n">config</span><span class="p">)</span>
    <span class="n">pcd</span> <span class="o">=</span> <span class="n">o3d</span><span class="o">.</span><span class="n">geometry</span><span class="o">.</span><span class="n">PointCloud</span><span class="p">()</span>
    <span class="n">pcd</span><span class="o">.</span><span class="n">points</span> <span class="o">=</span> <span class="n">mesh</span><span class="o">.</span><span class="n">vertices</span>
    <span class="n">pcd</span><span class="o">.</span><span class="n">colors</span> <span class="o">=</span> <span class="n">mesh</span><span class="o">.</span><span class="n">vertex_colors</span>
    <span class="n">pcd_name</span> <span class="o">=</span> <span class="n">join</span><span class="p">(</span><span class="n">path_dataset</span><span class="p">,</span>
                    <span class="n">config</span><span class="p">[</span><span class="s2">&quot;template_fragment_pointcloud&quot;</span><span class="p">]</span> <span class="o">%</span> <span class="n">fragment_id</span><span class="p">)</span>
    <span class="n">o3d</span><span class="o">.</span><span class="n">io</span><span class="o">.</span><span class="n">write_point_cloud</span><span class="p">(</span><span class="n">pcd_name</span><span class="p">,</span> <span class="n">pcd</span><span class="p">,</span> <span class="kc">False</span><span class="p">,</span> <span class="kc">True</span><span class="p">)</span>


<span class="k">def</span> <span class="nf">process_single_fragment</span><span class="p">(</span><span class="n">fragment_id</span><span class="p">,</span> <span class="n">color_files</span><span class="p">,</span> <span class="n">depth_files</span><span class="p">,</span> <span class="n">n_files</span><span class="p">,</span>
                            <span class="n">n_fragments</span><span class="p">,</span> <span class="n">config</span><span class="p">):</span>
    <span class="k">if</span> <span class="n">config</span><span class="p">[</span><span class="s2">&quot;path_intrinsic&quot;</span><span class="p">]:</span>
</pre></div></td></tr></table></div>
</div>
<p>Once the poses are estimates, <a class="reference internal" href="../pipelines/rgbd_integration.html"><span class="std std-ref">RGBD integration</span></a>
is used to reconstruct a colored fragment from each RGBD sequence.</p>
</div>
<div class="section" id="batch-processing">
<h2>Batch processing<a class="headerlink" href="#batch-processing" title="Permalink to this headline">¶</a></h2>
<div class="highlight-python notranslate"><div class="highlight"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre><span class="normal">181</span>
<span class="normal">182</span>
<span class="normal">183</span>
<span class="normal">184</span>
<span class="normal">185</span></pre></div></td><td class="code"><div><pre><span></span>
    <span class="k">else</span><span class="p">:</span>
        <span class="k">for</span> <span class="n">fragment_id</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">n_fragments</span><span class="p">):</span>
            <span class="n">process_single_fragment</span><span class="p">(</span><span class="n">fragment_id</span><span class="p">,</span> <span class="n">color_files</span><span class="p">,</span> <span class="n">depth_files</span><span class="p">,</span>
                                    <span class="n">n_files</span><span class="p">,</span> <span class="n">n_fragments</span><span class="p">,</span> <span class="n">config</span><span class="p">)</span>
</pre></div></td></tr></table></div>
</div>
<p>The main function calls each individual function explained above.</p>
</div>
<div class="section" id="results">
<span id="reconstruction-system-make-fragments-results"></span><h2>Results<a class="headerlink" href="#results" title="Permalink to this headline">¶</a></h2>
<div class="highlight-sh notranslate"><div class="highlight"><pre><span></span>Fragment<span class="w"> </span><span class="m">000</span><span class="w"> </span>/<span class="w"> </span><span class="m">013</span><span class="w"> </span>::<span class="w"> </span>RGBD<span class="w"> </span>matching<span class="w"> </span>between<span class="w"> </span>frame<span class="w"> </span>:<span class="w"> </span><span class="m">0</span><span class="w"> </span>and<span class="w"> </span><span class="m">1</span>
Fragment<span class="w"> </span><span class="m">000</span><span class="w"> </span>/<span class="w"> </span><span class="m">013</span><span class="w"> </span>::<span class="w"> </span>RGBD<span class="w"> </span>matching<span class="w"> </span>between<span class="w"> </span>frame<span class="w"> </span>:<span class="w"> </span><span class="m">0</span><span class="w"> </span>and<span class="w"> </span><span class="m">5</span>
Fragment<span class="w"> </span><span class="m">000</span><span class="w"> </span>/<span class="w"> </span><span class="m">013</span><span class="w"> </span>::<span class="w"> </span>RGBD<span class="w"> </span>matching<span class="w"> </span>between<span class="w"> </span>frame<span class="w"> </span>:<span class="w"> </span><span class="m">0</span><span class="w"> </span>and<span class="w"> </span><span class="m">10</span>
Fragment<span class="w"> </span><span class="m">000</span><span class="w"> </span>/<span class="w"> </span><span class="m">013</span><span class="w"> </span>::<span class="w"> </span>RGBD<span class="w"> </span>matching<span class="w"> </span>between<span class="w"> </span>frame<span class="w"> </span>:<span class="w"> </span><span class="m">0</span><span class="w"> </span>and<span class="w"> </span><span class="m">15</span>
Fragment<span class="w"> </span><span class="m">000</span><span class="w"> </span>/<span class="w"> </span><span class="m">013</span><span class="w"> </span>::<span class="w"> </span>RGBD<span class="w"> </span>matching<span class="w"> </span>between<span class="w"> </span>frame<span class="w"> </span>:<span class="w"> </span><span class="m">0</span><span class="w"> </span>and<span class="w"> </span><span class="m">20</span>
:
Fragment<span class="w"> </span><span class="m">000</span><span class="w"> </span>/<span class="w"> </span><span class="m">013</span><span class="w"> </span>::<span class="w"> </span>RGBD<span class="w"> </span>matching<span class="w"> </span>between<span class="w"> </span>frame<span class="w"> </span>:<span class="w"> </span><span class="m">95</span><span class="w"> </span>and<span class="w"> </span><span class="m">96</span>
Fragment<span class="w"> </span><span class="m">000</span><span class="w"> </span>/<span class="w"> </span><span class="m">013</span><span class="w"> </span>::<span class="w"> </span>RGBD<span class="w"> </span>matching<span class="w"> </span>between<span class="w"> </span>frame<span class="w"> </span>:<span class="w"> </span><span class="m">96</span><span class="w"> </span>and<span class="w"> </span><span class="m">97</span>
Fragment<span class="w"> </span><span class="m">000</span><span class="w"> </span>/<span class="w"> </span><span class="m">013</span><span class="w"> </span>::<span class="w"> </span>RGBD<span class="w"> </span>matching<span class="w"> </span>between<span class="w"> </span>frame<span class="w"> </span>:<span class="w"> </span><span class="m">97</span><span class="w"> </span>and<span class="w"> </span><span class="m">98</span>
Fragment<span class="w"> </span><span class="m">000</span><span class="w"> </span>/<span class="w"> </span><span class="m">013</span><span class="w"> </span>::<span class="w"> </span>RGBD<span class="w"> </span>matching<span class="w"> </span>between<span class="w"> </span>frame<span class="w"> </span>:<span class="w"> </span><span class="m">98</span><span class="w"> </span>and<span class="w"> </span><span class="m">99</span>
</pre></div>
</div>
<p>The following is a log from <code class="docutils literal notranslate"><span class="pre">optimize_posegraph_for_fragment</span></code>.</p>
<div class="highlight-sh notranslate"><div class="highlight"><pre><span></span><span class="o">[</span>GlobalOptimizationLM<span class="o">]</span><span class="w"> </span>Optimizing<span class="w"> </span>PoseGraph<span class="w"> </span>having<span class="w"> </span><span class="m">100</span><span class="w"> </span>nodes<span class="w"> </span>and<span class="w"> </span><span class="m">195</span><span class="w"> </span>edges.
Line<span class="w"> </span>process<span class="w"> </span>weight<span class="w"> </span>:<span class="w"> </span><span class="m">389</span>.309502
<span class="o">[</span>Initial<span class="w">     </span><span class="o">]</span><span class="w"> </span>residual<span class="w"> </span>:<span class="w"> </span><span class="m">3</span>.223357e+05,<span class="w"> </span>lambda<span class="w"> </span>:<span class="w"> </span><span class="m">1</span>.771814e+02
<span class="o">[</span>Iteration<span class="w"> </span><span class="m">00</span><span class="o">]</span><span class="w"> </span>residual<span class="w"> </span>:<span class="w"> </span><span class="m">1</span>.721845e+04,<span class="w"> </span>valid<span class="w"> </span>edges<span class="w"> </span>:<span class="w"> </span><span class="m">157</span>,<span class="w"> </span><span class="nb">time</span><span class="w"> </span>:<span class="w"> </span><span class="m">0</span>.022<span class="w"> </span>sec.
<span class="o">[</span>Iteration<span class="w"> </span><span class="m">01</span><span class="o">]</span><span class="w"> </span>residual<span class="w"> </span>:<span class="w"> </span><span class="m">1</span>.350251e+04,<span class="w"> </span>valid<span class="w"> </span>edges<span class="w"> </span>:<span class="w"> </span><span class="m">168</span>,<span class="w"> </span><span class="nb">time</span><span class="w"> </span>:<span class="w"> </span><span class="m">0</span>.017<span class="w"> </span>sec.
:
<span class="o">[</span>Iteration<span class="w"> </span><span class="m">32</span><span class="o">]</span><span class="w"> </span>residual<span class="w"> </span>:<span class="w"> </span><span class="m">9</span>.779118e+03,<span class="w"> </span>valid<span class="w"> </span>edges<span class="w"> </span>:<span class="w"> </span><span class="m">179</span>,<span class="w"> </span><span class="nb">time</span><span class="w"> </span>:<span class="w"> </span><span class="m">0</span>.013<span class="w"> </span>sec.
Current_residual<span class="w"> </span>-<span class="w"> </span>new_residual<span class="w"> </span>&lt;<span class="w"> </span><span class="m">1</span>.000000e-06<span class="w"> </span>*<span class="w"> </span>current_residual
<span class="o">[</span>GlobalOptimizationLM<span class="o">]</span><span class="w"> </span>total<span class="w"> </span><span class="nb">time</span><span class="w"> </span>:<span class="w"> </span><span class="m">0</span>.519<span class="w"> </span>sec.
<span class="o">[</span>GlobalOptimizationLM<span class="o">]</span><span class="w"> </span>Optimizing<span class="w"> </span>PoseGraph<span class="w"> </span>having<span class="w"> </span><span class="m">100</span><span class="w"> </span>nodes<span class="w"> </span>and<span class="w"> </span><span class="m">179</span><span class="w"> </span>edges.
Line<span class="w"> </span>process<span class="w"> </span>weight<span class="w"> </span>:<span class="w"> </span><span class="m">398</span>.292104
<span class="o">[</span>Initial<span class="w">     </span><span class="o">]</span><span class="w"> </span>residual<span class="w"> </span>:<span class="w"> </span><span class="m">5</span>.120047e+03,<span class="w"> </span>lambda<span class="w"> </span>:<span class="w"> </span><span class="m">2</span>.565362e+02
<span class="o">[</span>Iteration<span class="w"> </span><span class="m">00</span><span class="o">]</span><span class="w"> </span>residual<span class="w"> </span>:<span class="w"> </span><span class="m">5</span>.064539e+03,<span class="w"> </span>valid<span class="w"> </span>edges<span class="w"> </span>:<span class="w"> </span><span class="m">179</span>,<span class="w"> </span><span class="nb">time</span><span class="w"> </span>:<span class="w"> </span><span class="m">0</span>.014<span class="w"> </span>sec.
<span class="o">[</span>Iteration<span class="w"> </span><span class="m">01</span><span class="o">]</span><span class="w"> </span>residual<span class="w"> </span>:<span class="w"> </span><span class="m">5</span>.037665e+03,<span class="w"> </span>valid<span class="w"> </span>edges<span class="w"> </span>:<span class="w"> </span><span class="m">178</span>,<span class="w"> </span><span class="nb">time</span><span class="w"> </span>:<span class="w"> </span><span class="m">0</span>.015<span class="w"> </span>sec.
:
<span class="o">[</span>Iteration<span class="w"> </span><span class="m">11</span><span class="o">]</span><span class="w"> </span>residual<span class="w"> </span>:<span class="w"> </span><span class="m">5</span>.017307e+03,<span class="w"> </span>valid<span class="w"> </span>edges<span class="w"> </span>:<span class="w"> </span><span class="m">177</span>,<span class="w"> </span><span class="nb">time</span><span class="w"> </span>:<span class="w"> </span><span class="m">0</span>.013<span class="w"> </span>sec.
Current_residual<span class="w"> </span>-<span class="w"> </span>new_residual<span class="w"> </span>&lt;<span class="w"> </span><span class="m">1</span>.000000e-06<span class="w"> </span>*<span class="w"> </span>current_residual
<span class="o">[</span>GlobalOptimizationLM<span class="o">]</span><span class="w"> </span>total<span class="w"> </span><span class="nb">time</span><span class="w"> </span>:<span class="w"> </span><span class="m">0</span>.197<span class="w"> </span>sec.
CompensateReferencePoseGraphNode<span class="w"> </span>:<span class="w"> </span>reference<span class="w"> </span>:<span class="w"> </span><span class="m">0</span>
</pre></div>
</div>
<p>The following is a log from <code class="docutils literal notranslate"><span class="pre">integrate_rgb_frames_for_fragment</span></code>.</p>
<div class="highlight-sh notranslate"><div class="highlight"><pre><span></span>Fragment<span class="w"> </span><span class="m">000</span><span class="w"> </span>/<span class="w"> </span><span class="m">013</span><span class="w"> </span>::<span class="w"> </span>integrate<span class="w"> </span>rgbd<span class="w"> </span>frame<span class="w"> </span><span class="m">0</span><span class="w"> </span><span class="o">(</span><span class="m">1</span><span class="w"> </span>of<span class="w"> </span><span class="m">100</span><span class="o">)</span>.
Fragment<span class="w"> </span><span class="m">000</span><span class="w"> </span>/<span class="w"> </span><span class="m">013</span><span class="w"> </span>::<span class="w"> </span>integrate<span class="w"> </span>rgbd<span class="w"> </span>frame<span class="w"> </span><span class="m">1</span><span class="w"> </span><span class="o">(</span><span class="m">2</span><span class="w"> </span>of<span class="w"> </span><span class="m">100</span><span class="o">)</span>.
Fragment<span class="w"> </span><span class="m">000</span><span class="w"> </span>/<span class="w"> </span><span class="m">013</span><span class="w"> </span>::<span class="w"> </span>integrate<span class="w"> </span>rgbd<span class="w"> </span>frame<span class="w"> </span><span class="m">2</span><span class="w"> </span><span class="o">(</span><span class="m">3</span><span class="w"> </span>of<span class="w"> </span><span class="m">100</span><span class="o">)</span>.
:
Fragment<span class="w"> </span><span class="m">000</span><span class="w"> </span>/<span class="w"> </span><span class="m">013</span><span class="w"> </span>::<span class="w"> </span>integrate<span class="w"> </span>rgbd<span class="w"> </span>frame<span class="w"> </span><span class="m">97</span><span class="w"> </span><span class="o">(</span><span class="m">98</span><span class="w"> </span>of<span class="w"> </span><span class="m">100</span><span class="o">)</span>.
Fragment<span class="w"> </span><span class="m">000</span><span class="w"> </span>/<span class="w"> </span><span class="m">013</span><span class="w"> </span>::<span class="w"> </span>integrate<span class="w"> </span>rgbd<span class="w"> </span>frame<span class="w"> </span><span class="m">98</span><span class="w"> </span><span class="o">(</span><span class="m">99</span><span class="w"> </span>of<span class="w"> </span><span class="m">100</span><span class="o">)</span>.
Fragment<span class="w"> </span><span class="m">000</span><span class="w"> </span>/<span class="w"> </span><span class="m">013</span><span class="w"> </span>::<span class="w"> </span>integrate<span class="w"> </span>rgbd<span class="w"> </span>frame<span class="w"> </span><span class="m">99</span><span class="w"> </span><span class="o">(</span><span class="m">100</span><span class="w"> </span>of<span class="w"> </span><span class="m">100</span><span class="o">)</span>.
</pre></div>
</div>
<p>The following images show some of the fragments made by this script.</p>
<a class="reference internal image-reference" href="../../_images/fragment_0.png"><img alt="../../_images/fragment_0.png" src="../../_images/fragment_0.png" style="width: 325px;" /></a>
<a class="reference internal image-reference" href="../../_images/fragment_1.png"><img alt="../../_images/fragment_1.png" src="../../_images/fragment_1.png" style="width: 325px;" /></a>
<a class="reference internal image-reference" href="../../_images/fragment_2.png"><img alt="../../_images/fragment_2.png" src="../../_images/fragment_2.png" style="width: 325px;" /></a>
<a class="reference internal image-reference" href="../../_images/fragment_3.png"><img alt="../../_images/fragment_3.png" src="../../_images/fragment_3.png" style="width: 325px;" /></a>
</div>
</div>


           </div>
           
          </div>
          <footer>
  
    <div class="rst-footer-buttons" role="navigation" aria-label="footer navigation">
      
        <a href="register_fragments.5e.d" class="btn btn-neutral float-right" title="Register fragments" accesskey="n" rel="next">Next <span class="fa fa-arrow-circle-right"></span></a>
      
      
        <a href="system_overview.5c.dela" class="btn btn-neutral float-left" title="System overview" accesskey="p" rel="prev"><span class="fa fa-arrow-circle-left"></span> Previous</a>
      
    </div>
  

  <hr/>

  <div role="contentinfo">
    <p>
        &copy; Copyright 2018 - 2021, www.open3d.org

    </p>
  </div>
  Built with <a href="http://sphinx-doc.org/">Sphinx</a> using a <a href="https://github.com/rtfd/sphinx_rtd_theme">theme</a> provided by <a href="https://readthedocs.org/">Read the Docs</a>. 

</footer>

        </div>
      </div>

    </section>

  </div>
  
<div class="rst-versions" data-toggle="rst-versions" role="note" aria-label="versions">
<span class="rst-current-version" data-toggle="rst-current-version">
    <span class="fa fa-book"> Docs version</span>
    0.17.0
    <span class="fa fa-caret-down"></span>
</span>

<!-- A hack to include an external page to get around CORS policy -->
<!-- https://stackoverflow.com/a/15250208/1255535 -->
<div class="rst-other-versions">
    <dl>
    <dt>Versions</dt>
        <dd><ul>
            <script src="../../../versions.js"></script>
        </ul></dd>
    </dl>
</div>

  <script type="text/javascript">
      jQuery(function () {
          SphinxRtdTheme.Navigation.enable(true);
      });
  </script>

  
  
    
   

</body>

<!-- Mirrored from www.open3d.org/docs/release/tutorial/reconstruction_system/make_fragments.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 10:47:12 GMT -->
</html>