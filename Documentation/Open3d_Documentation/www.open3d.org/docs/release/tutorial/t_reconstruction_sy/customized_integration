

<!DOCTYPE html>
<!--[if IE 8]><html class="no-js lt-ie9" lang="en" > <![endif]-->
<!--[if gt IE 8]><!--> <html class="no-js" lang="en" > <!--<![endif]-->

<!-- Mirrored from www.open3d.org/docs/release/tutorial/t_reconstruction_system/customized_integration.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 10:52:21 GMT -->
<head>
  <meta charset="utf-8">
  
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  
  <title>Customized Integration &mdash; Open3D 0.17.0 documentation</title>
  

  
  
    <link rel="shortcut icon" href="../../_static/open3d_logo.ico"/>
  
  
  

  
  <script type="text/javascript" src="../../_static/js/modernizr.min.js"></script>
  
    
      <script type="text/javascript" id="documentation_options" data-url_root="../../" src="../../_static/documentation_options.js"></script>
        <script src="../../_static/jquery.js"></script>
        <script src="../../_static/underscore.js"></script>
        <script src="../../_static/doctools.js"></script>
        <script src="../../_static/language_data.js"></script>
        <script async="async" src="https://www.googletagmanager.com/gtag/js?id=G-3TQPKGV6Z3"></script>
        <script >
        window.dataLayer = window.dataLayer || [];
        function gtag(){dataLayer.push(arguments);}
        gtag('js', new Date());
        gtag('config', 'G-3TQPKGV6Z3');</script>
        <script crossorigin="anonymous" integrity="sha256-Ae2Vz/4ePdIu6ZyI/5ZGsYnb+m0JlOmKPjt6XZ9JJkA=" src="../../../../../cdnjs.cloudflare.com/ajax/libs/require.js/2.3.4/require.min.js"></script>
        <script async="async" src="../../../../../cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.7/latestdda6.js?config=TeX-AMS-MML_HTMLorMML"></script>
        <script type="text/x-mathjax-config">MathJax.Hub.Config({"tex2jax": {"inlineMath": [["$", "$"], ["\\(", "\\)"]], "processEscapes": true, "ignoreClass": "document", "processClass": "math|output_area"}})</script>
    
    <script type="text/javascript" src="../../_static/js/theme.js"></script>

    

  
  <link rel="stylesheet" href="../../_static/css/theme.css" type="text/css" />
  <link rel="stylesheet" href="../../_static/pygments.css" type="text/css" />
  <link rel="stylesheet" href="../../_static/theme_overrides.css" type="text/css" />
    <link rel="index" title="Index" href="../../genindex.html" />
    <link rel="search" title="Search" href="../../search.html" />
    <link rel="next" title="Ray Casting in a Voxel Block Grid" href="../t_reconstruction_sys/ray_casting.20e.delaye" />
    <link rel="prev" title="TSDF Integration" href="../t_reconstruction_sys/integration.20c.delaye" /> 
</head>

<body class="wy-body-for-nav">

   
  <div class="wy-grid-for-nav">
    
    <nav data-toggle="wy-nav-shift" class="wy-nav-side">
      <div class="wy-side-scroll">
        <div class="wy-side-nav-search" >
          

          
            <a href="../../index-2.html" class="icon icon-home"> Open3D
          

          
          </a>

          
            
            
              <div class="version">
                0.17.0
              </div>
            
          

          
<div role="search">
  <form id="rtd-search-form" class="wy-form" action="http://www.open3d.org/docs/release/search.html" method="get">
    <input type="text" name="q" placeholder="Search docs" />
    <input type="hidden" name="check_keywords" value="yes" />
    <input type="hidden" name="area" value="default" />
  </form>
</div>

          
        </div>

        <div class="wy-menu wy-menu-vertical" data-spy="affix" role="navigation" aria-label="main navigation">
          
            
            
              
            
            
              <p class="caption"><span class="caption-text">Getting Started</span></p>
<ul>
<li class="toctree-l1"><a class="reference internal" href="../../introduction.html">Introduction</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../getting_started.html">Getting started</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../compilation.html">Build from source</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../cpp_project.html">Link Open3D in C++ projects</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../builddocs.html">Build documentation</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../open3d_ml.html">Open3D-ML</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../arm.html">ARM support</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../docker.html">Docker</a></li>
</ul>
<p class="caption"><span class="caption-text">Tutorial</span></p>
<ul class="current">
<li class="toctree-l1"><a class="reference internal" href="../geometry/index.html">Geometry</a></li>
<li class="toctree-l1"><a class="reference internal" href="../t_geometry/index.html">Geometry (Tensor)</a></li>
<li class="toctree-l1"><a class="reference internal" href="../pipelines/index.html">Pipelines</a></li>
<li class="toctree-l1"><a class="reference internal" href="../t_pipelines/index.html">Pipelines (Tensor)</a></li>
<li class="toctree-l1"><a class="reference internal" href="../visualization/index.html">Visualization</a></li>
<li class="toctree-l1"><a class="reference internal" href="../core/index.html">Core</a></li>
<li class="toctree-l1"><a class="reference internal" href="../data/index.html">Dataset</a></li>
<li class="toctree-l1"><a class="reference internal" href="../reconstruction_system/index.html">Reconstruction system</a></li>
<li class="toctree-l1 current"><a class="reference internal" href="../t_reconstruction_system/index.html">Reconstruction system (Tensor)</a><ul class="current">
<li class="toctree-l2"><a class="reference internal" href="../t_reconstruction_system/index.html#quick-start">Quick start</a></li>
<li class="toctree-l2"><a class="reference internal" href="../t_reconstruction_system/index.html#capture-your-own-dataset">Capture your own dataset</a></li>
<li class="toctree-l2 current"><a class="reference internal" href="../t_reconstruction_system/index.html#getting-started-with-online-reconstruction-system">Getting started with online reconstruction system</a><ul class="current">
<li class="toctree-l3"><a class="reference internal" href="voxel_block_grid.20b.de">Voxel Block Grid</a></li>
<li class="toctree-l3"><a class="reference internal" href="../t_reconstruction_sys/integration.20c.delaye">TSDF Integration</a></li>
<li class="toctree-l3 current"><a class="current reference internal" href="#">Customized Integration</a><ul>
<li class="toctree-l4"><a class="reference internal" href="#activation">Activation</a></li>
<li class="toctree-l4"><a class="reference internal" href="#voxel-indices">Voxel Indices</a></li>
<li class="toctree-l4"><a class="reference internal" href="#geometry-transformation">Geometry transformation</a></li>
<li class="toctree-l4"><a class="reference internal" href="#id2">Customized integration</a></li>
</ul>
</li>
<li class="toctree-l3"><a class="reference internal" href="../t_reconstruction_sys/ray_casting.20e.delaye">Ray Casting in a Voxel Block Grid</a></li>
<li class="toctree-l3"><a class="reference internal" href="../t_reconstruction_syst/dense_slam.20f.delaye">Dense RGB-D SLAM</a></li>
</ul>
</li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../sensor/index.html">Sensor</a></li>
<li class="toctree-l1"><a class="reference internal" href="../reference.html">Reference</a></li>
</ul>
<p class="caption"><span class="caption-text">Contribute</span></p>
<ul>
<li class="toctree-l1"><a class="reference internal" href="../../contribute/contribute.html">Contributing to Open3D</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../contribute/contribution_recipes.html">Contribution methods</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../contribute/styleguide.html">Open3D style guide</a></li>
</ul>
<p class="caption"><span class="caption-text">C++ API</span></p>
<ul>
<li class="toctree-l1"><a class="reference internal" href="../../cpp_api.html">C++ documentation</a></li>
</ul>
<p class="caption"><span class="caption-text">Python API</span></p>
<ul>
<li class="toctree-l1"><a class="reference internal" href="../../python_api/open3d.camera.html">open3d.camera</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../python_api/open3d.core.html">open3d.core</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../python_api/open3d.data.html">open3d.data</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../python_api/open3d.geometry.html">open3d.geometry</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../python_api/open3d.io.html">open3d.io</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../python_api/open3d.t.html">open3d.t</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../python_api/open3d.ml.html">open3d.ml</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../python_api/open3d.pipelines.html">open3d.pipelines</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../python_api/open3d.utility.html">open3d.utility</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../python_api/open3d.visualization.html">open3d.visualization</a></li>
</ul>
<p class="caption"><span class="caption-text">Python Examples</span></p>
<ul>
<li class="toctree-l1"><a class="reference internal" href="../../python_example/camera/index.html">Camera</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../python_example/geometry/index.html">Geometry</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../python_example/io/index.html">IO</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../python_example/pipelines/index.html">Pipelines</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../python_example/utility/index.html">Utility</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../python_example/visualization/index.html">Visualization</a></li>
</ul>

            
          
        </div>
      </div>
    </nav>

    <section data-toggle="wy-nav-shift" class="wy-nav-content-wrap">

      
      <nav class="wy-nav-top" aria-label="top navigation">
        
          <i data-toggle="wy-nav-top" class="fa fa-bars"></i>
          <a href="../../index-2.html">Open3D</a>
        
      </nav>


      <div class="wy-nav-content">
        
        <div class="rst-content">
        
          















<div role="navigation" aria-label="breadcrumbs navigation">

  <ul class="wy-breadcrumbs">
    
      <li><a href="../../index-2.html">Docs</a> &raquo;</li>
        
          <li><a href="../t_reconstruction_system/index.html">Reconstruction system (Tensor)</a> &raquo;</li>
        
      <li>Customized Integration</li>
    
    
      <li class="wy-breadcrumbs-aside">
        
            
        
      </li>
    
  </ul>

  
  <hr/>
</div>
          <div role="main" class="document" itemscope="itemscope" itemtype="http://schema.org/Article">
           <div itemprop="articleBody">
            
  
<style>
/* CSS overrides for sphinx_rtd_theme */

/* 24px margin */
.nbinput.nblast.container,
.nboutput.nblast.container {
    margin-bottom: 19px;  /* padding has already 5px */
}

/* ... except between code cells! */
.nblast.container + .nbinput.container {
    margin-top: -19px;
}

.admonition > p:before {
    margin-right: 4px;  /* make room for the exclamation icon */
}

/* Fix math alignment, see https://github.com/rtfd/sphinx_rtd_theme/pull/686 */
.math {
    text-align: unset;
}
</style>
<div class="section" id="customized-integration">
<span id="id1"></span><h1>Customized Integration<a class="headerlink" href="#customized-integration" title="Permalink to this headline">¶</a></h1>
<p>You can prototype a new RGB-D volumetric reconstruction algorithm with additional properties (e.g. semantic labels) while maintaining a reasonable performance. An example can be found at <code class="docutils literal notranslate"><span class="pre">examples/python/t_reconstruction_system/integrate_custom.py</span></code>.</p>
<div class="section" id="activation">
<h2>Activation<a class="headerlink" href="#activation" title="Permalink to this headline">¶</a></h2>
<p>The frustum <strong>block</strong> selection remains the same, but then we manually activate these blocks and obtain their buffer indices in the <a class="reference internal" href="../core/hashmap.html"><span class="std std-ref">Hash map</span></a>:</p>
<div class="highlight-python notranslate"><div class="highlight"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre><span class="normal">78</span>
<span class="normal">79</span>
<span class="normal">80</span>
<span class="normal">81</span>
<span class="normal">82</span>
<span class="normal">83</span>
<span class="normal">84</span>
<span class="normal">85</span>
<span class="normal">86</span>
<span class="normal">87</span></pre></div></td><td class="code"><div><pre><span></span>              <span class="n">config</span><span class="p">):</span>
            <span class="c1"># (3, N) -&gt; (2, N)</span>
            <span class="n">start</span> <span class="o">=</span> <span class="n">time</span><span class="o">.</span><span class="n">time</span><span class="p">()</span>
            <span class="n">extrinsic_dev</span> <span class="o">=</span> <span class="n">extrinsic</span><span class="o">.</span><span class="n">to</span><span class="p">(</span><span class="n">device</span><span class="p">,</span> <span class="n">o3c</span><span class="o">.</span><span class="n">float32</span><span class="p">)</span>
            <span class="n">xyz</span> <span class="o">=</span> <span class="n">extrinsic_dev</span><span class="p">[:</span><span class="mi">3</span><span class="p">,</span> <span class="p">:</span><span class="mi">3</span><span class="p">]</span> <span class="o">@</span> <span class="n">voxel_coords</span><span class="o">.</span><span class="n">T</span><span class="p">()</span> <span class="o">+</span> <span class="n">extrinsic_dev</span><span class="p">[:</span><span class="mi">3</span><span class="p">,</span>
                                                                           <span class="mi">3</span><span class="p">:]</span>

            <span class="n">intrinsic_dev</span> <span class="o">=</span> <span class="n">intrinsic</span><span class="o">.</span><span class="n">to</span><span class="p">(</span><span class="n">device</span><span class="p">,</span> <span class="n">o3c</span><span class="o">.</span><span class="n">float32</span><span class="p">)</span>
            <span class="n">uvd</span> <span class="o">=</span> <span class="n">intrinsic_dev</span> <span class="o">@</span> <span class="n">xyz</span>
            <span class="n">d</span> <span class="o">=</span> <span class="n">uvd</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span>
</pre></div></td></tr></table></div>
</div>
</div>
<div class="section" id="voxel-indices">
<h2>Voxel Indices<a class="headerlink" href="#voxel-indices" title="Permalink to this headline">¶</a></h2>
<p>We can then unroll <strong>voxel</strong> indices in these <strong>blocks</strong> into a flattened array, along with their corresponding voxel coordinates.</p>
<div class="highlight-python notranslate"><div class="highlight"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre><span class="normal">91</span>
<span class="normal">92</span>
<span class="normal">93</span></pre></div></td><td class="code"><div><pre><span></span>              <span class="n">config</span><span class="p">):</span>

            <span class="n">start</span> <span class="o">=</span> <span class="n">time</span><span class="o">.</span><span class="n">time</span><span class="p">()</span>
</pre></div></td></tr></table></div>
</div>
<p>Up to now we have finished preparation. Then we can perform customized geometry transformation in the Tensor interface, with the same fashion as we conduct in numpy or pytorch.</p>
</div>
<div class="section" id="geometry-transformation">
<h2>Geometry transformation<a class="headerlink" href="#geometry-transformation" title="Permalink to this headline">¶</a></h2>
<p>We first transform the voxel coordinates to the frame’s coordinate system, project them to the image space, and filter out-of-bound correspondences:</p>
<div class="highlight-python notranslate"><div class="highlight"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre><span class="normal"> 99</span>
<span class="normal">100</span>
<span class="normal">101</span>
<span class="normal">102</span>
<span class="normal">103</span>
<span class="normal">104</span>
<span class="normal">105</span>
<span class="normal">106</span>
<span class="normal">107</span>
<span class="normal">108</span>
<span class="normal">109</span>
<span class="normal">110</span>
<span class="normal">111</span>
<span class="normal">112</span>
<span class="normal">113</span>
<span class="normal">114</span>
<span class="normal">115</span>
<span class="normal">116</span>
<span class="normal">117</span>
<span class="normal">118</span></pre></div></td><td class="code"><div><pre><span></span>              <span class="n">config</span><span class="p">):</span>
            <span class="n">depth_readings</span> <span class="o">=</span> <span class="n">depth</span><span class="o">.</span><span class="n">as_tensor</span><span class="p">()[</span><span class="n">v_proj</span><span class="p">,</span> <span class="n">u_proj</span><span class="p">,</span> <span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">to</span><span class="p">(</span>
                <span class="n">o3c</span><span class="o">.</span><span class="n">float32</span><span class="p">)</span> <span class="o">/</span> <span class="n">config</span><span class="o">.</span><span class="n">depth_scale</span>
            <span class="n">sdf</span> <span class="o">=</span> <span class="n">depth_readings</span> <span class="o">-</span> <span class="n">d_proj</span>

            <span class="n">mask_inlier</span> <span class="o">=</span> <span class="p">(</span><span class="n">depth_readings</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span> \
                <span class="o">&amp;</span> <span class="p">(</span><span class="n">depth_readings</span> <span class="o">&lt;</span> <span class="n">config</span><span class="o">.</span><span class="n">depth_max</span><span class="p">)</span> \
                <span class="o">&amp;</span> <span class="p">(</span><span class="n">sdf</span> <span class="o">&gt;=</span> <span class="o">-</span><span class="n">trunc</span><span class="p">)</span>

            <span class="n">sdf</span><span class="p">[</span><span class="n">sdf</span> <span class="o">&gt;=</span> <span class="n">trunc</span><span class="p">]</span> <span class="o">=</span> <span class="n">trunc</span>
            <span class="n">sdf</span> <span class="o">=</span> <span class="n">sdf</span> <span class="o">/</span> <span class="n">trunc</span>
            <span class="n">o3d</span><span class="o">.</span><span class="n">core</span><span class="o">.</span><span class="n">cuda</span><span class="o">.</span><span class="n">synchronize</span><span class="p">()</span>
            <span class="n">end</span> <span class="o">=</span> <span class="n">time</span><span class="o">.</span><span class="n">time</span><span class="p">()</span>

            <span class="n">start</span> <span class="o">=</span> <span class="n">time</span><span class="o">.</span><span class="n">time</span><span class="p">()</span>
            <span class="n">weight</span> <span class="o">=</span> <span class="n">vbg</span><span class="o">.</span><span class="n">attribute</span><span class="p">(</span><span class="s1">&#39;weight&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">reshape</span><span class="p">((</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">))</span>
            <span class="n">tsdf</span> <span class="o">=</span> <span class="n">vbg</span><span class="o">.</span><span class="n">attribute</span><span class="p">(</span><span class="s1">&#39;tsdf&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">reshape</span><span class="p">((</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">))</span>

            <span class="n">valid_voxel_indices</span> <span class="o">=</span> <span class="n">voxel_indices</span><span class="p">[</span><span class="n">mask_proj</span><span class="p">][</span><span class="n">mask_inlier</span><span class="p">]</span>
            <span class="n">w</span> <span class="o">=</span> <span class="n">weight</span><span class="p">[</span><span class="n">valid_voxel_indices</span><span class="p">]</span>
</pre></div></td></tr></table></div>
</div>
</div>
<div class="section" id="id2">
<h2>Customized integration<a class="headerlink" href="#id2" title="Permalink to this headline">¶</a></h2>
<p>With the data association, we are able to conduct integration. In this example, we show the conventional TSDF integration written in vectorized Python code:</p>
<ul class="simple">
<li><p>Read the associated RGB-D properties from the color/depth images at the associated <code class="docutils literal notranslate"><span class="pre">u,</span> <span class="pre">v</span></code> indices;</p></li>
<li><p>Read the voxels from the voxel buffer arrays (<code class="docutils literal notranslate"><span class="pre">vbg.attribute</span></code>) at masked <code class="docutils literal notranslate"><span class="pre">voxel_indices</span></code>;</p></li>
<li><p>Perform in-place modification</p></li>
</ul>
<div class="highlight-python notranslate"><div class="highlight"><table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre><span class="normal">118</span>
<span class="normal">119</span>
<span class="normal">120</span>
<span class="normal">121</span>
<span class="normal">122</span>
<span class="normal">123</span>
<span class="normal">124</span>
<span class="normal">125</span>
<span class="normal">126</span>
<span class="normal">127</span>
<span class="normal">128</span>
<span class="normal">129</span>
<span class="normal">130</span>
<span class="normal">131</span>
<span class="normal">132</span>
<span class="normal">133</span>
<span class="normal">134</span>
<span class="normal">135</span>
<span class="normal">136</span>
<span class="normal">137</span>
<span class="normal">138</span>
<span class="normal">139</span>
<span class="normal">140</span>
<span class="normal">141</span>
<span class="normal">142</span>
<span class="normal">143</span>
<span class="normal">144</span>
<span class="normal">145</span>
<span class="normal">146</span>
<span class="normal">147</span></pre></div></td><td class="code"><div><pre><span></span>              <span class="n">config</span><span class="p">):</span>
            <span class="n">wp</span> <span class="o">=</span> <span class="n">w</span> <span class="o">+</span> <span class="mi">1</span>

            <span class="n">tsdf</span><span class="p">[</span><span class="n">valid_voxel_indices</span><span class="p">]</span> \
                <span class="o">=</span> <span class="p">(</span><span class="n">tsdf</span><span class="p">[</span><span class="n">valid_voxel_indices</span><span class="p">]</span> <span class="o">*</span> <span class="n">w</span> <span class="o">+</span>
                   <span class="n">sdf</span><span class="p">[</span><span class="n">mask_inlier</span><span class="p">]</span><span class="o">.</span><span class="n">reshape</span><span class="p">(</span><span class="n">w</span><span class="o">.</span><span class="n">shape</span><span class="p">))</span> <span class="o">/</span> <span class="p">(</span><span class="n">wp</span><span class="p">)</span>
            <span class="k">if</span> <span class="n">config</span><span class="o">.</span><span class="n">integrate_color</span><span class="p">:</span>
                <span class="n">color</span> <span class="o">=</span> <span class="n">o3d</span><span class="o">.</span><span class="n">t</span><span class="o">.</span><span class="n">io</span><span class="o">.</span><span class="n">read_image</span><span class="p">(</span><span class="n">color_file_names</span><span class="p">[</span><span class="n">i</span><span class="p">])</span><span class="o">.</span><span class="n">to</span><span class="p">(</span><span class="n">device</span><span class="p">)</span>
                <span class="n">color_readings</span> <span class="o">=</span> <span class="n">color</span><span class="o">.</span><span class="n">as_tensor</span><span class="p">()[</span><span class="n">v_proj</span><span class="p">,</span>
                                                   <span class="n">u_proj</span><span class="p">]</span><span class="o">.</span><span class="n">to</span><span class="p">(</span><span class="n">o3c</span><span class="o">.</span><span class="n">float32</span><span class="p">)</span>


            <span class="n">weight</span><span class="p">[</span><span class="n">valid_voxel_indices</span><span class="p">]</span> <span class="o">=</span> <span class="n">wp</span>
            <span class="n">o3d</span><span class="o">.</span><span class="n">core</span><span class="o">.</span><span class="n">cuda</span><span class="o">.</span><span class="n">synchronize</span><span class="p">()</span>
            <span class="n">end</span> <span class="o">=</span> <span class="n">time</span><span class="o">.</span><span class="n">time</span><span class="p">()</span>

        <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;Saving to </span><span class="si">{}</span><span class="s1">...&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">config</span><span class="o">.</span><span class="n">path_npz</span><span class="p">))</span>
        <span class="n">vbg</span><span class="o">.</span><span class="n">save</span><span class="p">(</span><span class="n">config</span><span class="o">.</span><span class="n">path_npz</span><span class="p">)</span>
        <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;Saving finished&#39;</span><span class="p">)</span>

    <span class="k">return</span> <span class="n">vbg</span>


<span class="k">if</span> <span class="vm">__name__</span> <span class="o">==</span> <span class="s1">&#39;__main__&#39;</span><span class="p">:</span>

    <span class="n">parser</span> <span class="o">=</span> <span class="n">ConfigParser</span><span class="p">()</span>
    <span class="n">parser</span><span class="o">.</span><span class="n">add</span><span class="p">(</span>
        <span class="s1">&#39;--config&#39;</span><span class="p">,</span>
        <span class="n">is_config_file</span><span class="o">=</span><span class="kc">True</span><span class="p">,</span>
        <span class="n">help</span><span class="o">=</span><span class="s1">&#39;YAML config file path. Please refer to default_config.yml as a &#39;</span>
</pre></div></td></tr></table></div>
</div>
<p>You may follow the example and adapt it to your customized properties. Open3D supports conversion from and to PyTorch tensors without memory any copy, see <a class="reference internal" href="../core/tensor.html#PyTorch-I/O-with-DLPack-memory-map"><span class="std std-ref">PyTorch I/O with DLPack memory map</span></a>. This can be use to leverage PyTorch’s capabilities such as automatic differentiation and other operators.</p>
</div>
</div>


           </div>
           
          </div>
          <footer>
  
    <div class="rst-footer-buttons" role="navigation" aria-label="footer navigation">
      
        <a href="../t_reconstruction_sys/ray_casting.20e.delaye" class="btn btn-neutral float-right" title="Ray Casting in a Voxel Block Grid" accesskey="n" rel="next">Next <span class="fa fa-arrow-circle-right"></span></a>
      
      
        <a href="../t_reconstruction_sys/integration.20c.delaye" class="btn btn-neutral float-left" title="TSDF Integration" accesskey="p" rel="prev"><span class="fa fa-arrow-circle-left"></span> Previous</a>
      
    </div>
  

  <hr/>

  <div role="contentinfo">
    <p>
        &copy; Copyright 2018 - 2021, www.open3d.org

    </p>
  </div>
  Built with <a href="http://sphinx-doc.org/">Sphinx</a> using a <a href="https://github.com/rtfd/sphinx_rtd_theme">theme</a> provided by <a href="https://readthedocs.org/">Read the Docs</a>. 

</footer>

        </div>
      </div>

    </section>

  </div>
  
<div class="rst-versions" data-toggle="rst-versions" role="note" aria-label="versions">
<span class="rst-current-version" data-toggle="rst-current-version">
    <span class="fa fa-book"> Docs version</span>
    0.17.0
    <span class="fa fa-caret-down"></span>
</span>

<!-- A hack to include an external page to get around CORS policy -->
<!-- https://stackoverflow.com/a/15250208/1255535 -->
<div class="rst-other-versions">
    <dl>
    <dt>Versions</dt>
        <dd><ul>
            <script src="../../../versions.js"></script>
        </ul></dd>
    </dl>
</div>

  <script type="text/javascript">
      jQuery(function () {
          SphinxRtdTheme.Navigation.enable(true);
      });
  </script>

  
  
    
   

</body>

<!-- Mirrored from www.open3d.org/docs/release/tutorial/t_reconstruction_system/customized_integration.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 14 May 2023 10:52:21 GMT -->
</html>